     1                                  ; ****************************************************************************
     2                                  ; playwav7.s (for TRDOS 386)
     3                                  ; ----------------------------------------------------------------------------
     4                                  ; PLAYWAV7.PRG ! AC'97 (ICH) .WAV PLAYER program by Erdogan TAN
     5                                  ;
     6                                  ; 29/05/2024
     7                                  ;
     8                                  ; [ Last Modification: 17/01/2025 ]
     9                                  ;
    10                                  ; Modified from PLAYWAV6.PRG .wav player program by Erdogan Tan, 27/11/2023
    11                                  ; Modified from PLAYWAV4.COM .wav player program by Erdogan Tan, 19/05/2024
    12                                  ;
    13                                  ; Assembler: NASM version 2.15
    14                                  ;	     nasm playwav7.s -l playwav7.txt -o PLAYWAV7.PRG	
    15                                  ; ----------------------------------------------------------------------------
    16                                  ; Derived from '.wav file player for DOS' Jeff Leyda, Sep 02, 2002
    17                                  
    18                                  ; tuneloop (user mode) version (29/05/2024
    19                                  
    20                                  ; previous version: playwav6.s (27/11/2023)
    21                                  
    22                                  ; CODE
    23                                  
    24                                  ; 14/07/2020
    25                                  ; 31/12/2017
    26                                  ; TRDOS 386 (v2.0) system calls
    27                                  _ver 	equ 0
    28                                  _exit 	equ 1
    29                                  _fork 	equ 2
    30                                  _read 	equ 3
    31                                  _write	equ 4
    32                                  _open	equ 5
    33                                  _close 	equ 6
    34                                  _wait 	equ 7
    35                                  _create	equ 8
    36                                  _rename	equ 9
    37                                  _delete	equ 10
    38                                  _exec	equ 11
    39                                  _chdir	equ 12
    40                                  _time 	equ 13
    41                                  _mkdir 	equ 14
    42                                  _chmod	equ 15
    43                                  _rmdir	equ 16
    44                                  _break	equ 17
    45                                  _drive	equ 18
    46                                  _seek	equ 19
    47                                  _tell 	equ 20
    48                                  _memory	equ 21
    49                                  _prompt	equ 22
    50                                  _path	equ 23
    51                                  _env	equ 24
    52                                  _stime	equ 25
    53                                  _quit	equ 26
    54                                  _intr	equ 27
    55                                  _dir	equ 28
    56                                  _emt 	equ 29
    57                                  _ldrvt 	equ 30
    58                                  _video 	equ 31
    59                                  _audio	equ 32
    60                                  _timer	equ 33
    61                                  _sleep	equ 34
    62                                  _msg    equ 35
    63                                  _geterr	equ 36
    64                                  _fpstat	equ 37
    65                                  _pri	equ 38
    66                                  _rele	equ 39
    67                                  _fff	equ 40
    68                                  _fnf	equ 41
    69                                  _alloc	equ 42
    70                                  _dalloc equ 43
    71                                  _calbac equ 44
    72                                  _dma	equ 45
    73                                  
    74                                  %macro sys 1-4
    75                                      ; 29/04/2016 - TRDOS 386 (TRDOS v2.0)	
    76                                      ; 03/09/2015	
    77                                      ; 13/04/2015
    78                                      ; Retro UNIX 386 v1 system call.	
    79                                      %if %0 >= 2   
    80                                          mov ebx, %2
    81                                          %if %0 >= 3    
    82                                              mov ecx, %3
    83                                              %if %0 = 4
    84                                                 mov edx, %4   
    85                                              %endif
    86                                          %endif
    87                                      %endif
    88                                      mov eax, %1
    89                                      ;int 30h
    90                                      int 40h ; TRDOS 386 (TRDOS v2.0)	   
    91                                  %endmacro
    92                                  
    93                                  ; TRDOS 386 (and Retro UNIX 386 v1) system call format:
    94                                  ; sys systemcall (eax) <arg1 (ebx)>, <arg2 (ecx)>, <arg3 (edx)>
    95                                  
    96                                  ;BUFFERSIZE	equ	32768	; audio buffer size 
    97                                  ENDOFFILE       equ     1	; flag for knowing end of file
    98                                  
    99                                  [BITS 32]
   100                                  
   101                                  [ORG 0]
   102                                  
   103                                  	; 29/05/2024
   104                                  	%include 'ac97.inc' ; 17/02/2017 
     1                              <1> ; 11/11/2023
     2                              <1> ; 05/11/2023
     3                              <1> ; 03/11/2023
     4                              <1> ; 17/02/2017 (Erdogan Tan, PLAYWAV.ASM)
     5                              <1> ; constant.inc & codec.inc (for ICH AC97 wav player, 'PLAYWAV.COM') 
     6                              <1> 
     7                              <1> ; ----------------------------------------------------------------------------
     8                              <1> ; CONSTANT.INC
     9                              <1> ; ----------------------------------------------------------------------------
    10                              <1> 
    11                              <1> ;constants of stuff that seem hard to remember at times.
    12                              <1> 
    13                              <1> TRUE  EQU 1
    14                              <1> FALSE EQU 0
    15                              <1> 
    16                              <1> ENABLED  EQU 1
    17                              <1> DISABLED EQU 0
    18                              <1> 
    19                              <1> BIT0  EQU 1
    20                              <1> BIT1  EQU 2
    21                              <1> BIT2  EQU 4
    22                              <1> BIT3  EQU 8
    23                              <1> BIT4  EQU 10h
    24                              <1> BIT5  EQU 20h
    25                              <1> BIT6  EQU 40h
    26                              <1> BIT7  EQU 80h
    27                              <1> BIT8  EQU 100h
    28                              <1> BIT9  EQU 200h
    29                              <1> BIT10 EQU 400h
    30                              <1> BIT11 EQU 800h
    31                              <1> BIT12 EQU 1000h
    32                              <1> BIT13 EQU 2000h
    33                              <1> BIT14 EQU 4000h
    34                              <1> BIT15 EQU 8000h
    35                              <1> BIT16 EQU 10000h
    36                              <1> BIT17 EQU 20000h
    37                              <1> BIT18 EQU 40000h
    38                              <1> BIT19 EQU 80000h
    39                              <1> BIT20 EQU 100000h
    40                              <1> BIT21 EQU 200000h
    41                              <1> BIT22 EQU 400000h
    42                              <1> BIT23 EQU 800000h
    43                              <1> BIT24 EQU 1000000h
    44                              <1> BIT25 EQU 2000000h
    45                              <1> BIT26 EQU 4000000h
    46                              <1> BIT27 EQU 8000000h
    47                              <1> BIT28 EQU 10000000h
    48                              <1> BIT29 EQU 20000000h
    49                              <1> BIT30 EQU 40000000h
    50                              <1> BIT31 EQU 80000000h
    51                              <1> 
    52                              <1> ;special characters
    53                              <1> NUL     EQU 0
    54                              <1> NULL    EQU 0
    55                              <1> BELL    EQU 07
    56                              <1> BS      EQU 08
    57                              <1> TAB     EQU 09
    58                              <1> LF      EQU 10
    59                              <1> CR      EQU 13
    60                              <1> ESCAPE  EQU 27           ;ESC is a reserved word....
    61                              <1> 
    62                              <1> 
    63                              <1> ;file stuff
    64                              <1> READONLY  EQU   BIT0
    65                              <1> HIDDEN    EQU   BIT1
    66                              <1> SYSTEM    EQU   BIT2
    67                              <1> VOLUME    EQU   BIT3         ;ignored for file access
    68                              <1> DIRECTORY EQU   BIT4         ;must be 0 for file access
    69                              <1> ARCHIVE   EQU   BIT5
    70                              <1> SHAREABLE EQU   BIT7         ;for novell networks
    71                              <1> OPEN	EQU	2		; open existing file
    72                              <1> CREATE	EQU	1		; create new file
    73                              <1> 
    74                              <1> 
    75                              <1> ; PCI equates
    76                              <1> ; PCI function address (PFA)
    77                              <1> ; bit 31 = 1
    78                              <1> ; bit 23:16 = bus number     (0-255)
    79                              <1> ; bit 15:11 = device number  (0-31)
    80                              <1> ; bit 10:8 = function number (0-7)
    81                              <1> ; bit 7:0 = register number  (0-255)
    82                              <1> 
    83                              <1> IO_ADDR_MASK    EQU     0FFFEh          ; mask off bit 0 for reading BARs
    84                              <1> PCI_INDEX_PORT  EQU     0CF8h
    85                              <1> PCI_DATA_PORT   EQU     0CFCh
    86                              <1> PCI32           EQU     BIT31           ; bitflag to signal 32bit access
    87                              <1> PCI16           EQU     BIT30           ; bitflag for 16bit access
    88                              <1> 
    89                              <1> PCI_FN0         EQU     0 << 8
    90                              <1> PCI_FN1         EQU     1 << 8
    91                              <1> PCI_FN2         EQU     2 << 8
    92                              <1> PCI_FN3         EQU     3 << 8
    93                              <1> PCI_FN4         EQU     4 << 8
    94                              <1> PCI_FN5         EQU     5 << 8
    95                              <1> PCI_FN6         EQU     6 << 8
    96                              <1> PCI_FN7         EQU     7 << 8
    97                              <1> 
    98                              <1> PCI_CMD_REG		EQU	04h		; reg 04, command reg
    99                              <1>  IO_ENA			EQU	BIT0		; i/o decode enable
   100                              <1>  MEM_ENA		EQU	BIT1		; memory decode enable
   101                              <1>  BM_ENA                 EQU     BIT2		; bus master enable
   102                              <1> 
   103                              <1> ; ----------------------------------------------------------------------------
   104                              <1> ; CODEC.INC
   105                              <1> ; ----------------------------------------------------------------------------
   106                              <1> 
   107                              <1> ;Codec registers.
   108                              <1> ;
   109                              <1> ;Not all codecs are created equal. Refer to the spec for your specific codec.
   110                              <1> ;
   111                              <1> ;All registers are 16bits wide.  Access to codec registers over the AC97 link
   112                              <1> ;is defined by the OEM.  
   113                              <1> ;
   114                              <1> ;Secondary codec's are accessed by ORing in BIT7 of all register accesses.
   115                              <1> ;
   116                              <1> 
   117                              <1> ; each codec/mixer register is 16bits
   118                              <1> 
   119                              <1> CODEC_RESET_REG                 equ     00      ; reset codec
   120                              <1> CODEC_MASTER_VOL_REG            equ     02      ; master volume
   121                              <1> CODEC_HP_VOL_REG                equ     04      ; headphone volume
   122                              <1> CODEC_MASTER_MONO_VOL_REG       equ     06      ; master mono volume
   123                              <1> CODEC_MASTER_TONE_REG           equ     08      ; master tone (R+L)
   124                              <1> CODEC_PCBEEP_VOL_REG            equ     0ah     ; PC beep volume
   125                              <1> CODEC_PHONE_VOL_REG             equ     0bh     ; phone volume
   126                              <1> CODEC_MIC_VOL_REG               equ     0eh     ; MIC volume
   127                              <1> CODEC_LINE_IN_VOL_REG           equ     10h     ; line input volume
   128                              <1> CODEC_CD_VOL_REG                equ     12h     ; CD volume
   129                              <1> CODEC_VID_VOL_REG               equ     14h     ; video volume
   130                              <1> CODEC_AUX_VOL_REG               equ     16h     ; aux volume
   131                              <1> CODEC_PCM_OUT_REG               equ     18h     ; PCM output volume
   132                              <1> CODEC_RECORD_SELECT_REG         equ     1ah     ; record select input
   133                              <1> CODEC_RECORD_VOL_REG            equ     1ch     ; record volume
   134                              <1> CODEC_RECORD_MIC_VOL_REG        equ     1eh     ; record mic volume
   135                              <1> CODEC_GP_REG                    equ     20h     ; general purpose
   136                              <1> CODEC_3D_CONTROL_REG            equ     22h     ; 3D control
   137                              <1> ; 24h is reserved
   138                              <1> CODEC_POWER_CTRL_REG            equ     26h     ; powerdown control
   139                              <1> CODEC_EXT_AUDIO_REG             equ     28h     ; extended audio
   140                              <1> CODEC_EXT_AUDIO_CTRL_REG        equ     2ah     ; extended audio control
   141                              <1> CODEC_PCM_FRONT_DACRATE_REG     equ     2ch     ; PCM out sample rate
   142                              <1> CODEC_PCM_SURND_DACRATE_REG     equ     2eh     ; surround sound sample rate
   143                              <1> CODEC_PCM_LFE_DACRATE_REG       equ     30h     ; LFE sample rate
   144                              <1> CODEC_LR_ADCRATE_REG            equ     32h     ; PCM in sample rate
   145                              <1> CODEC_MIC_ADCRATE_REG           equ     34h     ; mic in sample rate
   146                              <1> 
   147                              <1> ; registers 36-7a are reserved on the ICH
   148                              <1> 
   149                              <1> CODEC_VENDORID1_REG             equ     7ch     ; codec vendor ID 1
   150                              <1> CODEC_VENDORID2_REG             equ     7eh     ; codec vendor ID 2
   151                              <1> 
   152                              <1> ; Mixer registers 0 through 51h reside in the ICH and are not forwarded over
   153                              <1> ; the AC97 link to the codec, which I think is a little weird.  Looks like
   154                              <1> ; the ICH makes it so you don't need a fully functional codec to play audio?
   155                              <1> ;
   156                              <1> ; whenever 2 codecs are present in the system, use BIT7 to access the 2nd
   157                              <1> ; set of registers, ie 80h-feh
   158                              <1> 
   159                              <1> PRIMARY_CODEC                   equ     0       ; 0-7F for primary codec
   160                              <1> SECONDARY_CODEC                 equ     BIT7    ; 80-8f registers for 2ndary
   161                              <1> 
   162                              <1> SAMPLE_RATE_441khz	equ     44100   ; 44.1Khz (cd quality) rate
   163                              <1> 
   164                              <1> ; ----------------------------------------------------------------------------
   165                              <1> ; 17/02/2017
   166                              <1> PCI_IO_BASE	equ 10h			; = NAMBAR register offset
   167                              <1> AC97_INT_LINE   equ 3Ch			; AC97 Interrupt Line register offset
   168                              <1> 
   169                              <1> ; ----------------------------------------------------------------------------
   170                              <1> ; ICH2AC97.INC
   171                              <1> ; ----------------------------------------------------------------------------
   172                              <1> 
   173                              <1> ; PCI stuff
   174                              <1> 
   175                              <1> ; Intel ICH2 equates. It is assumed that ICH0 and plain ole ICH are compatible.
   176                              <1> 
   177                              <1> INTEL_VID       equ     8086h           ; Intel's PCI vendor ID
   178                              <1> ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
   179                              <1> SIS_VID		equ	1039h
   180                              <1> NVIDIA_VID	equ	10DEh	 ; Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source c.
   181                              <1> AMD_VID		equ	1022h
   182                              <1> 
   183                              <1> ICH_DID         equ     2415h           ; ICH device ID
   184                              <1> ICH0_DID        equ     2425h           ; ICH0
   185                              <1> ICH2_DID        equ     2445h           ; ICH2 I think there are more ICHes.
   186                              <1>                                         ; they all should be compatible.
   187                              <1> 
   188                              <1> ; 17/02/2017 (Erdogan Tan, ref: ALSA Device IDs, ALSA project)
   189                              <1> ICH3_DID	equ     2485h           ; ICH3
   190                              <1> ICH4_DID        equ     24C5h           ; ICH4
   191                              <1> ICH5_DID	equ     24D5h           ; ICH5 
   192                              <1> ICH6_DID	equ     266Eh           ; ICH6
   193                              <1> ESB6300_DID	equ     25A6h           ; 6300ESB
   194                              <1> ESB631X_DID	equ     2698h           ; 631XESB
   195                              <1> ICH7_DID	equ	27DEh		; ICH7
   196                              <1> ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
   197                              <1> MX82440_DID	equ	7195h
   198                              <1> SI7012_DID	equ	7012h
   199                              <1> NFORCE_DID	equ	01B1h
   200                              <1> NFORCE2_DID	equ	006Ah
   201                              <1> AMD8111_DID	equ	746Dh
   202                              <1> AMD768_DID	equ	7445h
   203                              <1> ; 03/11/2023 - Erdogan Tan - Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source code
   204                              <1> CK804_DID	equ	0059h
   205                              <1> MCP04_DID	equ	003Ah
   206                              <1> CK8_DID		equ	008Ah
   207                              <1> NFORCE3_DID	equ	00DAh
   208                              <1> CK8S_DID	equ	00EAh
   209                              <1> 
   210                              <1> NAMBAR_REG      equ     10h             ; native audio mixer BAR
   211                              <1>  NAM_SIZE       equ     256             ; 256 bytes required.
   212                              <1> 
   213                              <1> NABMBAR_REG     equ     14h             ; native audio bus mastering BAR
   214                              <1>  NABM_SIZE      equ     64              ; 64 bytes
   215                              <1> 
   216                              <1> ; BUS master registers, accessed via NABMBAR+offset
   217                              <1> 
   218                              <1> ; ICH supports 3 different types of register sets for three types of things
   219                              <1> ; it can do, thus:
   220                              <1> ;
   221                              <1> ; PCM in (for recording) aka PI
   222                              <1> ; PCM out (for playback) aka PO
   223                              <1> ; MIC in (for recording) aka MC
   224                              <1> 
   225                              <1> PI_BDBAR_REG            equ     0       ; PCM in buffer descriptor BAR
   226                              <1> PO_BDBAR_REG            equ     10h     ; PCM out buffer descriptor BAR
   227                              <1> MC_BDBAR_REG            equ     20h     ; MIC in buffer descriptor BAR
   228                              <1> 
   229                              <1> ; each buffer descriptor BAR holds a pointer which has entries to the buffer
   230                              <1> ; contents of the .WAV file we're going to play. Each entry is 8 bytes long
   231                              <1> ; (more on that later) and can contain 32 entries total, so each BAR is
   232                              <1> ; 256 bytes in length, thus:
   233                              <1> 
   234                              <1> BDL_SIZE                equ     32*8    ; Buffer Descriptor List size
   235                              <1> INDEX_MASK              equ     31      ; indexes must be 0-31
   236                              <1> 
   237                              <1> 
   238                              <1> 
   239                              <1> PI_CIV_REG              equ     4       ; PCM in current Index value (RO)
   240                              <1> PO_CIV_REG              equ     14h     ; PCM out current Index value (RO)
   241                              <1> MC_CIV_REG              equ     24h     ; MIC in current Index value (RO)
   242                              <1> ;8bit read only
   243                              <1> ; each current index value is simply a pointer showing us which buffer
   244                              <1> ; (0-31) the codec is currently processing. Once this counter hits 31, it
   245                              <1> ; wraps back to 0.
   246                              <1> ; this can be handy to know, as once it hits 31, we're almost out of data to
   247                              <1> ; play back or room to record!
   248                              <1> 
   249                              <1> 
   250                              <1> PI_LVI_REG              equ     5       ; PCM in Last Valid Index
   251                              <1> PO_LVI_REG              equ     15h     ; PCM out Last Valid Index
   252                              <1> MC_LVI_REG              equ     25h     ; MIC in Last Valid Index
   253                              <1> ;8bit read/write
   254                              <1> ; The Last Valid Index is a number (0-31) to let the codec know what buffer
   255                              <1> ; number to stop on after processing. It could be very nasty to play audio
   256                              <1> ; from buffers that aren't filled with the audio we want to play.
   257                              <1> 
   258                              <1> 
   259                              <1> PI_SR_REG               equ     6       ; PCM in Status register
   260                              <1> PO_SR_REG               equ     16h     ; PCM out Status register
   261                              <1> MC_SR_REG               equ     26h     ; MIC in Status register
   262                              <1> ;16bit read/write
   263                              <1> ; status registers.  Bitfields follow:
   264                              <1> 
   265                              <1> FIFO_ERR                equ     BIT4    ; FIFO Over/Underrun W1TC.
   266                              <1> 
   267                              <1> BCIS                    equ     BIT3    ; buffer completion interrupt status.
   268                              <1>                                         ; Set whenever the last sample in ANY
   269                              <1>                                         ; buffer is finished.  Bit is only
   270                              <1>                                         ; set when the Interrupt on Complete
   271                              <1>                                         ; (BIT4 of control reg) is set.
   272                              <1> 
   273                              <1> LVBCI                   equ     BIT2    ; Set whenever the codec has processed
   274                              <1>                                         ; the last buffer in the buffer list.
   275                              <1>                                         ; Will fire an interrupt if IOC bit is
   276                              <1>                                         ; set. Probably set after the last
   277                              <1>                                         ; sample in the last buffer is
   278                              <1>                                         ; processed.  W1TC
   279                              <1> 
   280                              <1>                                         ; 
   281                              <1> CELV                    equ     BIT1    ; Current buffer == last valid.
   282                              <1>                                         ; Bit is RO and remains set until LVI is
   283                              <1>                                         ; cleared.  Probably set up the start
   284                              <1>                                         ; of processing for the last buffer.
   285                              <1> 
   286                              <1> 
   287                              <1> DCH                     equ     BIT0    ; DMA controller halted.
   288                              <1>                                         ; set whenever audio stream is stopped
   289                              <1>                                         ; or something else goes wrong.
   290                              <1> 
   291                              <1> 
   292                              <1> PI_PICB_REG             equ     8       ; PCM in position in current buffer(RO)
   293                              <1> PO_PICB_REG             equ     18h     ; PCM out position in current buffer(RO)
   294                              <1> MC_PICB_REG             equ     28h     ; MIC in position in current buffer (RO)
   295                              <1> ;16bit read only
   296                              <1> ; position in current buffer regs show the number of dwords left to be
   297                              <1> ; processed in the current buffer.
   298                              <1> ; 
   299                              <1> 
   300                              <1> PI_PIV_REG              equ     0ah     ; PCM in Prefected index value
   301                              <1> PO_PIV_REG              equ     1ah     ; PCM out Prefected index value
   302                              <1> MC_PIV_REG              equ     2ah     ; MIC in Prefected index value
   303                              <1> ;8bit, read only
   304                              <1> ; Prefetched index value register.
   305                              <1> ; tells which buffer number (0-31) has be prefetched. I'd imagine this
   306                              <1> ; value follows the current index value fairly closely. (CIV+1)
   307                              <1> ;
   308                              <1> 
   309                              <1> 
   310                              <1> PI_CR_REG               equ     0bh     ; PCM in Control Register
   311                              <1> PO_CR_REG               equ     1bh     ; PCM out Control Register
   312                              <1> MC_CR_REG               equ     2bh     ; MIC in Control Register
   313                              <1> ; 8bit
   314                              <1> ; Control register *MUST* only be accessed as an 8bit value.
   315                              <1> ; Control register. See bitfields below.
   316                              <1> ;
   317                              <1> 
   318                              <1> 
   319                              <1> IOCE                    equ     BIT4    ; interrupt on complete enable.
   320                              <1>                                         ; set this bit if you want an intrtpt
   321                              <1>                                         ; to fire whenever LVBCI is set.
   322                              <1> FEIFE                   equ     BIT3    ; set if you want an interrupt to fire
   323                              <1>                                         ; whenever there is a FIFO (over or
   324                              <1>                                         ; under) error.
   325                              <1> LVBIE                   equ     BIT2    ; last valid buffer interrupt enable.
   326                              <1>                                         ; set if you want an interrupt to fire
   327                              <1>                                         ; whenever the completion of the last
   328                              <1>                                         ; valid buffer.
   329                              <1> RR                      equ     BIT1    ; reset registers.  Nukes all regs
   330                              <1>                                         ; except bits 4:2 of this register.
   331                              <1>                                         ; Only set this bit if BIT 0 is 0
   332                              <1> RPBM                    equ     BIT0    ; Run/Pause
   333                              <1>                                         ; set this bit to start the codec!
   334                              <1> 
   335                              <1> 
   336                              <1> GLOB_CNT_REG            equ     2ch     ; Global control register
   337                              <1> SEC_RES_EN              equ     BIT5    ; secondary codec resume event 
   338                              <1>                                         ; interrupt enable.  Not used here.
   339                              <1> PRI_RES_EN              equ     BIT4    ; ditto for primary. Not used here.
   340                              <1> ACLINK_OFF              equ     BIT3    ; Turn off the AC97 link
   341                              <1> ACWARM_RESET            equ     BIT2    ; Awaken the AC97 link from sleep.
   342                              <1>                                         ; registers preserved, bit self clears
   343                              <1> ACCOLD_RESET            equ     BIT1    ; Reset everything in the AC97 and
   344                              <1>                                         ; reset all registers.  Not self clearing
   345                              <1> 
   346                              <1> GPIIE                   equ     BIT0    ; GPI Interrupt enable.
   347                              <1>                                         ; set if you want an interrupt to
   348                              <1>                                         ; fire upon ANY of the bits in the
   349                              <1>                                         ; GPI (general pursose inputs?) not used.
   350                              <1> 
   351                              <1> GLOB_STS_REG            equ     30h     ; Global Status register (RO)
   352                              <1> 
   353                              <1> MD3                     equ     BIT17   ; modem powerdown status (yawn)
   354                              <1> AD3                     equ     BIT16   ; Audio powerdown status (yawn)
   355                              <1> RD_COMPLETE_STS         equ     BIT15   ; Codec read timed out. 0=normal
   356                              <1> BIT3SLOT12              equ     BIT14   ; shadowed status of bit 3 in slot 12
   357                              <1> BIT2SLOT12              equ     BIT13   ; shadowed status of bit 2 in slot 12
   358                              <1> BIT1SLOT12              equ     BIT12   ; shadowed status of bit 1 in slot 12
   359                              <1> SEC_RESUME_STS          equ     BIT11   ; secondary codec has resumed (and irqed)
   360                              <1> PRI_RESUME_STS          equ     BIT10   ; primary codec has resumed (and irqed)
   361                              <1> SEC_CODEC_RDY           equ     BIT9    ; secondary codec is ready for action
   362                              <1> PRI_CODEC_RDY           equ     BIT8    ; Primary codec is ready for action
   363                              <1>                                         ; software must check these bits before
   364                              <1>                                         ; starting the codec!
   365                              <1> MIC_IN_IRQ              equ     BIT7    ; MIC in caused an interrupt
   366                              <1> PCM_OUT_IRQ             equ     BIT6    ; One of the PCM out channels IRQed
   367                              <1> PCM_IN_IRQ              equ     BIT5    ; One of the PCM in channels IRQed
   368                              <1> MODEM_OUT_IRQ           equ     BIT2    ; modem out channel IRQed
   369                              <1> MODEM_IN_IRQ            equ     BIT1    ; modem in channel IRQed
   370                              <1> GPI_STS_CHANGE          equ     BIT0    ; set whenever GPI's have changed.
   371                              <1>                                         ; BIT0 of slot 12 also reflects this.
   372                              <1> 
   373                              <1> ACC_SEMA_REG            equ     34h     ; Codec write semiphore register
   374                              <1> CODEC_BUSY              equ     BIT0    ; codec register I/O is happening
   375                              <1>                                         ; self clearing
   376                              <1> ;
   377                              <1> ; Buffer Descriptors List
   378                              <1> ; As stated earlier, each buffer descriptor list is a set of (up to) 32 
   379                              <1> ; descriptors, each 8 bytes in length. Bytes 0-3 of a descriptor entry point
   380                              <1> ; to a chunk of memory to either play from or record to. Bytes 4-7 of an
   381                              <1> ; entry describe various control things detailed below.
   382                              <1> ; 
   383                              <1> ; Buffer pointers must always be aligned on a Dword boundry.
   384                              <1> ;
   385                              <1> 
   386                              <1> IOC                     equ     BIT31   ; Fire an interrupt whenever this
   387                              <1>                                         ; buffer is complete.
   388                              <1> 
   389                              <1> BUP                     equ     BIT30   ; Buffer Underrun Policy.
   390                              <1>                                         ; if this buffer is the last buffer
   391                              <1>                                         ; in a playback, fill the remaining
   392                              <1>                                         ; samples with 0 (silence) or not.
   393                              <1>                                         ; It's a good idea to set this to 1
   394                              <1>                                         ; for the last buffer in playback,
   395                              <1>                                         ; otherwise you're likely to get a lot
   396                              <1>                                         ; of noise at the end of the sound.
   397                              <1> 
   398                              <1> ;
   399                              <1> ; Bits 15:0 contain the length of the buffer, in number of samples, which
   400                              <1> ; are 16 bits each, coupled in left and right pairs, or 32bits each.
   401                              <1> ; Luckily for us, that's the same format as .wav files.
   402                              <1> ;
   403                              <1> ; A value of FFFF is 65536 samples. Running at 44.1Khz, that's just about
   404                              <1> ; 1.5 seconds of sample time. FFFF * 32bits is 1FFFFh bytes or 128k of data.
   405                              <1> ;
   406                              <1> ; A value of 0 in these bits means play no samples.
   407                              <1> ;
   408                              <1> 
   409                              <1> ; 11/11/2023
   410                              <1> CTRL_ST_CREADY		equ	BIT8+BIT9+BIT28 ; Primary Codec Ready
   411                              <1> CODEC_REG_POWERDOWN	equ	26h
   105                                  
   106                                  _STARTUP:
   107                                  	; Prints the Credits Text.
   108                                  	sys	_msg, Credits, 255, 0Bh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000000 BB[E4240000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000005 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000000A BA0B000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000000F B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000014 CD40                <1>  int 40h
   109                                  
   110                                  	; clear bss
   111 00000016 B9[A2280000]            	mov	ecx, bss_end
   112 0000001B BF[15280000]            	mov	edi, bss_start
   113 00000020 29F9                    	sub	ecx, edi
   114 00000022 D1E9                    	shr	ecx, 1
   115 00000024 31C0                    	xor	eax, eax
   116 00000026 F366AB                  	rep	stosw
   117                                  
   118                                  	; Detect (& Enable) AC'97 Audio Device
   119 00000029 E80D050000              	call	DetectAC97
   120 0000002E 731B                    	jnc     short GetFileName
   121                                  
   122                                  _dev_not_ready:
   123                                  	; couldn't find the audio device!
   124                                  	sys	_msg, noDevMsg, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000030 BB[B8250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000035 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000003A BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000003F B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000044 CD40                <1>  int 40h
   125 00000046 E979030000                      jmp     Exit
   126                                  
   127                                  GetFileName:  
   128 0000004B 89E6                    	mov	esi, esp
   129 0000004D AD                      	lodsd
   130 0000004E 83F802                  	cmp	eax, 2 ; two arguments 
   131                                  	       ; (program file name & mod file name)
   132 00000051 0F827B030000            	jb	pmsg_usage ; nothing to do
   133                                  
   134 00000057 AD                      	lodsd ; program file name address 
   135 00000058 AD                      	lodsd ; mod file name address (file to be read)
   136 00000059 89C6                    	mov	esi, eax
   137 0000005B BF[3A280000]            	mov	edi, wav_file_name
   138                                  ScanName:       
   139 00000060 AC                      	lodsb
   140 00000061 84C0                    	test	al, al
   141 00000063 0F8469030000            	je	pmsg_usage
   142 00000069 3C20                    	cmp	al, 20h
   143 0000006B 74F3                    	je	short ScanName	; scan start of name.
   144 0000006D AA                      	stosb
   145 0000006E B4FF                    	mov	ah, 0FFh
   146                                  a_0:	
   147 00000070 FEC4                    	inc	ah
   148                                  a_1:
   149 00000072 AC                      	lodsb
   150 00000073 AA                      	stosb
   151 00000074 3C2E                    	cmp	al, '.'
   152 00000076 74F8                    	je	short a_0	
   153 00000078 20C0                    	and	al, al
   154 0000007A 75F6                    	jnz	short a_1
   155                                  
   156 0000007C 08E4                    	or	ah, ah		; if period NOT found,
   157 0000007E 750B                    	jnz	short _1 	; then add a .WAV extension.
   158                                  SetExt:
   159 00000080 4F                      	dec	edi
   160 00000081 C7072E574156            	mov	dword [edi], '.WAV'
   161 00000087 C6470400                	mov	byte [edi+4], 0
   162                                  
   163                                  _1:
   164 0000008B E847060000              	call	write_audio_dev_info 
   165                                  
   166                                  ; open the file
   167                                          ; open existing file
   168 00000090 E8F6040000                      call    openFile ; no error? ok.
   169 00000095 731B                            jnc     short _gsr
   170                                  
   171                                  ; file not found!
   172                                  	sys	_msg, noFileErrMsg, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000097 BB[E3250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000009C B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000000A1 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000000A6 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000000AB CD40                <1>  int 40h
   173                                  _exit_:
   174 000000AD E912030000                      jmp     Exit
   175                                  
   176                                  _gsr:  
   177 000000B2 E80E050000                     	call    getSampleRate		; read the sample rate
   178                                                                          ; pass it onto codec.
   179                                  	; 25/11/2023
   180 000000B7 72F4                    	jc	short _exit_		; nothing to do
   181                                  
   182 000000B9 66A3[1A280000]          	mov	[sample_rate], ax
   183 000000BF 880D[18280000]          	mov	[stmo], cl
   184 000000C5 8815[19280000]          	mov	[bps], dl
   185                                  
   186                                  	; 26/11/2023
   187 000000CB C605[8D280000]00        	mov	byte [fbs_shift], 0 ; 0 = stereo and 16 bit 
   188 000000D2 FEC9                    	dec	cl
   189 000000D4 7506                    	jnz	short _gsr_1 ; stereo
   190 000000D6 FE05[8D280000]          	inc	byte [fbs_shift] ; 1 = mono or 8 bit		
   191                                  _gsr_1:	
   192 000000DC 80FA08                  	cmp	dl, 8 
   193 000000DF 7706                    	ja	short _gsr_2 ; 16 bit samples
   194 000000E1 FE05[8D280000]          	inc	byte [fbs_shift] ; 2 = mono and 8 bit
   195                                  _gsr_2:	
   196                                  	; 29/05/2024
   197 000000E7 E8CD060000              	call	write_ac97_pci_dev_info
   198                                  
   199                                  	; 31/05/2024
   200                                  	; 30/05/2024
   201                                  	;call	check_vra
   202                                  
   203                                  	; 30/05/2024
   204 000000EC E84C200000              	call	codecConfig		; unmute codec, set rates.
   205 000000F1 0F82F3020000            	jc	init_err
   206                                  
   207                                  	; 25/11/2023
   208 000000F7 E87D080000              	call	write_VRA_info
   209                                  
   210                                  	; 01/05/2017
   211 000000FC E8ED050000              	call	write_wav_file_info
   212                                  
   213                                  	; 25/11/2023
   214                                  	; ------------------------------------------
   215                                  
   216 00000101 803D[1D280000]01        	cmp	byte [VRA], 1
   217 00000108 7205                    	jb	short chk_sample_rate
   218                                  
   219                                  playwav_48_khz:	
   220                                  	;mov	dword [loadfromwavfile], loadFromFile
   221                                  	;mov	dword [buffersize], 65536
   222 0000010A E969020000              	jmp	PlayNow
   223                                  
   224                                  chk_sample_rate:
   225                                  	; set conversion parameters
   226                                  	; (for 8, 11.025, 16, 22.050, 24, 32 kHZ)
   227 0000010F 66A1[1A280000]          	mov	ax, [sample_rate]
   228 00000115 663D80BB                	cmp	ax, 48000
   229 00000119 74EF                    	je	short playwav_48_khz
   230                                  chk_22khz:
   231 0000011B 663D2256                	cmp	ax, 22050
   232 0000011F 7545                    	jne	short chk_11khz
   233 00000121 803D[19280000]08        	cmp	byte [bps], 8
   234 00000128 7615                    	jna	short chk_22khz_1
   235 0000012A BB[1A160000]            	mov	ebx, load_22khz_stereo_16_bit
   236 0000012F 803D[18280000]01        	cmp	byte [stmo], 1 
   237 00000136 751A                    	jne	short chk_22khz_2
   238 00000138 BB[8C150000]            	mov	ebx, load_22khz_mono_16_bit
   239 0000013D EB13                    	jmp	short chk_22khz_2
   240                                  chk_22khz_1:
   241 0000013F BB[04150000]            	mov	ebx, load_22khz_stereo_8_bit
   242 00000144 803D[18280000]01        	cmp	byte [stmo], 1 
   243 0000014B 7505                    	jne	short chk_22khz_2
   244 0000014D BB[7A140000]            	mov	ebx, load_22khz_mono_8_bit
   245                                  chk_22khz_2:
   246 00000152 B85A1D0000              	mov	eax, 7514  ; (442*17)
   247 00000157 BA25000000              	mov	edx, 37
   248 0000015C B911000000              	mov	ecx, 17 
   249 00000161 E9BA010000              	jmp	set_sizes	
   250                                  chk_11khz:
   251 00000166 663D112B                	cmp	ax, 11025
   252 0000016A 7545                    	jne	short chk_44khz
   253 0000016C 803D[19280000]08        	cmp	byte [bps], 8
   254 00000173 7615                    	jna	short chk_11khz_1
   255 00000175 BB[3A180000]            	mov	ebx, load_11khz_stereo_16_bit
   256 0000017A 803D[18280000]01        	cmp	byte [stmo], 1 
   257 00000181 751A                    	jne	short chk_11khz_2
   258 00000183 BB[C0170000]            	mov	ebx, load_11khz_mono_16_bit
   259 00000188 EB13                    	jmp	short chk_11khz_2
   260                                  chk_11khz_1:
   261 0000018A BB[45170000]            	mov	ebx, load_11khz_stereo_8_bit
   262 0000018F 803D[18280000]01        	cmp	byte [stmo], 1 
   263 00000196 7505                    	jne	short chk_11khz_2
   264 00000198 BB[CC160000]            	mov	ebx, load_11khz_mono_8_bit
   265                                  chk_11khz_2:
   266 0000019D B8AD0E0000              	mov	eax, 3757  ; (221*17)
   267 000001A2 BA4A000000              	mov	edx, 74
   268 000001A7 B911000000              	mov	ecx, 17
   269 000001AC E96F010000              	jmp	set_sizes 
   270                                  chk_44khz:
   271 000001B1 663D44AC                	cmp	ax, 44100
   272 000001B5 7545                    	jne	short chk_16khz
   273 000001B7 803D[19280000]08        	cmp	byte [bps], 8
   274 000001BE 7615                    	jna	short chk_44khz_1
   275 000001C0 BB[451A0000]            	mov	ebx, load_44khz_stereo_16_bit
   276 000001C5 803D[18280000]01        	cmp	byte [stmo], 1 
   277 000001CC 751A                    	jne	short chk_44khz_2
   278 000001CE BB[CB190000]            	mov	ebx, load_44khz_mono_16_bit
   279 000001D3 EB13                    	jmp	short chk_44khz_2
   280                                  chk_44khz_1:
   281 000001D5 BB[4D190000]            	mov	ebx, load_44khz_stereo_8_bit
   282 000001DA 803D[18280000]01        	cmp	byte [stmo], 1 
   283 000001E1 7505                    	jne	short chk_44khz_2
   284 000001E3 BB[D0180000]            	mov	ebx, load_44khz_mono_8_bit
   285                                  chk_44khz_2:
   286 000001E8 B8D93A0000              	mov	eax, 15065 ; (655*23)
   287 000001ED BA19000000              	mov	edx, 25
   288 000001F2 B917000000              	mov	ecx, 23
   289 000001F7 E924010000              	jmp	set_sizes 
   290                                  chk_16khz:
   291 000001FC 663D803E                	cmp	ax, 16000
   292 00000200 7545                    	jne	short chk_8khz
   293 00000202 803D[19280000]08        	cmp	byte [bps], 8
   294 00000209 7615                    	jna	short chk_16khz_1
   295 0000020B BB[B60F0000]            	mov	ebx, load_16khz_stereo_16_bit
   296 00000210 803D[18280000]01        	cmp	byte [stmo], 1 
   297 00000217 751A                    	jne	short chk_16khz_2
   298 00000219 BB[340F0000]            	mov	ebx, load_16khz_mono_16_bit
   299 0000021E EB13                    	jmp	short chk_16khz_2
   300                                  chk_16khz_1:
   301 00000220 BB[790E0000]            	mov	ebx, load_16khz_stereo_8_bit
   302 00000225 803D[18280000]01        	cmp	byte [stmo], 1 
   303 0000022C 7505                    	jne	short chk_16khz_2
   304 0000022E BB[F90D0000]            	mov	ebx, load_16khz_mono_8_bit
   305                                  chk_16khz_2:
   306 00000233 B855150000              	mov	eax, 5461
   307 00000238 BA03000000              	mov	edx, 3
   308 0000023D B901000000              	mov	ecx, 1
   309 00000242 E9D9000000              	jmp	set_sizes 
   310                                  chk_8khz:
   311 00000247 663D401F                	cmp	ax, 8000
   312 0000024B 7545                    	jne	short chk_24khz
   313 0000024D 803D[19280000]08        	cmp	byte [bps], 8
   314 00000254 7615                    	jna	short chk_8khz_1
   315 00000256 BB[AD0C0000]            	mov	ebx, load_8khz_stereo_16_bit
   316 0000025B 803D[18280000]01        	cmp	byte [stmo], 1 
   317 00000262 751A                    	jne	short chk_8khz_2
   318 00000264 BB[DC0B0000]            	mov	ebx, load_8khz_mono_16_bit
   319 00000269 EB13                    	jmp	short chk_8khz_2
   320                                  chk_8khz_1:
   321 0000026B BB[AB0A0000]            	mov	ebx, load_8khz_stereo_8_bit
   322 00000270 803D[18280000]01        	cmp	byte [stmo], 1 
   323 00000277 7505                    	jne	short chk_8khz_2
   324 00000279 BB[C6090000]            	mov	ebx, load_8khz_mono_8_bit
   325                                  chk_8khz_2:
   326 0000027E B8AA0A0000              	mov	eax, 2730
   327 00000283 BA06000000              	mov	edx, 6
   328 00000288 B901000000              	mov	ecx, 1
   329 0000028D E98E000000              	jmp	set_sizes 
   330                                  chk_24khz:
   331 00000292 663DC05D                	cmp	ax, 24000
   332 00000296 7542                    	jne	short chk_32khz
   333 00000298 803D[19280000]08        	cmp	byte [bps], 8
   334 0000029F 7615                    	jna	short chk_24khz_1
   335 000002A1 BB[E4110000]            	mov	ebx, load_24khz_stereo_16_bit
   336 000002A6 803D[18280000]01        	cmp	byte [stmo], 1 
   337 000002AD 751A                    	jne	short chk_24khz_2
   338 000002AF BB[80110000]            	mov	ebx, load_24khz_mono_16_bit
   339 000002B4 EB13                    	jmp	short chk_24khz_2
   340                                  chk_24khz_1:
   341 000002B6 BB[F5100000]            	mov	ebx, load_24khz_stereo_8_bit
   342 000002BB 803D[18280000]01        	cmp	byte [stmo], 1 
   343 000002C2 7505                    	jne	short chk_24khz_2
   344 000002C4 BB[8D100000]            	mov	ebx, load_24khz_mono_8_bit
   345                                  chk_24khz_2:
   346 000002C9 B800200000              	mov	eax, 8192
   347 000002CE BA02000000              	mov	edx, 2
   348 000002D3 B901000000              	mov	ecx, 1
   349 000002D8 EB46                    	jmp	short set_sizes 
   350                                  chk_32khz:
   351 000002DA 663D007D                	cmp	ax, 32000
   352 000002DE 7574                    	jne	short vra_needed
   353 000002E0 803D[19280000]08        	cmp	byte [bps], 8
   354 000002E7 7615                    	jna	short chk_32khz_1
   355 000002E9 BB[E9130000]            	mov	ebx, load_32khz_stereo_16_bit
   356 000002EE 803D[18280000]01        	cmp	byte [stmo], 1 
   357 000002F5 751A                    	jne	short chk_32khz_2
   358 000002F7 BB[7E130000]            	mov	ebx, load_32khz_mono_16_bit
   359 000002FC EB13                    	jmp	short chk_32khz_2
   360                                  chk_32khz_1:
   361 000002FE BB[E0120000]            	mov	ebx, load_32khz_stereo_8_bit
   362 00000303 803D[18280000]01        	cmp	byte [stmo], 1 
   363 0000030A 7505                    	jne	short chk_32khz_2
   364 0000030C BB[6C120000]            	mov	ebx, load_32khz_mono_8_bit
   365                                  chk_32khz_2:
   366 00000311 B8AA2A0000              	mov	eax, 10922
   367 00000316 BA03000000              	mov	edx, 3
   368 0000031B B902000000              	mov	ecx, 2
   369                                  	;jmp	short set_sizes 
   370                                  set_sizes:
   371 00000320 803D[18280000]01        	cmp	byte [stmo], 1
   372 00000327 7402                    	je	short ss_1
   373 00000329 D1E0                    	shl	eax, 1
   374                                  ss_1:
   375 0000032B 803D[19280000]08        	cmp	byte [bps], 8
   376 00000332 7602                    	jna	short ss_2
   377                                  	; 16 bit samples
   378 00000334 D1E0                    	shl	eax, 1
   379                                  ss_2:
   380 00000336 A3[70030000]            	mov	[loadsize], eax
   381 0000033B F7E2                    	mul	edx
   382                                  	;cmp	ecx, 1
   383                                  	;je	short ss_3
   384                                  ;ss_3:
   385 0000033D F7F1                    	div	ecx
   386 0000033F 8A0D[8D280000]          	mov	cl, [fbs_shift]
   387 00000345 D3E0                    	shl	eax, cl
   388                                  	; 26/11/2023
   389                                  	;shr	eax, 1	; buffer size is 16 bit sample count
   390 00000347 A3[74030000]            	mov	[buffersize], eax ; buffer size in bytes 
   391 0000034C 891D[6C030000]          	mov	[loadfromwavfile], ebx
   392 00000352 EB24                    	jmp	short PlayNow
   393                                  
   394                                  vra_needed:
   395                                  	sys	_msg, msg_no_vra, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000354 BB[4D260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000359 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000035E BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000363 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000368 CD40                <1>  int 40h
   396 0000036A EB58                    	jmp	Exit
   397                                  
   398                                  	; 26/11/2023
   399                                  	; 13/11/2023
   400                                  loadfromwavfile:
   401 0000036C [23060000]              	dd	loadFromFile
   402                                  loadsize:	; read from wav file
   403 00000370 00000000                	dd	0
   404                                  buffersize:	; write to DMA buffer
   405 00000374 00000100                	dd	65536 ; bytes
   406                                  
   407                                  PlayNow: 
   408                                  
   409                                  ; 26/11/2023
   410                                  %if 0
   411                                  	; Allocate Audio Buffer (for user)
   412                                  	;sys	_audio, 0200h, BUFFERSIZE, audio_buffer
   413                                  	; 26/11/2023
   414                                  	sys	_audio, 0200h, [buffersize], audio_buffer
   415                                  	jnc	short _2
   416                                  
   417                                  	; 26/11/2023 - temporary
   418                                  	;sys	_msg, test_1, 255, 0Ch
   419                                  
   420                                  error_exit:
   421                                  	sys	_msg, trdos386_err_msg, 255, 0Eh
   422                                  	jmp	Exit
   423                                  _2:
   424                                  	; DIRECT CGA (TEXT MODE) MEMORY ACCESS
   425                                  	; bl = 0, bh = 4
   426                                  	; Direct access/map to CGA (Text) memory (0B8000h)
   427                                  
   428                                  	sys	_video, 0400h
   429                                  	cmp	eax, 0B8000h
   430                                  	jne	short error_exit
   431                                  
   432                                  	; Initialize Audio Device (bh = 3)
   433                                  	sys	_audio, 0301h, 0, audio_int_handler 
   434                                  ;	jc	short error_exit
   435                                  _3:
   436                                  
   437                                  %else
   438                                  	; 29/05/2024
   439                                  	; playwav4.asm
   440                                  _2:	
   441 00000378 E8BC200000              	call	check4keyboardstop	; flush keyboard buffer
   442 0000037D 72F9                    	jc	short _2		; 07/11/2023
   443                                  
   444                                   	;call	codecConfig		; unmute codec, set rates.
   445                                  	; 11/11/2023
   446                                  	;jc	short init_err
   447                                  %endif
   448                                  
   449                                  ;
   450                                  ; position file pointer to start in actual wav data
   451                                  ; MUCH improvement should really be done here to check if sample size is
   452                                  ; supported, make sure there are 2 channels, etc.  
   453                                  ;
   454                                          ;mov     ah, 42h
   455                                          ;mov     al, 0	; from start of file
   456                                          ;mov     bx, [FileHandle]
   457                                          ;xor     cx, cx
   458                                          ;mov     dx, 44	; jump past .wav/riff header
   459                                          ;int     21h
   460                                  
   461                                  	sys	_seek, [FileHandle], 44, 0
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000037F 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000385 B92C000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000038A BA00000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000038F B813000000          <1>  mov eax, %1
    89                              <1> 
    90 00000394 CD40                <1>  int 40h
   462                                  
   463                                  	sys	_msg, nextline, 255, 07h ; 01/05/2017
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000396 BB[26270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000039B B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000003A0 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003A5 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000003AA CD40                <1>  int 40h
   464                                  
   465                                  	; 29/05/2024
   466                                  	; ----
   467                                  	; DIRECT CGA (TEXT MODE) MEMORY ACCESS
   468                                  	; bl = 0, bh = 4
   469                                  	; Direct access/map to CGA (Text) memory (0B8000h)
   470                                  
   471                                  	sys	_video, 0400h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000003AC BB00040000          <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82                              <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003B1 B81F000000          <1>  mov eax, %1
    89                              <1> 
    90 000003B6 CD40                <1>  int 40h
   472 000003B8 3D00800B00              	cmp	eax, 0B8000h
   473 000003BD 7543                    	jne	short error_exit
   474                                  	; ----
   475                                  
   476                                  ; play the .wav file. Most of the good stuff is in here.
   477                                  
   478 000003BF E856000000              	call    PlayWav
   479                                  
   480                                  ; close the .wav file and exit.
   481                                  
   482                                  ; 29/05/2024
   483                                  %if 0
   484                                  StopPlaying:
   485                                  	; Stop Playing
   486                                  	sys	_audio, 0700h
   487                                  	; Cancel callback service (for user)
   488                                  	sys	_audio, 0900h
   489                                  	; Deallocate Audio Buffer (for user)
   490                                  	sys	_audio, 0A00h
   491                                  	; Disable Audio Device
   492                                  	sys	_audio, 0C00h
   493                                  %endif
   494                                  
   495                                  Exit:  
   496 000003C4 E8DB010000                      call    closeFile
   497                                           
   498                                  	sys	_exit	; Bye!
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80                              <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82                              <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003C9 B801000000          <1>  mov eax, %1
    89                              <1> 
    90 000003CE CD40                <1>  int 40h
   499                                  here:
   500 000003D0 EBFE                    	jmp	short here
   501                                  
   502                                  pmsg_usage:
   503                                  	sys	_msg, msg_usage, 255, 0Bh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000003D2 BB[99250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000003D7 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000003DC BA0B000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003E1 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000003E6 CD40                <1>  int 40h
   504 000003E8 EBDA                    	jmp	short Exit
   505                                  
   506                                  	; 29/05/2024
   507                                  init_err:
   508                                  	sys	_msg, msg_init_err, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000003EA BB[1C260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000003EF B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000003F4 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003F9 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000003FE CD40                <1>  int 40h
   509 00000400 EBC2                    	jmp	short Exit
   510                                  
   511                                  	; 29/05/2024
   512                                  error_exit:
   513                                  	sys	_msg, msg_error, 255, 0Eh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000402 BB[FC250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000407 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000040C BA0E000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000411 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000416 CD40                <1>  int 40h
   514 00000418 EBAA                    	jmp	short Exit
   515                                  
   516                                  	; --------------------------------------------
   517                                  	
   518                                  	; 29/05/2024 (TYRDOS 386, playwav7.s)
   519                                  	; ((Modified from playwav4.asm, ich_wav4.asm))
   520                                  	; ------------------
   521                                  ;playwav_vra:
   522                                  PlayWav:
   523                                  	; create Buffer Descriptor List
   524                                  
   525                                  	;  Generic Form of Buffer Descriptor
   526                                  	;  ---------------------------------
   527                                  	;  63   62    61-48    47-32   31-0
   528                                  	;  ---  ---  --------  ------- -----
   529                                  	;  IOC  BUP -reserved- Buffer  Buffer
   530                                  	;		      Length   Pointer
   531                                  	;		      [15:0]   [31:0]
   532                                  
   533                                  	; 29/05/2024
   534                                  	; Allocate memory block (33 pages)
   535                                  	sys	_alloc, BDL_BUFFER, 33*4096, 0 ; no upper limit
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000041A BB[00300000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000041F B900100200          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000424 BA00000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000429 B82A000000          <1>  mov eax, %1
    89                              <1> 
    90 0000042E CD40                <1>  int 40h
   536 00000430 72D0                    	jc	short error_exit
   537                                  	
   538                                  	;mov	esi, eax
   539                                  
   540 00000432 A3[9E280000]            	mov	[_bdl_buffer], eax ; BDL_BUFFER physical address 
   541                                  
   542 00000437 0500100000              	add	eax, 4096	; WAVBUFFER_1 physical address
   543 0000043C 89C3                    	mov	ebx, eax
   544                                  	;mov	[wav_buffer1], eax
   545                                  	;add	eax, 65536	; WAVBUFFER_2 physical address
   546                                  	;mov	[wav_buffer2], eax
   547                                  
   548 0000043E BF[00300000]            	mov	edi, BDL_BUFFER
   549 00000443 B910000000              	mov	ecx, 16
   550                                  _0:
   551                                  	;mov	eax, WAVBUFFER_1
   552 00000448 89D8                    	mov	eax, ebx	; WAVBUFFER_1 physical address
   553 0000044A AB                      	stosd
   554                                  
   555 0000044B A1[74030000]            	mov	eax, [buffersize]
   556 00000450 D1E8                    	shr	eax, 1 ; buffer size in word
   557 00000452 0D00000040              	or	eax, BUP	; tuneloop (without interrupt)
   558 00000457 AB                      	stosd
   559                                  
   560                                  	;mov	eax, WAVBUFFER_2
   561 00000458 89D8                    	mov	eax, ebx
   562 0000045A 0500000100              	add	eax, 65536	; WAVBUFFER_2 physical address
   563 0000045F AB                      	stosd
   564                                  
   565 00000460 A1[74030000]            	mov	eax, [buffersize]
   566 00000465 D1E8                    	shr	eax, 1 ; buffer size in word
   567 00000467 0D00000040              	or	eax, BUP	; tuneloop (without interrupt)
   568 0000046C AB                      	stosd
   569                                  
   570 0000046D E2D9                    	loop	_0
   571                                  
   572                                  	;push	esi
   573                                  
   574                                  	; load 64k into buffer 1
   575 0000046F C705[9A280000]-         	mov	dword [audio_buffer], WAVBUFFER_1
   575 00000475 [00400000]         
   576 00000479 FF15[6C030000]          	call	dword [loadfromwavfile]
   577                                  
   578                                  	; and 64k into buffer 2
   579 0000047F C705[9A280000]-         	mov	dword [audio_buffer], WAVBUFFER_2
   579 00000485 [00400100]         
   580 00000489 FF15[6C030000]          	call	dword [loadfromwavfile]
   581                                  
   582                                  	;pop	esi
   583                                  	
   584                                  	; write NABMBAR+10h with offset of buffer descriptor list
   585                                  
   586                                         	;;mov	eax, BDL_BUFFER
   587                                          ;mov	eax, esi	; BDL_BUFFER physical address
   588                                  
   589 0000048F A1[9E280000]            	mov	eax, [_bdl_buffer] ; BDL_BUFFER physical address
   590                                  
   591 00000494 668B15[98280000]        	mov	dx, [NABMBAR]
   592 0000049B 6683C210                        add     dx, PO_BDBAR_REG	; set pointer to BDL
   593                                  	;out	dx, eax 		; write to AC97 controller
   594                                  	; 29/05/2024
   595 0000049F 89C3                    	mov	ebx, eax ; data, dword
   596 000004A1 B405                    	mov	ah, 5	; write port dword
   597 000004A3 CD34                    	int	34h
   598                                  
   599                                  	; 31/05/2024
   600                                  	; 19/05/2024
   601                                  	;call	delay1_4ms
   602                                  
   603 000004A5 B01F                            mov	al, 31
   604 000004A7 E822200000              	call	setLastValidIndex
   605                                  
   606                                  	; 31/05/2024
   607                                  	; 19/05/2024
   608                                  	;call	delay1_4ms
   609                                  
   610                                  	; 17/02/2017
   611 000004AC 668B15[98280000]                mov	dx, [NABMBAR]
   612 000004B3 6683C21B                        add	dx, PO_CR_REG		; PCM out Control Register
   613                                          ;mov	al, IOCE + RPBM	; Enable 'Interrupt On Completion' + run
   614                                  	;			; (LVBI interrupt will not be enabled)
   615                                  	; 06/11/2023 (TUNELOOP version, without interrupt)
   616 000004B7 B001                    	mov	al, RPBM
   617                                  	;out	dx, al			; Start bus master operation.
   618                                  	; 29/05/2024
   619                                  	; al = data, byte
   620 000004B9 B401                    	mov	ah, 1 ; write port, byte
   621 000004BB CD34                    	int	34h
   622                                  
   623                                  	; 19/05/2024
   624                                  	; 06/11/2023
   625                                  	;call	delay1_4ms	; 31/05/2024
   626                                  	;call	delay1_4ms
   627                                  	;call	delay1_4ms
   628                                  	;call	delay1_4ms
   629                                  
   630                                  ; while DMA engine is running, examine current index and wait until it hits 1
   631                                  ; as soon as it's 1, we need to refresh the data in wavbuffer1 with another
   632                                  ; 64k. Likewise when it's playing buffer 2, refresh buffer 1 and repeat.
   633                                  
   634                                  ; 18/11/2023
   635                                  ; 08/11/2023
   636                                  ; 07/11/2023
   637                                  
   638                                  tuneLoop:
   639                                  	; 18/11/2023 (ich_wav4.asm)
   640                                  	; 08/11/2023
   641                                  	; 06/11/2023
   642 000004BD B031                    	mov	al, '1'
   643 000004BF E86C000000              	call	tL0
   644                                  tL1:
   645 000004C4 E8C81F0000              	call	updateLVI	; /set LVI != CIV/
   646 000004C9 7452                    	jz	short _exitt_	; 08/11/2023
   647 000004CB E8691F0000              	call	check4keyboardstop
   648 000004D0 724B                    	jc	short _exitt_
   649 000004D2 E8AA1F0000              	call	getCurrentIndex
   650 000004D7 A801                    	test	al, BIT0
   651 000004D9 74E9                    	jz	short tL1	; loop if buffer 2 is not playing
   652                                  
   653                                  	; 29/05/2024
   654                                  	; load buffer 1
   655 000004DB C705[9A280000]-         	mov	dword [audio_buffer], WAVBUFFER_1
   655 000004E1 [00400000]         
   656 000004E5 FF15[6C030000]          	call	dword [loadfromwavfile]
   657 000004EB 7230                    	jc	short _exitt_	; end of file
   658                                  
   659 000004ED B032                    	mov	al, '2'
   660 000004EF E83C000000              	call	tL0
   661                                  tL2:
   662 000004F4 E8981F0000              	call    updateLVI
   663 000004F9 7422                    	jz	short _exitt_	; 08/11/2023
   664 000004FB E8391F0000              	call    check4keyboardstop
   665 00000500 721B                    	jc	short _exitt_
   666 00000502 E87A1F0000              	call    getCurrentIndex
   667 00000507 A801                    	test	al, BIT0
   668 00000509 75E9                    	jnz	short tL2	; loop if buffer 1 is not playing
   669                                  
   670                                  	; 29/05/2024
   671                                  	; load buffer 2
   672 0000050B C705[9A280000]-         	mov	dword [audio_buffer], WAVBUFFER_2
   672 00000511 [00400100]         
   673 00000515 FF15[6C030000]          	call	dword [loadfromwavfile]
   674 0000051B 73A0                    	jnc	short tuneLoop
   675                                  _exitt_:
   676 0000051D 668B15[98280000]        	mov	dx, [NABMBAR]		
   677 00000524 6683C21B                	add	dx, PO_CR_REG	; PCM out Control Register
   678 00000528 B000                    	mov	al, 0
   679                                  	;out	dx, al		; stop player
   680                                  	; 29/05/2024
   681                                  	; al = data, byte
   682 0000052A B401                    	mov	ah, 1  ; write port, byte
   683 0000052C CD34                    	int	34h	
   684                                  
   685                                  	; 29/05/2024
   686 0000052E B030                    	mov	al, '0'
   687                                  
   688                                  	;add	al, '0'
   689                                  	;call	tL0
   690                                  	;
   691                                  	;retn
   692                                  	; 06/11/2023
   693                                  	;jmp	short tL0
   694                                  	;retn
   695                                  
   696                                  	; 06/11/2023
   697                                  tL0:
   698                                  	; 29/05/2024 (TRDOS 386)
   699                                  	; 08/11/2023
   700                                  	; 05/11/2023
   701                                  	; 17/02/2017 - Buffer switch test (temporary)
   702                                  	; 06/11/2023
   703                                  	; al = buffer indicator ('1', '2' or '0' -stop- )
   704                                  	
   705 00000530 BB00800B00              	mov	ebx, 0B8000h ; video display page address
   706 00000535 B44E                    	mov	ah, 4Eh
   707 00000537 668903                  	mov	[ebx], ax ; show current play buffer (1, 2)
   708 0000053A C3                      	retn
   709                                  
   710                                  	; ------------------
   711                                  
   712                                  ; 29/05/2024
   713                                  %if 0
   714                                  	; 25/11/2023
   715                                  DetectAC97:
   716                                  	; Detect (BH=1) AC'97 (BL=2) Audio Device
   717                                          sys	_audio, 0102h
   718                                  	jc	short DetectAC97_retn
   719                                  
   720                                  	; 25/11/2023
   721                                  	; Get AC'97 Codec info
   722                                  	; (Function 14, sub function 1)
   723                                  	sys	_audio, 0E01h
   724                                  	; Save Variable Rate Audio support bit
   725                                  	and	al, 1
   726                                  	mov	[VRA], al
   727                                  
   728                                  DetectAC97_retn:
   729                                  	retn
   730                                  %else
   731                                  	; 29/05/2024
   732                                  DetectAC97:
   733                                  DetectICH:
   734                                  	; 22/11/2023
   735                                  	; 19/11/2023
   736                                  	; 01/11/2023 - TRDOS 386 Kernel v2.0.7
   737                                  	;; 10/06/2017
   738                                  	;; 05/06/2017
   739                                  	;; 29/05/2017
   740                                  	;; 28/05/2017
   741                                  
   742                                  	; 19/11/2023
   743 0000053B BE[86260000]            	mov	esi, valid_ids	; address of Valid ICH (AC97) Device IDs
   744 00000540 B915000000              	mov	ecx, valid_id_count
   745                                  pfd_1:
   746 00000545 AD                      	lodsd
   747 00000546 E8C71A0000              	call	pciFindDevice
   748 0000054B 7303                    	jnc	short d_ac97_1
   749 0000054D E2F6                    	loop	pfd_1
   750                                  
   751                                  	;stc
   752 0000054F C3                      	retn
   753                                  
   754                                  d_ac97_1:
   755                                  	; eax = BUS/DEV/FN
   756                                  	;	00000000BBBBBBBBDDDDDFFF00000000
   757                                  	; edx = DEV/VENDOR
   758                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
   759                                  
   760                                  	; playwav4.asm - 19/05/2024
   761                                  
   762 00000550 A3[92280000]            	mov	[bus_dev_fn], eax
   763 00000555 8915[8E280000]          	mov	[dev_vendor], edx
   764                                  
   765                                  	; get ICH base address regs for mixer and bus master
   766                                  
   767 0000055B B010                            mov     al, NAMBAR_REG
   768 0000055D E83E1B0000                      call    pciRegRead16			; read PCI registers 10-11
   769                                          ;and    dx, IO_ADDR_MASK 		; mask off BIT0
   770                                  	; 19/05/2024
   771 00000562 80E2FE                  	and	dl, 0FEh
   772                                  
   773 00000565 668915[96280000]                mov     [NAMBAR], dx			; save audio mixer base addr
   774                                  
   775 0000056C B014                    	mov     al, NABMBAR_REG
   776 0000056E E82D1B0000                      call    pciRegRead16
   777                                          ;and    dx, IO_ADDR_MASK
   778                                  	; 19/05/2024
   779 00000573 80E2C0                  	and	dl, 0C0h
   780                                  
   781 00000576 668915[98280000]                mov     [NABMBAR], dx			; save bus master base addr
   782                                  
   783 0000057D B03C                    	mov	al, AC97_INT_LINE ; Interrupt line register (3Ch)
   784 0000057F E8151B0000              	call	pciRegRead8 ; 17/02/2017
   785                                  
   786 00000584 8815[8C280000]          	mov     [ac97_int_ln_reg], dl
   787                                  
   788                                  	;clc
   789                                  
   790 0000058A C3                      	retn
   791                                  %endif
   792                                  
   793                                  ;open or create file
   794                                  ;
   795                                  ;input: ds:dx-->filename (asciiz)
   796                                  ;       al=file Mode (create or open)
   797                                  ;output: none  cs:[FileHandle] filled
   798                                  ;
   799                                  openFile:
   800                                  	;mov	ah, 3Bh	; start with a mode
   801                                  	;add	ah, al	; add in create or open mode
   802                                  	;xor	ecx, ecx
   803                                  	;int	21h
   804                                  	;jc	short _of1
   805                                  	;;mov	[cs:FileHandle], ax
   806                                  
   807                                  	sys	_open, wav_file_name, 0
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000058B BB[3A280000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000590 B900000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000595 B805000000          <1>  mov eax, %1
    89                              <1> 
    90 0000059A CD40                <1>  int 40h
   808 0000059C 7205                    	jc	short _of1
   809                                  
   810 0000059E A3[DF240000]            	mov	[FileHandle], eax
   811                                  _of1:
   812 000005A3 C3                      	retn
   813                                  
   814                                  ; close the currently open file
   815                                  ; input: none, uses cs:[FileHandle]
   816                                  closeFile:
   817 000005A4 833D[DF240000]FF        	cmp	dword [FileHandle], -1
   818 000005AB 7417                    	je	short _cf1
   819                                  	;mov    bx, [FileHandle]  
   820                                  	;mov    ax, 3E00h
   821                                          ;int    21h              ;close file
   822                                  
   823                                  	sys	_close, [FileHandle]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000005AD 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82                              <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000005B3 B806000000          <1>  mov eax, %1
    89                              <1> 
    90 000005B8 CD40                <1>  int 40h
   824 000005BA C705[DF240000]FFFF-     	mov 	dword [FileHandle], -1
   824 000005C2 FFFF               
   825                                  _cf1:
   826 000005C4 C3                      	retn
   827                                  
   828                                  getSampleRate:
   829                                  	
   830                                  ; reads the sample rate from the .wav file.
   831                                  ; entry: none - assumes file is already open
   832                                  ; exit: ax = sample rate (11025, 22050, 44100, 48000)
   833                                  ;	cx = number of channels (mono=1, stereo=2)
   834                                  ;	dx = bits per sample (8, 16)
   835                                  
   836 000005C5 53                      	push    ebx
   837                                  
   838                                          ;mov	ah, 42h
   839                                          ;mov	al, 0	; from start of file
   840                                          ;mov	bx, [FileHandle]
   841                                          ;xor	ecx, ecx
   842                                          ;mov	dx, 08h	; "WAVE"
   843                                          ;int	21h
   844                                  	
   845                                  	sys	_seek, [FileHandle], 8, 0
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000005C6 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000005CC B908000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000005D1 BA00000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000005D6 B813000000          <1>  mov eax, %1
    89                              <1> 
    90 000005DB CD40                <1>  int 40h
   846                                  
   847                                          ;mov	dx, smpRBuff
   848                                          ;mov	cx, 28	; 28 bytes
   849                                  	;mov	ah, 3fh
   850                                          ;int	21h
   851                                  
   852                                  	sys	_read, [FileHandle], smpRBuff, 28
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000005DD 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000005E3 B9[1E280000]        <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000005E8 BA1C000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000005ED B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000005F2 CD40                <1>  int 40h
   853                                  
   854 000005F4 813D[1E280000]5741-     	cmp	dword [smpRBuff], 'WAVE'
   854 000005FC 5645               
   855 000005FE 7520                    	jne	short gsr_stc
   856                                  
   857 00000600 66833D[2A280000]01      	cmp	word [smpRBuff+12], 1	; Offset 20, must be 1 (= PCM)
   858 00000608 7516                    	jne	short gsr_stc
   859                                  
   860 0000060A 668B0D[2C280000]        	mov	cx, [smpRBuff+14]	; return num of channels in CX
   861 00000611 66A1[2E280000]                  mov     ax, [smpRBuff+16]	; return sample rate in AX
   862 00000617 668B15[38280000]        	mov	dx, [smpRBuff+26]	; return bits per sample value in DX
   863                                  gsr_retn:
   864 0000061E 5B                              pop     ebx
   865 0000061F C3                              retn
   866                                  gsr_stc:
   867 00000620 F9                      	stc
   868 00000621 EBFB                    	jmp	short gsr_retn
   869                                  
   870                                  ; 29/05/2024
   871                                  %if 0
   872                                  audio_int_handler:
   873                                  	; 18/08/2020 (14/10/2020, 'wavplay2.s')
   874                                  
   875                                  	;mov	byte [srb], 1 ; interrupt (or signal response byte)
   876                                  	
   877                                  	;cmp	byte [cbs_busy], 1
   878                                  	;jnb	short _callback_bsy_retn
   879                                  	
   880                                  	;mov	byte [cbs_busy], 1
   881                                  
   882                                  	mov	al, [half_buff]
   883                                  
   884                                  	cmp	al, 1
   885                                  	jb	short _callback_retn
   886                                  
   887                                  	; 18/08/2020
   888                                  	mov	byte [srb], 1
   889                                  
   890                                  	xor	byte [half_buff], 3 ; 2->1, 1->2
   891                                  
   892                                  	add	al, '0'
   893                                  tL0:	; 26/11/2023
   894                                  	mov	ah, 4Eh
   895                                  	mov	ebx, 0B8000h ; video display page address
   896                                  	mov	[ebx], ax ; show playing buffer (1, 2)
   897                                  _callback_retn:
   898                                  	;mov	byte [cbs_busy], 0
   899                                  _callback_bsy_retn:
   900                                  	sys	_rele ; return from callback service 
   901                                  	; we must not come here !
   902                                  	sys	_exit
   903                                  %endif
   904                                  	
   905                                  loadFromFile:
   906                                  	; 26/11/2023
   907 00000623 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
   908                                  					; last of the file?
   909 0000062A 7402                    	jz	short lff_0		; no
   910 0000062C F9                      	stc
   911 0000062D C3                      	retn
   912                                  lff_0:
   913                                  	; 13/06/2017
   914                                  	;mov	edx, BUFFERSIZE
   915                                  	; 26/11/2023
   916                                  	;mov	edi, audio_buffer
   917                                  	; 29/05/2024
   918 0000062E 8B3D[9A280000]          	mov	edi, [audio_buffer]
   919 00000634 8B15[74030000]          	mov	edx, [buffersize]	; bytes
   920 0000063A 8A0D[8D280000]          	mov	cl, [fbs_shift]   
   921 00000640 20C9                    	and	cl, cl
   922 00000642 7409                    	jz	short lff_1 ; stereo, 16 bit
   923                                  
   924                                  	; fbs_shift =
   925                                  	;	2 for mono and 8 bit sample (multiplier = 4)
   926                                  	;	1 for mono or 8 bit sample (multiplier = 2)
   927 00000644 D3EA                    	shr	edx, cl
   928                                  	;inc	edx
   929                                  
   930 00000646 BE[00400200]            	mov     esi, temp_buffer
   931 0000064B EB02                    	jmp	short lff_2
   932                                  lff_1:
   933                                  	;;mov	esi, audio_buffer
   934                                  	; 29/05/2024
   935                                  	;mov	esi, [audio_buffer]
   936 0000064D 89FE                    	mov	esi, edi ; audio_buffer
   937                                  lff_2:
   938                                  	; 17/03/2017
   939                                  	; esi = buffer address
   940                                  	; edx = buffer size
   941                                   
   942                                  	; 26/11/2023
   943                                  	; load file into memory
   944                                  	sys 	_read, [FileHandle], esi
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000064F 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000655 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000657 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000065C CD40                <1>  int 40h
   945 0000065E 8B0D[74030000]          	mov	ecx, [buffersize]
   946                                  	;jc	short padfill ; error !
   947                                  	; 14/12/2024
   948 00000664 7255                    	jc	short lff_10
   949                                  
   950 00000666 21C0                    	and	eax, eax
   951 00000668 7453                    	jz	short padfill
   952                                  lff_3:
   953                                  	; 26/11/2023
   954 0000066A 8A1D[8D280000]          	mov	bl, [fbs_shift]
   955 00000670 20DB                    	and	bl, bl
   956 00000672 7456                    	jz	short lff_11
   957                                  
   958                                  	; 14/12/2024
   959                                  	;sub	ecx, eax
   960                                  	;mov	ebp, ecx
   961                                  	; 14/12/2024
   962 00000674 29C2                    	sub	edx, eax
   963                                  
   964                                  	;mov	esi, temp_buffer
   965                                  	;mov	edi, audio_buffer
   966 00000676 89C1                    	mov	ecx, eax   ; byte count
   967                                  
   968 00000678 803D[19280000]08        	cmp	byte [bps], 8 ; bits per sample (8 or 16)
   969 0000067F 751E                    	jne	short lff_6 ; 16 bit samples
   970                                  	; 8 bit samples
   971 00000681 FECB                    	dec	bl  ; shift count, 1 = stereo, 2 = mono
   972 00000683 740E                    	jz	short lff_5 ; 8 bit, stereo
   973                                  lff_4:
   974                                  	; mono & 8 bit
   975 00000685 AC                      	lodsb
   976 00000686 2C80                    	sub	al, 80h ; 08/11/2023
   977 00000688 C1E008                  	shl	eax, 8 ; convert 8 bit sample to 16 bit sample
   978 0000068B 66AB                    	stosw	; left channel
   979 0000068D 66AB                    	stosw	; right channel
   980 0000068F E2F4                    	loop	lff_4
   981 00000691 EB16                    	jmp	short lff_8
   982                                  lff_5:
   983                                  	; stereo & 8 bit
   984 00000693 AC                      	lodsb
   985 00000694 2C80                    	sub	al, 80h ; 08/11/2023
   986 00000696 C1E008                  	shl	eax, 8 ; convert 8 bit sample to 16 bit sample
   987 00000699 66AB                    	stosw
   988 0000069B E2F6                    	loop	lff_5			
   989 0000069D EB0A                    	jmp	short lff_8
   990                                  lff_6:
   991 0000069F D1E9                    	shr	ecx, 1 ; word count
   992                                  lff_7:
   993 000006A1 66AD                    	lodsw
   994 000006A3 66AB                    	stosw	; left channel
   995 000006A5 66AB                    	stosw	; right channel
   996 000006A7 E2F8                    	loop	lff_7
   997                                  lff_8:
   998                                  	; 27/11/2023
   999 000006A9 F8                      	clc
  1000                                  	; 14/12/2024
  1001                                  	;mov	ecx, ebp
  1002                                  	;jecxz	endLFF_retn
  1003 000006AA 09D2                    	or	edx, edx
  1004 000006AC 741B                    	jz	short endLFF_retn
  1005                                  	
  1006                                  	; 14/12/2024
  1007 000006AE B9[9A280000]            	mov	ecx, audio_buffer
  1008 000006B3 030D[74030000]          	add	ecx, [buffersize]
  1009 000006B9 29F9                    	sub	ecx, edi
  1010                                  
  1011                                  	; 14/12/2024
  1012                                  lff_10:
  1013 000006BB 31C0                    	xor	eax, eax ; silence
  1014                                  padfill:
  1015 000006BD D1E9                    	shr	ecx, 1 
  1016 000006BF F366AB                  	rep	stosw
  1017                                  lff_9:
  1018 000006C2 800D[1C280000]01                or	byte [flags], ENDOFFILE	; end of file flag
  1019                                  endLFF_retn:
  1020 000006C9 C3                              retn
  1021                                  
  1022                                  lff_11:
  1023                                  	; 16 bit stereo
  1024                                  	; ecx = buffer size
  1025                                  	; eax = read count
  1026 000006CA 29C1                    	sub	ecx, eax
  1027 000006CC 76FB                    	jna	short endLFF_retn
  1028 000006CE 01C7                    	add	edi, eax  ; audio_buffer + eax
  1029 000006D0 EBE9                    	jmp	short lff_10 ; padfill
  1030                                  
  1031                                  error_exit_2:
  1032                                  	; 26/11/2023 - temporary
  1033                                  	;sys	_msg, test_2, 255, 0Ch
  1034 000006D2 E92BFDFFFF              	jmp	error_exit
  1035                                  	
  1036                                  	; 26/11/2023 - temporary
  1037                                  ;test_1:
  1038                                  ;	db 13, 10, 'Test 1', 13,10, 0
  1039                                  ;test_2:
  1040                                  ;	db 13, 10, 'Test 2', 13,10, 0
  1041                                  	
  1042                                  ; 29/05/2024
  1043                                  %if 0
  1044                                  
  1045                                  PlayWav:
  1046                                  	; 26/11/2023
  1047                                  	; 18/08/2020 (27/07/2020, 'wavplay2.s')
  1048                                  	; 13/06/2017
  1049                                  	; Convert 8 bit samples to 16 bit samples
  1050                                  	; and convert mono samples to stereo samples
  1051                                  
  1052                                  	; 26/11/2023
  1053                                  	; load 32768 bytes into audio buffer
  1054                                  	;mov	edi, audio_buffer
  1055                                  	;;mov	edx, BUFFERSIZE
  1056                                  	; 26/11/2023
  1057                                  	;mov	edx, [buffersize]
  1058                                  	;call	loadFromFile
  1059                                  	; 26/11/2023
  1060                                  	call	dword [loadfromwavfile]
  1061                                  	jc	short error_exit_2
  1062                                  	mov	byte [half_buff], 1 ; (DMA) Buffer 1
  1063                                  
  1064                                  	; 18/08/2020 (27/07/2020, 'wavplay2.s')
  1065                                  	test    byte [flags], ENDOFFILE  ; end of file
  1066                                  	jnz	short _6 ; yes
  1067                                  			 ; bypass filling dma half buffer 2
  1068                                  
  1069                                  	; bh = 16 : update (current, first) dma half buffer
  1070                                  	; bl = 0  : then switch to the next (second) half buffer
  1071                                  	sys	_audio, 1000h
  1072                                  
  1073                                  	; 18/08/2020
  1074                                  	; [audio_flag] = 1 (in TRDOS 386 kernel)
  1075                                  
  1076                                  	; audio_buffer must be filled again after above system call 
  1077                                  	; (Because audio interrupt will be generated by AC97 hardware
  1078                                  	; at the end of the first half of dma buffer.. so, 
  1079                                  	; the second half must be ready. 'sound_play' will use it.)
  1080                                  
  1081                                  	; 26/11/2023
  1082                                  	;mov	edi, audio_buffer
  1083                                  	;;mov	edx, BUFFERSIZE
  1084                                  	; 26/11/2023
  1085                                  	;mov	edx, [buffersize]
  1086                                  	;call	loadFromFile
  1087                                  	; 26/11/2023
  1088                                  	call	dword [loadfromwavfile]
  1089                                  	;jc	short p_return
  1090                                  _6:
  1091                                  	; Set Master Volume Level (BL=0 or 80h)
  1092                                  	; 	for next playing (BL>=80h)
  1093                                  	;sys	_audio, 0B80h, 1D1Dh
  1094                                  	sys	_audio, 0B00h, 1D1Dh
  1095                                  
  1096                                  	; 18/08/2020
  1097                                  	;mov	byte [volume_level], 1Dh
  1098                                  	mov	[volume_level], cl
  1099                                  
  1100                                  	; Start	to play
  1101                                  	mov	al, [bps]
  1102                                  	shr	al, 4 ; 8 -> 0, 16 -> 1
  1103                                  	shl	al, 1 ; 16 -> 2, 8 -> 0
  1104                                  	mov	bl, [stmo]
  1105                                  	dec	bl
  1106                                  	or	bl, al
  1107                                  	mov	cx, [sample_rate] 
  1108                                  	mov	bh, 4 ; start to play	
  1109                                  	sys	_audio
  1110                                  
  1111                                  	;mov	ebx, 0B8000h ; video display page address
  1112                                  	;mov	ah, 4Eh
  1113                                  	;mov	al, [half_buffer]
  1114                                  	;mov	[ebx], ax ; show playing buffer (1, 2)
  1115                                  
  1116                                  	; 18/08/2020 (27/07/2020, 'wavplay2.s')
  1117                                  	; Here..
  1118                                  	; If byte [flags] <> ENDOFFILE ...
  1119                                  	; user's audio_buffer has been copied to dma half buffer 2
  1120                                  
  1121                                  	; [audio_flag] = 0 (in TRDOS 386 kernel)
  1122                                  
  1123                                  	; audio_buffer must be filled again after above system call 
  1124                                  	; (Because, audio interrupt will be generated by VT8237R
  1125                                  	; at the end of the first half of dma buffer.. so, 
  1126                                  	; the 2nd half of dma buffer is ready but the 1st half
  1127                                  	; must be filled again.)
  1128                                  
  1129                                  	; 18/08/2020
  1130                                  	test    byte [flags], ENDOFFILE  ; end of file
  1131                                  	jnz	short p_loop ; yes
  1132                                  
  1133                                  	; 18/08/2020
  1134                                  	; load 32768 bytes into audio buffer
  1135                                  	;; (for the second half of DMA buffer)
  1136                                  	; 27/11/2023
  1137                                  	; 20/05/2017
  1138                                  	;mov	edi, audio_buffer
  1139                                  	;mov	edx, BUFFERSIZE
  1140                                  	; 26/11/2023
  1141                                  	;mov	edx, [buffersize]
  1142                                  	;call	loadFromFile
  1143                                  	; 26/11/2023
  1144                                  	call	dword [loadfromwavfile]
  1145                                  	;jc	short p_return
  1146                                  	;mov	byte [half_buff], 2 ; (DMA) Buffer 2
  1147                                  
  1148                                  	; we need to wait for 'SRB' (audio interrupt)
  1149                                  	; (we can not return from 'PlayWav' here 
  1150                                  	;  even if we have got an error from file reading)
  1151                                  	; ((!!current audio data must be played!!))
  1152                                  
  1153                                  	; 18/08/2020
  1154                                  	;mov	byte [srb], 1
  1155                                  
  1156                                  p_loop:
  1157                                  	;mov	ah, 1		; any key pressed?
  1158                                  	;int	32h		; no, Loop.
  1159                                  	;jz	short q_loop
  1160                                  	;
  1161                                  	;mov	ah, 0		; flush key buffer...
  1162                                  	;int	32h
  1163                                  
  1164                                  	; 18/08/2020 (14/10/2017, 'wavplay2.s')
  1165                                  	cmp	byte [srb], 0
  1166                                  	jna	short q_loop
  1167                                  	mov	byte [srb], 0
  1168                                  	; 27/11/2023
  1169                                  	;mov	edi, audio_buffer
  1170                                  	;mov	edx, BUFFERSIZE
  1171                                  	; 26/11/2023
  1172                                  	;mov	edx, [buffersize]
  1173                                  	;call	loadFromFile
  1174                                  	; 26/11/2023
  1175                                  	call	dword [loadfromwavfile]
  1176                                  	jc	short p_return
  1177                                  q_loop:
  1178                                  	mov     ah, 1		; any key pressed?
  1179                                  	int     32h		; no, Loop.
  1180                                  	jz	short p_loop
  1181                                  
  1182                                  	mov     ah, 0		; flush key buffer...
  1183                                  	int     32h
  1184                                  	
  1185                                  	cmp	al, '+' ; increase sound volume
  1186                                  	je	short inc_volume_level
  1187                                  	cmp	al, '-'
  1188                                  	je	short dec_volume_level
  1189                                  
  1190                                  p_return:
  1191                                  	mov	byte [half_buff], 0
  1192                                  	retn
  1193                                  
  1194                                  	; 18/08/2020 (14/10/2017, 'wavplay2.s')
  1195                                  inc_volume_level:
  1196                                  	mov	cl, [volume_level]
  1197                                  	cmp	cl, 1Fh ; 31
  1198                                  	jnb	short q_loop
  1199                                  	inc	cl
  1200                                  change_volume_level:
  1201                                  	mov	[volume_level], cl
  1202                                  	mov	ch, cl
  1203                                  	; Set Master Volume Level
  1204                                  	sys	_audio, 0B00h
  1205                                  	jmp	short p_loop
  1206                                  dec_volume_level:
  1207                                  	mov	cl, [volume_level]
  1208                                  	cmp	cl, 1 ; 1
  1209                                  	;jna	short p_loop
  1210                                  	; 14/12/2024
  1211                                  	jna	short q_loop
  1212                                  	dec	cl
  1213                                  	jmp	short change_volume_level
  1214                                  %endif
  1215                                  
  1216                                  write_audio_dev_info:
  1217                                  	; EBX = Message address
  1218                                  	; ECX = Max. message length (or stop on ZERO character)
  1219                                  	;	(1 to 255)
  1220                                  	; DL  = Message color (07h = light gray, 0Fh = white) 
  1221                                       	sys 	_msg, msgAudioCardInfo, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000006D7 BB[70250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000006DC B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000006E1 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000006E6 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000006EB CD40                <1>  int 40h
  1222 000006ED C3                      	retn
  1223                                  
  1224                                  write_wav_file_info:
  1225                                  	; 01/05/2017
  1226                                  	sys	_msg, msgWavFileName, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000006EE BB[DA260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000006F3 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000006F8 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000006FD B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000702 CD40                <1>  int 40h
  1227                                  	sys	_msg, wav_file_name, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000704 BB[3A280000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000709 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000070E BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000713 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000718 CD40                <1>  int 40h
  1228                                  
  1229                                  write_sample_rate:
  1230                                  	; 01/05/2017
  1231 0000071A 66A1[1A280000]          	mov	ax, [sample_rate]
  1232                                  	; ax = sample rate (hertz)
  1233 00000720 31D2                    	xor	edx, edx
  1234 00000722 66B90A00                	mov	cx, 10
  1235 00000726 66F7F1                  	div	cx
  1236 00000729 0015[FF260000]          	add	[msgHertz+4], dl
  1237 0000072F 29D2                    	sub	edx, edx
  1238 00000731 66F7F1                  	div	cx
  1239 00000734 0015[FE260000]          	add	[msgHertz+3], dl
  1240 0000073A 29D2                    	sub	edx, edx
  1241 0000073C 66F7F1                  	div	cx
  1242 0000073F 0015[FD260000]          	add	[msgHertz+2], dl
  1243 00000745 29D2                    	sub	edx, edx
  1244 00000747 66F7F1                  	div	cx
  1245 0000074A 0015[FC260000]          	add	[msgHertz+1], dl
  1246 00000750 0005[FB260000]          	add	[msgHertz], al
  1247                                  	
  1248                                  	sys	_msg, msgSampleRate, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000756 BB[EC260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000075B B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000760 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000765 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 0000076A CD40                <1>  int 40h
  1249                                  
  1250 0000076C BE[16270000]            	mov	esi, msg16Bits
  1251 00000771 803D[19280000]10        	cmp	byte [bps], 16
  1252 00000778 7405                    	je	short wsr_1
  1253 0000077A BE[06270000]            	mov	esi, msg8Bits
  1254                                  wsr_1:
  1255                                  	sys	_msg, esi, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000077F 89F3                <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000781 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000786 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000078B B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000790 CD40                <1>  int 40h
  1256                                  
  1257 00000792 BE[0F270000]            	mov	esi, msgMono
  1258 00000797 803D[18280000]01        	cmp	byte [stmo], 1
  1259 0000079E 7405                    	je	short wsr_2
  1260 000007A0 BE[20270000]            	mov	esi, msgStereo		
  1261                                  wsr_2:
  1262                                  	sys	_msg, esi, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000007A5 89F3                <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000007A7 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000007AC BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000007B1 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000007B6 CD40                <1>  int 40h
  1263 000007B8 C3                              retn
  1264                                  
  1265                                  write_ac97_pci_dev_info:
  1266                                  	; 06/06/2017
  1267                                  	; 03/06/2017
  1268                                  	; BUS/DEV/FN
  1269                                  	;	00000000BBBBBBBBDDDDDFFF00000000
  1270                                  	; DEV/VENDOR
  1271                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
  1272                                  
  1273                                  	;mov	esi, [dev_vendor]
  1274                                  	;mov	eax, esi
  1275                                  	; 31/05/2024
  1276 000007B9 A1[8E280000]            	mov	eax, [dev_vendor]
  1277 000007BE 0FB6D8                  	movzx	ebx, al
  1278 000007C1 88DA                    	mov	dl, bl
  1279 000007C3 80E30F                  	and	bl, 0Fh
  1280 000007C6 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1281 000007CC A2[6E270000]            	mov	[msgVendorId+3], al
  1282 000007D1 88D3                    	mov	bl, dl
  1283 000007D3 C0EB04                  	shr	bl, 4
  1284 000007D6 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1285 000007DC A2[6D270000]            	mov	[msgVendorId+2], al
  1286 000007E1 88E3                    	mov	bl, ah
  1287 000007E3 88DA                    	mov	dl, bl
  1288 000007E5 80E30F                  	and	bl, 0Fh
  1289 000007E8 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1290 000007EE A2[6C270000]            	mov	[msgVendorId+1], al
  1291 000007F3 88D3                    	mov	bl, dl
  1292 000007F5 C0EB04                  	shr	bl, 4
  1293 000007F8 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1294 000007FE A2[6B270000]            	mov	[msgVendorId], al
  1295 00000803 C1E810                  	shr	eax, 16
  1296 00000806 88C3                    	mov	bl, al
  1297 00000808 88DA                    	mov	dl, bl
  1298 0000080A 80E30F                  	and	bl, 0Fh
  1299 0000080D 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1300 00000813 A2[7F270000]            	mov	[msgDevId+3], al
  1301 00000818 88D3                    	mov	bl, dl
  1302 0000081A C0EB04                  	shr	bl, 4
  1303 0000081D 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1304 00000823 A2[7E270000]            	mov	[msgDevId+2], al
  1305 00000828 88E3                    	mov	bl, ah
  1306 0000082A 88DA                    	mov	dl, bl
  1307 0000082C 80E30F                  	and	bl, 0Fh
  1308 0000082F 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1309 00000835 A2[7D270000]            	mov	[msgDevId+1], al
  1310 0000083A 88D3                    	mov	bl, dl
  1311 0000083C C0EB04                  	shr	bl, 4
  1312 0000083F 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1313 00000845 A2[7C270000]            	mov	[msgDevId], al
  1314                                  
  1315                                  	;mov	esi, [bus_dev_fn]
  1316                                  	;shr	esi, 8
  1317                                  	;mov	ax, si
  1318                                  	; 31/05/2024
  1319 0000084A A1[92280000]            	mov	eax, [bus_dev_fn]
  1320 0000084F C1E808                  	shr	eax, 8
  1321 00000852 88C3                    	mov	bl, al
  1322 00000854 88DA                    	mov	dl, bl
  1323 00000856 80E307                  	and	bl, 7 ; bit 0,1,2
  1324 00000859 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1325 0000085F A2[A3270000]            	mov	[msgFncNo+1], al
  1326 00000864 88D3                    	mov	bl, dl
  1327 00000866 C0EB03                  	shr	bl, 3
  1328 00000869 88DA                    	mov	dl, bl
  1329 0000086B 80E30F                  	and	bl, 0Fh
  1330 0000086E 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1331 00000874 A2[95270000]            	mov	[msgDevNo+1], al
  1332 00000879 88D3                    	mov	bl, dl
  1333 0000087B C0EB04                  	shr	bl, 4
  1334 0000087E 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1335 00000884 A2[94270000]            	mov	[msgDevNo], al
  1336 00000889 88E3                    	mov	bl, ah
  1337 0000088B 88DA                    	mov	dl, bl
  1338 0000088D 80E30F                  	and	bl, 0Fh
  1339 00000890 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1340 00000896 A2[89270000]            	mov	[msgBusNo+1], al
  1341 0000089B 88D3                    	mov	bl, dl
  1342 0000089D C0EB04                  	shr	bl, 4
  1343 000008A0 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1344 000008A6 A2[88270000]            	mov	[msgBusNo], al
  1345                                  
  1346                                  	;mov	ax, [ac97_NamBar]
  1347 000008AB 66A1[96280000]          	mov	ax, [NAMBAR]	; 29/05/2024
  1348 000008B1 88C3                    	mov	bl, al
  1349 000008B3 88DA                    	mov	dl, bl
  1350 000008B5 80E30F                  	and	bl, 0Fh
  1351 000008B8 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1352 000008BE A2[B2270000]            	mov	[msgNamBar+3], al
  1353 000008C3 88D3                    	mov	bl, dl
  1354 000008C5 C0EB04                  	shr	bl, 4
  1355 000008C8 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1356 000008CE A2[B1270000]            	mov	[msgNamBar+2], al
  1357 000008D3 88E3                    	mov	bl, ah
  1358 000008D5 88DA                    	mov	dl, bl
  1359 000008D7 80E30F                  	and	bl, 0Fh
  1360 000008DA 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1361 000008E0 A2[B0270000]            	mov	[msgNamBar+1], al
  1362 000008E5 88D3                    	mov	bl, dl
  1363 000008E7 C0EB04                  	shr	bl, 4
  1364 000008EA 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1365 000008F0 A2[AF270000]            	mov	[msgNamBar], al
  1366                                  
  1367                                  	;mov	ax, [ac97_NabmBar]
  1368 000008F5 66A1[98280000]          	mov	ax, [NABMBAR]	; 29/05/2024
  1369 000008FB 88C3                    	mov	bl, al
  1370 000008FD 88DA                    	mov	dl, bl
  1371 000008FF 80E30F                  	and	bl, 0Fh
  1372 00000902 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1373 00000908 A2[C2270000]            	mov	[msgNabmBar+3], al
  1374 0000090D 88D3                    	mov	bl, dl
  1375 0000090F C0EB04                  	shr	bl, 4
  1376 00000912 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1377 00000918 A2[C1270000]            	mov	[msgNabmBar+2], al
  1378 0000091D 88E3                    	mov	bl, ah
  1379 0000091F 88DA                    	mov	dl, bl
  1380 00000921 80E30F                  	and	bl, 0Fh
  1381 00000924 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1382 0000092A A2[C0270000]            	mov	[msgNabmBar+1], al
  1383 0000092F 88D3                    	mov	bl, dl
  1384 00000931 C0EB04                  	shr	bl, 4
  1385 00000934 8A83[29270000]          	mov	al, [ebx+hex_chars]
  1386 0000093A A2[BF270000]            	mov	[msgNabmBar], al
  1387                                  
  1388                                  	;xor	ah, ah
  1389 0000093F 31C0                    	xor	eax, eax ; 31/05/2024
  1390 00000941 A0[8C280000]            	mov	al, [ac97_int_ln_reg]
  1391 00000946 B10A                    	mov	cl, 10
  1392 00000948 F6F1                    	div	cl
  1393 0000094A 660105[CB270000]        	add	[msgIRQ], ax
  1394 00000951 20C0                    	and	al, al
  1395 00000953 750D                    	jnz	short _w_ac97imsg_
  1396 00000955 A0[CC270000]            	mov	al, [msgIRQ+1]
  1397 0000095A B420                    	mov	ah, ' '
  1398 0000095C 66A3[CB270000]          	mov	[msgIRQ], ax
  1399                                  _w_ac97imsg_:
  1400                                  	sys	_msg, msgAC97Info, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000962 BB[3A270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000967 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000096C BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000971 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000976 CD40                <1>  int 40h
  1401                                  
  1402 00000978 C3                              retn
  1403                                  
  1404                                  write_VRA_info:
  1405                                  	; 25/11/2023
  1406                                  	sys	_msg, msgVRAheader, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000979 BB[D0270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000097E B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000983 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000988 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 0000098D CD40                <1>  int 40h
  1407 0000098F 803D[1D280000]00        	cmp	byte [VRA], 0
  1408 00000996 7617                    	jna	short _w_VRAi_no
  1409                                  _w_VRAi_yes:
  1410                                  	sys	_msg, msgVRAyes, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000998 BB[DE270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000099D B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000009A2 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000009A7 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000009AC CD40                <1>  int 40h
  1411 000009AE C3                      	retn
  1412                                  _w_VRAi_no:
  1413                                  	sys	_msg, msgVRAno, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000009AF BB[E4270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000009B4 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000009B9 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000009BE B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000009C3 CD40                <1>  int 40h
  1414 000009C5 C3                      	retn
  1415                                  
  1416                                  ; 26/11/2023
  1417                                  ; 25/11/2023 - playwav6.s (32 bit registers, TRDOS 386 adaption)
  1418                                  ; 15/11/2023 - PLAYWAV5.COM, ich_wav5.asm
  1419                                  ; 14/11/2023
  1420                                  ; 13/11/2023 - Erdogan Tan - (VRA, sample rate conversion)
  1421                                  ; --------------------------------------------------------
  1422                                  
  1423                                  ;;Note:	At the end of every buffer load,
  1424                                  ;;	during buffer switch/swap, there will be discontinuity
  1425                                  ;;	between the last converted sample and the 1st sample
  1426                                  ;;	of the next buffer.
  1427                                  ;;	(like as a dot noises vaguely between normal sound samples)
  1428                                  ;;	-To avoid this defect, the 1st sample of
  1429                                  ;;	the next buffer may be read from the wav file but
  1430                                  ;;	the file pointer would need to be set to 1 sample back
  1431                                  ;;	again via seek system call. Time comsumption problem! -
  1432                                  ;;
  1433                                  ;;	Erdogan Tan - 15/11/2023
  1434                                  ;;
  1435                                  ;;	((If entire wav data would be loaded at once.. conversion
  1436                                  ;;	defect/noise would disappear.. but for DOS, to keep
  1437                                  ;;	64KB buffer limit is important also it is important
  1438                                  ;;	for running under 1MB barrier without HIMEM.SYS or DPMI.
  1439                                  ;;	I have tested this program by using 2-30MB wav files.))
  1440                                  ;;
  1441                                  ;;	Test Computer:	ASUS desktop/mainboard, M2N4-SLI, 2010.
  1442                                  ;;			AMD Athlon 64 X2 2200 MHZ CPU.
  1443                                  ;;		       	NFORCE4 (CK804) AC97 audio hardware.
  1444                                  ;;			Realtek ALC850 codec.
  1445                                  ;;		       	Retro DOS v4.2 (MSDOS 6.22) operating system.
  1446                                  
  1447                                  load_8khz_mono_8_bit:
  1448                                  	; 15/11/2023
  1449                                  	; 14/11/2023
  1450                                  	; 13/11/2023
  1451 000009C6 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1452                                  					; last of the file?
  1453 000009CD 7402                    	jz	short lff8m_0		; no
  1454 000009CF F9                      	stc
  1455 000009D0 C3                      	retn
  1456                                  
  1457                                  lff8m_0:
  1458 000009D1 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1459                                          ;mov	edx, [loadsize]
  1460                                  
  1461                                  	; esi = buffer address
  1462                                  	;; edx = buffer size
  1463                                  
  1464                                  	; load file into memory
  1465                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000009D6 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000009DC 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000009DE 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000009E4 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000009E9 CD40                <1>  int 40h
  1466 000009EB 7305                    	jnc	short lff8m_6
  1467 000009ED E9B0000000              	jmp	lff8m_5  ; error !
  1468                                  
  1469                                  lff8m_6:
  1470                                  	;mov	edi, audio_buffer
  1471                                  	; 29/05/2024
  1472 000009F2 8B3D[9A280000]          	mov	edi, [audio_buffer]
  1473 000009F8 21C0                    	and	eax, eax
  1474 000009FA 0F8499000000            	jz	lff8_eof
  1475                                  
  1476 00000A00 89C1                    	mov	ecx, eax		; byte count
  1477                                  lff8m_1:
  1478 00000A02 AC                      	lodsb
  1479 00000A03 A2[09200000]            	mov	[previous_val], al
  1480 00000A08 2C80                    	sub	al, 80h
  1481 00000A0A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1482 00000A0E 66AB                    	stosw		; original sample (left channel)
  1483 00000A10 66AB                    	stosw		; original sample (right channel)
  1484                                  	;xor	eax, eax
  1485 00000A12 B080                    	mov	al, 80h
  1486 00000A14 49                      	dec	ecx
  1487 00000A15 7402                    	jz	short lff8m_2
  1488 00000A17 8A06                    	mov	al, [esi]
  1489                                  lff8m_2:
  1490                                  	;mov	[next_val], ax
  1491 00000A19 88C7                    	mov	bh, al	; [next_val]
  1492 00000A1B 8A25[09200000]          	mov	ah, [previous_val]
  1493 00000A21 00E0                    	add	al, ah	; [previous_val]
  1494 00000A23 D0D8                    	rcr	al, 1
  1495 00000A25 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample
  1496 00000A27 00E0                    	add	al, ah	; [previous_val]
  1497 00000A29 D0D8                    	rcr	al, 1	
  1498 00000A2B 88C3                    	mov	bl, al 	; this is temporary interpolation value	
  1499 00000A2D 00E0                    	add	al, ah	; [previous_val]
  1500 00000A2F D0D8                    	rcr	al, 1
  1501 00000A31 2C80                    	sub	al, 80h
  1502 00000A33 66C1E008                	shl	ax, 8	
  1503 00000A37 66AB                    	stosw		; this is 1st interpolated sample (L)
  1504 00000A39 66AB                    	stosw		; this is 1st interpolated sample (R)
  1505 00000A3B 88D8                    	mov	al, bl
  1506 00000A3D 00D0                    	add	al, dl
  1507 00000A3F D0D8                    	rcr	al, 1
  1508 00000A41 2C80                    	sub	al, 80h
  1509 00000A43 66C1E008                	shl	ax, 8
  1510 00000A47 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1511 00000A49 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1512 00000A4B 88D0                    	mov	al, dl
  1513 00000A4D 2C80                    	sub	al, 80h
  1514 00000A4F 66C1E008                	shl	ax, 8
  1515 00000A53 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1516 00000A55 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1517                                  	;mov	al, [next_val]
  1518 00000A57 88F8                    	mov	al, bh
  1519 00000A59 00D0                    	add	al, dl
  1520 00000A5B D0D8                    	rcr	al, 1
  1521 00000A5D 88C3                    	mov	bl, al	; this is temporary interpolation value
  1522 00000A5F 00D0                    	add	al, dl
  1523 00000A61 D0D8                    	rcr	al, 1
  1524 00000A63 2C80                    	sub	al, 80h
  1525 00000A65 66C1E008                	shl	ax, 8
  1526 00000A69 66AB                    	stosw		; this is 4th interpolated sample (L)
  1527 00000A6B 66AB                    	stosw		; this is 4th interpolated sample (R)
  1528                                  	;mov	al, [next_val]
  1529 00000A6D 88F8                    	mov	al, bh
  1530 00000A6F 00D8                    	add	al, bl
  1531 00000A71 D0D8                    	rcr	al, 1
  1532 00000A73 2C80                    	sub	al, 80h
  1533 00000A75 66C1E008                	shl	ax, 8
  1534 00000A79 66AB                    	stosw		; this is 5th interpolated sample (L)
  1535 00000A7B 66AB                    	stosw		; this is 5th interpolated sample (R)
  1536                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1537 00000A7D 09C9                    	or	ecx, ecx
  1538 00000A7F 7581                    	jnz	short lff8m_1
  1539                                  
  1540                                  	; --------------
  1541                                  
  1542                                  lff8s_3:
  1543                                  lff8m_3:
  1544                                  lff8s2_3:
  1545                                  lff8m2_3:
  1546                                  lff16s_3:
  1547                                  lff16m_3:
  1548                                  lff16s2_3:
  1549                                  lff16m2_3:
  1550                                  lff24_3:
  1551                                  lff32_3:
  1552                                  lff44_3:
  1553                                  lff22_3:
  1554                                  lff11_3:
  1555                                  	; 08/12/2024 (BugFix)
  1556                                  	; 01/06/2024 (BugFix)
  1557 00000A81 8B0D[74030000]          	mov	ecx, [buffersize] ; 16 bit (48 kHZ, stereo) sample size
  1558                                  	;shl	ecx, 1	; byte count ; Bug !
  1559                                  	; 08/12/2024
  1560 00000A87 030D[9A280000]          	add	ecx, [audio_buffer]
  1561 00000A8D 29F9                    	sub	ecx, edi
  1562 00000A8F 7607                    	jna	short lff8m_4
  1563                                  	;inc	ecx
  1564 00000A91 C1E902                  	shr	ecx, 2
  1565 00000A94 31C0                    	xor	eax, eax ; fill (remain part of) buffer with zeros
  1566 00000A96 F3AB                    	rep	stosd
  1567                                  lff8m_4:
  1568                                  	; 01/06/2024 (BugFix)
  1569                                  	; cf=1 ; Bug !
  1570                                  	; 08/12/2024
  1571                                  	;clc
  1572 00000A98 C3                      	retn
  1573                                  
  1574                                  lff8_eof:
  1575                                  lff16_eof:
  1576                                  lff24_eof:
  1577                                  lff32_eof:
  1578                                  lff44_eof:
  1579                                  lff22_eof:
  1580                                  lff11_eof:
  1581                                  	; 15/11/2023
  1582 00000A99 C605[1C280000]01        	mov	byte [flags], ENDOFFILE
  1583 00000AA0 EBDF                    	jmp	short lff8m_3
  1584                                  
  1585                                  lff8s_5:
  1586                                  lff8m_5:
  1587                                  lff8s2_5:
  1588                                  lff8m2_5:
  1589                                  lff16s_5:
  1590                                  lff16m_5:
  1591                                  lff16s2_5:
  1592                                  lff16m2_5:
  1593                                  lff24_5:
  1594                                  lff32_5:
  1595                                  lff44_5:
  1596                                  lff22_5:
  1597                                  lff11_5:
  1598 00000AA2 B021                    	mov	al, '!'  ; error
  1599 00000AA4 E887FAFFFF              	call	tL0
  1600                                  	
  1601                                  	;jmp	short lff8m_3
  1602                                  	; 15/11/2023
  1603 00000AA9 EBEE                    	jmp	lff8_eof
  1604                                  
  1605                                  	; --------------
  1606                                  
  1607                                  load_8khz_stereo_8_bit:
  1608                                  	; 15/11/2023
  1609                                  	; 14/11/2023
  1610                                  	; 13/11/2023
  1611 00000AAB F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1612                                  					; last of the file?
  1613 00000AB2 7402                    	jz	short lff8s_0		; no
  1614 00000AB4 F9                      	stc
  1615 00000AB5 C3                      	retn
  1616                                  
  1617                                  lff8s_0:
  1618 00000AB6 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1619                                          ;mov	edx, [loadsize]
  1620                                  
  1621                                  	; esi = buffer address
  1622                                  	;; edx = buffer size
  1623                                  
  1624                                  	; load file into memory
  1625                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000ABB 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000AC1 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000AC3 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000AC9 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000ACE CD40                <1>  int 40h
  1626 00000AD0 72D0                    	jc	short lff8s_5 ; error !
  1627                                  
  1628                                  	;mov	edi, audio_buffer
  1629                                  	; 29/05/2024
  1630 00000AD2 8B3D[9A280000]          	mov	edi, [audio_buffer]
  1631                                  	
  1632 00000AD8 D1E8                    	shr	eax, 1
  1633 00000ADA 74BD                    	jz	short lff8_eof
  1634                                  
  1635 00000ADC 89C1                    	mov	ecx, eax	; word count
  1636                                  lff8s_1:
  1637 00000ADE AC                      	lodsb
  1638 00000ADF A2[09200000]            	mov	[previous_val_l], al
  1639 00000AE4 2C80                    	sub	al, 80h
  1640 00000AE6 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1641 00000AEA 66AB                    	stosw		; original sample (L)
  1642 00000AEC AC                      	lodsb
  1643 00000AED A2[0B200000]            	mov	[previous_val_r], al
  1644 00000AF2 2C80                    	sub	al, 80h
  1645 00000AF4 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1646 00000AF8 66AB                    	stosw		; original sample (R)
  1647                                  
  1648                                  	;xor	eax, eax
  1649 00000AFA 66B88080                	mov	ax, 8080h
  1650 00000AFE 49                      	dec	ecx
  1651 00000AFF 7403                    	jz	short lff8s_2
  1652                                  		; convert 8 bit sample to 16 bit sample
  1653 00000B01 668B06                  	mov	ax, [esi]
  1654                                  lff8s_2:
  1655 00000B04 A2[0D200000]            	mov	[next_val_l], al
  1656 00000B09 8825[0F200000]          	mov	[next_val_r], ah
  1657 00000B0F 8A25[09200000]          	mov	ah, [previous_val_l]
  1658 00000B15 00E0                    	add	al, ah
  1659 00000B17 D0D8                    	rcr	al, 1
  1660 00000B19 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample (L)
  1661 00000B1B 00E0                    	add	al, ah
  1662 00000B1D D0D8                    	rcr	al, 1	
  1663 00000B1F 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1664 00000B21 00E0                    	add	al, ah
  1665 00000B23 D0D8                    	rcr	al, 1
  1666 00000B25 2C80                    	sub	al, 80h
  1667 00000B27 66C1E008                	shl	ax, 8
  1668 00000B2B 66AB                    	stosw		; this is 1st interpolated sample (L)
  1669 00000B2D A0[0F200000]            	mov	al, [next_val_r]
  1670 00000B32 8A25[0B200000]          	mov	ah, [previous_val_r]
  1671 00000B38 00E0                    	add	al, ah
  1672 00000B3A D0D8                    	rcr	al, 1
  1673 00000B3C 88C6                    	mov	dh, al	; this is interpolated middle (3th) sample (R)
  1674 00000B3E 00E0                    	add	al, ah
  1675 00000B40 D0D8                    	rcr	al, 1
  1676 00000B42 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1677 00000B44 00E0                    	add	al, ah
  1678 00000B46 D0D8                    	rcr	al, 1
  1679 00000B48 2C80                    	sub	al, 80h
  1680 00000B4A 66C1E008                	shl	ax, 8
  1681 00000B4E 66AB                    	stosw		; this is 1st interpolated sample (R)
  1682 00000B50 88D8                    	mov	al, bl
  1683 00000B52 00D0                    	add	al, dl
  1684 00000B54 D0D8                    	rcr	al, 1
  1685 00000B56 2C80                    	sub	al, 80h
  1686 00000B58 66C1E008                	shl	ax, 8
  1687 00000B5C 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1688 00000B5E 88F8                    	mov	al, bh
  1689 00000B60 00F0                    	add	al, dh
  1690 00000B62 D0D8                    	rcr	al, 1
  1691 00000B64 2C80                    	sub	al, 80h
  1692 00000B66 66C1E008                	shl	ax, 8
  1693 00000B6A 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1694 00000B6C 88D0                    	mov	al, dl
  1695 00000B6E 2C80                    	sub	al, 80h
  1696 00000B70 66C1E008                	shl	ax, 8
  1697 00000B74 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1698 00000B76 88F0                    	mov	al, dh
  1699 00000B78 2C80                    	sub	al, 80h
  1700 00000B7A 66C1E008                	shl	ax, 8
  1701 00000B7E 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1702 00000B80 A0[0D200000]            	mov	al, [next_val_l]
  1703 00000B85 00D0                    	add	al, dl
  1704 00000B87 D0D8                    	rcr	al, 1
  1705 00000B89 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1706 00000B8B 00D0                    	add	al, dl
  1707 00000B8D D0D8                    	rcr	al, 1
  1708 00000B8F 2C80                    	sub	al, 80h
  1709 00000B91 66C1E008                	shl	ax, 8
  1710 00000B95 66AB                    	stosw		; this is 4th interpolated sample (L)
  1711 00000B97 A0[0F200000]            	mov	al, [next_val_r]
  1712 00000B9C 00F0                    	add	al, dh
  1713 00000B9E D0D8                    	rcr	al, 1
  1714 00000BA0 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1715 00000BA2 00F0                    	add	al, dh
  1716 00000BA4 D0D8                    	rcr	al, 1
  1717 00000BA6 2C80                    	sub	al, 80h
  1718 00000BA8 66C1E008                	shl	ax, 8
  1719 00000BAC 66AB                    	stosw		; this is 4th interpolated sample (R)
  1720 00000BAE A0[0D200000]            	mov	al, [next_val_l]
  1721 00000BB3 00D8                    	add	al, bl
  1722 00000BB5 D0D8                    	rcr	al, 1
  1723 00000BB7 2C80                    	sub	al, 80h
  1724 00000BB9 66C1E008                	shl	ax, 8
  1725 00000BBD 66AB                    	stosw		; this is 5th interpolated sample (L)
  1726 00000BBF A0[0F200000]            	mov	al, [next_val_r]
  1727 00000BC4 00F8                    	add	al, bh
  1728 00000BC6 D0D8                    	rcr	al, 1
  1729 00000BC8 2C80                    	sub	al, 80h
  1730 00000BCA 66C1E008                	shl	ax, 8
  1731 00000BCE 66AB                    	stosw		; this is 5th interpolated sample (R)
  1732                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1733 00000BD0 E305                    	jecxz	lff8s_6
  1734 00000BD2 E907FFFFFF              	jmp	lff8s_1
  1735                                  lff8s_6:
  1736 00000BD7 E9A5FEFFFF              	jmp	lff8s_3
  1737                                  
  1738                                  load_8khz_mono_16_bit:
  1739                                  	; 13/11/2023
  1740 00000BDC F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1741                                  					; last of the file?
  1742 00000BE3 7402                    	jz	short lff8m2_0		; no
  1743 00000BE5 F9                      	stc
  1744 00000BE6 C3                      	retn
  1745                                  
  1746                                  lff8m2_0:
  1747 00000BE7 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1748                                          ;mov	edx, [loadsize]
  1749                                  
  1750                                  	; esi = buffer address
  1751                                  	;; edx = buffer size
  1752                                  
  1753                                  	; load file into memory
  1754                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000BEC 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000BF2 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000BF4 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000BFA B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000BFF CD40                <1>  int 40h
  1755 00000C01 0F82A1000000            	jc	lff8m2_7 ; error !
  1756                                  
  1757                                  	;mov	edi, audio_buffer
  1758                                  	; 29/05/2024
  1759 00000C07 8B3D[9A280000]          	mov	edi, [audio_buffer]
  1760                                  	
  1761 00000C0D D1E8                    	shr	eax, 1
  1762 00000C0F 7505                    	jnz	short lff8m2_8
  1763 00000C11 E983FEFFFF              	jmp	lff8_eof
  1764                                  
  1765                                  lff8m2_8:
  1766 00000C16 89C1                    	mov	ecx, eax	; word count
  1767                                  lff8m2_1:
  1768 00000C18 66AD                    	lodsw
  1769 00000C1A 66AB                    	stosw		; original sample (left channel)
  1770 00000C1C 66AB                    	stosw		; original sample (right channel)
  1771 00000C1E 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1772 00000C21 66A3[09200000]          	mov	[previous_val], ax
  1773 00000C27 31C0                    	xor	eax, eax
  1774 00000C29 49                      	dec	ecx
  1775 00000C2A 7403                    	jz	short lff8m2_2
  1776 00000C2C 668B06                  	mov	ax, [esi]
  1777                                  lff8m2_2:
  1778 00000C2F 80C480                  	add	ah, 80h ; convert sound level to 0-65535 format
  1779 00000C32 89C5                    	mov	ebp, eax	; [next_val]
  1780 00000C34 660305[09200000]        	add	ax, [previous_val]
  1781 00000C3B 66D1D8                  	rcr	ax, 1
  1782 00000C3E 89C2                    	mov	edx, eax ; this is interpolated middle (3th) sample
  1783 00000C40 660305[09200000]        	add	ax, [previous_val]
  1784 00000C47 66D1D8                  	rcr	ax, 1	; this is temporary interpolation value
  1785 00000C4A 89C3                    	mov	ebx, eax 		
  1786 00000C4C 660305[09200000]        	add	ax, [previous_val]
  1787 00000C53 66D1D8                  	rcr	ax, 1
  1788 00000C56 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1789 00000C59 66AB                    	stosw		; this is 1st interpolated sample (L)
  1790 00000C5B 66AB                    	stosw		; this is 1st interpolated sample (R)
  1791 00000C5D 89D8                    	mov	eax, ebx
  1792 00000C5F 6601D0                  	add	ax, dx
  1793 00000C62 66D1D8                  	rcr	ax, 1
  1794 00000C65 80EC80                  	sub	ah, 80h
  1795 00000C68 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1796 00000C6A 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1797 00000C6C 89D0                    	mov	eax, edx
  1798 00000C6E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1799 00000C71 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1800 00000C73 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1801 00000C75 89E8                    	mov	eax, ebp
  1802 00000C77 6601D0                  	add	ax, dx
  1803 00000C7A 66D1D8                  	rcr	ax, 1
  1804 00000C7D 89C3                    	mov	ebx, eax ; this is temporary interpolation value
  1805 00000C7F 6601D0                  	add	ax, dx
  1806 00000C82 66D1D8                  	rcr	ax, 1
  1807 00000C85 80EC80                  	sub	ah, 80h
  1808 00000C88 66AB                    	stosw		; this is 4th interpolated sample (L)
  1809 00000C8A 66AB                    	stosw		; this is 4th interpolated sample (R)
  1810 00000C8C 89E8                    	mov	eax, ebp
  1811 00000C8E 6601D8                  	add	ax, bx
  1812 00000C91 66D1D8                  	rcr	ax, 1
  1813 00000C94 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1814 00000C97 66AB                    	stosw		; this is 5th interpolated sample (L)
  1815 00000C99 66AB                    	stosw		; this is 5th interpolated sample (R)
  1816                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1817 00000C9B 09C9                    	or	ecx, ecx
  1818 00000C9D 0F8575FFFFFF            	jnz	lff8m2_1
  1819 00000CA3 E9D9FDFFFF              	jmp	lff8m2_3
  1820                                  
  1821                                  lff8m2_7:
  1822                                  lff8s2_7:
  1823 00000CA8 E9F5FDFFFF              	jmp	lff8m2_5  ; error
  1824                                  
  1825                                  load_8khz_stereo_16_bit:
  1826                                  	; 16/11/2023
  1827                                  	; 15/11/2023
  1828                                  	; 13/11/2023
  1829 00000CAD F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1830                                  					; last of the file?
  1831 00000CB4 7402                    	jz	short lff8s2_0		; no
  1832 00000CB6 F9                      	stc
  1833 00000CB7 C3                      	retn
  1834                                  
  1835                                  lff8s2_0:
  1836 00000CB8 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1837                                          ;mov	edx, [loadsize]
  1838                                  
  1839                                  	; esi = buffer address
  1840                                  	;; edx = buffer size
  1841                                  
  1842                                  	; load file into memory
  1843                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000CBD 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000CC3 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000CC5 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000CCB B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000CD0 CD40                <1>  int 40h
  1844 00000CD2 72D4                    	jc	short lff8s2_7 ; error !
  1845                                  
  1846                                  	;mov	edi, audio_buffer
  1847                                  	; 29/05/2024
  1848 00000CD4 8B3D[9A280000]          	mov	edi, [audio_buffer]
  1849                                  	
  1850 00000CDA C1E802                  	shr	eax, 2
  1851 00000CDD 7505                    	jnz	short lff8s2_8
  1852 00000CDF E9B5FDFFFF              	jmp	lff8_eof
  1853                                  
  1854                                  lff8s2_8:
  1855 00000CE4 89C1                    	mov	ecx, eax ; dword count
  1856                                  lff8s2_1:
  1857 00000CE6 66AD                    	lodsw
  1858 00000CE8 66AB                    	stosw		; original sample (L)
  1859                                  	; 15/11/2023
  1860 00000CEA 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1861 00000CED 66A3[09200000]          	mov	[previous_val_l], ax
  1862 00000CF3 66AD                    	lodsw
  1863 00000CF5 66AB                    	stosw		; original sample (R)
  1864 00000CF7 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1865 00000CFA 66A3[0B200000]          	mov	[previous_val_r], ax
  1866 00000D00 31D2                    	xor	edx, edx
  1867 00000D02 31C0                    	xor	eax, eax
  1868                                  	; 16/11/2023
  1869 00000D04 49                      	dec	ecx
  1870 00000D05 7407                    	jz	short lff8s2_2
  1871 00000D07 668B06                  	mov	ax, [esi]
  1872 00000D0A 668B5602                	mov	dx, [esi+2]
  1873                                  lff8s2_2:
  1874 00000D0E 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1875 00000D11 66A3[0D200000]          	mov	[next_val_l], ax
  1876 00000D17 80C680                  	add	dh, 80h	; convert sound level to 0-65535 format
  1877 00000D1A 668915[0F200000]        	mov	[next_val_r], dx
  1878 00000D21 660305[09200000]        	add	ax, [previous_val_l]
  1879 00000D28 66D1D8                  	rcr	ax, 1
  1880 00000D2B 89C2                    	mov	edx, eax ; this is interpolated middle (3th) sample (L)
  1881 00000D2D 660305[09200000]        	add	ax, [previous_val_l]
  1882 00000D34 66D1D8                  	rcr	ax, 1	
  1883 00000D37 89C3                    	mov	ebx, eax ; this is temporary interpolation value (L)
  1884 00000D39 660305[09200000]        	add	ax, [previous_val_l]
  1885 00000D40 66D1D8                  	rcr	ax, 1
  1886 00000D43 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1887 00000D46 66AB                    	stosw		; this is 1st interpolated sample (L)
  1888 00000D48 66A1[0F200000]          	mov	ax, [next_val_r]
  1889 00000D4E 660305[0B200000]        	add	ax, [previous_val_r]
  1890 00000D55 66D1D8                  	rcr	ax, 1
  1891 00000D58 89C5                    	mov	ebp, eax ; this is interpolated middle (3th) sample (R)
  1892 00000D5A 660305[0B200000]        	add	ax, [previous_val_r]
  1893 00000D61 66D1D8                  	rcr	ax, 1
  1894 00000D64 50                      	push	eax ; *	; this is temporary interpolation value (R)
  1895 00000D65 660305[0B200000]        	add	ax, [previous_val_r]
  1896 00000D6C 66D1D8                  	rcr	ax, 1
  1897 00000D6F 80EC80                  	sub	ah, 80h
  1898 00000D72 66AB                    	stosw		; this is 1st interpolated sample (R)
  1899 00000D74 89D8                    	mov	eax, ebx
  1900 00000D76 6601D0                  	add	ax, dx
  1901 00000D79 66D1D8                  	rcr	ax, 1
  1902 00000D7C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1903 00000D7F 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1904 00000D81 58                      	pop	eax ; *
  1905 00000D82 6601E8                  	add	ax, bp
  1906 00000D85 66D1D8                  	rcr	ax, 1
  1907 00000D88 80EC80                  	sub	ah, 80h
  1908 00000D8B 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1909 00000D8D 89D0                    	mov	eax, edx
  1910 00000D8F 80EC80                  	sub	ah, 80h
  1911 00000D92 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1912 00000D94 89E8                    	mov	eax, ebp
  1913 00000D96 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1914 00000D99 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1915 00000D9B 66A1[0D200000]          	mov	ax, [next_val_l]
  1916 00000DA1 6601D0                  	add	ax, dx
  1917 00000DA4 66D1D8                  	rcr	ax, 1
  1918 00000DA7 89C3                    	mov	ebx, eax ; this is temporary interpolation value (L)
  1919 00000DA9 6601D0                  	add	ax, dx
  1920 00000DAC 66D1D8                  	rcr	ax, 1
  1921 00000DAF 80EC80                  	sub	ah, 80h
  1922 00000DB2 66AB                    	stosw		; this is 4th interpolated sample (L)
  1923 00000DB4 66A1[0F200000]          	mov	ax, [next_val_r]
  1924 00000DBA 6601E8                  	add	ax, bp
  1925 00000DBD 66D1D8                  	rcr	ax, 1
  1926 00000DC0 50                      	push	eax ; ** ; this is temporary interpolation value (R)
  1927 00000DC1 6601E8                  	add	ax, bp
  1928 00000DC4 66D1D8                  	rcr	ax, 1
  1929 00000DC7 80EC80                  	sub	ah, 80h
  1930 00000DCA 66AB                    	stosw		; this is 4th interpolated sample (R)
  1931 00000DCC 66A1[0D200000]          	mov	ax, [next_val_l]
  1932 00000DD2 6601D8                  	add	ax, bx
  1933 00000DD5 66D1D8                  	rcr	ax, 1
  1934 00000DD8 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1935 00000DDB 66AB                    	stosw		; this is 5th interpolated sample (L)
  1936 00000DDD 58                      	pop	eax ; **
  1937 00000DDE 660305[0F200000]        	add	ax, [next_val_r]
  1938 00000DE5 66D1D8                  	rcr	ax, 1
  1939 00000DE8 80EC80                  	sub	ah, 80h
  1940 00000DEB 66AB                    	stosw		; this is 5th interpolated sample (R)
  1941                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1942 00000DED E305                    	jecxz	lff8_s2_9
  1943 00000DEF E9F2FEFFFF              	jmp	lff8s2_1
  1944                                  lff8_s2_9:
  1945 00000DF4 E988FCFFFF              	jmp	lff8s2_3
  1946                                  
  1947                                  ; .....................
  1948                                  
  1949                                  load_16khz_mono_8_bit:
  1950                                  	; 14/11/2023
  1951                                  	; 13/11/2023
  1952 00000DF9 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1953                                  					; last of the file?
  1954 00000E00 7402                    	jz	short lff16m_0		; no
  1955 00000E02 F9                      	stc
  1956 00000E03 C3                      	retn
  1957                                  
  1958                                  lff16m_0:
  1959 00000E04 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1960                                          ;mov	edx, [loadsize]
  1961                                  
  1962                                  	; esi = buffer address
  1963                                  	;; edx = buffer size
  1964                                  
  1965                                  	; load file into memory
  1966                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000E09 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000E0F 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000E11 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000E17 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000E1C CD40                <1>  int 40h
  1967 00000E1E 7254                    	jc	short lff16m_7 ; error !
  1968                                  
  1969                                  	;mov	edi, audio_buffer
  1970                                  	; 29/05/2024
  1971 00000E20 8B3D[9A280000]          	mov	edi, [audio_buffer]
  1972                                  	
  1973 00000E26 21C0                    	and	eax, eax
  1974 00000E28 7505                    	jnz	short lff16m_8
  1975 00000E2A E96AFCFFFF              	jmp	lff16_eof
  1976                                  
  1977                                  lff16m_8:
  1978 00000E2F 89C1                    	mov	ecx, eax		; byte count
  1979                                  lff16m_1:
  1980 00000E31 AC                      	lodsb
  1981                                  	;mov	[previous_val], al
  1982 00000E32 88C3                    	mov	bl, al
  1983 00000E34 2C80                    	sub	al, 80h
  1984 00000E36 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1985 00000E3A 66AB                    	stosw		; original sample (left channel)
  1986 00000E3C 66AB                    	stosw		; original sample (right channel)
  1987                                  	;xor	ax, ax
  1988                                  	; 14/11/22023
  1989 00000E3E B080                    	mov	al, 80h
  1990 00000E40 49                      	dec	ecx
  1991 00000E41 7402                    	jz	short lff16m_2
  1992 00000E43 8A06                    	mov	al, [esi]
  1993                                  lff16m_2:
  1994                                  	;mov	[next_val], al
  1995 00000E45 88C7                    	mov	bh, al
  1996                                  	;add	al, [previous_val]
  1997 00000E47 00D8                    	add	al, bl
  1998 00000E49 D0D8                    	rcr	al, 1
  1999 00000E4B 88C2                    	mov	dl, al	; this is interpolated middle (temp) sample
  2000                                  	;add	al, [previous_val]
  2001 00000E4D 00D8                    	add	al, bl
  2002 00000E4F D0D8                    	rcr	al, 1
  2003 00000E51 2C80                    	sub	al, 80h
  2004 00000E53 66C1E008                	shl	ax, 8
  2005 00000E57 66AB                    	stosw		; this is 1st interpolated sample (L)
  2006 00000E59 66AB                    	stosw		; this is 1st interpolated sample (R)
  2007                                  	;mov	al, [next_val]
  2008 00000E5B 88F8                    	mov	al, bh
  2009 00000E5D 00D0                    	add	al, dl
  2010 00000E5F D0D8                    	rcr	al, 1
  2011 00000E61 2C80                    	sub	al, 80h
  2012 00000E63 66C1E008                	shl	ax, 8
  2013 00000E67 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2014 00000E69 66AB                    	stosw		; this is 2nd interpolated sample (R)
  2015                                  	
  2016                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2017 00000E6B 09C9                    	or	ecx, ecx
  2018 00000E6D 75C2                    	jnz	short lff16m_1
  2019 00000E6F E90DFCFFFF              	jmp	lff16m_3
  2020                                  
  2021                                  lff16m_7:
  2022                                  lff16s_7:
  2023 00000E74 E929FCFFFF              	jmp	lff16m_5  ; error
  2024                                  
  2025                                  load_16khz_stereo_8_bit:
  2026                                  	; 14/11/2023
  2027                                  	; 13/11/2023
  2028 00000E79 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2029                                  					; last of the file?
  2030 00000E80 7402                    	jz	short lff16s_0		; no
  2031 00000E82 F9                      	stc
  2032 00000E83 C3                      	retn
  2033                                  
  2034                                  lff16s_0:
  2035 00000E84 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2036                                          ;mov	edx, [loadsize]
  2037                                  
  2038                                  	; esi = buffer address
  2039                                  	;; edx = buffer size
  2040                                  
  2041                                  	; load file into memory
  2042                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000E89 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000E8F 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000E91 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000E97 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000E9C CD40                <1>  int 40h
  2043 00000E9E 72D4                    	jc	short lff16s_7 ; error !
  2044                                  
  2045                                  	;mov	edi, audio_buffer
  2046                                  	; 29/05/2024
  2047 00000EA0 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2048                                  	
  2049 00000EA6 D1E8                    	shr	eax, 1
  2050 00000EA8 7505                    	jnz	short lff16s_8
  2051 00000EAA E9EAFBFFFF              	jmp	lff16_eof
  2052                                  
  2053                                  lff16s_8:
  2054 00000EAF 89C1                    	mov	ecx, eax	; word count
  2055                                  lff16s_1:
  2056 00000EB1 AC                      	lodsb
  2057 00000EB2 A2[09200000]            	mov	[previous_val_l], al
  2058 00000EB7 2C80                    	sub	al, 80h
  2059 00000EB9 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2060 00000EBD 66AB                    	stosw		; original sample (L)
  2061 00000EBF AC                      	lodsb
  2062 00000EC0 A2[0B200000]            	mov	[previous_val_r], al
  2063 00000EC5 2C80                    	sub	al, 80h
  2064 00000EC7 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2065 00000ECB 66AB                    	stosw		; original sample (R)
  2066                                  
  2067                                  	;xor	eax, eax
  2068 00000ECD 66B88080                	mov	ax, 8080h
  2069 00000ED1 49                      	dec	ecx
  2070 00000ED2 7403                    	jz	short lff16s_2
  2071                                  		; convert 8 bit sample to 16 bit sample
  2072 00000ED4 668B06                  	mov	ax, [esi]
  2073                                  lff16s_2:
  2074                                  	;mov	[next_val_l], al
  2075                                  	;mov	[next_val_r], ah
  2076 00000ED7 89C3                    	mov	ebx, eax
  2077 00000ED9 0205[09200000]          	add	al, [previous_val_l]
  2078 00000EDF D0D8                    	rcr	al, 1
  2079 00000EE1 88C2                    	mov	dl, al	; this is temporary interpolation value (L)
  2080 00000EE3 0205[09200000]          	add	al, [previous_val_l]
  2081 00000EE9 D0D8                    	rcr	al, 1
  2082 00000EEB 2C80                    	sub	al, 80h
  2083 00000EED 66C1E008                	shl	ax, 8
  2084 00000EF1 66AB                    	stosw		; this is 1st interpolated sample (L)
  2085 00000EF3 88F8                    	mov	al, bh	; [next_val_r]
  2086 00000EF5 0205[0B200000]          	add	al, [previous_val_r]
  2087 00000EFB D0D8                    	rcr	al, 1
  2088 00000EFD 88C6                    	mov	dh, al	; this is temporary interpolation value (R)
  2089 00000EFF 0205[0B200000]          	add	al, [previous_val_r]
  2090 00000F05 D0D8                    	rcr	al, 1
  2091 00000F07 2C80                    	sub	al, 80h
  2092 00000F09 66C1E008                	shl	ax, 8
  2093 00000F0D 66AB                    	stosw		; this is 1st interpolated sample (R)
  2094 00000F0F 88D0                    	mov	al, dl
  2095 00000F11 00D8                    	add	al, bl	; [next_val_l]
  2096 00000F13 D0D8                    	rcr	al, 1
  2097 00000F15 2C80                    	sub	al, 80h
  2098 00000F17 66C1E008                	shl	ax, 8
  2099 00000F1B 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2100 00000F1D 88F0                    	mov	al, dh
  2101 00000F1F 00F8                    	add	al, bh	; [next_val_r]
  2102 00000F21 D0D8                    	rcr	al, 1
  2103 00000F23 2C80                    	sub	al, 80h
  2104 00000F25 66C1E008                	shl	ax, 8
  2105 00000F29 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  2106                                  	
  2107                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2108 00000F2B 09C9                    	or	ecx, ecx
  2109 00000F2D 7582                    	jnz	short lff16s_1
  2110 00000F2F E94DFBFFFF              	jmp	lff16s_3
  2111                                  
  2112                                  load_16khz_mono_16_bit:
  2113                                  	; 15/11/2023
  2114                                  	; 13/11/2023
  2115 00000F34 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2116                                  					; last of the file?
  2117 00000F3B 7402                    	jz	short lff16m2_0		; no
  2118 00000F3D F9                      	stc
  2119 00000F3E C3                      	retn
  2120                                  
  2121                                  lff16m2_0:
  2122 00000F3F BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2123                                          ;mov	edx, [loadsize]
  2124                                  
  2125                                  	; esi = buffer address
  2126                                  	;; edx = buffer size
  2127                                  
  2128                                  	; load file into memory
  2129                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000F44 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000F4A 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000F4C 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000F52 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000F57 CD40                <1>  int 40h
  2130 00000F59 7256                    	jc	short lff16m2_7 ; error !
  2131                                  
  2132                                  	;mov	edi, audio_buffer
  2133                                  	; 29/05/2024
  2134 00000F5B 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2135                                  	
  2136 00000F61 D1E8                    	shr	eax, 1
  2137 00000F63 7505                    	jnz	short lff16m2_8
  2138 00000F65 E92FFBFFFF              	jmp	lff16_eof
  2139                                  
  2140                                  lff16m2_8:
  2141 00000F6A 89C1                    	mov	ecx, eax  ; word count
  2142                                  lff16m2_1:
  2143 00000F6C 66AD                    	lodsw
  2144 00000F6E 66AB                    	stosw		; original sample (left channel)
  2145 00000F70 66AB                    	stosw		; original sample (right channel)
  2146 00000F72 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2147                                  	;mov	[previous_val], ax
  2148 00000F75 89C3                    	mov	ebx, eax	
  2149 00000F77 31C0                    	xor	eax, eax
  2150 00000F79 49                      	dec	ecx
  2151 00000F7A 7403                    	jz	short lff16m2_2
  2152 00000F7C 668B06                  	mov	ax, [esi]
  2153                                  lff16m2_2:
  2154 00000F7F 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2155 00000F82 89C5                    	mov	ebp, eax	; [next_val]
  2156                                  	;add	ax, [previous_val]
  2157 00000F84 6601D8                  	add	ax, bx
  2158 00000F87 66D1D8                  	rcr	ax, 1
  2159 00000F8A 89C2                    	mov	edx, eax ; this is temporary interpolation value
  2160                                  	;add	ax, [previous_val]
  2161 00000F8C 6601D8                  	add	ax, bx
  2162 00000F8F 66D1D8                  	rcr	ax, 1
  2163 00000F92 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2164 00000F95 66AB                    	stosw		; this is 1st interpolated sample (L)
  2165 00000F97 66AB                    	stosw		; this is 1st interpolated sample (R)
  2166 00000F99 89E8                    	mov	eax, ebp 
  2167 00000F9B 6601D0                  	add	ax, dx
  2168 00000F9E 66D1D8                  	rcr	ax, 1
  2169 00000FA1 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2170 00000FA4 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2171 00000FA6 66AB                    	stosw		; this is 2nd interpolated sample (R)
  2172                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2173 00000FA8 09C9                    	or	ecx, ecx
  2174 00000FAA 75C0                    	jnz	short lff16m2_1
  2175 00000FAC E9D0FAFFFF              	jmp	lff16m2_3
  2176                                  
  2177                                  lff16m2_7:
  2178                                  lff16s2_7:
  2179 00000FB1 E9ECFAFFFF              	jmp	lff16m2_5  ; error
  2180                                  
  2181                                  load_16khz_stereo_16_bit:
  2182                                  	; 16/11/2023
  2183                                  	; 15/11/2023
  2184                                  	; 13/11/2023
  2185 00000FB6 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2186                                  					; last of the file?
  2187 00000FBD 7402                    	jz	short lff16s2_0		; no
  2188 00000FBF F9                      	stc
  2189 00000FC0 C3                      	retn
  2190                                  
  2191                                  lff16s2_0:
  2192 00000FC1 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2193                                          ;mov	edx, [loadsize]
  2194                                  
  2195                                  	; esi = buffer address
  2196                                  	;; edx = buffer size
  2197                                  
  2198                                  	; load file into memory
  2199                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000FC6 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000FCC 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000FCE 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000FD4 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000FD9 CD40                <1>  int 40h
  2200 00000FDB 72D4                    	jc	short lff16s2_7 ; error !
  2201                                  
  2202                                  	;mov	edi, audio_buffer
  2203                                  	; 29/05/2024
  2204 00000FDD 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2205                                  	
  2206 00000FE3 C1E802                  	shr	eax, 2
  2207 00000FE6 7505                    	jnz	short lff16s2_8
  2208 00000FE8 E9ACFAFFFF              	jmp	lff16_eof
  2209                                  
  2210                                  lff16s2_8:
  2211 00000FED 89C1                    	mov	ecx, eax  ; dword count
  2212                                  lff16s2_1:
  2213 00000FEF 66AD                    	lodsw
  2214 00000FF1 66AB                    	stosw		; original sample (L)
  2215 00000FF3 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2216 00000FF6 66A3[09200000]          	mov	[previous_val_l], ax
  2217 00000FFC 66AD                    	lodsw
  2218 00000FFE 66AB                    	stosw		; original sample (R)
  2219 00001000 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2220 00001003 66A3[0B200000]          	mov	[previous_val_r], ax
  2221 00001009 31D2                    	xor	edx, edx
  2222 0000100B 31C0                    	xor	eax, eax
  2223                                  	; 16/11/2023
  2224 0000100D 49                      	dec	ecx
  2225 0000100E 7407                    	jz	short lff16s2_2
  2226 00001010 668B06                  	mov	ax, [esi]
  2227 00001013 668B5602                	mov	dx, [esi+2]
  2228                                  lff16s2_2:
  2229 00001017 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2230                                  	;mov	[next_val_l], ax
  2231 0000101A 89C5                    	mov	ebp, eax
  2232 0000101C 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2233 0000101F 668915[0F200000]        	mov	[next_val_r], dx
  2234 00001026 660305[09200000]        	add	ax, [previous_val_l]
  2235 0000102D 66D1D8                  	rcr	ax, 1
  2236 00001030 89C2                    	mov	edx, eax ; this is temporary interpolation value (L)
  2237 00001032 660305[09200000]        	add	ax, [previous_val_l]
  2238 00001039 66D1D8                  	rcr	ax, 1
  2239 0000103C 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2240 0000103F 66AB                    	stosw		; this is 1st interpolated sample (L)
  2241 00001041 66A1[0F200000]          	mov	ax, [next_val_r]
  2242 00001047 660305[0B200000]        	add	ax, [previous_val_r]
  2243 0000104E 66D1D8                  	rcr	ax, 1
  2244 00001051 89C3                    	mov	ebx, eax ; this is temporary interpolation value (R)
  2245 00001053 660305[0B200000]        	add	ax, [previous_val_r]
  2246 0000105A 66D1D8                  	rcr	ax, 1
  2247 0000105D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2248 00001060 66AB                    	stosw		; this is 1st interpolated sample (R)
  2249                                  	;mov	ax, [next_val_l]
  2250 00001062 89E8                    	mov	eax, ebp
  2251 00001064 6601D0                  	add	ax, dx
  2252 00001067 66D1D8                  	rcr	ax, 1
  2253 0000106A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2254 0000106D 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2255 0000106F 66A1[0F200000]          	mov	ax, [next_val_r]
  2256 00001075 6601D8                  	add	ax, bx
  2257 00001078 66D1D8                  	rcr	ax, 1
  2258 0000107B 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2259 0000107E 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  2260                                  	
  2261                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2262 00001080 09C9                    	or	ecx, ecx
  2263 00001082 0F8567FFFFFF            	jnz	lff16s2_1
  2264 00001088 E9F4F9FFFF              	jmp	lff16s2_3
  2265                                  
  2266                                  ; .....................
  2267                                  
  2268                                  load_24khz_mono_8_bit:
  2269                                  	; 15/11/2023
  2270 0000108D F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2271                                  					; last of the file?
  2272 00001094 7402                    	jz	short lff24m_0		; no
  2273 00001096 F9                      	stc
  2274 00001097 C3                      	retn
  2275                                  
  2276                                  lff24m_0:
  2277 00001098 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2278                                          ;mov	edx, [loadsize]
  2279                                  
  2280                                  	; esi = buffer address
  2281                                  	;; edx = buffer size
  2282                                  
  2283                                  	; load file into memory
  2284                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000109D 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000010A3 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000010A5 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000010AB B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000010B0 CD40                <1>  int 40h
  2285 000010B2 723C                    	jc	short lff24m_7 ; error !
  2286                                  
  2287                                  	;mov	edi, audio_buffer
  2288                                  	; 29/05/2024
  2289 000010B4 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2290                                  	
  2291 000010BA 21C0                    	and	eax, eax
  2292 000010BC 7505                    	jnz	short lff24m_8
  2293 000010BE E9D6F9FFFF              	jmp	lff24_eof
  2294                                  
  2295                                  lff24m_8:
  2296 000010C3 89C1                    	mov	ecx, eax	; byte count
  2297                                  lff24m_1:
  2298 000010C5 AC                      	lodsb
  2299                                  	;mov	[previous_val], al
  2300 000010C6 88C3                    	mov	bl, al
  2301 000010C8 2C80                    	sub	al, 80h
  2302 000010CA 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2303 000010CE 66AB                    	stosw		; original sample (left channel)
  2304 000010D0 66AB                    	stosw		; original sample (right channel)
  2305                                  	;xor	eax, eax
  2306 000010D2 B080                    	mov	al, 80h
  2307 000010D4 49                      	dec	ecx
  2308 000010D5 7402                    	jz	short lff24m_2
  2309 000010D7 8A06                    	mov	al, [esi]
  2310                                  lff24m_2:
  2311                                  	;;mov	[next_val], al
  2312                                  	;mov	bh, al
  2313                                  	;add	al, [previous_val]
  2314 000010D9 00D8                    	add	al, bl
  2315 000010DB D0D8                    	rcr	al, 1
  2316 000010DD 2C80                    	sub	al, 80h
  2317 000010DF 66C1E008                	shl	ax, 8
  2318 000010E3 66AB                    	stosw		; this is interpolated sample (L)
  2319 000010E5 66AB                    	stosw		; this is interpolated sample (R)
  2320                                  	
  2321                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2322 000010E7 09C9                    	or	ecx, ecx
  2323 000010E9 75DA                    	jnz	short lff24m_1
  2324 000010EB E991F9FFFF              	jmp	lff24_3
  2325                                  
  2326                                  lff24m_7:
  2327                                  lff24s_7:
  2328 000010F0 E9ADF9FFFF              	jmp	lff24_5  ; error
  2329                                  
  2330                                  load_24khz_stereo_8_bit:
  2331                                  	; 15/11/2023
  2332 000010F5 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2333                                  					; last of the file?
  2334 000010FC 7402                    	jz	short lff24s_0		; no
  2335 000010FE F9                      	stc
  2336 000010FF C3                      	retn
  2337                                  
  2338                                  lff24s_0:
  2339 00001100 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2340                                          ;mov	edx, [loadsize]
  2341                                  
  2342                                  	; esi = buffer address
  2343                                  	;; edx = buffer size
  2344                                  
  2345                                  	; load file into memory
  2346                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001105 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000110B 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000110D 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001113 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001118 CD40                <1>  int 40h
  2347 0000111A 72D4                    	jc	short lff24s_7 ; error !
  2348                                  
  2349                                  	;mov	edi, audio_buffer
  2350                                  	; 29/05/2024
  2351 0000111C 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2352                                  	
  2353 00001122 D1E8                    	shr	eax, 1
  2354 00001124 7505                    	jnz	short lff24s_8
  2355 00001126 E96EF9FFFF              	jmp	lff24_eof
  2356                                  
  2357                                  lff24s_8:
  2358 0000112B 89C1                    	mov	ecx, eax  ; word count
  2359                                  lff24s_1:
  2360 0000112D AC                      	lodsb
  2361 0000112E A2[09200000]            	mov	[previous_val_l], al
  2362 00001133 2C80                    	sub	al, 80h
  2363 00001135 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2364 00001139 66AB                    	stosw		; original sample (L)
  2365 0000113B AC                      	lodsb
  2366 0000113C A2[0B200000]            	mov	[previous_val_r], al
  2367 00001141 2C80                    	sub	al, 80h
  2368 00001143 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2369 00001147 66AB                    	stosw		; original sample (R)
  2370                                  
  2371                                  	;xor	eax, eax
  2372 00001149 66B88080                	mov	ax, 8080h
  2373 0000114D 49                      	dec	ecx
  2374 0000114E 7403                    	jz	short lff24s_2
  2375                                  		; convert 8 bit sample to 16 bit sample
  2376 00001150 668B06                  	mov	ax, [esi]
  2377                                  lff24s_2:
  2378                                  	;;mov	[next_val_l], al
  2379                                  	;;mov	[next_val_r], ah
  2380                                  	;mov	bx, ax
  2381 00001153 88E7                    	mov	bh, ah
  2382 00001155 0205[09200000]          	add	al, [previous_val_l]
  2383 0000115B D0D8                    	rcr	al, 1
  2384                                  	;mov	dl, al
  2385 0000115D 2C80                    	sub	al, 80h
  2386 0000115F 66C1E008                	shl	ax, 8
  2387 00001163 66AB                    	stosw		; this is interpolated sample (L)
  2388 00001165 88F8                    	mov	al, bh	; [next_val_r]
  2389 00001167 0205[0B200000]          	add	al, [previous_val_r]
  2390 0000116D D0D8                    	rcr	al, 1
  2391                                  	;mov	dh, al
  2392 0000116F 2C80                    	sub	al, 80h
  2393 00001171 66C1E008                	shl	ax, 8
  2394 00001175 66AB                    	stosw		; this is interpolated sample (R)
  2395                                  		
  2396                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2397 00001177 09C9                    	or	ecx, ecx
  2398 00001179 75B2                    	jnz	short lff24s_1
  2399 0000117B E901F9FFFF              	jmp	lff24_3
  2400                                  
  2401                                  load_24khz_mono_16_bit:
  2402                                  	; 15/11/2023
  2403 00001180 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2404                                  					; last of the file?
  2405 00001187 7402                    	jz	short lff24m2_0		; no
  2406 00001189 F9                      	stc
  2407 0000118A C3                      	retn
  2408                                  
  2409                                  lff24m2_0:
  2410 0000118B BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2411                                          ;mov	edx, [loadsize]
  2412                                  
  2413                                  	; esi = buffer address
  2414                                  	;; edx = buffer size
  2415                                  
  2416                                  	; load file into memory
  2417                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001190 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001196 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001198 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000119E B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000011A3 CD40                <1>  int 40h
  2418 000011A5 7238                    	jc	short lff24m2_7 ; error !
  2419                                  
  2420                                  	;mov	edi, audio_buffer
  2421                                  	; 29/05/2024
  2422 000011A7 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2423                                  	
  2424 000011AD D1E8                    	shr	eax, 1
  2425 000011AF 7505                    	jnz	short lff24m2_8
  2426 000011B1 E9E3F8FFFF              	jmp	lff24_eof
  2427                                  
  2428                                  lff24m2_8:
  2429 000011B6 89C1                    	mov	ecx, eax  ; word count
  2430                                  lff24m2_1:
  2431 000011B8 66AD                    	lodsw
  2432 000011BA 66AB                    	stosw		; original sample (left channel)
  2433 000011BC 66AB                    	stosw		; original sample (right channel)
  2434 000011BE 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2435                                  	;mov	[previous_val], ax
  2436                                  	;mov	ebx, eax	
  2437                                  	;xor	eax, eax
  2438 000011C1 31DB                    	xor	ebx, ebx
  2439 000011C3 49                      	dec	ecx
  2440 000011C4 7403                    	jz	short lff24m2_2
  2441                                  	;mov	ax, [esi]
  2442 000011C6 668B1E                  	mov	bx, [esi]
  2443                                  lff24m2_2:
  2444                                  	;add	ah, 80h ; convert sound level 0 to 65535 format
  2445                                  	;mov	ebp, eax	; [next_val]
  2446                                  	;add	ax, [previous_val]
  2447                                  	; ax = [previous_val]
  2448                                  	; bx = [next_val]
  2449 000011C9 6601D8                  	add	ax, bx
  2450 000011CC 66D1D8                  	rcr	ax, 1
  2451 000011CF 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2452 000011D2 66AB                    	stosw		; this is interpolated sample (L)
  2453 000011D4 66AB                    	stosw		; this is interpolated sample (R)
  2454                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2455 000011D6 09C9                    	or	ecx, ecx
  2456 000011D8 75DE                    	jnz	short lff24m2_1
  2457 000011DA E9A2F8FFFF              	jmp	lff24_3
  2458                                  
  2459                                  lff24m2_7:
  2460                                  lff24s2_7:
  2461 000011DF E9BEF8FFFF              	jmp	lff24_5  ; error
  2462                                  
  2463                                  load_24khz_stereo_16_bit:
  2464                                  	; 16/11/2023
  2465                                  	; 15/11/2023
  2466 000011E4 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2467                                  					; last of the file?
  2468 000011EB 7402                    	jz	short lff24s2_0		; no
  2469 000011ED F9                      	stc
  2470 000011EE C3                      	retn
  2471                                  
  2472                                  lff24s2_0:
  2473 000011EF BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2474                                          ;mov	edx, [loadsize]
  2475                                  
  2476                                  	; esi = buffer address
  2477                                  	;; edx = buffer size
  2478                                  
  2479                                  	; load file into memory
  2480                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000011F4 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000011FA 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000011FC 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001202 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001207 CD40                <1>  int 40h
  2481 00001209 72D4                    	jc	short lff24s2_7 ; error !
  2482                                  
  2483                                  	;mov	edi, audio_buffer
  2484                                  	; 29/05/2024
  2485 0000120B 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2486                                  	
  2487 00001211 C1E802                  	shr	eax, 2
  2488 00001214 7505                    	jnz	short lff24s2_8
  2489 00001216 E97EF8FFFF              	jmp	lff24_eof
  2490                                  
  2491                                  lff24s2_8:
  2492 0000121B 89C1                    	mov	ecx, eax  ; dword count
  2493                                  lff24s2_1:
  2494 0000121D 66AD                    	lodsw
  2495 0000121F 66AB                    	stosw		; original sample (L)
  2496 00001221 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2497 00001224 66A3[09200000]          	mov	[previous_val_l], ax
  2498 0000122A 66AD                    	lodsw
  2499 0000122C 66AB                    	stosw		; original sample (R)
  2500 0000122E 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2501                                  	;mov	[previous_val_r], ax
  2502 00001231 89C3                    	mov	ebx, eax
  2503 00001233 31D2                    	xor	edx, edx
  2504 00001235 31C0                    	xor	eax, eax
  2505                                  	; 16/11/2023
  2506 00001237 49                      	dec	ecx
  2507 00001238 7407                    	jz	short lff24s2_2
  2508 0000123A 668B06                  	mov	ax, [esi]
  2509 0000123D 668B5602                	mov	dx, [esi+2]
  2510                                  lff24s2_2:
  2511 00001241 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2512                                  	;;mov	[next_val_l], ax
  2513                                  	;mov	ebp, eax
  2514 00001244 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2515                                  	;mov	[next_val_r], dx
  2516 00001247 660305[09200000]        	add	ax, [previous_val_l]
  2517 0000124E 66D1D8                  	rcr	ax, 1
  2518 00001251 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2519 00001254 66AB                    	stosw		; this is interpolated sample (L)
  2520                                  	;mov	ax, [next_val_r]
  2521 00001256 89D0                    	mov	eax, edx
  2522                                  	;add	ax, [previous_val_r]
  2523 00001258 6601D8                  	add	ax, bx
  2524 0000125B 66D1D8                  	rcr	ax, 1
  2525 0000125E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2526 00001261 66AB                    	stosw		; this is interpolated sample (R)
  2527                                  	
  2528                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2529 00001263 09C9                    	or	ecx, ecx
  2530 00001265 75B6                    	jnz	short lff24s2_1
  2531 00001267 E915F8FFFF              	jmp	lff24_3
  2532                                  
  2533                                  ; .....................
  2534                                  
  2535                                  load_32khz_mono_8_bit:
  2536                                  	; 15/11/2023
  2537 0000126C F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2538                                  					; last of the file?
  2539 00001273 7402                    	jz	short lff32m_0		; no
  2540 00001275 F9                      	stc
  2541 00001276 C3                      	retn
  2542                                  
  2543                                  lff32m_0:
  2544 00001277 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2545                                          ;mov	edx, [loadsize]
  2546                                  
  2547                                  	; esi = buffer address
  2548                                  	;; edx = buffer size
  2549                                  
  2550                                  	; load file into memory
  2551                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000127C 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001282 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001284 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000128A B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000128F CD40                <1>  int 40h
  2552 00001291 7248                    	jc	short lff32m_7 ; error !
  2553                                  
  2554                                  	;mov	edi, audio_buffer
  2555                                  	; 29/05/2024
  2556 00001293 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2557                                  	
  2558 00001299 21C0                    	and	eax, eax
  2559 0000129B 7505                    	jnz	short lff32m_8
  2560 0000129D E9F7F7FFFF              	jmp	lff32_eof
  2561                                  
  2562                                  lff32m_8:
  2563 000012A2 89C1                    	mov	ecx, eax	; byte count
  2564                                  lff32m_1:
  2565 000012A4 AC                      	lodsb
  2566                                  	;mov	[previous_val], al
  2567 000012A5 88C3                    	mov	bl, al
  2568 000012A7 2C80                    	sub	al, 80h
  2569 000012A9 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2570 000012AD 66AB                    	stosw		; original sample (left channel)
  2571 000012AF 66AB                    	stosw		; original sample (right channel)
  2572                                  	;xor	eax, eax
  2573 000012B1 B080                    	mov	al, 80h
  2574 000012B3 49                      	dec	ecx
  2575 000012B4 7402                    	jz	short lff32m_2
  2576 000012B6 8A06                    	mov	al, [esi]
  2577                                  lff32m_2:
  2578                                  	;;mov	[next_val], al
  2579                                  	;mov	bh, al
  2580                                  	;add	al, [previous_val]
  2581 000012B8 00D8                    	add	al, bl
  2582 000012BA D0D8                    	rcr	al, 1
  2583 000012BC 2C80                    	sub	al, 80h
  2584 000012BE 66C1E008                	shl	ax, 8
  2585 000012C2 66AB                    	stosw		; this is interpolated sample (L)
  2586 000012C4 66AB                    	stosw		; this is interpolated sample (R)
  2587                                  	
  2588                                  	; different than 8-16-24 kHZ !
  2589                                  	; 'original-interpolated-original' trio samples 
  2590 000012C6 E30E                    	jecxz	lff32m_3
  2591                                  
  2592 000012C8 AC                      	lodsb
  2593 000012C9 2C80                    	sub	al, 80h
  2594 000012CB 66C1E008                	shl	ax, 8
  2595 000012CF 66AB                    	stosw		; original sample (left channel)
  2596 000012D1 66AB                    	stosw		; original sample (right channel)
  2597                                  
  2598                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2599 000012D3 49                      	dec	ecx
  2600 000012D4 75CE                    	jnz	short lff32m_1
  2601                                  lff32m_3:
  2602 000012D6 E9A6F7FFFF              	jmp	lff32_3
  2603                                  
  2604                                  lff32m_7:
  2605                                  lff32s_7:
  2606 000012DB E9C2F7FFFF              	jmp	lff32_5  ; error
  2607                                  
  2608                                  load_32khz_stereo_8_bit:
  2609                                  	; 15/11/2023
  2610 000012E0 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2611                                  					; last of the file?
  2612 000012E7 7402                    	jz	short lff32s_0		; no
  2613 000012E9 F9                      	stc
  2614 000012EA C3                      	retn
  2615                                  
  2616                                  lff32s_0:
  2617 000012EB BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2618                                          ;mov	edx, [loadsize]
  2619                                  
  2620                                  	; esi = buffer address
  2621                                  	;; edx = buffer size
  2622                                  
  2623                                  	; load file into memory
  2624                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000012F0 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000012F6 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000012F8 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000012FE B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001303 CD40                <1>  int 40h
  2625 00001305 72D4                    	jc	short lff32s_7 ; error !
  2626                                  
  2627                                  	;mov	edi, audio_buffer
  2628                                  	; 29/05/2024
  2629 00001307 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2630                                  	
  2631 0000130D D1E8                    	shr	eax, 1
  2632 0000130F 7505                    	jnz	short lff32s_8
  2633 00001311 E983F7FFFF              	jmp	lff32_eof
  2634                                  
  2635                                  lff32s_8:
  2636 00001316 89C1                    	mov	ecx, eax  ; word count
  2637                                  lff32s_1:
  2638 00001318 AC                      	lodsb
  2639 00001319 A2[09200000]            	mov	[previous_val_l], al
  2640 0000131E 2C80                    	sub	al, 80h
  2641 00001320 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2642 00001324 66AB                    	stosw		; original sample (L)
  2643 00001326 AC                      	lodsb
  2644 00001327 A2[0B200000]            	mov	[previous_val_r], al
  2645 0000132C 2C80                    	sub	al, 80h
  2646 0000132E 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2647 00001332 66AB                    	stosw		; original sample (R)
  2648                                  
  2649                                  	;xor	eax, eax
  2650 00001334 66B88080                	mov	ax, 8080h
  2651 00001338 49                      	dec	ecx
  2652 00001339 7403                    	jz	short lff32s_2
  2653                                  		; convert 8 bit sample to 16 bit sample
  2654 0000133B 668B06                  	mov	ax, [esi]
  2655                                  lff32s_2:
  2656                                  	;;mov	[next_val_l], al
  2657                                  	;;mov	[next_val_r], ah
  2658                                  	;mov	bx, ax
  2659 0000133E 88E7                    	mov	bh, ah
  2660 00001340 0205[09200000]          	add	al, [previous_val_l]
  2661 00001346 D0D8                    	rcr	al, 1
  2662                                  	;mov	dl, al
  2663 00001348 2C80                    	sub	al, 80h
  2664 0000134A 66C1E008                	shl	ax, 8
  2665 0000134E 66AB                    	stosw		; this is interpolated sample (L)
  2666 00001350 88F8                    	mov	al, bh	; [next_val_r]
  2667 00001352 0205[0B200000]          	add	al, [previous_val_r]
  2668 00001358 D0D8                    	rcr	al, 1
  2669                                  	;mov	dh, al
  2670 0000135A 2C80                    	sub	al, 80h
  2671 0000135C 66C1E008                	shl	ax, 8
  2672 00001360 66AB                    	stosw		; this is interpolated sample (R)
  2673                                  
  2674                                  	; different than 8-16-24 kHZ !
  2675                                  	; 'original-interpolated-original' trio samples 
  2676 00001362 E315                    	jecxz	lff32s_3
  2677                                  
  2678 00001364 AC                      	lodsb
  2679 00001365 2C80                    	sub	al, 80h
  2680 00001367 66C1E008                	shl	ax, 8
  2681 0000136B 66AB                    	stosw		; original sample (left channel)
  2682                                  
  2683 0000136D AC                      	lodsb
  2684 0000136E 2C80                    	sub	al, 80h
  2685 00001370 66C1E008                	shl	ax, 8
  2686 00001374 66AB                    	stosw		; original sample (right channel)
  2687                                  		
  2688                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2689 00001376 49                      	dec	ecx
  2690 00001377 759F                    	jnz	short lff32s_1
  2691                                  lff32s_3:
  2692 00001379 E903F7FFFF              	jmp	lff32_3
  2693                                  
  2694                                  load_32khz_mono_16_bit:
  2695                                  	; 15/11/2023
  2696 0000137E F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2697                                  					; last of the file?
  2698 00001385 7402                    	jz	short lff32m2_0		; no
  2699 00001387 F9                      	stc
  2700 00001388 C3                      	retn
  2701                                  
  2702                                  lff32m2_0:
  2703 00001389 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2704                                          ;mov	edx, [loadsize]
  2705                                  
  2706                                  	; esi = buffer address
  2707                                  	;; edx = buffer size
  2708                                  
  2709                                  	; load file into memory
  2710                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000138E 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001394 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001396 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000139C B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000013A1 CD40                <1>  int 40h
  2711 000013A3 723F                    	jc	short lff32m2_7 ; error !
  2712                                  
  2713                                  	;mov	edi, audio_buffer
  2714                                  	; 29/05/2024
  2715 000013A5 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2716                                  	
  2717 000013AB D1E8                    	shr	eax, 1
  2718 000013AD 7505                    	jnz	short lff32m2_8
  2719 000013AF E9E5F6FFFF              	jmp	lff32_eof
  2720                                  
  2721                                  lff32m2_8:
  2722 000013B4 89C1                    	mov	ecx, eax  ; word count
  2723                                  lff32m2_1:
  2724 000013B6 66AD                    	lodsw
  2725 000013B8 66AB                    	stosw		; original sample (left channel)
  2726 000013BA 66AB                    	stosw		; original sample (right channel)
  2727 000013BC 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2728                                  	;mov	[previous_val], ax
  2729                                  	;mov	ebx, eax	
  2730                                  	;xor	eax, eax
  2731 000013BF 31DB                    	xor	ebx, ebx
  2732 000013C1 49                      	dec	ecx
  2733 000013C2 7403                    	jz	short lff32m2_2
  2734                                  	;mov	ax, [esi]
  2735 000013C4 668B1E                  	mov	bx, [esi]
  2736                                  lff32m2_2:
  2737                                  	;add	ah, 80h ; convert sound level 0 to 65535 format
  2738                                  	;mov	ebp, eax	; [next_val]
  2739                                  	;add	ax, [previous_val]
  2740                                  	; ax = [previous_val]
  2741                                  	; bx = [next_val]
  2742 000013C7 6601D8                  	add	ax, bx
  2743 000013CA 66D1D8                  	rcr	ax, 1
  2744 000013CD 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2745 000013D0 66AB                    	stosw		; this is interpolated sample (L)
  2746 000013D2 66AB                    	stosw		; this is interpolated sample (R)
  2747                                  
  2748                                  	; different than 8-16-24 kHZ !
  2749                                  	; 'original-interpolated-original' trio samples 
  2750 000013D4 E309                    	jecxz	lff32m2_3
  2751                                  
  2752 000013D6 66AD                    	lodsw
  2753 000013D8 66AB                    	stosw		; original sample (left channel)
  2754 000013DA 66AB                    	stosw		; original sample (right channel)
  2755                                  
  2756                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2757 000013DC 49                      	dec	ecx
  2758 000013DD 75D7                    	jnz	short lff32m2_1
  2759                                  lff32m2_3:
  2760 000013DF E99DF6FFFF              	jmp	lff32_3
  2761                                  
  2762                                  lff32m2_7:
  2763                                  lff32s2_7:
  2764 000013E4 E9B9F6FFFF              	jmp	lff32_5  ; error
  2765                                  
  2766                                  load_32khz_stereo_16_bit:
  2767                                  	; 16/11/2023
  2768                                  	; 15/11/2023
  2769 000013E9 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2770                                  					; last of the file?
  2771 000013F0 7402                    	jz	short lff32s2_0		; no
  2772 000013F2 F9                      	stc
  2773 000013F3 C3                      	retn
  2774                                  
  2775                                  lff32s2_0:
  2776 000013F4 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2777                                          ;mov	edx, [loadsize]
  2778                                  
  2779                                  	; esi = buffer address
  2780                                  	;; edx = buffer size
  2781                                  
  2782                                  	; load file into memory
  2783                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000013F9 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000013FF 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001401 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001407 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000140C CD40                <1>  int 40h
  2784 0000140E 72D4                    	jc	short lff32s2_7 ; error !
  2785                                  
  2786                                  	;mov	edi, audio_buffer
  2787                                  	; 29/05/2024
  2788 00001410 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2789                                  	
  2790 00001416 C1E802                  	shr	eax, 2
  2791 00001419 7505                    	jnz	short lff32s2_8
  2792 0000141B E979F6FFFF              	jmp	lff32_eof
  2793                                  
  2794                                  lff32s2_8:
  2795 00001420 89C1                    	mov	ecx, eax ; dword count
  2796                                  lff32s2_1:
  2797 00001422 66AD                    	lodsw
  2798 00001424 66AB                    	stosw		; original sample (L)
  2799 00001426 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2800 00001429 66A3[09200000]          	mov	[previous_val_l], ax
  2801 0000142F 66AD                    	lodsw
  2802 00001431 66AB                    	stosw		; original sample (R)
  2803 00001433 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2804                                  	;mov	[previous_val_r], ax
  2805 00001436 89C3                    	mov	ebx, eax
  2806 00001438 31D2                    	xor	edx, edx
  2807 0000143A 31C0                    	xor	eax, eax
  2808                                  	; 16/11/2023
  2809 0000143C 49                      	dec	ecx
  2810 0000143D 7407                    	jz	short lff32s2_2
  2811 0000143F 668B06                  	mov	ax, [esi]
  2812 00001442 668B5602                	mov	dx, [esi+2]
  2813                                  lff32s2_2:
  2814 00001446 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2815                                  	;;mov	[next_val_l], ax
  2816                                  	;mov	ebp, eax
  2817 00001449 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2818                                  	;mov	[next_val_r], dx
  2819 0000144C 660305[09200000]        	add	ax, [previous_val_l]
  2820 00001453 66D1D8                  	rcr	ax, 1
  2821 00001456 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2822 00001459 66AB                    	stosw		; this is interpolated sample (L)
  2823                                  	;mov	ax, [next_val_r]
  2824 0000145B 89D0                    	mov	eax, edx
  2825                                  	;add	ax, [previous_val_r]
  2826 0000145D 6601D8                  	add	ax, bx
  2827 00001460 66D1D8                  	rcr	ax, 1
  2828 00001463 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2829 00001466 66AB                    	stosw		; this is interpolated sample (R)
  2830                                  
  2831                                  	; different than 8-16-24 kHZ !
  2832                                  	; 'original-interpolated-original' trio samples 
  2833 00001468 E30B                    	jecxz	lff32s2_3
  2834                                  
  2835 0000146A 66AD                    	lodsw
  2836 0000146C 66AB                    	stosw	; original sample (L)
  2837 0000146E 66AD                    	lodsw
  2838 00001470 66AB                    	stosw	; original sample (R)
  2839                                  	
  2840                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2841 00001472 49                      	dec	ecx
  2842 00001473 75AD                    	jnz	short lff32s2_1
  2843                                  lff32s2_3:
  2844 00001475 E907F6FFFF              	jmp	lff32_3
  2845                                  
  2846                                  ; .....................
  2847                                  
  2848                                  load_22khz_mono_8_bit:
  2849                                  	; 16/11/2023
  2850 0000147A F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2851                                  					; last of the file?
  2852 00001481 7402                    	jz	short lff22m_0		; no
  2853 00001483 F9                      	stc
  2854 00001484 C3                      	retn
  2855                                  
  2856                                  lff22m_0:
  2857 00001485 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2858                                          ;mov	edx, [loadsize]
  2859                                  
  2860                                  	; esi = buffer address
  2861                                  	;; edx = buffer size
  2862                                  
  2863                                  	; load file into memory
  2864                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000148A 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001490 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001492 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001498 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000149D CD40                <1>  int 40h
  2865 0000149F 725E                    	jc	short lff22m_7 ; error !
  2866                                  
  2867                                  	;mov	edi, audio_buffer
  2868                                  	; 29/05/2024
  2869 000014A1 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2870                                  	
  2871 000014A7 21C0                    	and	eax, eax
  2872 000014A9 7505                    	jnz	short lff22m_8
  2873 000014AB E9E9F5FFFF              	jmp	lff22_eof
  2874                                  
  2875                                  lff22m_8:
  2876 000014B0 89C1                    	mov	ecx, eax	; byte count
  2877                                  lff22m_9:
  2878 000014B2 BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2879 000014B7 C605[11200000]03        	mov	byte [faz], 3  ; 3 steps/phases
  2880                                  lff22m_1:
  2881                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2882 000014BE AC                      	lodsb
  2883 000014BF B280                    	mov	dl, 80h
  2884 000014C1 49                      	dec	ecx
  2885 000014C2 7402                    	jz	short lff22m_2_1
  2886 000014C4 8A16                    	mov	dl, [esi]
  2887                                  lff22m_2_1:	
  2888                                  	; al = [previous_val]
  2889                                  	; dl = [next_val]
  2890 000014C6 E8FA050000              	call	interpolating_3_8bit_mono ; 1 of 17
  2891 000014CB E32D                    	jecxz	lff22m_3
  2892                                  lff22m_2_2:
  2893 000014CD AC                      	lodsb
  2894 000014CE B280                    	mov	dl, 80h
  2895 000014D0 49                      	dec	ecx
  2896 000014D1 7402                    	jz	short lff22m_2_3
  2897 000014D3 8A16                    	mov	dl, [esi]
  2898                                  lff22m_2_3:
  2899 000014D5 E86F060000               	call	interpolating_2_8bit_mono ; 2 of 17 .. 6 of 17
  2900 000014DA E31E                    	jecxz	lff22m_3
  2901 000014DC 4D                      	dec	ebp
  2902 000014DD 75EE                    	jnz	short lff22m_2_2
  2903                                  
  2904 000014DF A0[11200000]            	mov	al, [faz]
  2905 000014E4 FEC8                    	dec	al
  2906 000014E6 74CA                    	jz	short lff22m_9
  2907 000014E8 FE0D[11200000]          	dec	byte [faz]
  2908 000014EE BD04000000              	mov	ebp, 4
  2909 000014F3 FEC8                    	dec	al
  2910 000014F5 75C7                    	jnz	short lff22m_1 ; 3:2:2:2:2 ; 7-11 of 17
  2911 000014F7 45                      	inc	ebp ; 5
  2912 000014F8 EBC4                    	jmp	short lff22m_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2913                                  
  2914                                  lff22m_3:
  2915                                  lff22s_3:
  2916 000014FA E982F5FFFF              	jmp	lff22_3	; padfill
  2917                                  		; (put zeros in the remain words of the buffer)
  2918                                  lff22m_7:
  2919                                  lff22s_7:
  2920 000014FF E99EF5FFFF              	jmp	lff22_5  ; error
  2921                                  
  2922                                  load_22khz_stereo_8_bit:
  2923                                  	; 16/11/2023
  2924 00001504 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2925                                  					; last of the file?
  2926 0000150B 7402                    	jz	short lff22s_0		; no
  2927 0000150D F9                      	stc
  2928 0000150E C3                      	retn
  2929                                  
  2930                                  lff22s_0:
  2931 0000150F BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2932                                          ;mov	edx, [loadsize]
  2933                                  
  2934                                  	; esi = buffer address
  2935                                  	;; edx = buffer size
  2936                                  
  2937                                  	; load file into memory
  2938                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001514 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000151A 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000151C 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001522 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001527 CD40                <1>  int 40h
  2939 00001529 72D4                    	jc	short lff22s_7 ; error !
  2940                                  
  2941                                  	;mov	edi, audio_buffer
  2942                                  	; 29/05/2024
  2943 0000152B 8B3D[9A280000]          	mov	edi, [audio_buffer]
  2944                                  	
  2945 00001531 D1E8                    	shr	eax, 1
  2946 00001533 7505                    	jnz	short lff22s_8
  2947 00001535 E95FF5FFFF              	jmp	lff22_eof
  2948                                  
  2949                                  lff22s_8:
  2950 0000153A 89C1                    	mov	ecx, eax	; word count
  2951                                  lff22s_9:
  2952 0000153C BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2953 00001541 C605[11200000]03        	mov	byte [faz], 3  ; 3 steps/phase
  2954                                  lff22s_1:
  2955                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2956 00001548 66AD                    	lodsw
  2957 0000154A 66BA8080                	mov	dx, 8080h
  2958 0000154E 49                      	dec	ecx
  2959 0000154F 7403                    	jz	short lff22s_2_1 
  2960 00001551 668B16                  	mov	dx, [esi]
  2961                                  lff22s_2_1:	
  2962                                  	; al = [previous_val_l]
  2963                                  	; ah = [previous_val_r]
  2964                                  	; dl = [next_val_l]
  2965                                  	; dh = [next_val_r]	
  2966 00001554 E89D050000              	call	interpolating_3_8bit_stereo ; 1 of 17 
  2967 00001559 E39F                    	jecxz	lff22s_3
  2968                                  lff22s_2_2:
  2969 0000155B 66AD                    	lodsw
  2970 0000155D 66BA8080                	mov	dx, 8080h
  2971 00001561 49                      	dec	ecx
  2972 00001562 7403                    	jz	short lff22s_2_3
  2973 00001564 668B16                  	mov	dx, [esi]
  2974                                  lff22s_2_3:
  2975 00001567 E8FA050000               	call	interpolating_2_8bit_stereo ; 2 of 17 .. 6 of 17
  2976 0000156C E38C                    	jecxz	lff22s_3
  2977 0000156E 4D                      	dec	ebp
  2978 0000156F 75EA                    	jnz	short lff22s_2_2
  2979                                  
  2980 00001571 A0[11200000]            	mov	al, [faz]
  2981 00001576 FEC8                    	dec	al
  2982 00001578 74C2                    	jz	short lff22s_9
  2983 0000157A FE0D[11200000]          	dec	byte [faz]
  2984 00001580 BD04000000              	mov	ebp, 4
  2985 00001585 FEC8                    	dec	al
  2986 00001587 75BF                    	jnz	short lff22s_1 ; 3:2:2:2:2 ; 7-11 of 17
  2987 00001589 45                      	inc	ebp ; 5
  2988 0000158A EBBC                    	jmp	short lff22s_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2989                                  
  2990                                  load_22khz_mono_16_bit:
  2991                                  	; 16/11/2023
  2992 0000158C F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2993                                  					; last of the file?
  2994 00001593 7402                    	jz	short lff22m2_0		; no
  2995 00001595 F9                      	stc
  2996 00001596 C3                      	retn
  2997                                  
  2998                                  lff22m2_0:
  2999 00001597 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3000                                          ;mov	edx, [loadsize]
  3001                                  
  3002                                  	; esi = buffer address
  3003                                  	;; edx = buffer size
  3004                                  
  3005                                  	; load file into memory
  3006                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000159C 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000015A2 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000015A4 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000015AA B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000015AF CD40                <1>  int 40h
  3007 000015B1 7262                    	jc	short lff22m2_7 ; error !
  3008                                  
  3009                                  	;mov	edi, audio_buffer
  3010                                  	; 29/05/2024
  3011 000015B3 8B3D[9A280000]          	mov	edi, [audio_buffer]
  3012                                  	
  3013 000015B9 D1E8                    	shr	eax, 1
  3014 000015BB 7505                    	jnz	short lff22m2_8
  3015 000015BD E9D7F4FFFF              	jmp	lff22_eof
  3016                                  
  3017                                  lff22m2_8:
  3018 000015C2 89C1                    	mov	ecx, eax	; word count
  3019                                  lff22m2_9:
  3020 000015C4 BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  3021 000015C9 C605[11200000]03        	mov	byte [faz], 3  ; 3 steps/phases
  3022                                  lff22m2_1:
  3023                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  3024 000015D0 66AD                    	lodsw
  3025 000015D2 31D2                    	xor	edx, edx
  3026 000015D4 49                      	dec	ecx
  3027 000015D5 7403                    	jz	short lff22m2_2_1
  3028 000015D7 668B16                  	mov	dx, [esi]
  3029                                  lff22m2_2_1:	
  3030                                  	; ax = [previous_val]
  3031                                  	; dx = [next_val]
  3032 000015DA E8B8050000              	call	interpolating_3_16bit_mono ; 1 of 17
  3033 000015DF E32F                    	jecxz	lff22m2_3
  3034                                  lff22m2_2_2:
  3035 000015E1 66AD                    	lodsw
  3036 000015E3 31D2                    	xor	edx, edx
  3037 000015E5 49                      	dec	ecx
  3038 000015E6 7403                    	jz	short lff22m2_2_3
  3039 000015E8 668B16                  	mov	dx, [esi]
  3040                                  lff22m2_2_3:
  3041 000015EB E83A060000               	call	interpolating_2_16bit_mono ; 2 of 17 .. 6 of 17
  3042 000015F0 E31E                    	jecxz	lff22m2_3
  3043 000015F2 4D                      	dec	ebp
  3044 000015F3 75EC                    	jnz	short lff22m2_2_2
  3045                                  
  3046 000015F5 A0[11200000]            	mov	al, [faz]
  3047 000015FA FEC8                    	dec	al
  3048 000015FC 74C6                    	jz	short lff22m2_9
  3049 000015FE FE0D[11200000]          	dec	byte [faz]
  3050 00001604 BD04000000              	mov	ebp, 4
  3051 00001609 FEC8                    	dec	al
  3052 0000160B 75C3                    	jnz	short lff22m2_1 ; 3:2:2:2:2 ; 7-11 of 17
  3053 0000160D 45                      	inc	ebp ; 5
  3054 0000160E EBC0                    	jmp	short lff22m2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  3055                                  
  3056                                  lff22m2_3:
  3057                                  lff22s2_3:
  3058 00001610 E96CF4FFFF              	jmp	lff22_3	; padfill
  3059                                  		; (put zeros in the remain words of the buffer)
  3060                                  lff22m2_7:
  3061                                  lff22s2_7:
  3062 00001615 E988F4FFFF              	jmp	lff22_5  ; error
  3063                                  
  3064                                  load_22khz_stereo_16_bit:
  3065                                  	; 16/11/2023
  3066 0000161A F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3067                                  					; last of the file?
  3068 00001621 7402                    	jz	short lff22s2_0		; no
  3069 00001623 F9                      	stc
  3070 00001624 C3                      	retn
  3071                                  
  3072                                  lff22s2_0:
  3073 00001625 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3074                                          ;mov	edx, [loadsize]
  3075                                  
  3076                                  	; esi = buffer address
  3077                                  	;; edx = buffer size
  3078                                  
  3079                                  	; load file into memory
  3080                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000162A 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001630 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001632 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001638 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000163D CD40                <1>  int 40h
  3081 0000163F 72D4                    	jc	short lff22s2_7 ; error !
  3082                                  
  3083                                  	;mov	edi, audio_buffer
  3084                                  	; 29/05/2024
  3085 00001641 8B3D[9A280000]          	mov	edi, [audio_buffer]
  3086                                  	
  3087 00001647 C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3088 0000164A 7505                    	jnz	short lff22s2_8
  3089 0000164C E948F4FFFF              	jmp	lff22_eof
  3090                                  
  3091                                  lff22s2_8:
  3092 00001651 89C1                    	mov	ecx, eax	; dword count
  3093                                  lff22s2_9:
  3094 00001653 BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  3095 00001658 C605[11200000]03        	mov	byte [faz], 3  ; 3 steps/phase
  3096                                  lff22s2_1:
  3097                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  3098 0000165F 66AD                    	lodsw
  3099 00001661 89C3                    	mov	ebx, eax
  3100 00001663 66AD                    	lodsw
  3101 00001665 8B16                    	mov	edx, [esi]
  3102 00001667 668915[0D200000]        	mov	[next_val_l], dx
  3103                                  	; 26/11/2023
  3104 0000166E C1EA10                  	shr	edx, 16
  3105 00001671 49                      	dec	ecx
  3106 00001672 7509                    	jnz	short lff22s2_2_1
  3107 00001674 31D2                    	xor	edx, edx ; 0
  3108 00001676 668915[0D200000]        	mov	[next_val_l], dx
  3109                                  lff22s2_2_1:
  3110                                  	; bx = [previous_val_l]
  3111                                  	; ax = [previous_val_r]
  3112                                  	; [next_val_l]
  3113                                  	; dx = [next_val_r]
  3114 0000167D E845050000              	call	interpolating_3_16bit_stereo ; 1 of 17 
  3115 00001682 E38C                    	jecxz	lff22s2_3
  3116                                  lff22s2_2_2:
  3117 00001684 66AD                    	lodsw
  3118 00001686 89C3                    	mov	ebx, eax
  3119 00001688 66AD                    	lodsw
  3120 0000168A 8B16                    	mov	edx, [esi]
  3121 0000168C 668915[0D200000]        	mov	[next_val_l], dx
  3122                                  	; 26/11/2023
  3123 00001693 C1EA10                  	shr	edx, 16
  3124 00001696 49                      	dec	ecx
  3125 00001697 7509                    	jnz	short lff22s2_2_3
  3126 00001699 31D2                    	xor	edx, edx ; 0
  3127 0000169B 668915[0D200000]        	mov	[next_val_l], dx
  3128                                  lff22s2_2_3:
  3129 000016A2 E89B050000               	call	interpolating_2_16bit_stereo ; 2 of 17 .. 6 of 17
  3130 000016A7 E31E                    	jecxz	lff22s2_2_4
  3131                                  
  3132 000016A9 4D                      	dec	ebp
  3133 000016AA 75D8                    	jnz	short lff22s2_2_2
  3134                                  
  3135 000016AC A0[11200000]            	mov	al, [faz]
  3136 000016B1 FEC8                    	dec	al
  3137 000016B3 749E                    	jz	short lff22s2_9
  3138 000016B5 FE0D[11200000]          	dec	byte [faz]
  3139 000016BB BD04000000              	mov	ebp, 4
  3140 000016C0 FEC8                    	dec	al
  3141 000016C2 759B                    	jnz	short lff22s2_1 ; 3:2:2:2:2 ; 7-11 of 17
  3142 000016C4 45                      	inc	ebp ; 5
  3143 000016C5 EB98                    	jmp	short lff22s2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  3144                                  
  3145                                  lff22s2_2_4:
  3146                                  	; 26/11/2023
  3147 000016C7 E9B5F3FFFF              	jmp	lff22_3	; padfill
  3148                                  
  3149                                  ; .....................
  3150                                  
  3151                                  load_11khz_mono_8_bit:
  3152                                  	; 18/11/2023
  3153 000016CC F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3154                                  					; last of the file?
  3155 000016D3 7402                    	jz	short lff11m_0		; no
  3156 000016D5 F9                      	stc
  3157 000016D6 C3                      	retn
  3158                                  
  3159                                  lff11m_0:
  3160 000016D7 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3161                                          ;mov	edx, [loadsize]
  3162                                  
  3163                                  	; esi = buffer address
  3164                                  	;; edx = buffer size
  3165                                  
  3166                                  	; load file into memory
  3167                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000016DC 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000016E2 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000016E4 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000016EA B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000016EF CD40                <1>  int 40h
  3168 000016F1 7248                    	jc	short lff11m_7 ; error !
  3169                                  
  3170                                  	;mov	edi, audio_buffer
  3171                                  	; 29/05/2024
  3172 000016F3 8B3D[9A280000]          	mov	edi, [audio_buffer]
  3173                                  	
  3174 000016F9 21C0                    	and	eax, eax
  3175 000016FB 7505                    	jnz	short lff11m_8
  3176 000016FD E997F3FFFF              	jmp	lff11_eof
  3177                                  
  3178                                  lff11m_8:
  3179 00001702 89C1                    	mov	ecx, eax		; byte count
  3180                                  lff11m_9:
  3181 00001704 BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3182                                  lff11m_1:
  3183                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3184 00001709 AC                      	lodsb
  3185 0000170A B280                    	mov	dl, 80h
  3186 0000170C 49                      	dec	ecx
  3187 0000170D 7402                    	jz	short lff11m_2_1
  3188 0000170F 8A16                    	mov	dl, [esi]
  3189                                  lff11m_2_1:	
  3190                                  	; al = [previous_val]
  3191                                  	; dl = [next_val]
  3192 00001711 E85B050000              	call	interpolating_5_8bit_mono
  3193 00001716 E328                    	jecxz	lff11m_3
  3194                                  lff11m_2_2:
  3195 00001718 AC                      	lodsb
  3196 00001719 B280                    	mov	dl, 80h
  3197 0000171B 49                      	dec	ecx
  3198 0000171C 7402                    	jz	short lff11m_2_3
  3199 0000171E 8A16                    	mov	dl, [esi]
  3200                                  lff11m_2_3:
  3201 00001720 E858060000               	call	interpolating_4_8bit_mono
  3202 00001725 E319                    	jecxz	lff11m_3
  3203                                  
  3204 00001727 4D                      	dec	ebp
  3205 00001728 74DA                    	jz	short lff11m_9
  3206                                  
  3207 0000172A AC                      	lodsb
  3208 0000172B B280                    	mov	dl, 80h
  3209 0000172D 49                      	dec	ecx
  3210 0000172E 7402                    	jz	short lff11m_2_4
  3211 00001730 8A16                    	mov	dl, [esi]
  3212                                  lff11m_2_4:
  3213 00001732 E846060000              	call	interpolating_4_8bit_mono
  3214 00001737 E307                    	jecxz	lff11m_3
  3215 00001739 EBCE                    	jmp	short lff11m_1
  3216                                  
  3217                                  lff11m_7:
  3218                                  lff11s_7:
  3219 0000173B E962F3FFFF              	jmp	lff11_5  ; error
  3220                                  
  3221                                  lff11m_3:
  3222                                  lff11s_3:
  3223 00001740 E93CF3FFFF              	jmp	lff11_3	; padfill
  3224                                  		; (put zeros in the remain words of the buffer)
  3225                                  
  3226                                  load_11khz_stereo_8_bit:
  3227                                  	; 18/11/2023
  3228 00001745 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3229                                  					; last of the file?
  3230 0000174C 7402                    	jz	short lff11s_0		; no
  3231 0000174E F9                      	stc
  3232 0000174F C3                      	retn
  3233                                  
  3234                                  lff11s_0:
  3235 00001750 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3236                                          ;mov	edx, [loadsize]
  3237                                  
  3238                                  	; esi = buffer address
  3239                                  	;; edx = buffer size
  3240                                  
  3241                                  	; load file into memory
  3242                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001755 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000175B 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000175D 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001763 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001768 CD40                <1>  int 40h
  3243 0000176A 72CF                    	jc	short lff11s_7 ; error !
  3244                                  
  3245                                  	;mov	edi, audio_buffer
  3246                                  	; 29/05/2024
  3247 0000176C 8B3D[9A280000]          	mov	edi, [audio_buffer]
  3248                                  	
  3249 00001772 D1E8                    	shr	eax, 1
  3250 00001774 7505                    	jnz	short lff11s_8
  3251 00001776 E91EF3FFFF              	jmp	lff11_eof
  3252                                  
  3253                                  lff11s_8:
  3254 0000177B 89C1                    	mov	ecx, eax	; word count
  3255                                  lff11s_9:
  3256 0000177D BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3257                                  lff11s_1:
  3258                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3259 00001782 66AD                    	lodsw
  3260 00001784 66BA8080                	mov	dx, 8080h
  3261 00001788 49                      	dec	ecx
  3262 00001789 7403                    	jz	short lff11s_2_1 
  3263 0000178B 668B16                  	mov	dx, [esi]
  3264                                  lff11s_2_1:	
  3265                                  	; al = [previous_val_l]
  3266                                  	; ah = [previous_val_r]
  3267                                  	; dl = [next_val_l]
  3268                                  	; dh = [next_val_r]	
  3269 0000178E E83D050000              	call	interpolating_5_8bit_stereo
  3270 00001793 E3AB                    	jecxz	lff11s_3
  3271                                  lff11s_2_2:
  3272 00001795 66AD                    	lodsw
  3273 00001797 66BA8080                	mov	dx, 8080h
  3274 0000179B 49                      	dec	ecx
  3275 0000179C 7403                    	jz	short lff11s_2_3
  3276 0000179E 668B16                  	mov	dx, [esi]
  3277                                  lff11s_2_3:
  3278 000017A1 E816060000               	call	interpolating_4_8bit_stereo
  3279 000017A6 E398                    	jecxz	lff11s_3
  3280                                  	
  3281 000017A8 4D                      	dec	ebp
  3282 000017A9 74D2                    	jz	short lff11s_9
  3283                                  
  3284 000017AB 66AD                    	lodsw
  3285 000017AD 66BA8080                	mov	dx, 8080h
  3286 000017B1 49                      	dec	ecx
  3287 000017B2 7403                    	jz	short lff11s_2_4
  3288 000017B4 668B16                  	mov	dx, [esi]
  3289                                  lff11s_2_4:
  3290 000017B7 E800060000              	call	interpolating_4_8bit_stereo
  3291 000017BC E382                    	jecxz	lff11s_3
  3292 000017BE EBC2                    	jmp	short lff11s_1
  3293                                  
  3294                                  load_11khz_mono_16_bit:
  3295                                  	; 18/11/2023
  3296 000017C0 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3297                                  					; last of the file?
  3298 000017C7 7402                    	jz	short lff11m2_0		; no
  3299 000017C9 F9                      	stc
  3300 000017CA C3                      	retn
  3301                                  
  3302                                  lff11m2_0:
  3303 000017CB BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3304                                          ;mov	edx, [loadsize]
  3305                                  
  3306                                  	; esi = buffer address
  3307                                  	;; edx = buffer size
  3308                                  
  3309                                  	; load file into memory
  3310                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000017D0 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000017D6 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000017D8 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000017DE B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000017E3 CD40                <1>  int 40h
  3311 000017E5 724E                    	jc	short lff11m2_7 ; error !
  3312                                  
  3313                                  	;mov	edi, audio_buffer
  3314                                  	; 29/05/2024
  3315 000017E7 8B3D[9A280000]          	mov	edi, [audio_buffer]
  3316                                  	
  3317 000017ED D1E8                    	shr	eax, 1
  3318 000017EF 7505                    	jnz	short lff11m2_8
  3319 000017F1 E9A3F2FFFF              	jmp	lff11_eof
  3320                                  
  3321                                  lff11m2_8:
  3322 000017F6 89C1                    	mov	ecx, eax	; word count
  3323                                  lff11m2_9:
  3324 000017F8 BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3325                                  lff11m2_1:
  3326                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3327 000017FD 66AD                    	lodsw
  3328 000017FF 31D2                    	xor	edx, edx
  3329 00001801 49                      	dec	ecx
  3330 00001802 7403                    	jz	short lff11m2_2_1
  3331 00001804 668B16                  	mov	dx, [esi]
  3332                                  lff11m2_2_1:	
  3333                                  	; ax = [previous_val]
  3334                                  	; dx = [next_val]
  3335 00001807 E81D060000              	call	interpolating_5_16bit_mono
  3336 0000180C E363                    	jecxz	lff11m2_3
  3337                                  lff11m2_2_2:
  3338 0000180E 66AD                    	lodsw
  3339 00001810 31D2                    	xor	edx, edx
  3340 00001812 49                      	dec	ecx
  3341 00001813 7403                    	jz	short lff11m2_2_3
  3342 00001815 668B16                  	mov	dx, [esi]
  3343                                  lff11m2_2_3:
  3344 00001818 E836070000               	call	interpolating_4_16bit_mono
  3345 0000181D E352                    	jecxz	lff11m2_3
  3346                                  
  3347 0000181F 4D                      	dec	ebp
  3348 00001820 74D6                    	jz	short lff11m2_9
  3349                                  
  3350 00001822 66AD                    	lodsw
  3351 00001824 31D2                    	xor	edx, edx
  3352 00001826 49                      	dec	ecx
  3353 00001827 7403                    	jz	short lff11m2_2_4
  3354 00001829 668B16                  	mov	dx, [esi]
  3355                                  lff11m2_2_4:
  3356 0000182C E822070000               	call	interpolating_4_16bit_mono
  3357 00001831 E33E                    	jecxz	lff11m2_3
  3358 00001833 EBC8                    	jmp	short lff11m2_1
  3359                                  
  3360                                  lff11m2_7:
  3361                                  lff11s2_7:
  3362 00001835 E968F2FFFF              	jmp	lff11_5  ; error
  3363                                  
  3364                                  load_11khz_stereo_16_bit:
  3365                                  	; 17/01/2025
  3366                                  	; 18/11/2023
  3367 0000183A F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3368                                  					; last of the file?
  3369 00001841 7402                    	jz	short lff11s2_0		; no
  3370 00001843 F9                      	stc
  3371 00001844 C3                      	retn
  3372                                  
  3373                                  lff11s2_0:
  3374 00001845 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3375                                          ;mov	edx, [loadsize]
  3376                                  
  3377                                  	; esi = buffer address
  3378                                  	;; edx = buffer size
  3379                                  
  3380                                  	; load file into memory
  3381                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000184A 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001850 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001852 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001858 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000185D CD40                <1>  int 40h
  3382 0000185F 72D4                    	jc	short lff11s2_7 ; error !
  3383                                  
  3384                                  	;mov	edi, audio_buffer
  3385                                  	; 29/05/2024
  3386 00001861 8B3D[9A280000]          	mov	edi, [audio_buffer]
  3387                                  	
  3388 00001867 C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3389 0000186A 750A                    	jnz	short lff11s2_8
  3390 0000186C E928F2FFFF              	jmp	lff11_eof
  3391                                  
  3392                                  lff11m2_3:
  3393                                  lff11s2_3:
  3394 00001871 E90BF2FFFF              	jmp	lff11_3	; padfill
  3395                                  		; (put zeros in the remain words of the buffer)
  3396                                  
  3397                                  lff11s2_8:
  3398 00001876 89C1                    	mov	ecx, eax	; dword count
  3399                                  lff11s2_9:
  3400 00001878 BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3401                                  lff11s2_1:
  3402                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3403 0000187D 66AD                    	lodsw
  3404 0000187F 89C3                    	mov	ebx, eax
  3405 00001881 66AD                    	lodsw
  3406 00001883 8B16                    	mov	edx, [esi]
  3407                                  	; 17/01/2025
  3408                                  	;mov	[next_val_l], edx
  3409                                  	; 26/11/2023
  3410                                  	;shr	edx, 16
  3411                                  	;mov	[next_val_r], dx
  3412 00001885 49                      	dec	ecx
  3413 00001886 7502                    	jnz	short lff11s2_2_1
  3414 00001888 31D2                    	xor	edx, edx ; 0
  3415                                  	;mov	[next_val_l], dx
  3416                                  	;mov	[next_val_r], dx
  3417                                  lff11s2_2_1:
  3418                                  	; bx = [previous_val_l]
  3419                                  	; ax = [previous_val_r]
  3420                                  	; [next_val_l]
  3421                                  	; dx = [next_val_r]
  3422                                  	;;;
  3423                                  	; 17/01/2025 (BugFix)
  3424 0000188A 8915[0D200000]          	mov	[next_val_l], edx
  3425                                  	;;;
  3426 00001890 E8EF050000              	call	interpolating_5_16bit_stereo
  3427 00001895 E3DA                    	jecxz	lff11s2_3
  3428                                  lff11s2_2_2:
  3429 00001897 66AD                    	lodsw
  3430 00001899 89C3                    	mov	ebx, eax
  3431 0000189B 66AD                    	lodsw
  3432 0000189D 8B16                    	mov	edx, [esi]
  3433                                  	; 17/01/2025
  3434                                  	;mov	[next_val_l], dx
  3435                                  	; 26/11/2023
  3436                                  	;shr	edx, 16
  3437                                  	;mov	[next_val_r], dx
  3438 0000189F 49                      	dec	ecx
  3439 000018A0 7502                    	jnz	short lff11s2_2_3
  3440 000018A2 31D2                    	xor	edx, edx ; 0
  3441                                  	;mov	[next_val_l], dx
  3442                                  	;mov	[next_val_r], dx
  3443                                  lff11s2_2_3:
  3444                                  	;;;
  3445                                  	; 17/01/2025 (BugFix)
  3446 000018A4 8915[0D200000]          	mov	[next_val_l], edx
  3447                                  	;;;
  3448 000018AA E8DD060000              	call	interpolating_4_16bit_stereo
  3449 000018AF E3C0                    	jecxz	lff11s2_3
  3450                                  	
  3451 000018B1 4D                      	dec	ebp
  3452 000018B2 74C4                    	jz	short lff11s2_9
  3453                                  
  3454 000018B4 66AD                    	lodsw
  3455 000018B6 89C3                    	mov	ebx, eax
  3456 000018B8 66AD                    	lodsw
  3457 000018BA 8B16                    	mov	edx, [esi]
  3458                                  	; 17/01/2025
  3459                                  	;mov	[next_val_l], dx
  3460                                  	; 26/11/2023
  3461                                  	;shr	edx, 16
  3462                                  	;mov	[next_val_r], dx
  3463 000018BC 49                      	dec	ecx
  3464 000018BD 7502                    	jnz	short lff11s2_2_4
  3465 000018BF 31D2                    	xor	edx, edx ; 0
  3466                                  	;mov	[next_val_l], dx
  3467                                  	;mov	[next_val_r], dx
  3468                                  lff11s2_2_4:
  3469                                  	;;;
  3470                                  	; 17/01/2025 (BugFix)
  3471 000018C1 8915[0D200000]          	mov	[next_val_l], edx
  3472                                  	;;;
  3473 000018C7 E8C0060000               	call	interpolating_4_16bit_stereo
  3474 000018CC E3A3                    	jecxz	lff11s2_3
  3475 000018CE EBAD                    	jmp	short lff11s2_1
  3476                                  
  3477                                  ; .....................
  3478                                  
  3479                                  load_44khz_mono_8_bit:
  3480                                  	; 18/11/2023
  3481 000018D0 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3482                                  					; last of the file?
  3483 000018D7 7402                    	jz	short lff44m_0		; no
  3484 000018D9 F9                      	stc
  3485 000018DA C3                      	retn
  3486                                  
  3487                                  lff44m_0:
  3488 000018DB BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3489                                          ;mov	edx, [loadsize]
  3490                                  
  3491                                  	; esi = buffer address
  3492                                  	;; edx = buffer size
  3493                                  
  3494                                  	; load file into memory
  3495                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000018E0 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000018E6 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000018E8 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000018EE B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000018F3 CD40                <1>  int 40h
  3496 000018F5 7251                    	jc	short lff44m_7 ; error !
  3497                                  
  3498                                  	;mov	edi, audio_buffer
  3499                                  	; 29/05/2024
  3500 000018F7 8B3D[9A280000]          	mov	edi, [audio_buffer]
  3501                                  	
  3502 000018FD 21C0                    	and	eax, eax
  3503 000018FF 7505                    	jnz	short lff44m_8
  3504 00001901 E993F1FFFF              	jmp	lff44_eof
  3505                                  
  3506                                  lff44m_8:
  3507 00001906 89C1                    	mov	ecx, eax	; byte count
  3508                                  lff44m_9:
  3509 00001908 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3510 0000190D C605[11200000]02        	mov	byte [faz], 2  ; 2 steps/phases
  3511                                  lff44m_1:
  3512                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3513                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3514 00001914 AC                      	lodsb
  3515 00001915 B280                    	mov	dl, 80h
  3516 00001917 49                      	dec	ecx
  3517 00001918 7402                    	jz	short lff44m_2_1
  3518 0000191A 8A16                    	mov	dl, [esi]
  3519                                  lff44m_2_1:	
  3520                                  	; al = [previous_val]
  3521                                  	; dl = [next_val]
  3522 0000191C E828020000              	call	interpolating_2_8bit_mono
  3523 00001921 E320                    	jecxz	lff44m_3
  3524                                  lff44m_2_2:
  3525 00001923 AC                      	lodsb
  3526 00001924 2C80                    	sub	al, 80h
  3527 00001926 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3528 0000192A 66AB                    	stosw		; (L)
  3529 0000192C 66AB                    	stosw		; (R)	
  3530                                  
  3531 0000192E 49                      	dec	ecx
  3532 0000192F 7412                    	jz	short lff44m_3	
  3533 00001931 4D                      	dec	ebp
  3534 00001932 75EF                    	jnz	short lff44m_2_2
  3535                                  	
  3536 00001934 FE0D[11200000]          	dec	byte [faz]
  3537 0000193A 74CC                    	jz	short lff44m_9 
  3538 0000193C BD0B000000              	mov	ebp, 11
  3539 00001941 EBD1                    	jmp	short lff44m_1
  3540                                  
  3541                                  lff44m_3:
  3542                                  lff44s_3:
  3543 00001943 E939F1FFFF              	jmp	lff44_3	; padfill
  3544                                  		; (put zeros in the remain words of the buffer)
  3545                                  lff44m_7:
  3546                                  lff44s_7:
  3547 00001948 E955F1FFFF              	jmp	lff44_5  ; error
  3548                                  
  3549                                  load_44khz_stereo_8_bit:
  3550                                  	; 16/11/2023
  3551 0000194D F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3552                                  					; last of the file?
  3553 00001954 7402                    	jz	short lff44s_0		; no
  3554 00001956 F9                      	stc
  3555 00001957 C3                      	retn
  3556                                  
  3557                                  lff44s_0:
  3558 00001958 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3559                                          ;mov	edx, [loadsize]
  3560                                  
  3561                                  	; esi = buffer address
  3562                                  	;; edx = buffer size
  3563                                  
  3564                                  	; load file into memory
  3565                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000195D 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001963 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001965 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000196B B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001970 CD40                <1>  int 40h
  3566 00001972 72D4                    	jc	short lff44s_7 ; error !
  3567                                  
  3568                                  	;mov	edi, audio_buffer
  3569                                  	; 29/05/2024
  3570 00001974 8B3D[9A280000]          	mov	edi, [audio_buffer]
  3571                                  	
  3572 0000197A D1E8                    	shr	eax, 1
  3573 0000197C 7505                    	jnz	short lff44s_8
  3574 0000197E E916F1FFFF              	jmp	lff44_eof
  3575                                  
  3576                                  lff44s_8:
  3577 00001983 89C1                    	mov	ecx, eax	; word count
  3578                                  lff44s_9:
  3579 00001985 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3580 0000198A C605[11200000]02        	mov	byte [faz], 2  ; 2 steps/phase
  3581                                  lff44s_1:
  3582                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3583                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3584 00001991 66AD                    	lodsw
  3585 00001993 66BA8080                	mov	dx, 8080h
  3586 00001997 49                      	dec	ecx
  3587 00001998 7403                    	jz	short lff44s_2_1 
  3588 0000199A 668B16                  	mov	dx, [esi]
  3589                                  lff44s_2_1:	
  3590                                  	; al = [previous_val_l]
  3591                                  	; ah = [previous_val_r]
  3592                                  	; dl = [next_val_l]
  3593                                  	; dh = [next_val_r]	
  3594 0000199D E8C4010000              	call	interpolating_2_8bit_stereo
  3595 000019A2 E39F                    	jecxz	lff44s_3
  3596                                  lff44s_2_2:
  3597 000019A4 AC                      	lodsb
  3598 000019A5 2C80                    	sub	al, 80h
  3599 000019A7 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3600 000019AB 66AB                    	stosw		; (L)
  3601 000019AD AC                      	lodsb
  3602 000019AE 2C80                    	sub	al, 80h
  3603 000019B0 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3604 000019B4 66AB                    	stosw		; (R)
  3605                                  
  3606 000019B6 49                      	dec	ecx
  3607 000019B7 748A                    	jz	short lff44s_3	
  3608 000019B9 4D                      	dec	ebp
  3609 000019BA 75E8                    	jnz	short lff44s_2_2
  3610                                  	
  3611 000019BC FE0D[11200000]          	dec	byte [faz]
  3612 000019C2 74C1                    	jz	short lff44s_9 
  3613 000019C4 BD0B000000              	mov	ebp, 11
  3614 000019C9 EBC6                    	jmp	short lff44s_1
  3615                                  
  3616                                  load_44khz_mono_16_bit:
  3617                                  	; 18/11/2023
  3618 000019CB F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3619                                  					; last of the file?
  3620 000019D2 7402                    	jz	short lff44m2_0		; no
  3621 000019D4 F9                      	stc
  3622 000019D5 C3                      	retn
  3623                                  
  3624                                  lff44m2_0:
  3625 000019D6 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3626                                          ;mov	edx, [loadsize]
  3627                                  
  3628                                  	; esi = buffer address
  3629                                  	;; edx = buffer size
  3630                                  
  3631                                  	; load file into memory
  3632                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000019DB 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000019E1 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000019E3 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000019E9 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000019EE CD40                <1>  int 40h
  3633 000019F0 724E                    	jc	short lff44m2_7 ; error !
  3634                                  
  3635                                  	;mov	edi, audio_buffer
  3636                                  	; 29/05/2024
  3637 000019F2 8B3D[9A280000]          	mov	edi, [audio_buffer]
  3638                                  	
  3639 000019F8 D1E8                    	shr	eax, 1
  3640 000019FA 7505                    	jnz	short lff44m2_8
  3641 000019FC E998F0FFFF              	jmp	lff44_eof
  3642                                  
  3643                                  lff44m2_8:
  3644 00001A01 89C1                    	mov	ecx, eax	; word count
  3645                                  lff44m2_9:
  3646 00001A03 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3647 00001A08 C605[11200000]02        	mov	byte [faz], 2  ; 2 steps/phases
  3648                                  lff44m2_1:
  3649                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3650                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3651 00001A0F 66AD                    	lodsw
  3652 00001A11 31D2                    	xor	edx, edx
  3653 00001A13 49                      	dec	ecx
  3654 00001A14 7403                    	jz	short lff44m2_2_1
  3655 00001A16 668B16                  	mov	dx, [esi]
  3656                                  lff44m2_2_1:	
  3657                                  	; ax = [previous_val]
  3658                                  	; dx = [next_val]
  3659 00001A19 E80C020000              	call	interpolating_2_16bit_mono
  3660 00001A1E E31B                    	jecxz	lff44m2_3
  3661                                  lff44m2_2_2:
  3662 00001A20 66AD                    	lodsw
  3663 00001A22 66AB                    	stosw		; (L)eft Channel
  3664 00001A24 66AB                    	stosw		; (R)ight Channel
  3665                                  
  3666 00001A26 49                      	dec	ecx
  3667 00001A27 7412                    	jz	short lff44m2_3	
  3668 00001A29 4D                      	dec	ebp
  3669 00001A2A 75F4                    	jnz	short lff44m2_2_2
  3670                                  	
  3671 00001A2C FE0D[11200000]          	dec	byte [faz]
  3672 00001A32 74CF                    	jz	short lff44m2_9 
  3673 00001A34 BD0B000000              	mov	ebp, 11
  3674 00001A39 EBD4                    	jmp	short lff44m2_1
  3675                                  
  3676                                  lff44m2_3:
  3677                                  lff44s2_3:
  3678 00001A3B E941F0FFFF              	jmp	lff44_3	; padfill
  3679                                  		; (put zeros in the remain words of the buffer)
  3680                                  lff44m2_7:
  3681                                  lff44s2_7:
  3682 00001A40 E95DF0FFFF              	jmp	lff44_5  ; error
  3683                                  
  3684                                  load_44khz_stereo_16_bit:
  3685                                  	; 18/11/2023
  3686 00001A45 F605[1C280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3687                                  					; last of the file?
  3688 00001A4C 7402                    	jz	short lff44s2_0		; no
  3689 00001A4E F9                      	stc
  3690 00001A4F C3                      	retn
  3691                                  
  3692                                  lff44s2_0:
  3693 00001A50 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3694                                          ;mov	edx, [loadsize]
  3695                                  
  3696                                  	; esi = buffer address
  3697                                  	;; edx = buffer size
  3698                                  
  3699                                  	; load file into memory
  3700                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001A55 8B1D[DF240000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001A5B 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001A5D 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001A63 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001A68 CD40                <1>  int 40h
  3701 00001A6A 72D4                    	jc	short lff44s2_7 ; error !
  3702                                  
  3703                                  	;mov	edi, audio_buffer
  3704                                  	; 29/05/2024
  3705 00001A6C 8B3D[9A280000]          	mov	edi, [audio_buffer]
  3706                                  	
  3707 00001A72 C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3708 00001A75 7505                    	jnz	short lff44s2_8
  3709 00001A77 E91DF0FFFF              	jmp	lff44_eof
  3710                                  
  3711                                  lff44s2_8:
  3712 00001A7C 89C1                    	mov	ecx, eax	; dword count
  3713                                  lff44s2_9:
  3714 00001A7E BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3715 00001A83 C605[11200000]02        	mov	byte [faz], 2  ; 2 steps/phase
  3716                                  lff44s2_1:
  3717                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3718                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3719 00001A8A 66AD                    	lodsw
  3720 00001A8C 89C3                    	mov	ebx, eax
  3721 00001A8E 66AD                    	lodsw
  3722                                  	;mov	dx, [esi]
  3723                                  	;mov	[next_val_l], dx
  3724                                  	;mov	dx, [esi+2]
  3725                                  	; 26/11/2023
  3726 00001A90 8B16                    	mov	edx, [esi]
  3727 00001A92 668915[0D200000]        	mov	[next_val_l], dx
  3728 00001A99 C1EA10                  	shr	edx, 16
  3729 00001A9C 49                      	dec	ecx
  3730 00001A9D 7509                    	jnz	short lff44s2_2_1
  3731 00001A9F 31D2                    	xor	edx, edx ; 0
  3732 00001AA1 668915[0D200000]        	mov	[next_val_l], dx
  3733                                  lff44s2_2_1:
  3734                                  	; bx = [previous_val_l]
  3735                                  	; ax = [previous_val_r]
  3736                                  	; [next_val_l]
  3737                                  	; dx = [next_val_r]
  3738 00001AA8 E895010000              	call	interpolating_2_16bit_stereo
  3739 00001AAD E38C                    	jecxz	lff44s2_3
  3740                                  lff44s2_2_2:
  3741                                  	;movsw		; (L)eft Channel
  3742                                  	;movsw		; (R)ight Channel
  3743 00001AAF A5                      	movsd
  3744                                  
  3745 00001AB0 49                      	dec	ecx
  3746 00001AB1 7488                    	jz	short lff44s2_3	
  3747 00001AB3 4D                      	dec	ebp
  3748 00001AB4 75F9                    	jnz	short lff44s2_2_2
  3749                                  	
  3750 00001AB6 FE0D[11200000]          	dec	byte [faz]
  3751 00001ABC 74C0                    	jz	short lff44s2_9 
  3752 00001ABE BD0B000000              	mov	ebp, 11
  3753 00001AC3 EBC5                    	jmp	short lff44s2_1
  3754                                  
  3755                                  ; .....................
  3756                                  
  3757                                  interpolating_3_8bit_mono:
  3758                                  	; 16/11/2023
  3759                                  	; al = [previous_val]
  3760                                  	; dl = [next_val]
  3761                                  	; original-interpolated-interpolated
  3762 00001AC5 88C3                    	mov	bl, al
  3763 00001AC7 2C80                    	sub	al, 80h
  3764 00001AC9 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3765 00001ACD 66AB                    	stosw		; original sample (L)
  3766 00001ACF 66AB                    	stosw		; original sample (R)
  3767 00001AD1 88D8                    	mov	al, bl
  3768 00001AD3 00D0                    	add	al, dl	
  3769 00001AD5 D0D8                    	rcr	al, 1
  3770 00001AD7 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3771 00001AD9 00D8                    	add	al, bl
  3772 00001ADB D0D8                    	rcr	al, 1
  3773 00001ADD 2C80                    	sub	al, 80h
  3774 00001ADF 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3775 00001AE3 66AB                    	stosw		; interpolated sample 1 (L)
  3776 00001AE5 66AB                    	stosw		; interpolated sample 1 (R)
  3777 00001AE7 88F8                    	mov	al, bh
  3778 00001AE9 00D0                    	add	al, dl	; [next_val]
  3779 00001AEB D0D8                    	rcr	al, 1
  3780 00001AED 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3781 00001AF1 66AB                    	stosw		; interpolated sample 2 (L)
  3782 00001AF3 66AB                    	stosw		; interpolated sample 2 (R)
  3783 00001AF5 C3                      	retn
  3784                                  
  3785                                  interpolating_3_8bit_stereo:
  3786                                  	; 16/11/2023
  3787                                  	; al = [previous_val_l]
  3788                                  	; ah = [previous_val_r]
  3789                                  	; dl = [next_val_l]
  3790                                  	; dh = [next_val_r]	
  3791                                  	; original-interpolated-interpolated
  3792 00001AF6 89C3                    	mov	ebx, eax
  3793 00001AF8 2C80                    	sub	al, 80h
  3794 00001AFA 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3795 00001AFE 66AB                    	stosw		; original sample (L)
  3796 00001B00 88F8                    	mov	al, bh
  3797 00001B02 2C80                    	sub	al, 80h
  3798 00001B04 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3799 00001B08 66AB                    	stosw		; original sample (R)
  3800 00001B0A 88D8                    	mov	al, bl
  3801 00001B0C 00D0                    	add	al, dl	; [next_val_l]	
  3802 00001B0E D0D8                    	rcr	al, 1
  3803 00001B10 50                      	push	eax ; *	; al = interpolated middle (L) (temporary)
  3804 00001B11 00D8                    	add	al, bl	; [previous_val_l]
  3805 00001B13 D0D8                    	rcr	al, 1
  3806 00001B15 2C80                    	sub	al, 80h
  3807 00001B17 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3808 00001B1B 66AB                    	stosw		; interpolated sample 1 (L)
  3809 00001B1D 88F8                    	mov	al, bh
  3810 00001B1F 00F0                    	add	al, dh	; [next_val_r]
  3811 00001B21 D0D8                    	rcr	al, 1
  3812 00001B23 50                      	push	eax ; ** ; al = interpolated middle (R) (temporary)
  3813 00001B24 00F8                    	add	al, bh	; [previous_val_r]
  3814 00001B26 D0D8                    	rcr	al, 1
  3815 00001B28 2C80                    	sub	al, 80h
  3816 00001B2A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3817 00001B2E 66AB                    	stosw		; interpolated sample 1 (R)
  3818 00001B30 5B                      	pop	ebx ; **
  3819 00001B31 58                      	pop	eax ; *
  3820 00001B32 00D0                    	add	al, dl	; [next_val_l]
  3821 00001B34 D0D8                    	rcr	al, 1
  3822 00001B36 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3823 00001B3A 66AB                    	stosw		; interpolated sample 2 (L)
  3824 00001B3C 88D8                    	mov	al, bl
  3825 00001B3E 00F0                    	add	al, dh	; [next_val_r]
  3826 00001B40 D0D8                    	rcr	al, 1
  3827 00001B42 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3828 00001B46 66AB                    	stosw		; interpolated sample 2 (R)
  3829 00001B48 C3                      	retn
  3830                                  
  3831                                  interpolating_2_8bit_mono:
  3832                                  	; 16/11/2023
  3833                                  	; al = [previous_val]
  3834                                  	; dl = [next_val]
  3835                                  	; original-interpolated
  3836 00001B49 88C3                    	mov	bl, al
  3837 00001B4B 2C80                    	sub	al, 80h
  3838 00001B4D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3839 00001B51 66AB                    	stosw		; original sample (L)
  3840 00001B53 66AB                    	stosw		; original sample (R)
  3841 00001B55 88D8                    	mov	al, bl
  3842 00001B57 00D0                    	add	al, dl	
  3843 00001B59 D0D8                    	rcr	al, 1
  3844 00001B5B 2C80                    	sub	al, 80h
  3845 00001B5D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3846 00001B61 66AB                    	stosw		; interpolated sample (L)
  3847 00001B63 66AB                    	stosw		; interpolated sample (R)
  3848 00001B65 C3                      	retn
  3849                                  
  3850                                  interpolating_2_8bit_stereo:
  3851                                  	; 16/11/2023
  3852                                  	; al = [previous_val_l]
  3853                                  	; ah = [previous_val_r]
  3854                                  	; dl = [next_val_l]
  3855                                  	; dh = [next_val_r]	
  3856                                  	; original-interpolated
  3857 00001B66 89C3                    	mov	ebx, eax
  3858 00001B68 2C80                    	sub	al, 80h
  3859 00001B6A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3860 00001B6E 66AB                    	stosw		; original sample (L)
  3861 00001B70 88F8                    	mov	al, bh
  3862 00001B72 2C80                    	sub	al, 80h
  3863 00001B74 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3864 00001B78 66AB                    	stosw		; original sample (R)
  3865 00001B7A 88D8                    	mov	al, bl	; [previous_val_l]
  3866 00001B7C 00D0                    	add	al, dl	; [next_val_l]	
  3867 00001B7E D0D8                    	rcr	al, 1
  3868 00001B80 2C80                    	sub	al, 80h
  3869 00001B82 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3870 00001B86 66AB                    	stosw		; interpolated sample (L)
  3871 00001B88 88F8                    	mov	al, bh
  3872 00001B8A 00F0                    	add	al, dh	; [next_val_r]
  3873 00001B8C D0D8                    	rcr	al, 1
  3874 00001B8E 2C80                    	sub	al, 80h
  3875 00001B90 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3876 00001B94 66AB                    	stosw		; interpolated sample (R)
  3877 00001B96 C3                      	retn
  3878                                  
  3879                                  interpolating_3_16bit_mono:
  3880                                  	; 16/11/2023
  3881                                  	; ax = [previous_val]
  3882                                  	; dx = [next_val]
  3883                                  	; original-interpolated-interpolated
  3884                                  
  3885 00001B97 66AB                    	stosw		; original sample (L)
  3886 00001B99 66AB                    	stosw		; original sample (R)
  3887 00001B9B 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3888 00001B9E 50                      	push	eax ; *	; [previous_val]
  3889 00001B9F 80C680                  	add	dh, 80h
  3890 00001BA2 6601D0                  	add	ax, dx
  3891 00001BA5 66D1D8                  	rcr	ax, 1
  3892 00001BA8 5B                      	pop	ebx ; *		
  3893 00001BA9 93                      	xchg	ebx, eax ; bx  = interpolated middle (temporary)
  3894 00001BAA 6601D8                  	add	ax, bx	; [previous_val] + interpolated middle
  3895 00001BAD 66D1D8                  	rcr	ax, 1
  3896 00001BB0 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3897 00001BB3 66AB                    	stosw 		; interpolated sample 1 (L)
  3898 00001BB5 66AB                    	stosw		; interpolated sample 1 (R)
  3899 00001BB7 89D8                    	mov	eax, ebx
  3900 00001BB9 6601D0                  	add	ax, dx	 ;interpolated middle + [next_val]
  3901 00001BBC 66D1D8                  	rcr	ax, 1
  3902 00001BBF 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3903 00001BC2 66AB                    	stosw		; interpolated sample 2 (L)
  3904 00001BC4 66AB                    	stosw		; interpolated sample 2 (R)
  3905 00001BC6 C3                      	retn
  3906                                  
  3907                                  interpolating_3_16bit_stereo:
  3908                                  	; 16/11/2023
  3909                                  	; bx = [previous_val_l]
  3910                                  	; ax = [previous_val_r]
  3911                                  	; [next_val_l]
  3912                                  	; dx = [next_val_r]
  3913                                  	; original-interpolated-interpolated
  3914                                  
  3915 00001BC7 93                      	xchg	eax, ebx
  3916 00001BC8 66AB                    	stosw		; original sample (L)
  3917 00001BCA 93                      	xchg	eax, ebx
  3918 00001BCB 66AB                    	stosw		; original sample (R)
  3919 00001BCD 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3920 00001BD0 50                      	push	eax ; *	; [previous_val_r]
  3921 00001BD1 80C780                  	add	bh, 80h
  3922 00001BD4 8005[0E200000]80        	add	byte [next_val_l+1], 80h
  3923 00001BDB 66A1[0D200000]          	mov	ax, [next_val_l]
  3924 00001BE1 6601D8                  	add	ax, bx	; [previous_val_l]
  3925 00001BE4 66D1D8                  	rcr	ax, 1
  3926 00001BE7 93                      	xchg	eax, ebx ; ax = [previous_val_l]	
  3927 00001BE8 6601D8                  	add	ax, bx	; bx = interpolated middle (L)
  3928 00001BEB 66D1D8                  	rcr	ax, 1
  3929 00001BEE 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3930 00001BF1 66AB                    	stosw 		; interpolated sample 1 (L)
  3931 00001BF3 58                      	pop	eax  ; *
  3932 00001BF4 80C680                  	add	dh, 80h ; convert sound level 0 to 65535 format
  3933 00001BF7 52                      	push	edx  ; * ; [next_val_r]
  3934 00001BF8 92                      	xchg	eax, edx
  3935 00001BF9 6601D0                  	add	ax, dx	; [next_val_r] + [previous_val_r]
  3936 00001BFC 66D1D8                  	rcr	ax, 1	; / 2
  3937 00001BFF 50                      	push	eax ; ** ; interpolated middle (R)
  3938 00001C00 6601D0                  	add	ax, dx	; + [previous_val_r]
  3939 00001C03 66D1D8                  	rcr	ax, 1
  3940 00001C06 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3941 00001C09 66AB                    	stosw 		; interpolated sample 1 (R)
  3942 00001C0B 66A1[0D200000]          	mov	ax, [next_val_l]
  3943 00001C11 6601D8                  	add	ax, bx	; + interpolated middle (L)
  3944 00001C14 66D1D8                  	rcr	ax, 1
  3945 00001C17 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3946 00001C1A 66AB                    	stosw 		; interpolated sample 2 (L)
  3947 00001C1C 58                      	pop	eax ; **
  3948 00001C1D 5A                      	pop	edx ; *	
  3949 00001C1E 6601D0                  	add	ax, dx	; interpolated middle + [next_val_r]
  3950 00001C21 66D1D8                  	rcr	ax, 1	; / 2
  3951 00001C24 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3952 00001C27 66AB                    	stosw 		; interpolated sample 2 (L)
  3953 00001C29 C3                      	retn
  3954                                  
  3955                                  interpolating_2_16bit_mono:
  3956                                  	; 16/11/2023
  3957                                  	; ax = [previous_val]
  3958                                  	; dx = [next_val]
  3959                                  	; original-interpolated
  3960                                  
  3961 00001C2A 66AB                    	stosw		; original sample (L)
  3962 00001C2C 66AB                    	stosw		; original sample (R)
  3963 00001C2E 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3964 00001C31 80C680                  	add	dh, 80h
  3965 00001C34 6601D0                  	add	ax, dx
  3966 00001C37 66D1D8                  	rcr	ax, 1
  3967 00001C3A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3968 00001C3D 66AB                    	stosw		; interpolated sample (L)
  3969 00001C3F 66AB                    	stosw		; interpolated sample (R)
  3970 00001C41 C3                      	retn
  3971                                  
  3972                                  interpolating_2_16bit_stereo:
  3973                                  	; 17/01/2025
  3974                                  	; 16/11/2023
  3975                                  	; bx = [previous_val_l]
  3976                                  	; ax = [previous_val_r]
  3977                                  	; [next_val_l]
  3978                                  	; dx = [next_val_r]
  3979                                  	; original-interpolated
  3980                                  
  3981 00001C42 93                      	xchg	eax, ebx
  3982 00001C43 66AB                    	stosw		; original sample (L)
  3983 00001C45 93                      	xchg	eax, ebx
  3984 00001C46 66AB                    	stosw		; original sample (R)
  3985 00001C48 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3986 00001C4B 80C680                  	add	dh, 80h
  3987 00001C4E 6601D0                  	add	ax, dx	; [previous_val_r] + [next_val_r]
  3988 00001C51 66D1D8                  	rcr	ax, 1	; / 2
  3989                                  	; 17/01/2025
  3990 00001C54 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3991                                  	;push	eax ; *	; interpolated sample (R)
  3992                                  	; 17/01/2025
  3993 00001C57 C1E010                  	shl	eax, 16
  3994 00001C5A 66A1[0D200000]          	mov	ax, [next_val_l]
  3995 00001C60 80C480                  	add	ah, 80h
  3996 00001C63 80C780                  	add	bh, 80h
  3997 00001C66 6601D8                  	add	ax, bx	; [next_val_l] + [previous_val_l]
  3998 00001C69 66D1D8                  	rcr	ax, 1	; / 2
  3999 00001C6C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4000                                  	; 17/01/2025
  4001                                  	;stosw 		; interpolated sample (L)
  4002                                  	;pop	eax ; *	
  4003                                  	;sub	ah, 80h	; -32768 to +32767 format again
  4004                                  	;stosw 		; interpolated sample (R)
  4005                                  	; 17/01/2025
  4006 00001C6F AB                      	stosd
  4007 00001C70 C3                      	retn
  4008                                  
  4009                                  interpolating_5_8bit_mono:
  4010                                  	; 17/11/2023
  4011                                  	; al = [previous_val]
  4012                                  	; dl = [next_val]
  4013                                  	; original-interpltd-interpltd-interpltd-interpltd
  4014 00001C71 88C3                    	mov	bl, al
  4015 00001C73 2C80                    	sub	al, 80h
  4016 00001C75 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4017 00001C79 66AB                    	stosw		; original sample (L)
  4018 00001C7B 66AB                    	stosw		; original sample (R)
  4019 00001C7D 88D8                    	mov	al, bl
  4020 00001C7F 00D0                    	add	al, dl	
  4021 00001C81 D0D8                    	rcr	al, 1
  4022 00001C83 88C7                    	mov	bh, al	; interpolated middle (temporary)
  4023 00001C85 00D8                    	add	al, bl  ; [previous_val]
  4024 00001C87 D0D8                    	rcr	al, 1 	
  4025 00001C89 88C6                    	mov	dh, al	; interpolated 1st quarter (temporary)
  4026 00001C8B 00D8                    	add	al, bl
  4027 00001C8D D0D8                    	rcr	al, 1
  4028 00001C8F 2C80                    	sub	al, 80h
  4029 00001C91 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4030 00001C95 66AB                    	stosw		; interpolated sample 1 (L)
  4031 00001C97 66AB                    	stosw		; interpolated sample 1 (R)
  4032 00001C99 88F8                    	mov	al, bh
  4033 00001C9B 00F0                    	add	al, dh
  4034 00001C9D D0D8                    	rcr	al, 1
  4035 00001C9F 2C80                    	sub	al, 80h
  4036 00001CA1 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4037 00001CA5 66AB                    	stosw		; interpolated sample 2 (L)
  4038 00001CA7 66AB                    	stosw		; interpolated sample 2 (R)
  4039 00001CA9 88F8                    	mov	al, bh
  4040 00001CAB 00D0                    	add	al, dl	; [next_val]
  4041 00001CAD D0D8                    	rcr	al, 1
  4042 00001CAF 88C6                    	mov	dh, al	; interpolated 3rd quarter (temporary)
  4043 00001CB1 00F8                    	add	al, bh
  4044 00001CB3 D0D8                    	rcr	al, 1
  4045 00001CB5 2C80                    	sub	al, 80h
  4046 00001CB7 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4047 00001CBB 66AB                    	stosw		; interpolated sample 3 (L)
  4048 00001CBD 66AB                    	stosw		; interpolated sample 3 (R)
  4049 00001CBF 88F0                    	mov	al, dh
  4050 00001CC1 00D0                    	add	al, dl
  4051 00001CC3 D0D8                    	rcr	al, 1
  4052 00001CC5 2C80                    	sub	al, 80h
  4053 00001CC7 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4054 00001CCB 66AB                    	stosw		; interpolated sample 4 (L)
  4055 00001CCD 66AB                    	stosw		; interpolated sample 4 (R)
  4056 00001CCF C3                      	retn
  4057                                  
  4058                                  interpolating_5_8bit_stereo:
  4059                                  	; 17/11/2023
  4060                                  	; al = [previous_val_l]
  4061                                  	; ah = [previous_val_r]
  4062                                  	; dl = [next_val_l]
  4063                                  	; dh = [next_val_r]	
  4064                                  	; original-interpltd-interpltd-interpltd-interpltd
  4065 00001CD0 89C3                    	mov	ebx, eax
  4066 00001CD2 2C80                    	sub	al, 80h
  4067 00001CD4 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4068 00001CD8 66AB                    	stosw		; original sample (L)
  4069 00001CDA 88F8                    	mov	al, bh
  4070 00001CDC 2C80                    	sub	al, 80h
  4071 00001CDE 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4072 00001CE2 66AB                    	stosw		; original sample (R)
  4073 00001CE4 52                      	push	edx ; *
  4074 00001CE5 88D8                    	mov	al, bl
  4075 00001CE7 00D0                    	add	al, dl	; [next_val_l]
  4076 00001CE9 D0D8                    	rcr	al, 1
  4077 00001CEB 50                      	push	eax ; **	; al = interpolated middle (L) (temporary)
  4078 00001CEC 00D8                    	add	al, bl	; [previous_val_l]
  4079 00001CEE D0D8                    	rcr	al, 1
  4080 00001CF0 86D8                    	xchg	al, bl	
  4081 00001CF2 00D8                    	add	al, bl	; bl = interpolated 1st quarter (L) (temp)
  4082 00001CF4 D0D8                    	rcr	al, 1
  4083 00001CF6 2C80                    	sub	al, 80h
  4084 00001CF8 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4085 00001CFC 66AB                    	stosw		; interpolated sample 1 (L)
  4086 00001CFE 88F8                    	mov	al, bh
  4087 00001D00 00F0                    	add	al, dh	; [next_val_r]
  4088 00001D02 D0D8                    	rcr	al, 1
  4089 00001D04 50                      	push	eax ; *** ; al = interpolated middle (R) (temporary)
  4090 00001D05 00F8                    	add	al, bh	; [previous_val_r]
  4091 00001D07 D0D8                    	rcr	al, 1
  4092 00001D09 86F8                    	xchg	al, bh	
  4093 00001D0B 00F8                    	add	al, bh	; bh = interpolated 1st quarter (R) (temp)
  4094 00001D0D D0D8                    	rcr	al, 1
  4095 00001D0F 2C80                    	sub	al, 80h
  4096 00001D11 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4097 00001D15 66AB                    	stosw		; interpolated sample 1 (R)
  4098 00001D17 5A                      	pop	edx ; ***
  4099 00001D18 58                      	pop	eax ; **	; al = interpolated middle (L) (temporary)
  4100 00001D19 86D8                    	xchg	al, bl	; al = interpolated 1st quarter (L) (temp)
  4101 00001D1B 00D8                    	add	al, bl	; bl = interpolated middle (L) (temporary)
  4102 00001D1D D0D8                    	rcr	al, 1
  4103 00001D1F 2C80                    	sub	al, 80h
  4104 00001D21 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4105 00001D25 66AB                    	stosw		; interpolated sample 2 (L)	
  4106 00001D27 88D0                    	mov	al, dl 	; interpolated middle (R) (temporary)
  4107 00001D29 86F8                    	xchg	al, bh	; al = interpolated 1st quarter (R) (temp)
  4108 00001D2B 00F8                    	add	al, bh	; bh = interpolated middle (R) (temporary)
  4109 00001D2D D0D8                    	rcr	al, 1
  4110 00001D2F 2C80                    	sub	al, 80h
  4111 00001D31 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4112 00001D35 66AB                    	stosw		; interpolated sample 2 (R)
  4113 00001D37 5A                      	pop	edx ; *
  4114 00001D38 88D8                    	mov	al, bl	; interpolated middle (L) (temporary)
  4115 00001D3A 00D0                    	add	al, dl	; [next_val_l]
  4116 00001D3C D0D8                    	rcr	al, 1
  4117 00001D3E 86D8                    	xchg	al, bl	; al = interpolated middle (R) (temporary)	
  4118 00001D40 00D8                    	add	al, bl	; bl = interpolated 3rd quarter (L) (temp) 
  4119 00001D42 D0D8                    	rcr	al, 1
  4120 00001D44 2C80                    	sub	al, 80h
  4121 00001D46 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4122 00001D4A 66AB                    	stosw		; interpolated sample 3 (L)
  4123 00001D4C 88F8                    	mov	al, bh	
  4124 00001D4E 00F0                    	add	al, dh	; interpolated middle (R) + [next_val_r]
  4125 00001D50 D0D8                    	rcr	al, 1
  4126 00001D52 86F8                    	xchg	al, bh	; al = interpolated middle (R)
  4127 00001D54 00F8                    	add	al, bh	; bh = interpolated 3rd quarter (R) (temp)
  4128 00001D56 D0D8                    	rcr	al, 1
  4129 00001D58 2C80                    	sub	al, 80h
  4130 00001D5A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4131 00001D5E 66AB                    	stosw		; interpolated sample 3 (R)
  4132 00001D60 88D8                    	mov	al, bl
  4133 00001D62 00D0                    	add	al, dl	; [next_val_l]
  4134 00001D64 D0D8                    	rcr	al, 1
  4135 00001D66 2C80                    	sub	al, 80h
  4136 00001D68 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4137 00001D6C 66AB                    	stosw		; interpolated sample 4 (L)
  4138 00001D6E 88F8                    	mov	al, bh
  4139 00001D70 00F0                    	add	al, dh	; [next_val_r]
  4140 00001D72 D0D8                    	rcr	al, 1
  4141 00001D74 2C80                    	sub	al, 80h
  4142 00001D76 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4143 00001D7A 66AB                    	stosw		; interpolated sample 4 (R)
  4144 00001D7C C3                      	retn
  4145                                  
  4146                                  interpolating_4_8bit_mono:
  4147                                  	; 17/11/2023
  4148                                  	; al = [previous_val]
  4149                                  	; dl = [next_val]
  4150                                  	; original-interpolated-interpolated-interpolated
  4151 00001D7D 88C3                    	mov	bl, al
  4152 00001D7F 2C80                    	sub	al, 80h
  4153 00001D81 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4154 00001D85 66AB                    	stosw		; original sample (L)
  4155 00001D87 66AB                    	stosw		; original sample (R)
  4156 00001D89 88D8                    	mov	al, bl
  4157 00001D8B 00D0                    	add	al, dl	
  4158 00001D8D D0D8                    	rcr	al, 1
  4159 00001D8F 86D8                    	xchg	al, bl  ; al = [previous_val]
  4160 00001D91 00D8                    	add	al, bl	; bl = interpolated middle (sample 2)
  4161 00001D93 D0D8                    	rcr	al, 1 	
  4162 00001D95 2C80                    	sub	al, 80h
  4163 00001D97 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4164 00001D9B 66AB                    	stosw		; interpolated sample 1 (L)
  4165 00001D9D 66AB                    	stosw		; interpolated sample 1 (R)
  4166 00001D9F 88D8                    	mov	al, bl	; interpolated middle (sample 2)
  4167 00001DA1 2C80                    	sub	al, 80h
  4168 00001DA3 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4169 00001DA7 66AB                    	stosw		; interpolated sample 2 (L)
  4170 00001DA9 66AB                    	stosw		; interpolated sample 2 (R)
  4171 00001DAB 88D8                    	mov	al, bl
  4172 00001DAD 00D0                    	add	al, dl	; [next_val]
  4173 00001DAF D0D8                    	rcr	al, 1
  4174 00001DB1 2C80                    	sub	al, 80h
  4175 00001DB3 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4176 00001DB7 66AB                    	stosw		; interpolated sample 3 (L)
  4177 00001DB9 66AB                    	stosw		; interpolated sample 3 (R)
  4178 00001DBB C3                      	retn
  4179                                  
  4180                                  interpolating_4_8bit_stereo:
  4181                                  	; 17/11/2023
  4182                                  	; al = [previous_val_l]
  4183                                  	; ah = [previous_val_r]
  4184                                  	; dl = [next_val_l]
  4185                                  	; dh = [next_val_r]	
  4186                                  	; original-interpolated-interpolated-interpolated
  4187 00001DBC 89C3                    	mov	ebx, eax
  4188 00001DBE 2C80                    	sub	al, 80h
  4189 00001DC0 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4190 00001DC4 66AB                    	stosw		; original sample (L)
  4191 00001DC6 88F8                    	mov	al, bh
  4192 00001DC8 2C80                    	sub	al, 80h
  4193 00001DCA 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4194 00001DCE 66AB                    	stosw		; original sample (R)
  4195 00001DD0 88D8                    	mov	al, bl
  4196 00001DD2 00D0                    	add	al, dl	; [next_val_l]
  4197 00001DD4 D0D8                    	rcr	al, 1
  4198 00001DD6 86D8                    	xchg	al, bl	; al = [previous_val_l]
  4199 00001DD8 00D8                    	add	al, bl	; bl = interpolated middle (L) (sample 2)
  4200 00001DDA D0D8                    	rcr	al, 1
  4201 00001DDC 2C80                    	sub	al, 80h
  4202 00001DDE 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4203 00001DE2 66AB                    	stosw		; interpolated sample 1 (L)
  4204 00001DE4 88F8                    	mov	al, bh
  4205 00001DE6 00F0                    	add	al, dh	; [next_val_r]
  4206 00001DE8 D0D8                    	rcr	al, 1
  4207 00001DEA 86F8                    	xchg	al, bh	; al = [previous_val_h]
  4208 00001DEC 00F8                    	add	al, bh	; bh = interpolated middle (R) (sample 2)
  4209 00001DEE D0D8                    	rcr	al, 1
  4210 00001DF0 2C80                    	sub	al, 80h
  4211 00001DF2 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4212 00001DF6 66AB                    	stosw		; interpolated sample 1 (R)
  4213 00001DF8 88D8                    	mov	al, bl	; interpolated middle (L) (sample 2)
  4214 00001DFA 2C80                    	sub	al, 80h
  4215 00001DFC 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4216 00001E00 66AB                    	stosw		; interpolated sample 2 (L)
  4217 00001E02 88F8                    	mov	al, bh	; interpolated middle (L) (sample 2)
  4218 00001E04 2C80                    	sub	al, 80h
  4219 00001E06 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4220 00001E0A 66AB                    	stosw		; interpolated sample 2 (L)
  4221 00001E0C 88D8                    	mov	al, bl
  4222 00001E0E 00D0                    	add	al, dl	; [next_val_l]
  4223 00001E10 D0D8                    	rcr	al, 1
  4224 00001E12 2C80                    	sub	al, 80h
  4225 00001E14 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4226 00001E18 66AB                    	stosw		; interpolated sample 3 (L)
  4227 00001E1A 88F8                    	mov	al, bh
  4228 00001E1C 00F0                    	add	al, dh	; [next_val_r]
  4229 00001E1E D0D8                    	rcr	al, 1
  4230 00001E20 2C80                    	sub	al, 80h
  4231 00001E22 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4232 00001E26 66AB                    	stosw		; interpolated sample 3 (R)
  4233 00001E28 C3                      	retn
  4234                                  
  4235                                  interpolating_5_16bit_mono:
  4236                                  	; 18/11/2023
  4237                                  	; ax = [previous_val]
  4238                                  	; dx = [next_val]
  4239                                  	; original-interpltd-interpltd-interpltd-interpltd
  4240 00001E29 66AB                    	stosw		; original sample (L)
  4241 00001E2B 66AB                    	stosw		; original sample (R)
  4242 00001E2D 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4243 00001E30 89C3                    	mov	ebx, eax ; [previous_val]
  4244 00001E32 80C680                  	add	dh, 80h
  4245 00001E35 6601D0                  	add	ax, dx
  4246 00001E38 66D1D8                  	rcr	ax, 1
  4247 00001E3B 50                      	push	eax ; *	; interpolated middle (temporary)
  4248 00001E3C 6601D8                  	add	ax, bx	; interpolated middle + [previous_val] 
  4249 00001E3F 66D1D8                  	rcr	ax, 1
  4250 00001E42 50                      	push	eax ; **	; interpolated 1st quarter (temporary)
  4251 00001E43 6601D8                  	add	ax, bx	; 1st quarter + [previous_val]
  4252 00001E46 66D1D8                  	rcr	ax, 1	
  4253 00001E49 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4254 00001E4C 66AB                    	stosw 		; interpolated sample 1 (L)
  4255 00001E4E 66AB                    	stosw		; interpolated sample 1 (R)
  4256 00001E50 58                      	pop	eax ; **	
  4257 00001E51 5B                      	pop	ebx ; *
  4258 00001E52 6601D8                  	add	ax, bx	; 1st quarter + middle
  4259 00001E55 66D1D8                  	rcr	ax, 1	; / 2
  4260 00001E58 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again	
  4261 00001E5B 66AB                    	stosw		; interpolated sample 2 (L)
  4262 00001E5D 66AB                    	stosw		; interpolated sample 2 (R)		
  4263 00001E5F 89D8                    	mov	eax, ebx
  4264 00001E61 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  4265 00001E64 66D1D8                  	rcr	ax, 1
  4266 00001E67 50                      	push	eax ; *	; interpolated 3rd quarter (temporary)
  4267 00001E68 6601D8                  	add	ax, bx	; + interpolated middle
  4268 00001E6B 66D1D8                  	rcr	ax, 1
  4269 00001E6E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4270 00001E71 66AB                    	stosw		; interpolated sample 3 (L)
  4271 00001E73 66AB                    	stosw		; interpolated sample 3 (R)
  4272 00001E75 58                      	pop	eax ; *	
  4273 00001E76 6601D0                  	add	ax, dx	; 3rd quarter + [next_val]
  4274 00001E79 66D1D8                  	rcr	ax, 1	; / 2
  4275 00001E7C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4276 00001E7F 66AB                    	stosw		; interpolated sample 4 (L)
  4277 00001E81 66AB                    	stosw		; interpolated sample 4 (R)
  4278 00001E83 C3                      	retn
  4279                                  
  4280                                  interpolating_5_16bit_stereo:
  4281                                  	; 18/11/2023
  4282                                  	; bx = [previous_val_l]
  4283                                  	; ax = [previous_val_r]
  4284                                  	; [next_val_l]
  4285                                  	; [next_val_r]
  4286                                  	; original-interpltd-interpltd-interpltd-interpltd
  4287 00001E84 51                      	push	ecx ; !
  4288 00001E85 93                      	xchg	eax, ebx
  4289 00001E86 66AB                    	stosw		; original sample (L)
  4290 00001E88 93                      	xchg	eax, ebx
  4291 00001E89 66AB                    	stosw		; original sample (R)
  4292 00001E8B 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4293 00001E8E 50                      	push	eax ; *	; [previous_val_r]
  4294 00001E8F 80C780                  	add	bh, 80h
  4295 00001E92 8005[0E200000]80        	add	byte [next_val_l+1], 80h
  4296 00001E99 66A1[0D200000]          	mov	ax, [next_val_l]
  4297 00001E9F 6601D8                  	add	ax, bx	; [previous_val_l]
  4298 00001EA2 66D1D8                  	rcr	ax, 1
  4299 00001EA5 89C1                    	mov	ecx, eax ; interpolated middle (L)
  4300 00001EA7 6601D8                  	add	ax, bx	
  4301 00001EAA 66D1D8                  	rcr	ax, 1
  4302 00001EAD 89C2                    	mov	edx, eax ; interpolated 1st quarter (L)	
  4303 00001EAF 6601D8                  	add	ax, bx	; [previous_val_l]
  4304 00001EB2 66D1D8                  	rcr	ax, 1
  4305 00001EB5 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4306 00001EB8 66AB                    	stosw 		; interpolated sample 1 (L)
  4307 00001EBA 89C8                    	mov	eax, ecx
  4308 00001EBC 6601D0                  	add	ax, dx	; middle (L) + 1st quarter (L) 
  4309 00001EBF 66D1D8                  	rcr	ax, 1	; / 2
  4310 00001EC2 89C3                    	mov	ebx, eax  ; interpolated sample 2 (L)
  4311 00001EC4 5A                      	pop	edx ; *	; [previous_val_r]
  4312 00001EC5 89D0                    	mov	eax, edx
  4313 00001EC7 8005[10200000]80        	add	byte [next_val_r+1], 80h
  4314 00001ECE 660305[0F200000]        	add	ax, [next_val_r]
  4315 00001ED5 66D1D8                  	rcr	ax, 1
  4316 00001ED8 50                      	push	eax ; *	; interpolated middle (R)
  4317 00001ED9 6601D0                  	add	ax, dx
  4318 00001EDC 66D1D8                  	rcr	ax, 1
  4319 00001EDF 50                      	push	eax ; ** ; interpolated 1st quarter (R)
  4320 00001EE0 6601D0                  	add	ax, dx	; [previous_val_r]
  4321 00001EE3 66D1D8                  	rcr	ax, 1
  4322 00001EE6 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4323 00001EE9 66AB                    	stosw 		; interpolated sample 1 (R)
  4324 00001EEB 89D8                    	mov	eax, ebx
  4325 00001EED 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4326 00001EF0 66AB                    	stosw 		; interpolated sample 2 (L)
  4327 00001EF2 58                      	pop	eax ; **
  4328 00001EF3 5A                      	pop	edx ; *
  4329 00001EF4 6601D0                  	add	ax, dx	; 1st quarter (R) + middle (R)
  4330 00001EF7 66D1D8                  	rcr	ax, 1	; / 2
  4331 00001EFA 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4332 00001EFD 66AB                    	stosw 		; interpolated sample 2 (R)
  4333 00001EFF 89C8                    	mov	eax, ecx
  4334 00001F01 660305[0D200000]        	add	ax, [next_val_l]
  4335 00001F08 66D1D8                  	rcr	ax, 1
  4336 00001F0B 50                      	push	eax ; * ; interpolated 3rd quarter (L)
  4337 00001F0C 6601C8                  	add	ax, cx	; interpolated middle (L)
  4338 00001F0F 66D1D8                  	rcr	ax, 1
  4339 00001F12 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4340 00001F15 66AB                    	stosw 		; interpolated sample 3 (L)
  4341 00001F17 89D0                    	mov	eax, edx
  4342 00001F19 660305[0F200000]        	add	ax, [next_val_r]
  4343 00001F20 66D1D8                  	rcr	ax, 1
  4344 00001F23 50                      	push	eax ; ** ; interpolated 3rd quarter (R)
  4345 00001F24 6601D0                  	add	ax, dx	; interpolated middle (R)
  4346 00001F27 66D1D8                  	rcr	ax, 1
  4347 00001F2A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4348 00001F2D 66AB                    	stosw 		; interpolated sample 3 (R)
  4349 00001F2F 5B                      	pop	ebx ; **
  4350 00001F30 58                      	pop	eax ; *
  4351 00001F31 660305[0D200000]        	add	ax, [next_val_l]
  4352 00001F38 66D1D8                  	rcr	ax, 1
  4353 00001F3B 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4354 00001F3E 66AB                    	stosw 		; interpolated sample 4 (L)
  4355 00001F40 89D8                    	mov	eax, ebx	
  4356 00001F42 660305[0F200000]        	add	ax, [next_val_r]
  4357 00001F49 66D1D8                  	rcr	ax, 1
  4358 00001F4C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4359 00001F4F 66AB                    	stosw 		; interpolated sample 4 (R)
  4360 00001F51 59                      	pop	ecx ; !
  4361 00001F52 C3                      	retn
  4362                                  
  4363                                  interpolating_4_16bit_mono:
  4364                                  	; 18/11/2023
  4365                                  	; ax = [previous_val]
  4366                                  	; dx = [next_val]
  4367                                  	; original-interpolated
  4368                                  
  4369 00001F53 66AB                    	stosw		; original sample (L)
  4370 00001F55 66AB                    	stosw		; original sample (R)
  4371 00001F57 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4372 00001F5A 89C3                    	mov	ebx, eax ; [previous_val]
  4373 00001F5C 80C680                  	add	dh, 80h
  4374 00001F5F 6601D0                  	add	ax, dx	; [previous_val] + [next_val]
  4375 00001F62 66D1D8                  	rcr	ax, 1
  4376 00001F65 93                      	xchg	eax, ebx	
  4377 00001F66 6601D8                  	add	ax, bx	; [previous_val] + interpolated middle
  4378 00001F69 66D1D8                  	rcr	ax, 1
  4379 00001F6C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4380 00001F6F 66AB                    	stosw 		; interpolated sample 1 (L)
  4381 00001F71 66AB                    	stosw		; interpolated sample 1 (R)
  4382 00001F73 89D8                    	mov	eax, ebx ; interpolated middle
  4383 00001F75 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4384 00001F78 66AB                    	stosw 		; interpolated sample 2 (L)
  4385 00001F7A 66AB                    	stosw		; interpolated sample 2 (R)
  4386 00001F7C 89D8                    	mov	eax, ebx
  4387 00001F7E 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  4388 00001F81 66D1D8                  	rcr	ax, 1
  4389 00001F84 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4390 00001F87 66AB                    	stosw		; interpolated sample 3 (L)
  4391 00001F89 66AB                    	stosw		; interpolated sample 3 (R)
  4392 00001F8B C3                      	retn
  4393                                  
  4394                                  interpolating_4_16bit_stereo:
  4395                                  	; 18/11/2023
  4396                                  	; bx = [previous_val_l]
  4397                                  	; ax = [previous_val_r]
  4398                                  	; [next_val_l]
  4399                                  	; [next_val_r]
  4400                                  	; original-interpolated-interpolated-interpolated
  4401 00001F8C 93                      	xchg	eax, ebx
  4402 00001F8D 66AB                    	stosw		; original sample (L)
  4403 00001F8F 93                      	xchg	eax, ebx
  4404 00001F90 66AB                    	stosw		; original sample (R)
  4405 00001F92 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4406 00001F95 89C2                    	mov	edx, eax ; [previous_val_r]
  4407 00001F97 80C780                  	add	bh, 80h
  4408 00001F9A 8005[0E200000]80        	add	byte [next_val_l+1], 80h
  4409 00001FA1 66A1[0D200000]          	mov	ax, [next_val_l]
  4410 00001FA7 6601D8                  	add	ax, bx	; [previous_val_l]
  4411 00001FAA 66D1D8                  	rcr	ax, 1
  4412 00001FAD 93                      	xchg	eax, ebx	
  4413 00001FAE 6601D8                  	add	ax, bx	; bx = interpolated middle (L)
  4414 00001FB1 66D1D8                  	rcr	ax, 1
  4415 00001FB4 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4416 00001FB7 66AB                    	stosw 		; interpolated sample 1 (L)
  4417 00001FB9 8005[10200000]80        	add	byte [next_val_r+1], 80h
  4418 00001FC0 89D0                    	mov	eax, edx ; [previous_val_r]
  4419 00001FC2 660305[0F200000]        	add	ax, [next_val_r]
  4420 00001FC9 66D1D8                  	rcr	ax, 1
  4421 00001FCC 92                      	xchg	eax, edx	
  4422 00001FCD 6601D0                  	add	ax, dx	; dx = interpolated middle (R)
  4423 00001FD0 66D1D8                  	rcr	ax, 1
  4424 00001FD3 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4425 00001FD6 66AB                    	stosw 		; interpolated sample 1 (R)
  4426 00001FD8 89D8                    	mov	eax, ebx
  4427 00001FDA 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4428 00001FDD 66AB                    	stosw 		; interpolated sample 2 (L)
  4429 00001FDF 89D0                    	mov	eax, edx
  4430 00001FE1 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4431 00001FE4 66AB                    	stosw 		; interpolated sample 2 (R)
  4432 00001FE6 89D8                    	mov	eax, ebx
  4433 00001FE8 660305[0D200000]        	add	ax, [next_val_l]
  4434 00001FEF 66D1D8                  	rcr	ax, 1
  4435 00001FF2 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4436 00001FF5 66AB                    	stosw 		; interpolated sample 3 (L)
  4437 00001FF7 89D0                    	mov	eax, edx
  4438 00001FF9 660305[0F200000]        	add	ax, [next_val_r]
  4439 00002000 66D1D8                  	rcr	ax, 1
  4440 00002003 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4441 00002006 66AB                    	stosw 		; interpolated sample 3 (R)
  4442 00002008 C3                      	retn
  4443                                  
  4444                                  ; 13/11/2023
  4445                                  previous_val:
  4446 00002009 0000                    previous_val_l: dw 0
  4447 0000200B 0000                    previous_val_r: dw 0
  4448                                  next_val:
  4449 0000200D 0000                    next_val_l: dw 0
  4450 0000200F 0000                    next_val_r: dw 0
  4451                                  
  4452                                  ; 16/11/2023
  4453 00002011 00                      faz:	db 0	
  4454                                  	
  4455                                  ; --------------------------------------------------------
  4456                                  ; 27/05/2024 - (TRDOS 386 Kernel) audio.s
  4457                                  ; --------------------------------------------------------
  4458                                  
  4459                                  NOT_PCI32_PCI16	EQU 03FFFFFFFh ; NOT BIT31+BIT30 ; 19/03/2017
  4460                                  NOT_BIT31 EQU 7FFFFFFFh
  4461                                  
  4462                                  pciFindDevice:
  4463                                  	; 19/11/2023
  4464                                  	; 03/04/2017 ('pci.asm', 20/03/2017)
  4465                                  	;
  4466                                  	; scan through PCI space looking for a device+vendor ID
  4467                                  	;
  4468                                  	; Entry: EAX=Device+Vendor ID
  4469                                  	;
  4470                                  	; Exit: EAX=PCI address if device found
  4471                                  	;	EDX=Device+Vendor ID
  4472                                  	;       CY clear if found, set if not found. EAX invalid if CY set.
  4473                                  	;
  4474                                  	; Destroys: ebx, edi ; 19/11/2023
  4475                                  
  4476                                          ; 19/11/2023
  4477 00002012 89C3                    	mov	ebx, eax
  4478 00002014 BF00000080              	mov	edi, 80000000h
  4479                                  nextPCIdevice:
  4480 00002019 89F8                    	mov 	eax, edi		; read PCI registers
  4481 0000201B E88C000000              	call	pciRegRead32
  4482                                  	; 19/11/2023
  4483 00002020 39DA                    	cmp	edx, ebx
  4484 00002022 7412                    	je	short PCIScanExit	; found
  4485                                  	; 19/11/2023
  4486 00002024 81FF00F8FF80            	cmp	edi, 80FFF800h
  4487 0000202A 7308                    	jnb	short pfd_nf		; not found
  4488 0000202C 81C700010000            	add	edi, 100h
  4489 00002032 EBE5                    	jmp	short nextPCIdevice
  4490                                  pfd_nf:
  4491 00002034 F9                      	stc
  4492 00002035 C3                      	retn
  4493                                  PCIScanExit:
  4494                                  	;pushf
  4495 00002036 B8FFFFFF7F              	mov	eax, NOT_BIT31 	; 19/03/2017
  4496 0000203B 21F8                    	and	eax, edi	; return only bus/dev/fn #
  4497 0000203D C3                      	retn
  4498                                  
  4499                                  pciRegRead:
  4500                                  	; 03/04/2017 ('pci.asm', 20/03/2017)
  4501                                  	;
  4502                                  	; 8/16/32bit PCI reader
  4503                                  	;
  4504                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  4505                                  	;           BIT30 set if 32 bit access requested
  4506                                  	;           BIT29 set if 16 bit access requested
  4507                                  	;           otherwise defaults to 8 bit read
  4508                                  	;
  4509                                  	; Exit:  DL,DX,EDX register data depending on requested read size
  4510                                  	;
  4511                                  	; Note1: this routine is meant to be called via pciRegRead8,
  4512                                  	;	 pciRegread16 or pciRegRead32, listed below.
  4513                                  	;
  4514                                  	; Note2: don't attempt to read 32 bits of data from a non dword
  4515                                  	;	 aligned reg number. Likewise, don't do 16 bit reads from
  4516                                  	;	 non word aligned reg #
  4517                                  	
  4518 0000203E 53                      	push	ebx
  4519 0000203F 51                      	push	ecx
  4520 00002040 89C3                            mov     ebx, eax		; save eax, dh
  4521 00002042 88F1                            mov     cl, dh
  4522                                  
  4523 00002044 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  4524 00002049 0D00000080                      or      eax, BIT31		; make a PCI access request
  4525 0000204E 24FC                            and     al, ~3 ; NOT 3		; force index to be dword
  4526                                  
  4527 00002050 66BAF80C                        mov     dx, PCI_INDEX_PORT
  4528                                          ;out	dx, eax			; write PCI selector
  4529                                  	; 29/05/2024
  4530 00002054 53                      	push	ebx
  4531 00002055 89C3                    	mov	ebx, eax ; data, dword
  4532 00002057 B405                    	mov	ah, 5 ; write port, dword
  4533                                  	; dx = port number
  4534 00002059 CD34                    	int	34h
  4535 0000205B 5B                      	pop	ebx
  4536                                  	
  4537 0000205C 66BAFC0C                        mov     dx, PCI_DATA_PORT
  4538 00002060 88D8                            mov     al, bl
  4539 00002062 2403                            and     al, 3			; figure out which port to
  4540 00002064 00C2                            add     dl, al			; read to
  4541                                  
  4542 00002066 F7C3000000C0            	test    ebx, PCI32+PCI16
  4543 0000206C 750A                            jnz     short _pregr0
  4544                                  
  4545                                  	;in	al, dx			; return 8 bits of data
  4546                                  	; 29/05/2024
  4547 0000206E B400                    	mov	ah, 0 ; read port, byte
  4548                                  	; dx = port number
  4549 00002070 CD34                    	int	34h
  4550                                          
  4551 00002072 88C2                    	mov	dl, al
  4552 00002074 88CE                    	mov     dh, cl			; restore dh for 8 bit read
  4553 00002076 EB17                    	jmp	short _pregr2
  4554                                  _pregr0:	
  4555 00002078 F7C300000080            	test    ebx, PCI32
  4556 0000207E 7509                            jnz	short _pregr1
  4557                                  
  4558                                  	;in	ax, dx
  4559                                  	; 29/05/2024
  4560 00002080 B402                    	mov	ah, 2 ; read port, word
  4561                                  	; dx = port number
  4562 00002082 CD34                    	int	34h	        
  4563                                  
  4564 00002084 6689C2                  	mov     dx, ax			; return 16 bits of data
  4565 00002087 EB06                    	jmp	short _pregr2
  4566                                  _pregr1:
  4567                                  	;in	eax, dx			; return 32 bits of data
  4568                                  	; 29/05/2024
  4569 00002089 B404                    	mov	ah, 4 ; read port, dword
  4570                                  	; dx = port number
  4571 0000208B CD34                    	int	34h
  4572                                  
  4573 0000208D 89C2                    	mov	edx, eax
  4574                                  _pregr2:
  4575 0000208F 89D8                    	mov     eax, ebx		; restore eax
  4576 00002091 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  4577 00002096 59                      	pop	ecx
  4578 00002097 5B                      	pop	ebx
  4579 00002098 C3                      	retn
  4580                                  
  4581                                  pciRegRead8:
  4582 00002099 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 8 bit read size
  4583 0000209E EB9E                            jmp     short pciRegRead	; call generic PCI access
  4584                                  
  4585                                  pciRegRead16:
  4586 000020A0 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 16 bit read size
  4587 000020A5 0D00000040                      or      eax, PCI16		; call generic PCI access
  4588 000020AA EB92                            jmp     short pciRegRead
  4589                                  
  4590                                  pciRegRead32:
  4591 000020AC 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 32 bit read size
  4592 000020B1 0D00000080                      or      eax, PCI32		; call generic PCI access
  4593 000020B6 EB86                            jmp     pciRegRead
  4594                                  
  4595                                  pciRegWrite:
  4596                                  	; 03/04/2017 ('pci.asm', 29/11/2016)
  4597                                  	;
  4598                                  	; 8/16/32bit PCI writer
  4599                                  	;
  4600                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  4601                                  	;           BIT31 set if 32 bit access requested
  4602                                  	;           BIT30 set if 16 bit access requested
  4603                                  	;           otherwise defaults to 8bit read
  4604                                  	;        DL/DX/EDX data to write depending on size
  4605                                  	;
  4606                                  	; Note1: this routine is meant to be called via pciRegWrite8, 
  4607                                  	;	 pciRegWrite16 or pciRegWrite32 as detailed below.
  4608                                  	;
  4609                                  	; Note2: don't attempt to write 32bits of data from a non dword
  4610                                  	;	 aligned reg number. Likewise, don't do 16 bit writes from
  4611                                  	;	 non word aligned reg #
  4612                                  
  4613 000020B8 53                      	push	ebx
  4614 000020B9 51                      	push	ecx
  4615 000020BA 89C3                            mov     ebx, eax		; save eax, edx
  4616 000020BC 89D1                            mov     ecx, edx
  4617 000020BE 25FFFFFF3F              	and     eax, NOT_PCI32_PCI16	; clear out data size request
  4618 000020C3 0D00000080                      or      eax, BIT31		; make a PCI access request
  4619 000020C8 24FC                            and     al, ~3 ; NOT 3		; force index to be dword
  4620                                  
  4621 000020CA 66BAF80C                        mov     dx, PCI_INDEX_PORT
  4622                                  	;out	dx, eax			; write PCI selector
  4623                                  	; 29/05/2024
  4624 000020CE 53                      	push	ebx
  4625 000020CF 89C3                    	mov	ebx, eax ; data, dword
  4626 000020D1 B405                    	mov	ah, 5 ; write port, dword
  4627                                  	; dx = port number
  4628 000020D3 CD34                    	int	34h
  4629 000020D5 5B                      	pop	ebx
  4630                                  	
  4631 000020D6 66BAFC0C                        mov     dx, PCI_DATA_PORT
  4632 000020DA 88D8                            mov     al, bl
  4633 000020DC 2403                            and     al, 3			; figure out which port to
  4634 000020DE 00C2                            add     dl, al			; write to
  4635                                  
  4636 000020E0 F7C3000000C0            	test    ebx, PCI32+PCI16
  4637 000020E6 7508                            jnz     short _pregw0
  4638 000020E8 88C8                    	mov	al, cl 			; put data into al
  4639                                  	;out	dx, al
  4640                                  	; 29/05/2024
  4641                                  	; al = data, byte
  4642 000020EA B401                    	mov	ah, 1 ; write port, byte
  4643                                  	; dx = port number
  4644 000020EC CD34                    	int	34h
  4645                                  
  4646 000020EE EB1F                    	jmp	short _pregw2
  4647                                  _pregw0:
  4648 000020F0 F7C300000080            	test    ebx, PCI32
  4649 000020F6 750D                            jnz     short _pregw1
  4650 000020F8 6689C8                  	mov	ax, cx			; put data into ax
  4651                                  	;out	dx, ax
  4652                                  	; 29/05/2024
  4653 000020FB 53                      	push	ebx
  4654 000020FC 89C3                    	mov	ebx, eax ; data, word
  4655 000020FE B403                    	mov	ah, 3 ; write port, word
  4656                                  	; dx = port number
  4657 00002100 CD34                    	int	34h
  4658 00002102 5B                      	pop	ebx
  4659                                  
  4660 00002103 EB0A                    	jmp	short _pregw2
  4661                                  _pregw1:
  4662 00002105 89C8                    	mov	eax, ecx		; put data into eax
  4663                                  	;out	dx, eax
  4664                                  	; 29/05/2024
  4665 00002107 53                      	push	ebx
  4666 00002108 89C3                    	mov	ebx, eax ; data, dword
  4667 0000210A B405                    	mov	ah, 5 ; write port, dword
  4668                                  	; dx = port number
  4669 0000210C CD34                    	int	34h
  4670 0000210E 5B                      	pop	ebx
  4671                                  _pregw2:
  4672 0000210F 89D8                            mov     eax, ebx		; restore eax
  4673 00002111 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  4674 00002116 89CA                            mov     edx, ecx		; restore dx
  4675 00002118 59                      	pop	ecx
  4676 00002119 5B                      	pop	ebx
  4677 0000211A C3                      	retn
  4678                                  
  4679                                  pciRegWrite8:
  4680 0000211B 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 8 bit write size
  4681 00002120 EB96                            jmp	short pciRegWrite	; call generic PCI access
  4682                                  
  4683                                  pciRegWrite16:
  4684 00002122 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 16 bit write size
  4685 00002127 0D00000040                      or      eax, PCI16		; call generic PCI access
  4686 0000212C EB8A                            jmp	short pciRegWrite
  4687                                  
  4688                                  pciRegWrite32:
  4689 0000212E 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 32 bit write size
  4690 00002133 0D00000080                      or      eax, PCI32		; call generic PCI access
  4691 00002138 E97BFFFFFF                      jmp	pciRegWrite
  4692                                  
  4693                                  ; --------------------------------------------------------
  4694                                  ; 19/05/2024 - (playwav4.asm) ac97_vra.asm
  4695                                  ; --------------------------------------------------------
  4696                                  
  4697                                  	; 13/11/2023
  4698                                  
  4699                                  ;VRA:	db 1
  4700                                  
  4701                                  codecConfig:
  4702                                  	; 29/05/2024 (playwav7.s modification)
  4703                                  	; 19/05/2024
  4704                                  	; 19/11/2023
  4705                                  	; 15/11/2023
  4706                                  	; 04/11/2023
  4707                                  	; 17/02/2017 
  4708                                  	; 07/11/2016 (Erdogan Tan)
  4709                                  
  4710                                  	;AC97_EA_VRA equ 1
  4711                                  	AC97_EA_VRA equ BIT0
  4712                                  
  4713                                  	; 04/11/2023
  4714                                  init_ac97_controller:
  4715 0000213D A1[92280000]            	mov	eax, [bus_dev_fn]
  4716 00002142 B004                    	mov	al, PCI_CMD_REG
  4717 00002144 E857FFFFFF              	call	pciRegRead16		; read PCI command register
  4718 00002149 80CA05                  	or      dl, IO_ENA+BM_ENA	; enable IO and bus master
  4719 0000214C E8D1FFFFFF              	call	pciRegWrite16
  4720                                  
  4721                                  	;call	delay_100ms
  4722                                  
  4723                                  	; 19/05/2024
  4724                                  	; ('PLAYMOD3.ASM', Erdogan Tan, 18/05/2024)
  4725                                  
  4726                                  init_ac97_codec:
  4727                                  	; 18/11/2023
  4728 00002151 BD28000000              	mov	ebp, 40
  4729                                  	; 29/05/2024
  4730                                  	;mov	ebp, 1000
  4731                                  _initc_1:
  4732                                  	; 29/05/2024
  4733 00002156 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  4734 0000215A 660315[98280000]        	add	dx, [NABMBAR]
  4735                                  	;in	eax, dx
  4736 00002161 B404                    	mov	ah, 4	; read port, dword
  4737 00002163 CD34                    	int	34h
  4738                                  
  4739                                  	; 19/05/2024
  4740                                  	;call	delay1_4ms
  4741                                  
  4742 00002165 83F8FF                  	cmp	eax, 0FFFFFFFFh ; -1
  4743 00002168 750A                    	jne	short _initc_3
  4744                                  _initc_2:
  4745 0000216A 4D                      	dec	ebp
  4746 0000216B 7425                    	jz	short _ac97_codec_ready
  4747                                  
  4748                                  	; 31/05/2024
  4749 0000216D E886020000              	call	delay_100ms
  4750 00002172 EBE2                    	jmp	short _initc_1
  4751                                  _initc_3:
  4752 00002174 A900030010              	test	eax, CTRL_ST_CREADY
  4753 00002179 7517                    	jnz	short _ac97_codec_ready
  4754                                  
  4755                                  	; 30/05/2024
  4756 0000217B 803D[E3240000]01        	cmp	byte [reset], 1
  4757 00002182 73E6                    	jnb	short _initc_2
  4758                                  
  4759 00002184 E893010000              	call	reset_ac97_codec
  4760                                  	; 30/05/2024
  4761 00002189 C605[E3240000]01        	mov	byte [reset], 1
  4762                                  	; 19/05/2024
  4763 00002190 EBD8                    	jmp	short _initc_2
  4764                                  
  4765                                  _ac97_codec_ready:
  4766 00002192 668B15[96280000]        	mov	dx, [NAMBAR]
  4767                                  	;add	dx, 0 ; ac_reg_0 ; reset register
  4768                                  	;out	dx, ax
  4769                                  	; 29/05/2024
  4770 00002199 53                      	push	ebx
  4771 0000219A 89C3                    	mov	ebx, eax ; bx = data, word
  4772 0000219C B403                    	mov	ah, 3	; write port, word
  4773 0000219E CD34                    	int	34h
  4774 000021A0 5B                      	pop	ebx
  4775                                  
  4776                                  	; 31/05/2024
  4777                                  	; 29/05/2024
  4778                                  	;call	delay_100ms
  4779                                  
  4780                                  	; 19/11/2023
  4781 000021A1 09ED                    	or	ebp, ebp
  4782 000021A3 7539                    	jnz	short _ac97_codec_init_ok
  4783                                  
  4784 000021A5 31C0                    	xor	eax, eax ; 0
  4785 000021A7 668B15[96280000]        	mov	dx, [NAMBAR]
  4786 000021AE 6683C226                	add	dx, CODEC_REG_POWERDOWN
  4787                                  	;out	dx, ax
  4788                                  	; 29/05/2024
  4789 000021B2 53                      	push	ebx
  4790 000021B3 89C3                    	mov	ebx, eax
  4791 000021B5 B403                    	mov	ah, 3	; write port, word
  4792 000021B7 CD34                    	int	34h
  4793 000021B9 5B                      	pop	ebx
  4794                                  	
  4795                                  	; 19/11/2023
  4796                                  	; wait for 1 second
  4797                                  	; 19/05/2024
  4798 000021BA B9E8030000              	mov	ecx, 1000 ; 1000*4*0.25ms = 1s
  4799                                  	;;mov	ecx, 10
  4800                                  	; 30/05/2024
  4801                                  	;mov	ecx, 40
  4802                                  _ac97_codec_rloop:
  4803                                  	;call	delay_100ms
  4804                                  	; 31/05/2024
  4805 000021BF E843020000              	call	delay1_4ms
  4806                                  
  4807                                  	;mov	dx, [NAMBAR]
  4808                                  	;add	dx, CODEC_REG_POWERDOWN
  4809                                  	;in	ax, dx
  4810                                  	; 29/05/2024
  4811 000021C4 668B15[96280000]        	mov	dx, [NAMBAR]
  4812 000021CB 6683C226                	add	dx, CODEC_REG_POWERDOWN
  4813                                  	; 31/05/2024
  4814 000021CF B402                    	mov	ah, 2	; read port, word
  4815 000021D1 CD34                    	int	34h
  4816                                  
  4817                                  	; 31/05/2024
  4818                                  	;call	delay1_4ms
  4819                                  	
  4820 000021D3 6683E00F                	and	ax, 0Fh
  4821 000021D7 3C0F                    	cmp	al, 0Fh
  4822 000021D9 7403                    	je	short _ac97_codec_init_ok
  4823 000021DB E2E2                    	loop	_ac97_codec_rloop 
  4824                                  
  4825                                  init_ac97_codec_err1:
  4826                                  	;stc	; cf = 1 ; 19/05/2024
  4827                                  init_ac97_codec_err2:
  4828 000021DD C3                      	retn
  4829                                  
  4830                                  _ac97_codec_init_ok:
  4831 000021DE E8DA000000              	call 	reset_ac97_controller
  4832                                  
  4833                                  	; 31/05/2024
  4834                                  	; 30/05/2024
  4835                                  	; 19/05/2024
  4836                                  	;call	delay_100ms
  4837                                  
  4838                                  	; 30/05/2024
  4839                                  	;call	delay1_4ms
  4840                                  	;call	delay1_4ms
  4841                                  	;call	delay1_4ms
  4842                                  	;call	delay1_4ms
  4843                                  
  4844                                  setup_ac97_codec:
  4845                                  	; 12/11/2023
  4846 000021E3 66813D[1A280000]80-     	cmp	word [sample_rate], 48000
  4846 000021EB BB                 
  4847 000021EC 0F849C000000            	je	skip_rate
  4848                                  	
  4849                                  	; 31/05/2024
  4850                                  	; 30/05/2024
  4851                                  	; 29/05/2024
  4852                                  	;cmp	byte [VRA], 0
  4853                                  	;jna	short skip_rate
  4854                                  
  4855                                  	; 11/11/2023
  4856 000021F2 668B15[96280000]        	mov	dx, [NAMBAR]
  4857 000021F9 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4858                                  	;in	ax, dx
  4859                                  	; 29/05/2024
  4860 000021FD B402                    	mov	ah, 2 ; read port, word
  4861 000021FF CD34                    	int	34h
  4862                                  
  4863                                  	; 30/05/2024
  4864                                  	; 19/05/2024
  4865 00002201 E801020000              	call	delay1_4ms
  4866                                  
  4867                                  	;and	al, ~BIT1 ; Clear DRA
  4868                                  	;;;
  4869                                  	; 30/05/2024
  4870 00002206 24FC                    	and	al, ~(BIT1+BIT0) ; Clear DRA+VRA
  4871                                  	;out	dx, ax
  4872                                  	; 31/05/2024
  4873 00002208 53                      	push	ebx
  4874 00002209 89C3                    	mov	ebx, eax
  4875 0000220B 668B15[96280000]        	mov	dx, [NAMBAR]
  4876 00002212 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4877 00002216 B403                    	mov	ah, 3 ; write port, word
  4878 00002218 CD34                    	int	34h
  4879 0000221A 5B                      	pop	ebx
  4880                                  
  4881                                  	; 31/05/2024
  4882 0000221B E8B1010000              	call	check_vra
  4883                                  
  4884                                  	; 31/05/2024 - temporary (interpolated sample rate test)
  4885                                  	;mov	byte [VRA], 0
  4886                                  
  4887                                  	; 31/05/2024
  4888 00002220 803D[1D280000]00        	cmp	byte [VRA], 0
  4889 00002227 7665                    	jna	short skip_rate
  4890                                  
  4891 00002229 668B15[96280000]        	mov	dx, [NAMBAR]
  4892 00002230 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4893                                  	;in	ax, dx
  4894                                  	; 31/05/2024
  4895 00002234 B402                    	mov	ah, 2 ; read port, word
  4896 00002236 CD34                    	int	34h
  4897                                  
  4898                                  	;and	al, ~BIT1 ; Clear DRA
  4899                                  	;;;
  4900                                  
  4901 00002238 0C01                    	or	al, AC97_EA_VRA ; 1 ; 04/11/2023
  4902                                  	;out	dx, ax			; Enable variable rate audio
  4903                                  	; 29/05/2024
  4904 0000223A 53                      	push	ebx
  4905 0000223B 89C3                    	mov	ebx, eax
  4906                                  	;
  4907                                  	; 30/05/2024
  4908 0000223D 668B15[96280000]        	mov	dx, [NAMBAR]
  4909 00002244 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4910                                  	;
  4911 00002248 B403                    	mov	ah, 3 ; write port, word
  4912 0000224A CD34                    	int	34h
  4913 0000224C 5B                      	pop	ebx
  4914                                  
  4915                                  	;mov	cx, 10
  4916 0000224D B90A000000              	mov	ecx, 10 ; 30/05/2024
  4917                                  check_vra_loop:
  4918                                  	; 31/05/2024
  4919                                  	;call	delay_100ms
  4920                                  	; 30/05/2024
  4921 00002252 E8B0010000              	call	delay1_4ms
  4922                                  
  4923                                  	; 11/11/2023
  4924                                  	;in	ax, dx
  4925                                  	; 29/05/2024
  4926 00002257 668B15[96280000]        	mov	dx, [NAMBAR]
  4927 0000225E 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4928 00002262 B402                    	mov	ah, 2 ; read port, word
  4929 00002264 CD34                    	int	34h
  4930                                  
  4931 00002266 A801                    	test	al, AC97_EA_VRA ; 1
  4932 00002268 750B                    	jnz	short set_rate
  4933                                  
  4934                                  	; 11/11/2023
  4935 0000226A E2E6                    	loop	check_vra_loop
  4936                                  
  4937                                  ;vra_not_supported:	; 19/05/2024
  4938 0000226C C605[1D280000]00        	mov	byte [VRA], 0
  4939 00002273 EB19                    	jmp	short skip_rate
  4940                                  
  4941                                  set_rate:
  4942 00002275 66A1[1A280000]          	mov	ax, [sample_rate] ; 17/02/2017 (Erdogan Tan)
  4943                                  
  4944 0000227B 668B15[96280000]        	mov    	dx, [NAMBAR]               	
  4945 00002282 6683C22C                	add    	dx, CODEC_PCM_FRONT_DACRATE_REG	; 2Ch  	  
  4946                                  	;out	dx, ax 			; PCM Front/Center Output Sample Rate
  4947                                  	; 29/05/2024
  4948 00002286 53                      	push	ebx
  4949 00002287 89C3                    	mov	ebx, eax  ; bx = data, word
  4950 00002289 B403                    	mov	ah, 3 ; write port, word
  4951 0000228B CD34                    	int	34h
  4952 0000228D 5B                      	pop	ebx
  4953                                  
  4954                                  	; 29/05/2024
  4955                                  	;call	delay_100ms
  4956                                  	; 30/05/2024
  4957                                  	;call	delay1_4ms
  4958                                  
  4959                                  	; 12/11/2023
  4960                                  skip_rate:
  4961 0000228E 66B80202                	mov	ax, 0202h
  4962 00002292 668B15[96280000]          	mov	dx, [NAMBAR]
  4963 00002299 6683C202                  	add	dx, CODEC_MASTER_VOL_REG	;02h 
  4964                                  	;out	dx, ax
  4965                                  	; 29/05/2024
  4966 0000229D 53                      	push	ebx
  4967 0000229E 89C3                    	mov	ebx, eax  ; bx = data, word
  4968 000022A0 B403                    	mov	ah, 3 ; write port, word
  4969 000022A2 CD34                    	int	34h
  4970 000022A4 5B                      	pop	ebx
  4971                                  
  4972                                  	; 29/05/2024
  4973                                  	;call	delay1_4ms
  4974                                  	;call	delay1_4ms
  4975                                  	;call	delay1_4ms
  4976                                  	;call	delay1_4ms
  4977                                  
  4978 000022A5 66B80202                	mov	ax, 0202h
  4979 000022A9 668B15[96280000]          	mov	dx, [NAMBAR]
  4980 000022B0 6683C218                  	add	dx, CODEC_PCM_OUT_REG		;18h 
  4981                                    	;out	dx, ax
  4982                                  	; 29/05/2024
  4983 000022B4 53                      	push	ebx
  4984 000022B5 89C3                    	mov	ebx, eax  ; bx = data, word
  4985 000022B7 B403                    	mov	ah, 3 ; write port, word
  4986 000022B9 CD34                    	int	34h
  4987 000022BB 5B                      	pop	ebx
  4988                                  
  4989                                   	; 29/05/2024
  4990                                  	;call	delay1_4ms
  4991                                  	;call	delay1_4ms
  4992                                  	;call	delay1_4ms
  4993                                  	;call	delay1_4ms
  4994                                  
  4995                                  	; 19/05/2024
  4996                                  	;clc
  4997                                  
  4998 000022BC C3                              retn
  4999                                  
  5000                                  reset_ac97_controller:
  5001                                  	; 29/05/2024 (TRDOS 386)
  5002                                  	; 19/05/2024
  5003                                  	; 11/11/2023
  5004                                  	; 10/06/2017
  5005                                  	; 29/05/2017
  5006                                  	; 28/05/2017
  5007                                  	; reset AC97 audio controller registers
  5008 000022BD 31C0                    	xor	eax, eax
  5009 000022BF 66BA0B00                        mov	dx, PI_CR_REG
  5010 000022C3 660315[98280000]        	add	dx, [NABMBAR]
  5011                                  	;out	dx, al
  5012                                  	; 29/05/2024
  5013                                  	; al = data, byte
  5014 000022CA B401                    	mov	ah, 1 ; write port, byte
  5015 000022CC CD34                    	int	34h
  5016                                  
  5017                                  	; 19/05/2024
  5018                                  	;call	delay1_4ms
  5019                                  
  5020 000022CE 66BA1B00                        mov     dx, PO_CR_REG
  5021 000022D2 660315[98280000]        	add	dx, [NABMBAR]
  5022                                  	;out	dx, al
  5023                                  	; 29/05/2024
  5024                                  	; al = data, byte
  5025 000022D9 B401                    	mov	ah, 1 ; write port, byte
  5026 000022DB CD34                    	int	34h
  5027                                  
  5028                                  	; 19/05/2024
  5029                                  	;call	delay1_4ms
  5030                                  
  5031 000022DD 66BA2B00                        mov     dx, MC_CR_REG
  5032 000022E1 660315[98280000]        	add	dx, [NABMBAR]
  5033                                  	;out	dx, al
  5034                                  	; 29/05/2024
  5035                                  	; al = data, byte
  5036 000022E8 B401                    	mov	ah, 1 ; write port, byte
  5037 000022EA CD34                    	int	34h
  5038                                  
  5039                                  	; 19/05/2024
  5040                                  	;call	delay1_4ms
  5041                                  
  5042 000022EC B002                            mov	al, RR
  5043 000022EE 66BA0B00                        mov	dx, PI_CR_REG
  5044 000022F2 660315[98280000]        	add	dx, [NABMBAR]
  5045                                  	;out	dx, al
  5046                                  	; 29/05/2024
  5047                                  	; al = data, byte
  5048 000022F9 B401                    	mov	ah, 1 ; write port, byte
  5049 000022FB CD34                    	int	34h
  5050                                  
  5051                                  	; 19/05/2024
  5052                                  	;call	delay1_4ms
  5053                                  
  5054 000022FD 66BA1B00                        mov	dx, PO_CR_REG
  5055 00002301 660315[98280000]        	add	dx, [NABMBAR]
  5056                                  	;out	dx, al
  5057                                  	; 29/05/2024
  5058                                  	; al = data, byte
  5059 00002308 B401                    	mov	ah, 1 ; write port, byte
  5060 0000230A CD34                    	int	34h
  5061                                  
  5062                                  	; 19/05/2024
  5063                                  	;call	delay1_4ms
  5064                                  
  5065 0000230C 66BA2B00                        mov	dx, MC_CR_REG
  5066 00002310 660315[98280000]        	add	dx, [NABMBAR]
  5067                                  	;out	dx, al
  5068                                  	; 29/05/2024
  5069                                  	; al = data, byte
  5070 00002317 B401                    	mov	ah, 1 ; write port, byte
  5071 00002319 CD34                    	int	34h
  5072                                  
  5073                                  	; 19/05/2024
  5074                                  	;call	delay1_4ms
  5075                                  
  5076 0000231B C3                      	retn
  5077                                  
  5078                                  reset_ac97_codec:
  5079                                  	; 29/05/2024 (TRDOS 386)
  5080                                  	; 11/11/2023
  5081                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  5082 0000231C 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5083 00002320 660315[98280000]        	add	dx, [NABMBAR]
  5084                                  	;in	eax, dx
  5085                                  	; 29/05/2024
  5086 00002327 B404                    	mov	ah, 4 ; read port, dword
  5087 00002329 CD34                    	int	34h
  5088                                  
  5089                                  	;test	eax, 2
  5090                                  	; 06/08/2022
  5091 0000232B A802                    	test	al, 2
  5092 0000232D 7407                    	jz	short _r_ac97codec_cold	
  5093                                  
  5094 0000232F E80F000000              	call	warm_ac97codec_reset
  5095 00002334 7308                    	jnc	short _r_ac97codec_ok
  5096                                  _r_ac97codec_cold:
  5097 00002336 E845000000                      call	cold_ac97codec_reset
  5098 0000233B 7301                            jnc	short _r_ac97codec_ok
  5099                                  	
  5100                                  	; 16/04/2017
  5101                                          ;xor	eax, eax	; timeout error
  5102                                         	;stc
  5103 0000233D C3                      	retn
  5104                                  
  5105                                  _r_ac97codec_ok:
  5106 0000233E 31C0                            xor     eax, eax
  5107                                          ;mov	al, VIA_ACLINK_C00_READY ; 1
  5108 00002340 FEC0                            inc	al
  5109 00002342 C3                      	retn
  5110                                  
  5111                                  warm_ac97codec_reset:
  5112                                  	; 29/05/2024 (TRDOS 386)
  5113                                  	; 11/11/2023
  5114                                  	; 06/08/2022 - TRDOS 386 v2.0.5
  5115                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  5116 00002343 B806000000              	mov	eax, 6
  5117 00002348 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5118 0000234C 660315[98280000]        	add	dx, [NABMBAR]
  5119                                  	;out	dx, eax
  5120                                  	; 29/05/2024
  5121 00002353 53                      	push	ebx
  5122 00002354 89C3                    	mov	ebx, eax  ; ebx = data, dword
  5123 00002356 B405                    	mov	ah, 5 ; write port, dword
  5124 00002358 CD34                    	int	34h
  5125 0000235A 5B                      	pop	ebx
  5126                                  
  5127                                  	; 30/05/2024
  5128 0000235B B90A000000              	mov	ecx, 10	; total 1s
  5129                                  	; 29/05/2024
  5130                                  	;mov	ecx, 4000
  5131                                  _warm_ac97c_rst_wait:
  5132                                  	; 30/05/2024
  5133 00002360 E893000000              	call	delay_100ms
  5134                                  
  5135 00002365 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  5136 00002369 660315[98280000]        	add	dx, [NABMBAR]
  5137                                  	;in	eax, dx
  5138                                  	; 29/05/2024
  5139 00002370 B404                    	mov	ah, 4 ; read port, dword
  5140 00002372 CD34                    	int	34h
  5141                                  
  5142 00002374 A900030010              	test	eax, CTRL_ST_CREADY
  5143 00002379 7504                    	jnz	short _warm_ac97c_rst_ok
  5144                                  
  5145 0000237B 49                      	dec	ecx
  5146 0000237C 75E2                    	jnz	short _warm_ac97c_rst_wait
  5147                                  
  5148                                  _warm_ac97c_rst_fail:
  5149 0000237E F9                              stc
  5150                                  _warm_ac97c_rst_ok:
  5151 0000237F C3                      	retn
  5152                                  
  5153                                  cold_ac97codec_reset:
  5154                                  	; 11/11/2023
  5155                                  	; 06/08/2022 - TRDOS 386 v2.0.5
  5156                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  5157 00002380 B802000000                      mov	eax, 2
  5158 00002385 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5159 00002389 660315[98280000]        	add	dx, [NABMBAR]
  5160                                  	;out	dx, eax
  5161                                  	; 29/05/2024
  5162 00002390 53                      	push	ebx
  5163 00002391 89C3                    	mov	ebx, eax  ; ebx = data, dword
  5164 00002393 B405                    	mov	ah, 5 ; write port, dword
  5165 00002395 CD34                    	int	34h
  5166 00002397 5B                      	pop	ebx
  5167                                  
  5168                                  	; 30/05/2024
  5169 00002398 E85B000000              	call	delay_100ms 	; wait 100 ms
  5170 0000239D E856000000              	call	delay_100ms 	; wait 100 ms
  5171 000023A2 E851000000              	call	delay_100ms 	; wait 100 ms
  5172 000023A7 E84C000000              	call	delay_100ms 	; wait 100 ms
  5173                                  
  5174                                  	; 30/05/2024
  5175 000023AC B910000000              	mov	ecx, 16	; total 20*100 ms = 2s
  5176                                  	; 29/05/2024
  5177                                  	;mov	ecx, 16000
  5178                                  _cold_ac97c_rst_wait:
  5179 000023B1 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  5180 000023B5 660315[98280000]        	add	dx, [NABMBAR]
  5181                                  	;in	eax, dx
  5182                                  	; 29/05/2024
  5183 000023BC B404                    	mov	ah, 4 ; read port, dword
  5184 000023BE CD34                    	int	34h
  5185                                  
  5186 000023C0 A900030010              	test	eax, CTRL_ST_CREADY
  5187 000023C5 7509                    	jnz	short _cold_ac97c_rst_ok
  5188                                  
  5189                                  	; 30/05/2024
  5190                                  	; 29/05/2024
  5191 000023C7 E82C000000              	call	delay_100ms
  5192                                  
  5193 000023CC 49                      	dec	ecx
  5194 000023CD 75E2                    	jnz	short _cold_ac97c_rst_wait
  5195                                  
  5196                                  _cold_ac97c_rst_fail:
  5197 000023CF F9                              stc
  5198                                  _cold_ac97c_rst_ok:
  5199 000023D0 C3                      	retn
  5200                                  
  5201                                  ; 30/05/2024
  5202                                  %if 1
  5203                                  check_vra:
  5204                                  	; 29/05/2024
  5205 000023D1 C605[1D280000]01        	mov	byte [VRA], 1
  5206                                  
  5207                                  	; 29/05/2024 - audio.s (TRDOS 386 Kernel) - 27/05/2024
  5208                                  	; 24/05/2024
  5209                                  	; 23/05/2024
  5210 000023D8 668B15[96280000]        	mov	dx, [NAMBAR]
  5211 000023DF 6683C228                	add	dx, CODEC_EXT_AUDIO_REG	; 28h
  5212                                  	;in	ax, dx
  5213                                  	; 29/05/2024
  5214 000023E3 B402                    	mov	ah, 2 ; read port, word
  5215 000023E5 CD34                    	int	34h
  5216                                  
  5217                                  	; 30/05/2024
  5218                                  	; 23/05/2024
  5219 000023E7 E81B000000              	call	delay1_4ms
  5220                                  
  5221                                  	; 29/05/2024
  5222 000023EC A801                    	test	al, BIT0
  5223                                  	;test	al, 1 ; BIT0 ; Variable Rate Audio bit
  5224 000023EE 7507                    	jnz	short check_vra_ok
  5225                                  
  5226                                  vra_not_supported:
  5227                                  	; 13/11/2023
  5228 000023F0 C605[1D280000]00        	mov	byte [VRA], 0
  5229                                  check_vra_ok:
  5230 000023F7 C3                      	retn
  5231                                  %endif
  5232                                  
  5233                                  ; --------------------------------------------------------
  5234                                  
  5235                                  PORTB		EQU 061h
  5236                                  REFRESH_STATUS	EQU 010h	; Refresh signal status
  5237                                  
  5238                                  delay_100ms:
  5239 000023F8 51                      	push	ecx
  5240 000023F9 B990010000              	mov	ecx, 400  ; 400*0.25ms
  5241                                  _delay_x_ms:
  5242 000023FE E804000000              	call	delay1_4ms
  5243 00002403 E2F9                            loop	_delay_x_ms
  5244 00002405 59                      	pop	ecx
  5245 00002406 C3                      	retn
  5246                                  
  5247                                  delay1_4ms:
  5248                                  	; 30/05/2024 (TRDOS 386)
  5249 00002407 50                              push    eax 
  5250 00002408 51                              push    ecx
  5251 00002409 53                      	push	ebx
  5252 0000240A 52                      	push	edx
  5253 0000240B B910000000                      mov     ecx, 16			; close enough.
  5254                                  	;in	al, PORTB
  5255                                  	; 30/05/2024
  5256 00002410 66BA6100                	mov	dx, PORTB
  5257 00002414 B400                    	mov	ah, 0  ; read port, byte
  5258 00002416 CD34                    	int	34h
  5259                                  
  5260 00002418 2410                    	and	al, REFRESH_STATUS
  5261                                  	;mov	ah, al			; Start toggle state
  5262 0000241A 88C3                    	mov	bl, al
  5263 0000241C 09C9                    	or	ecx, ecx
  5264 0000241E 7401                    	jz	short _d4ms1
  5265 00002420 41                      	inc	ecx			; Throwaway first toggle
  5266                                  _d4ms1:	
  5267                                  	;in	al, PORTB		; Read system control port
  5268                                  	; 30/05/2024
  5269 00002421 66BA6100                	mov	dx, PORTB
  5270 00002425 B400                    	mov	ah, 0  ; read port, byte
  5271 00002427 CD34                    	int	34h
  5272                                  
  5273 00002429 2410                    	and	al, REFRESH_STATUS	; Refresh toggles 15.085 microseconds
  5274                                  	;cmp	ah, al
  5275 0000242B 38C3                    	cmp	bl, al
  5276 0000242D 74F2                    	je	short _d4ms1		; Wait for state change
  5277                                  
  5278                                  	;mov	ah, al			; Update with new state
  5279 0000242F 88C3                    	mov	bl, al
  5280 00002431 49                      	dec	ecx
  5281 00002432 75ED                    	jnz	short _d4ms1
  5282                                  
  5283 00002434 5A                      	pop	edx
  5284 00002435 5B                              pop	ebx
  5285 00002436 59                      	pop	ecx
  5286 00002437 58                              pop	eax
  5287 00002438 C3                              retn
  5288                                  
  5289                                  ; --------------------------------------------------------
  5290                                  ; 19/05/2024 - (playwav4.asm) ich_wav4.asm
  5291                                  ; --------------------------------------------------------
  5292                                  
  5293                                  check4keyboardstop:
  5294                                  	; 29/05/2024 (TRDOS 386)
  5295                                  	; 19/05/2024
  5296                                  	; 08/11/2023
  5297                                  	; 06/11/2023
  5298                                  	; 04/11/2023
  5299 00002439 B401                    	mov	ah, 1
  5300                                  	;int	16h
  5301 0000243B CD32                    	int	32h	; TRDOS 386
  5302                                  	;clc
  5303 0000243D 743E                    	jz	short _cksr
  5304                                  
  5305 0000243F 30E4                    	xor	ah, ah
  5306                                  	;int	16h
  5307 00002441 CD32                    	int	32h	; TRDOS 386
  5308                                  
  5309                                  	;;;
  5310                                  	; 19/05/2024 (change PCM out volume)
  5311 00002443 3C2B                    	cmp	al, '+'
  5312 00002445 750D                    	jne	short p_1
  5313                                  	
  5314 00002447 A0[DE240000]            	mov	al, [volume]
  5315 0000244C 3C00                    	cmp	al, 0
  5316 0000244E 762E                    	jna	short p_3
  5317 00002450 FEC8                    	dec	al
  5318 00002452 EB0F                    	jmp	short p_2
  5319                                  p_1:
  5320 00002454 3C2D                    	cmp	al, '-'
  5321 00002456 7527                    	jne	short p_4
  5322                                  
  5323 00002458 A0[DE240000]            	mov	al, [volume]
  5324 0000245D 3C1F                    	cmp	al, 31
  5325 0000245F 731D                    	jnb	short p_3
  5326 00002461 FEC0                    	inc	al
  5327                                  p_2:
  5328 00002463 A2[DE240000]            	mov	[volume], al
  5329 00002468 88C4                    	mov	ah, al
  5330 0000246A 668B15[96280000]        	mov     dx, [NAMBAR]
  5331                                    	;add    dx, CODEC_MASTER_VOL_REG
  5332 00002471 6683C218                	add	dx, CODEC_PCM_OUT_REG
  5333                                  	;out	dx, ax
  5334                                  	; 29/05/2024
  5335 00002475 53                      	push	ebx
  5336 00002476 89C3                    	mov	ebx, eax ; bx = data, word
  5337 00002478 B403                    	mov	ah, 3 ; write port, word
  5338 0000247A CD34                    	int	34h
  5339 0000247C 5B                      	pop	ebx
  5340                                  
  5341                                  	;call	delay1_4ms
  5342                                          ;call	delay1_4ms
  5343                                          ;call	delay1_4ms
  5344                                          ;call	delay1_4ms
  5345                                  _cksr:		; 19/05/2024
  5346 0000247D F8                      	clc
  5347                                  p_3:
  5348 0000247E C3                      	retn
  5349                                  p_4:
  5350                                  	;;;
  5351                                  ;_cskr:	
  5352 0000247F F9                      	stc
  5353 00002480 C3                      	retn
  5354                                  
  5355                                  ; returns AL = current index value
  5356                                  getCurrentIndex:
  5357                                  	; 29/05/2024 (TRDOS 386)
  5358                                  	; 08/11/2023
  5359 00002481 668B15[98280000]        	mov	dx, [NABMBAR]
  5360 00002488 6683C214                	add	dx, PO_CIV_REG
  5361                                  	;in	al, dx
  5362                                  	; 29/05/2024
  5363 0000248C B400                    	mov	ah, 0 ; read port, byte
  5364 0000248E CD34                    	int	34h
  5365                                  uLVI2:	;	06/11/2023
  5366 00002490 C3                      	retn
  5367                                  
  5368                                  updateLVI:
  5369                                  	; 29/05/2024 (TRDOS 386)
  5370                                  	; 08/11/2023
  5371                                  	; 07/11/2023
  5372                                  	; 06/11/2023
  5373 00002491 668B15[98280000]        	mov	dx, [NABMBAR]
  5374 00002498 6683C214                	add	dx, PO_CIV_REG
  5375                                  	; (Current Index Value and Last Valid Index value)
  5376                                  	;in	ax, dx
  5377                                  	; 29/05/2024
  5378 0000249C B402                    	mov	ah, 2 ; read port, word
  5379 0000249E CD34                    	int	34h
  5380                                  
  5381 000024A0 38E0                    	cmp	al, ah ; is current index = last index ?
  5382 000024A2 75EC                    	jne	short uLVI2
  5383                                  
  5384                                  	; 08/11/2023	
  5385 000024A4 E8D8FFFFFF              	call	getCurrentIndex
  5386                                   
  5387 000024A9 F605[1C280000]01        	test	byte [flags], ENDOFFILE
  5388                                  	;jnz	short uLVI1
  5389 000024B0 7418                    	jz	short uLVI0  ; 08/11/2023
  5390                                  
  5391                                  	; 08/11/2023
  5392 000024B2 50                      	push	eax	; 29/05/2024 (32 bit)
  5393 000024B3 668B15[98280000]        	mov	dx, [NABMBAR]
  5394 000024BA 6683C216                	add	dx, PO_SR_REG  ; PCM out status register
  5395                                  	;in	ax, dx
  5396                                  	; 29/05/2024
  5397 000024BE B402                    	mov	ah, 2 ; read port, word
  5398 000024C0 CD34                    	int	34h
  5399                                  
  5400 000024C2 A803                    	test	al, 3 ; bit 1 = Current Equals Last Valid (CELV)
  5401                                  		      ; (has been processed)
  5402                                  		      ; bit 0 = 1 -> DMA Controller Halted (DCH)
  5403 000024C4 58                      	pop	eax
  5404 000024C5 7407                    	jz	short uLVI1
  5405                                  uLVI3:
  5406 000024C7 31C0                    	xor	eax, eax
  5407                                  	; zf = 1
  5408 000024C9 C3                      	retn
  5409                                  uLVI0:
  5410                                          ; not at the end of the file yet.
  5411 000024CA FEC8                    	dec	al
  5412 000024CC 241F                    	and	al, 1Fh
  5413                                  uLVI1:
  5414                                  	;call	setLastValidIndex
  5415                                  ;uLVI2:
  5416                                  	;retn
  5417                                  
  5418                                  ;input AL = index # to stop on
  5419                                  setLastValidIndex:
  5420                                  	; 29/05/2024 (TRDOS 386)
  5421                                  	; 08/11/2023
  5422 000024CE 668B15[98280000]        	mov	dx, [NABMBAR]
  5423 000024D5 6683C215                	add	dx, PO_LVI_REG
  5424                                          ;out	dx, al
  5425                                  	; 29/05/2024
  5426                                  	; al = data, byte
  5427 000024D9 B401                    	mov	ah, 1 ; write port, byte
  5428 000024DB CD34                    	int	34h
  5429 000024DD C3                      	retn
  5430                                  
  5431                                  ; 29/05/2024
  5432                                  ; 19/05/2024
  5433 000024DE 02                      volume: db	02h
  5434                                  	
  5435                                  ; --------------------------------------------------------
  5436                                  
  5437                                  ; DATA
  5438                                  
  5439                                  FileHandle:	
  5440 000024DF FFFFFFFF                	dd	-1
  5441                                  
  5442                                  ; 30/05/2024
  5443 000024E3 00                      reset:	db	0
  5444                                  
  5445                                  Credits:
  5446 000024E4 54696E792057415620-     	db	'Tiny WAV Player for TRDOS 386 by Erdogan Tan. '
  5446 000024ED 506C6179657220666F-
  5446 000024F6 72205452444F532033-
  5446 000024FF 383620627920457264-
  5446 00002508 6F67616E2054616E2E-
  5446 00002511 20                 
  5447                                  	;;;db	'August 2020.',10,13,0
  5448                                  	;;db	'May 2024.',10,13,0
  5449                                  	;db	'December 2024.', 10,13,0
  5450 00002512 4A616E756172792032-     	db	'January 2025.', 10,13,0
  5450 0000251B 3032352E0A0D00     
  5451 00002522 31372F30362F323031-     	db	'17/06/2017', 10,13,0
  5451 0000252B 370A0D00           
  5452 0000252F 31382F30382F323032-     	db	'18/08/2020', 10,13,0
  5452 00002538 300A0D00           
  5453 0000253C 32372F31312F323032-     	db	'27/11/2023', 10,13,0
  5453 00002545 330A0D00           
  5454 00002549 32392F30352F323032-     	db	'29/05/2024', 10,13,0
  5454 00002552 340A0D00           
  5455 00002556 31342F31322F323032-     	db	'14/12/2024', 10,13,0
  5455 0000255F 340A0D00           
  5456 00002563 31372F30312F323032-     	db	'17/01/2025', 10,13,0
  5456 0000256C 350A0D00           
  5457                                  
  5458                                  msgAudioCardInfo:
  5459 00002570 666F7220496E74656C-     	db 	'for Intel AC97 (ICH) Audio Controller.', 10,13,0
  5459 00002579 204143393720284943-
  5459 00002582 482920417564696F20-
  5459 0000258B 436F6E74726F6C6C65-
  5459 00002594 722E0A0D00         
  5460                                  
  5461                                  msg_usage:
  5462 00002599 75736167653A20706C-     	db	'usage: playwav7 filename.wav',10,13,0 ; 29/05/2024
  5462 000025A2 617977617637206669-
  5462 000025AB 6C656E616D652E7761-
  5462 000025B4 760A0D00           
  5463                                  
  5464                                  noDevMsg:
  5465 000025B8 4572726F723A20556E-     	db	'Error: Unable to find AC97 audio device!'
  5465 000025C1 61626C6520746F2066-
  5465 000025CA 696E64204143393720-
  5465 000025D3 617564696F20646576-
  5465 000025DC 69636521           
  5466 000025E0 0A0D00                  	db	10,13,0
  5467                                  
  5468                                  noFileErrMsg:
  5469 000025E3 4572726F723A206669-     	db	'Error: file not found.',10,13,0
  5469 000025EC 6C65206E6F7420666F-
  5469 000025F5 756E642E0A0D00     
  5470                                  
  5471                                  msg_error:	; 29/05/2024
  5472                                  trdos386_err_msg:
  5473 000025FC 5452444F5320333836-     	db	'TRDOS 386 System call error !',10,13,0
  5473 00002605 2053797374656D2063-
  5473 0000260E 616C6C206572726F72-
  5473 00002617 20210A0D00         
  5474                                  
  5475                                  ; 29/05/2024
  5476                                  ; 11/11/2023
  5477                                  msg_init_err:
  5478 0000261C 0A0D                    	db	10,13
  5479 0000261E 4143393720436F6E74-     	db	"AC97 Controller/Codec initialization error !"
  5479 00002627 726F6C6C65722F436F-
  5479 00002630 64656320696E697469-
  5479 00002639 616C697A6174696F6E-
  5479 00002642 206572726F722021   
  5480 0000264A 0A0D00                  	db	10,13,0 ; 01/06/2024
  5481                                  
  5482                                  ; 25/11/2023
  5483                                  msg_no_vra:
  5484 0000264D 0A0D                    	db	10,13
  5485 0000264F 4E6F20565241207375-     	db	"No VRA support ! Only 48 kHZ sample rate supported !"
  5485 00002658 70706F72742021204F-
  5485 00002661 6E6C79203438206B48-
  5485 0000266A 5A2073616D706C6520-
  5485 00002673 726174652073757070-
  5485 0000267C 6F727465642021     
  5486 00002683 0A0D00                  	db	10,13,0
  5487                                  
  5488                                  ; 29/05/2024 (TRDOS 386)
  5489                                  ; 17/02/2017
  5490                                  ; Valid ICH device IDs
  5491                                  
  5492                                  valid_ids:
  5493 00002686 86801524                dd	(ICH_DID << 16) + INTEL_VID  	 ; 8086h:2415h
  5494 0000268A 86802524                dd	(ICH0_DID << 16) + INTEL_VID 	 ; 8086h:2425h
  5495 0000268E 86804524                dd	(ICH2_DID << 16) + INTEL_VID 	 ; 8086h:2445h
  5496 00002692 86808524                dd	(ICH3_DID << 16) + INTEL_VID 	 ; 8086h:2485h
  5497 00002696 8680C524                dd	(ICH4_DID << 16) + INTEL_VID 	 ; 8086h:24C5h
  5498 0000269A 8680D524                dd	(ICH5_DID << 16) + INTEL_VID 	 ; 8086h:24D5h
  5499 0000269E 86806E26                dd	(ICH6_DID << 16) + INTEL_VID 	 ; 8086h:266Eh
  5500 000026A2 8680A625                dd	(ESB6300_DID << 16) + INTEL_VID  ; 8086h:25A6h
  5501 000026A6 86809826                dd	(ESB631X_DID << 16) + INTEL_VID  ; 8086h:2698h
  5502 000026AA 8680DE27                dd	(ICH7_DID << 16) + INTEL_VID 	 ; 8086h:27DEh
  5503                                  ; 03/11/2023 - Erdogan Tan
  5504 000026AE 86809571                dd	(MX82440_DID << 16) + INTEL_VID  ; 8086h:7195h
  5505 000026B2 39101270                dd	(SI7012_DID << 16)  + SIS_VID	 ; 1039h:7012h
  5506 000026B6 DE10B101                dd 	(NFORCE_DID << 16)  + NVIDIA_VID ; 10DEh:01B1h
  5507 000026BA DE106A00                dd 	(NFORCE2_DID << 16) + NVIDIA_VID ; 10DEh:006Ah
  5508 000026BE 22106D74                dd 	(AMD8111_DID << 16) + AMD_VID 	 ; 1022h:746Dh
  5509 000026C2 22104574                dd 	(AMD768_DID << 16)  + AMD_VID 	 ; 1022h:7445h
  5510 000026C6 DE105900                dd 	(CK804_DID << 16) + NVIDIA_VID	 ; 10DEh:0059h
  5511 000026CA DE103A00                dd 	(MCP04_DID << 16) + NVIDIA_VID	 ; 10DEh:003Ah
  5512 000026CE DE108A00                dd 	(CK8_DID << 16) + NVIDIA_VID	 ; 1022h:008Ah
  5513 000026D2 DE10DA00                dd 	(NFORCE3_DID << 16) + NVIDIA_VID ; 10DEh:00DAh
  5514 000026D6 DE10EA00                dd 	(CK8S_DID << 16) + NVIDIA_VID	 ; 10DEh:00EAh
  5515                                  
  5516                                  valid_id_count:	equ ($ - valid_ids)>>2 ; 05/11/2023
  5517                                  
  5518 000026DA 0D0A5741562046696C-     msgWavFileName:	db 0Dh, 0Ah, "WAV File Name: ",0
  5518 000026E3 65204E616D653A2000 
  5519 000026EC 0D0A53616D706C6520-     msgSampleRate:	db 0Dh, 0Ah, "Sample Rate: "
  5519 000026F5 526174653A20       
  5520 000026FB 303030303020487A2C-     msgHertz:	db "00000 Hz, ", 0 
  5520 00002704 2000               
  5521 00002706 3820626974732C2000      msg8Bits:	db "8 bits, ", 0 
  5522 0000270F 4D6F6E6F0D0A00          msgMono:	db "Mono", 0Dh, 0Ah, 0
  5523 00002716 313620626974732C20-     msg16Bits:	db "16 bits, ", 0 
  5523 0000271F 00                 
  5524 00002720 53746572656F            msgStereo:	db "Stereo"
  5525 00002726 0D0A00                  nextline:	db 0Dh, 0Ah, 0
  5526                                  
  5527                                  ; 03/06/2017
  5528 00002729 303132333435363738-     hex_chars	db "0123456789ABCDEF", 0
  5528 00002732 3941424344454600   
  5529 0000273A 0D0A                    msgAC97Info	db 0Dh, 0Ah
  5530 0000273C 414339372041756469-     		db "AC97 Audio Controller & Codec Info", 0Dh, 0Ah 
  5530 00002745 6F20436F6E74726F6C-
  5530 0000274E 6C6572202620436F64-
  5530 00002757 656320496E666F0D0A 
  5531 00002760 56656E646F72204944-     		db "Vendor ID: "
  5531 00002769 3A20               
  5532 0000276B 303030306820446576-     msgVendorId	db "0000h Device ID: "
  5532 00002774 6963652049443A20   
  5533 0000277C 30303030680D0A          msgDevId	db "0000h", 0Dh, 0Ah
  5534 00002783 4275733A20              		db "Bus: "
  5535 00002788 303068204465766963-     msgBusNo	db "00h Device: "
  5535 00002791 653A20             
  5536 00002794 3030682046756E6374-     msgDevNo	db "00h Function: "
  5536 0000279D 696F6E3A20         
  5537 000027A2 303068                  msgFncNo	db "00h"
  5538 000027A5 0D0A                    		db 0Dh, 0Ah
  5539 000027A7 4E414D4241523A20        		db "NAMBAR: "
  5540 000027AF 30303030682020          msgNamBar	db "0000h  "
  5541 000027B6 4E41424D4241523A20      		db "NABMBAR: "
  5542 000027BF 303030306820204952-     msgNabmBar	db "0000h  IRQ: "
  5542 000027C8 513A20             
  5543 000027CB 3030                    msgIRQ		dw 3030h
  5544 000027CD 0D0A00                  		db 0Dh, 0Ah, 0
  5545                                  ; 25/11/2023
  5546 000027D0 56524120737570706F-     msgVRAheader:	db "VRA support: "
  5546 000027D9 72743A20           
  5547 000027DD 00                      		db 0	
  5548 000027DE 5945530D0A00            msgVRAyes:	db "YES", 0Dh, 0Ah, 0
  5549 000027E4 4E4F200D0A              msgVRAno:	db "NO ", 0Dh, 0Ah
  5550 000027E9 28496E746572706F6C-     		db "(Interpolated sample rate playing method)"
  5550 000027F2 617465642073616D70-
  5550 000027FB 6C6520726174652070-
  5550 00002804 6C6179696E67206D65-
  5550 0000280D 74686F6429         
  5551 00002812 0D0A00                  		db 0Dh, 0Ah, 0
  5552                                  EOF: 
  5553                                  
  5554                                  ; BSS
  5555                                  
  5556                                  bss_start:
  5557                                  
  5558                                  ABSOLUTE bss_start
  5559                                  
  5560 00002815 ??????                  alignb 4
  5561                                  
  5562 00002818 ??                      stmo:		resb 1 ; stereo or mono (1=stereo) 
  5563 00002819 ??                      bps:		resb 1 ; bits per sample (8,16)
  5564 0000281A ????                    sample_rate:	resw 1 ; Sample Frequency (Hz)
  5565                                  
  5566                                  ; 31/05/2024
  5567                                  ; 25/11/2023
  5568                                  ;bufferSize:	resd 1
  5569                                  
  5570 0000281C ??                      flags:		resb 1
  5571                                  
  5572                                  ; 29/05/2024
  5573                                  ;;cbs_busy:	resb 1
  5574                                  ;half_buff:	resb 1
  5575                                  ;srb:		resb 1
  5576                                  
  5577                                  ; 30/05/2024
  5578                                  ; 18/08/2020
  5579                                  ;volume_level:	resb 1
  5580                                  ; 25/11/2023
  5581 0000281D ??                      VRA:		resb 1	; Variable Rate Audio Support Status
  5582                                  
  5583 0000281E <res 1Ch>               smpRBuff:	resw 14 
  5584                                  
  5585                                  wav_file_name:
  5586 0000283A <res 50h>               		resb 80 ; wave file, path name (<= 80 bytes)
  5587                                  
  5588 0000288A ????                    		resw 1
  5589 0000288C ??                      ac97_int_ln_reg: resb 1
  5590 0000288D ??                      fbs_shift:	resb 1 ; 26/11/2023
  5591 0000288E ????????                dev_vendor:	resd 1
  5592 00002892 ????????                bus_dev_fn:	resd 1
  5593                                  ;ac97_NamBar:	resw 1
  5594                                  ;ac97_NabmBar:	resw 1
  5595                                  
  5596                                  ; 29/05/2024
  5597                                  ; 17/02/2017
  5598                                  ; NAMBAR:  Native Audio Mixer Base Address Register
  5599                                  ;    (ICH, Audio D31:F5, PCI Config Space) Address offset: 10h-13h
  5600                                  ; NABMBAR: Native Audio Bus Mastering Base Address register
  5601                                  ;    (ICH, Audio D31:F5, PCI Config Space) Address offset: 14h-17h
  5602 00002896 ????                    NAMBAR:		resw 1			; BAR for mixer
  5603 00002898 ????                    NABMBAR:	resw 1			; BAR for bus master regs
  5604                                  
  5605                                  ; 29/05/2024
  5606 0000289A ????????                audio_buffer:	resd 1
  5607                                  ; 29/05/2024
  5608 0000289E ????????                _bdl_buffer:	resd 1
  5609                                  ;wav_buffer1:	resd 1
  5610                                  ;wav_buffer2:	resd 1
  5611                                  
  5612                                  bss_end:
  5613                                  
  5614 000028A2 <res 75Eh>              alignb 4096
  5615                                  		; 256 byte buffer for descriptor list
  5616 00003000 <res 100h>              BDL_BUFFER:	resb 256
  5617                                  
  5618 00003100 <res F00h>              alignb 4096
  5619                                  
  5620                                  ;audio_buffer:	resb BUFFERSIZE ; DMA Buffer Size / 2 (32768)
  5621                                  ; 29/05/2024
  5622                                  ; 26/11/2023
  5623                                  ;audio_buffer:	resb 65536
  5624                                  ; 29/05/2024
  5625 00004000 <res 10000h>            WAVBUFFER_1:	resb 65536
  5626 00014000 <res 10000h>            WAVBUFFER_2:	resb 65536
  5627                                  ; 13/06/2017
  5628                                  ;temp_buffer:	resb BUFFERSIZE
  5629                                  ; 26/11/2023
  5630 00024000 <res 10000h>            temp_buffer:	resb 65536
