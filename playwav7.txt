     1                                  ; ****************************************************************************
     2                                  ; playwav7.s (for TRDOS 386)
     3                                  ; ----------------------------------------------------------------------------
     4                                  ; PLAYWAV7.PRG ! AC'97 (ICH) .WAV PLAYER program by Erdogan TAN
     5                                  ;
     6                                  ; 29/05/2024
     7                                  ;
     8                                  ; [ Last Modification: 08/12/2024 ]
     9                                  ;
    10                                  ; Modified from PLAYWAV6.PRG .wav player program by Erdogan Tan, 27/11/2023
    11                                  ; Modified from PLAYWAV4.COM .wav player program by Erdogan Tan, 19/05/2024
    12                                  ;
    13                                  ; Assembler: NASM version 2.15
    14                                  ;	     nasm playwav7.s -l playwav7.txt -o PLAYWAV7.PRG	
    15                                  ; ----------------------------------------------------------------------------
    16                                  ; Derived from '.wav file player for DOS' Jeff Leyda, Sep 02, 2002
    17                                  
    18                                  ; tuneloop (user mode) version (29/05/2024
    19                                  
    20                                  ; previous version: playwav6.s (27/11/2023)
    21                                  
    22                                  ; CODE
    23                                  
    24                                  ; 14/07/2020
    25                                  ; 31/12/2017
    26                                  ; TRDOS 386 (v2.0) system calls
    27                                  _ver 	equ 0
    28                                  _exit 	equ 1
    29                                  _fork 	equ 2
    30                                  _read 	equ 3
    31                                  _write	equ 4
    32                                  _open	equ 5
    33                                  _close 	equ 6
    34                                  _wait 	equ 7
    35                                  _create	equ 8
    36                                  _rename	equ 9
    37                                  _delete	equ 10
    38                                  _exec	equ 11
    39                                  _chdir	equ 12
    40                                  _time 	equ 13
    41                                  _mkdir 	equ 14
    42                                  _chmod	equ 15
    43                                  _rmdir	equ 16
    44                                  _break	equ 17
    45                                  _drive	equ 18
    46                                  _seek	equ 19
    47                                  _tell 	equ 20
    48                                  _memory	equ 21
    49                                  _prompt	equ 22
    50                                  _path	equ 23
    51                                  _env	equ 24
    52                                  _stime	equ 25
    53                                  _quit	equ 26
    54                                  _intr	equ 27
    55                                  _dir	equ 28
    56                                  _emt 	equ 29
    57                                  _ldrvt 	equ 30
    58                                  _video 	equ 31
    59                                  _audio	equ 32
    60                                  _timer	equ 33
    61                                  _sleep	equ 34
    62                                  _msg    equ 35
    63                                  _geterr	equ 36
    64                                  _fpstat	equ 37
    65                                  _pri	equ 38
    66                                  _rele	equ 39
    67                                  _fff	equ 40
    68                                  _fnf	equ 41
    69                                  _alloc	equ 42
    70                                  _dalloc equ 43
    71                                  _calbac equ 44
    72                                  _dma	equ 45
    73                                  
    74                                  %macro sys 1-4
    75                                      ; 29/04/2016 - TRDOS 386 (TRDOS v2.0)	
    76                                      ; 03/09/2015	
    77                                      ; 13/04/2015
    78                                      ; Retro UNIX 386 v1 system call.	
    79                                      %if %0 >= 2   
    80                                          mov ebx, %2
    81                                          %if %0 >= 3    
    82                                              mov ecx, %3
    83                                              %if %0 = 4
    84                                                 mov edx, %4   
    85                                              %endif
    86                                          %endif
    87                                      %endif
    88                                      mov eax, %1
    89                                      ;int 30h
    90                                      int 40h ; TRDOS 386 (TRDOS v2.0)	   
    91                                  %endmacro
    92                                  
    93                                  ; TRDOS 386 (and Retro UNIX 386 v1) system call format:
    94                                  ; sys systemcall (eax) <arg1 (ebx)>, <arg2 (ecx)>, <arg3 (edx)>
    95                                  
    96                                  ;BUFFERSIZE	equ	32768	; audio buffer size 
    97                                  ENDOFFILE       equ     1	; flag for knowing end of file
    98                                  
    99                                  [BITS 32]
   100                                  
   101                                  [ORG 0]
   102                                  
   103                                  	; 29/05/2024
   104                                  	%include 'ac97.inc' ; 17/02/2017 
     1                              <1> ; 11/11/2023
     2                              <1> ; 05/11/2023
     3                              <1> ; 03/11/2023
     4                              <1> ; 17/02/2017 (Erdogan Tan, PLAYWAV.ASM)
     5                              <1> ; constant.inc & codec.inc (for ICH AC97 wav player, 'PLAYWAV.COM') 
     6                              <1> 
     7                              <1> ; ----------------------------------------------------------------------------
     8                              <1> ; CONSTANT.INC
     9                              <1> ; ----------------------------------------------------------------------------
    10                              <1> 
    11                              <1> ;constants of stuff that seem hard to remember at times.
    12                              <1> 
    13                              <1> TRUE  EQU 1
    14                              <1> FALSE EQU 0
    15                              <1> 
    16                              <1> ENABLED  EQU 1
    17                              <1> DISABLED EQU 0
    18                              <1> 
    19                              <1> BIT0  EQU 1
    20                              <1> BIT1  EQU 2
    21                              <1> BIT2  EQU 4
    22                              <1> BIT3  EQU 8
    23                              <1> BIT4  EQU 10h
    24                              <1> BIT5  EQU 20h
    25                              <1> BIT6  EQU 40h
    26                              <1> BIT7  EQU 80h
    27                              <1> BIT8  EQU 100h
    28                              <1> BIT9  EQU 200h
    29                              <1> BIT10 EQU 400h
    30                              <1> BIT11 EQU 800h
    31                              <1> BIT12 EQU 1000h
    32                              <1> BIT13 EQU 2000h
    33                              <1> BIT14 EQU 4000h
    34                              <1> BIT15 EQU 8000h
    35                              <1> BIT16 EQU 10000h
    36                              <1> BIT17 EQU 20000h
    37                              <1> BIT18 EQU 40000h
    38                              <1> BIT19 EQU 80000h
    39                              <1> BIT20 EQU 100000h
    40                              <1> BIT21 EQU 200000h
    41                              <1> BIT22 EQU 400000h
    42                              <1> BIT23 EQU 800000h
    43                              <1> BIT24 EQU 1000000h
    44                              <1> BIT25 EQU 2000000h
    45                              <1> BIT26 EQU 4000000h
    46                              <1> BIT27 EQU 8000000h
    47                              <1> BIT28 EQU 10000000h
    48                              <1> BIT29 EQU 20000000h
    49                              <1> BIT30 EQU 40000000h
    50                              <1> BIT31 EQU 80000000h
    51                              <1> 
    52                              <1> ;special characters
    53                              <1> NUL     EQU 0
    54                              <1> NULL    EQU 0
    55                              <1> BELL    EQU 07
    56                              <1> BS      EQU 08
    57                              <1> TAB     EQU 09
    58                              <1> LF      EQU 10
    59                              <1> CR      EQU 13
    60                              <1> ESCAPE  EQU 27           ;ESC is a reserved word....
    61                              <1> 
    62                              <1> 
    63                              <1> ;file stuff
    64                              <1> READONLY  EQU   BIT0
    65                              <1> HIDDEN    EQU   BIT1
    66                              <1> SYSTEM    EQU   BIT2
    67                              <1> VOLUME    EQU   BIT3         ;ignored for file access
    68                              <1> DIRECTORY EQU   BIT4         ;must be 0 for file access
    69                              <1> ARCHIVE   EQU   BIT5
    70                              <1> SHAREABLE EQU   BIT7         ;for novell networks
    71                              <1> OPEN	EQU	2		; open existing file
    72                              <1> CREATE	EQU	1		; create new file
    73                              <1> 
    74                              <1> 
    75                              <1> ; PCI equates
    76                              <1> ; PCI function address (PFA)
    77                              <1> ; bit 31 = 1
    78                              <1> ; bit 23:16 = bus number     (0-255)
    79                              <1> ; bit 15:11 = device number  (0-31)
    80                              <1> ; bit 10:8 = function number (0-7)
    81                              <1> ; bit 7:0 = register number  (0-255)
    82                              <1> 
    83                              <1> IO_ADDR_MASK    EQU     0FFFEh          ; mask off bit 0 for reading BARs
    84                              <1> PCI_INDEX_PORT  EQU     0CF8h
    85                              <1> PCI_DATA_PORT   EQU     0CFCh
    86                              <1> PCI32           EQU     BIT31           ; bitflag to signal 32bit access
    87                              <1> PCI16           EQU     BIT30           ; bitflag for 16bit access
    88                              <1> 
    89                              <1> PCI_FN0         EQU     0 << 8
    90                              <1> PCI_FN1         EQU     1 << 8
    91                              <1> PCI_FN2         EQU     2 << 8
    92                              <1> PCI_FN3         EQU     3 << 8
    93                              <1> PCI_FN4         EQU     4 << 8
    94                              <1> PCI_FN5         EQU     5 << 8
    95                              <1> PCI_FN6         EQU     6 << 8
    96                              <1> PCI_FN7         EQU     7 << 8
    97                              <1> 
    98                              <1> PCI_CMD_REG		EQU	04h		; reg 04, command reg
    99                              <1>  IO_ENA			EQU	BIT0		; i/o decode enable
   100                              <1>  MEM_ENA		EQU	BIT1		; memory decode enable
   101                              <1>  BM_ENA                 EQU     BIT2		; bus master enable
   102                              <1> 
   103                              <1> ; ----------------------------------------------------------------------------
   104                              <1> ; CODEC.INC
   105                              <1> ; ----------------------------------------------------------------------------
   106                              <1> 
   107                              <1> ;Codec registers.
   108                              <1> ;
   109                              <1> ;Not all codecs are created equal. Refer to the spec for your specific codec.
   110                              <1> ;
   111                              <1> ;All registers are 16bits wide.  Access to codec registers over the AC97 link
   112                              <1> ;is defined by the OEM.  
   113                              <1> ;
   114                              <1> ;Secondary codec's are accessed by ORing in BIT7 of all register accesses.
   115                              <1> ;
   116                              <1> 
   117                              <1> ; each codec/mixer register is 16bits
   118                              <1> 
   119                              <1> CODEC_RESET_REG                 equ     00      ; reset codec
   120                              <1> CODEC_MASTER_VOL_REG            equ     02      ; master volume
   121                              <1> CODEC_HP_VOL_REG                equ     04      ; headphone volume
   122                              <1> CODEC_MASTER_MONO_VOL_REG       equ     06      ; master mono volume
   123                              <1> CODEC_MASTER_TONE_REG           equ     08      ; master tone (R+L)
   124                              <1> CODEC_PCBEEP_VOL_REG            equ     0ah     ; PC beep volume
   125                              <1> CODEC_PHONE_VOL_REG             equ     0bh     ; phone volume
   126                              <1> CODEC_MIC_VOL_REG               equ     0eh     ; MIC volume
   127                              <1> CODEC_LINE_IN_VOL_REG           equ     10h     ; line input volume
   128                              <1> CODEC_CD_VOL_REG                equ     12h     ; CD volume
   129                              <1> CODEC_VID_VOL_REG               equ     14h     ; video volume
   130                              <1> CODEC_AUX_VOL_REG               equ     16h     ; aux volume
   131                              <1> CODEC_PCM_OUT_REG               equ     18h     ; PCM output volume
   132                              <1> CODEC_RECORD_SELECT_REG         equ     1ah     ; record select input
   133                              <1> CODEC_RECORD_VOL_REG            equ     1ch     ; record volume
   134                              <1> CODEC_RECORD_MIC_VOL_REG        equ     1eh     ; record mic volume
   135                              <1> CODEC_GP_REG                    equ     20h     ; general purpose
   136                              <1> CODEC_3D_CONTROL_REG            equ     22h     ; 3D control
   137                              <1> ; 24h is reserved
   138                              <1> CODEC_POWER_CTRL_REG            equ     26h     ; powerdown control
   139                              <1> CODEC_EXT_AUDIO_REG             equ     28h     ; extended audio
   140                              <1> CODEC_EXT_AUDIO_CTRL_REG        equ     2ah     ; extended audio control
   141                              <1> CODEC_PCM_FRONT_DACRATE_REG     equ     2ch     ; PCM out sample rate
   142                              <1> CODEC_PCM_SURND_DACRATE_REG     equ     2eh     ; surround sound sample rate
   143                              <1> CODEC_PCM_LFE_DACRATE_REG       equ     30h     ; LFE sample rate
   144                              <1> CODEC_LR_ADCRATE_REG            equ     32h     ; PCM in sample rate
   145                              <1> CODEC_MIC_ADCRATE_REG           equ     34h     ; mic in sample rate
   146                              <1> 
   147                              <1> ; registers 36-7a are reserved on the ICH
   148                              <1> 
   149                              <1> CODEC_VENDORID1_REG             equ     7ch     ; codec vendor ID 1
   150                              <1> CODEC_VENDORID2_REG             equ     7eh     ; codec vendor ID 2
   151                              <1> 
   152                              <1> ; Mixer registers 0 through 51h reside in the ICH and are not forwarded over
   153                              <1> ; the AC97 link to the codec, which I think is a little weird.  Looks like
   154                              <1> ; the ICH makes it so you don't need a fully functional codec to play audio?
   155                              <1> ;
   156                              <1> ; whenever 2 codecs are present in the system, use BIT7 to access the 2nd
   157                              <1> ; set of registers, ie 80h-feh
   158                              <1> 
   159                              <1> PRIMARY_CODEC                   equ     0       ; 0-7F for primary codec
   160                              <1> SECONDARY_CODEC                 equ     BIT7    ; 80-8f registers for 2ndary
   161                              <1> 
   162                              <1> SAMPLE_RATE_441khz	equ     44100   ; 44.1Khz (cd quality) rate
   163                              <1> 
   164                              <1> ; ----------------------------------------------------------------------------
   165                              <1> ; 17/02/2017
   166                              <1> PCI_IO_BASE	equ 10h			; = NAMBAR register offset
   167                              <1> AC97_INT_LINE   equ 3Ch			; AC97 Interrupt Line register offset
   168                              <1> 
   169                              <1> ; ----------------------------------------------------------------------------
   170                              <1> ; ICH2AC97.INC
   171                              <1> ; ----------------------------------------------------------------------------
   172                              <1> 
   173                              <1> ; PCI stuff
   174                              <1> 
   175                              <1> ; Intel ICH2 equates. It is assumed that ICH0 and plain ole ICH are compatible.
   176                              <1> 
   177                              <1> INTEL_VID       equ     8086h           ; Intel's PCI vendor ID
   178                              <1> ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
   179                              <1> SIS_VID		equ	1039h
   180                              <1> NVIDIA_VID	equ	10DEh	 ; Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source c.
   181                              <1> AMD_VID		equ	1022h
   182                              <1> 
   183                              <1> ICH_DID         equ     2415h           ; ICH device ID
   184                              <1> ICH0_DID        equ     2425h           ; ICH0
   185                              <1> ICH2_DID        equ     2445h           ; ICH2 I think there are more ICHes.
   186                              <1>                                         ; they all should be compatible.
   187                              <1> 
   188                              <1> ; 17/02/2017 (Erdogan Tan, ref: ALSA Device IDs, ALSA project)
   189                              <1> ICH3_DID	equ     2485h           ; ICH3
   190                              <1> ICH4_DID        equ     24C5h           ; ICH4
   191                              <1> ICH5_DID	equ     24D5h           ; ICH5 
   192                              <1> ICH6_DID	equ     266Eh           ; ICH6
   193                              <1> ESB6300_DID	equ     25A6h           ; 6300ESB
   194                              <1> ESB631X_DID	equ     2698h           ; 631XESB
   195                              <1> ICH7_DID	equ	27DEh		; ICH7
   196                              <1> ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
   197                              <1> MX82440_DID	equ	7195h
   198                              <1> SI7012_DID	equ	7012h
   199                              <1> NFORCE_DID	equ	01B1h
   200                              <1> NFORCE2_DID	equ	006Ah
   201                              <1> AMD8111_DID	equ	746Dh
   202                              <1> AMD768_DID	equ	7445h
   203                              <1> ; 03/11/2023 - Erdogan Tan - Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source code
   204                              <1> CK804_DID	equ	0059h
   205                              <1> MCP04_DID	equ	003Ah
   206                              <1> CK8_DID		equ	008Ah
   207                              <1> NFORCE3_DID	equ	00DAh
   208                              <1> CK8S_DID	equ	00EAh
   209                              <1> 
   210                              <1> NAMBAR_REG      equ     10h             ; native audio mixer BAR
   211                              <1>  NAM_SIZE       equ     256             ; 256 bytes required.
   212                              <1> 
   213                              <1> NABMBAR_REG     equ     14h             ; native audio bus mastering BAR
   214                              <1>  NABM_SIZE      equ     64              ; 64 bytes
   215                              <1> 
   216                              <1> ; BUS master registers, accessed via NABMBAR+offset
   217                              <1> 
   218                              <1> ; ICH supports 3 different types of register sets for three types of things
   219                              <1> ; it can do, thus:
   220                              <1> ;
   221                              <1> ; PCM in (for recording) aka PI
   222                              <1> ; PCM out (for playback) aka PO
   223                              <1> ; MIC in (for recording) aka MC
   224                              <1> 
   225                              <1> PI_BDBAR_REG            equ     0       ; PCM in buffer descriptor BAR
   226                              <1> PO_BDBAR_REG            equ     10h     ; PCM out buffer descriptor BAR
   227                              <1> MC_BDBAR_REG            equ     20h     ; MIC in buffer descriptor BAR
   228                              <1> 
   229                              <1> ; each buffer descriptor BAR holds a pointer which has entries to the buffer
   230                              <1> ; contents of the .WAV file we're going to play. Each entry is 8 bytes long
   231                              <1> ; (more on that later) and can contain 32 entries total, so each BAR is
   232                              <1> ; 256 bytes in length, thus:
   233                              <1> 
   234                              <1> BDL_SIZE                equ     32*8    ; Buffer Descriptor List size
   235                              <1> INDEX_MASK              equ     31      ; indexes must be 0-31
   236                              <1> 
   237                              <1> 
   238                              <1> 
   239                              <1> PI_CIV_REG              equ     4       ; PCM in current Index value (RO)
   240                              <1> PO_CIV_REG              equ     14h     ; PCM out current Index value (RO)
   241                              <1> MC_CIV_REG              equ     24h     ; MIC in current Index value (RO)
   242                              <1> ;8bit read only
   243                              <1> ; each current index value is simply a pointer showing us which buffer
   244                              <1> ; (0-31) the codec is currently processing. Once this counter hits 31, it
   245                              <1> ; wraps back to 0.
   246                              <1> ; this can be handy to know, as once it hits 31, we're almost out of data to
   247                              <1> ; play back or room to record!
   248                              <1> 
   249                              <1> 
   250                              <1> PI_LVI_REG              equ     5       ; PCM in Last Valid Index
   251                              <1> PO_LVI_REG              equ     15h     ; PCM out Last Valid Index
   252                              <1> MC_LVI_REG              equ     25h     ; MIC in Last Valid Index
   253                              <1> ;8bit read/write
   254                              <1> ; The Last Valid Index is a number (0-31) to let the codec know what buffer
   255                              <1> ; number to stop on after processing. It could be very nasty to play audio
   256                              <1> ; from buffers that aren't filled with the audio we want to play.
   257                              <1> 
   258                              <1> 
   259                              <1> PI_SR_REG               equ     6       ; PCM in Status register
   260                              <1> PO_SR_REG               equ     16h     ; PCM out Status register
   261                              <1> MC_SR_REG               equ     26h     ; MIC in Status register
   262                              <1> ;16bit read/write
   263                              <1> ; status registers.  Bitfields follow:
   264                              <1> 
   265                              <1> FIFO_ERR                equ     BIT4    ; FIFO Over/Underrun W1TC.
   266                              <1> 
   267                              <1> BCIS                    equ     BIT3    ; buffer completion interrupt status.
   268                              <1>                                         ; Set whenever the last sample in ANY
   269                              <1>                                         ; buffer is finished.  Bit is only
   270                              <1>                                         ; set when the Interrupt on Complete
   271                              <1>                                         ; (BIT4 of control reg) is set.
   272                              <1> 
   273                              <1> LVBCI                   equ     BIT2    ; Set whenever the codec has processed
   274                              <1>                                         ; the last buffer in the buffer list.
   275                              <1>                                         ; Will fire an interrupt if IOC bit is
   276                              <1>                                         ; set. Probably set after the last
   277                              <1>                                         ; sample in the last buffer is
   278                              <1>                                         ; processed.  W1TC
   279                              <1> 
   280                              <1>                                         ; 
   281                              <1> CELV                    equ     BIT1    ; Current buffer == last valid.
   282                              <1>                                         ; Bit is RO and remains set until LVI is
   283                              <1>                                         ; cleared.  Probably set up the start
   284                              <1>                                         ; of processing for the last buffer.
   285                              <1> 
   286                              <1> 
   287                              <1> DCH                     equ     BIT0    ; DMA controller halted.
   288                              <1>                                         ; set whenever audio stream is stopped
   289                              <1>                                         ; or something else goes wrong.
   290                              <1> 
   291                              <1> 
   292                              <1> PI_PICB_REG             equ     8       ; PCM in position in current buffer(RO)
   293                              <1> PO_PICB_REG             equ     18h     ; PCM out position in current buffer(RO)
   294                              <1> MC_PICB_REG             equ     28h     ; MIC in position in current buffer (RO)
   295                              <1> ;16bit read only
   296                              <1> ; position in current buffer regs show the number of dwords left to be
   297                              <1> ; processed in the current buffer.
   298                              <1> ; 
   299                              <1> 
   300                              <1> PI_PIV_REG              equ     0ah     ; PCM in Prefected index value
   301                              <1> PO_PIV_REG              equ     1ah     ; PCM out Prefected index value
   302                              <1> MC_PIV_REG              equ     2ah     ; MIC in Prefected index value
   303                              <1> ;8bit, read only
   304                              <1> ; Prefetched index value register.
   305                              <1> ; tells which buffer number (0-31) has be prefetched. I'd imagine this
   306                              <1> ; value follows the current index value fairly closely. (CIV+1)
   307                              <1> ;
   308                              <1> 
   309                              <1> 
   310                              <1> PI_CR_REG               equ     0bh     ; PCM in Control Register
   311                              <1> PO_CR_REG               equ     1bh     ; PCM out Control Register
   312                              <1> MC_CR_REG               equ     2bh     ; MIC in Control Register
   313                              <1> ; 8bit
   314                              <1> ; Control register *MUST* only be accessed as an 8bit value.
   315                              <1> ; Control register. See bitfields below.
   316                              <1> ;
   317                              <1> 
   318                              <1> 
   319                              <1> IOCE                    equ     BIT4    ; interrupt on complete enable.
   320                              <1>                                         ; set this bit if you want an intrtpt
   321                              <1>                                         ; to fire whenever LVBCI is set.
   322                              <1> FEIFE                   equ     BIT3    ; set if you want an interrupt to fire
   323                              <1>                                         ; whenever there is a FIFO (over or
   324                              <1>                                         ; under) error.
   325                              <1> LVBIE                   equ     BIT2    ; last valid buffer interrupt enable.
   326                              <1>                                         ; set if you want an interrupt to fire
   327                              <1>                                         ; whenever the completion of the last
   328                              <1>                                         ; valid buffer.
   329                              <1> RR                      equ     BIT1    ; reset registers.  Nukes all regs
   330                              <1>                                         ; except bits 4:2 of this register.
   331                              <1>                                         ; Only set this bit if BIT 0 is 0
   332                              <1> RPBM                    equ     BIT0    ; Run/Pause
   333                              <1>                                         ; set this bit to start the codec!
   334                              <1> 
   335                              <1> 
   336                              <1> GLOB_CNT_REG            equ     2ch     ; Global control register
   337                              <1> SEC_RES_EN              equ     BIT5    ; secondary codec resume event 
   338                              <1>                                         ; interrupt enable.  Not used here.
   339                              <1> PRI_RES_EN              equ     BIT4    ; ditto for primary. Not used here.
   340                              <1> ACLINK_OFF              equ     BIT3    ; Turn off the AC97 link
   341                              <1> ACWARM_RESET            equ     BIT2    ; Awaken the AC97 link from sleep.
   342                              <1>                                         ; registers preserved, bit self clears
   343                              <1> ACCOLD_RESET            equ     BIT1    ; Reset everything in the AC97 and
   344                              <1>                                         ; reset all registers.  Not self clearing
   345                              <1> 
   346                              <1> GPIIE                   equ     BIT0    ; GPI Interrupt enable.
   347                              <1>                                         ; set if you want an interrupt to
   348                              <1>                                         ; fire upon ANY of the bits in the
   349                              <1>                                         ; GPI (general pursose inputs?) not used.
   350                              <1> 
   351                              <1> GLOB_STS_REG            equ     30h     ; Global Status register (RO)
   352                              <1> 
   353                              <1> MD3                     equ     BIT17   ; modem powerdown status (yawn)
   354                              <1> AD3                     equ     BIT16   ; Audio powerdown status (yawn)
   355                              <1> RD_COMPLETE_STS         equ     BIT15   ; Codec read timed out. 0=normal
   356                              <1> BIT3SLOT12              equ     BIT14   ; shadowed status of bit 3 in slot 12
   357                              <1> BIT2SLOT12              equ     BIT13   ; shadowed status of bit 2 in slot 12
   358                              <1> BIT1SLOT12              equ     BIT12   ; shadowed status of bit 1 in slot 12
   359                              <1> SEC_RESUME_STS          equ     BIT11   ; secondary codec has resumed (and irqed)
   360                              <1> PRI_RESUME_STS          equ     BIT10   ; primary codec has resumed (and irqed)
   361                              <1> SEC_CODEC_RDY           equ     BIT9    ; secondary codec is ready for action
   362                              <1> PRI_CODEC_RDY           equ     BIT8    ; Primary codec is ready for action
   363                              <1>                                         ; software must check these bits before
   364                              <1>                                         ; starting the codec!
   365                              <1> MIC_IN_IRQ              equ     BIT7    ; MIC in caused an interrupt
   366                              <1> PCM_OUT_IRQ             equ     BIT6    ; One of the PCM out channels IRQed
   367                              <1> PCM_IN_IRQ              equ     BIT5    ; One of the PCM in channels IRQed
   368                              <1> MODEM_OUT_IRQ           equ     BIT2    ; modem out channel IRQed
   369                              <1> MODEM_IN_IRQ            equ     BIT1    ; modem in channel IRQed
   370                              <1> GPI_STS_CHANGE          equ     BIT0    ; set whenever GPI's have changed.
   371                              <1>                                         ; BIT0 of slot 12 also reflects this.
   372                              <1> 
   373                              <1> ACC_SEMA_REG            equ     34h     ; Codec write semiphore register
   374                              <1> CODEC_BUSY              equ     BIT0    ; codec register I/O is happening
   375                              <1>                                         ; self clearing
   376                              <1> ;
   377                              <1> ; Buffer Descriptors List
   378                              <1> ; As stated earlier, each buffer descriptor list is a set of (up to) 32 
   379                              <1> ; descriptors, each 8 bytes in length. Bytes 0-3 of a descriptor entry point
   380                              <1> ; to a chunk of memory to either play from or record to. Bytes 4-7 of an
   381                              <1> ; entry describe various control things detailed below.
   382                              <1> ; 
   383                              <1> ; Buffer pointers must always be aligned on a Dword boundry.
   384                              <1> ;
   385                              <1> 
   386                              <1> IOC                     equ     BIT31   ; Fire an interrupt whenever this
   387                              <1>                                         ; buffer is complete.
   388                              <1> 
   389                              <1> BUP                     equ     BIT30   ; Buffer Underrun Policy.
   390                              <1>                                         ; if this buffer is the last buffer
   391                              <1>                                         ; in a playback, fill the remaining
   392                              <1>                                         ; samples with 0 (silence) or not.
   393                              <1>                                         ; It's a good idea to set this to 1
   394                              <1>                                         ; for the last buffer in playback,
   395                              <1>                                         ; otherwise you're likely to get a lot
   396                              <1>                                         ; of noise at the end of the sound.
   397                              <1> 
   398                              <1> ;
   399                              <1> ; Bits 15:0 contain the length of the buffer, in number of samples, which
   400                              <1> ; are 16 bits each, coupled in left and right pairs, or 32bits each.
   401                              <1> ; Luckily for us, that's the same format as .wav files.
   402                              <1> ;
   403                              <1> ; A value of FFFF is 65536 samples. Running at 44.1Khz, that's just about
   404                              <1> ; 1.5 seconds of sample time. FFFF * 32bits is 1FFFFh bytes or 128k of data.
   405                              <1> ;
   406                              <1> ; A value of 0 in these bits means play no samples.
   407                              <1> ;
   408                              <1> 
   409                              <1> ; 11/11/2023
   410                              <1> CTRL_ST_CREADY		equ	BIT8+BIT9+BIT28 ; Primary Codec Ready
   411                              <1> CODEC_REG_POWERDOWN	equ	26h
   105                                  
   106                                  _STARTUP:
   107                                  	; Prints the Credits Text.
   108                                  	sys	_msg, Credits, 255, 0Bh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000000 BB[08250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000005 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000000A BA0B000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000000F B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000014 CD40                <1>  int 40h
   109                                  
   110                                  	; clear bss
   111 00000016 B9[B6280000]            	mov	ecx, bss_end
   112 0000001B BF[2C280000]            	mov	edi, bss_start
   113 00000020 29F9                    	sub	ecx, edi
   114 00000022 D1E9                    	shr	ecx, 1
   115 00000024 31C0                    	xor	eax, eax
   116 00000026 F366AB                  	rep	stosw
   117                                  
   118                                  	; Detect (& Enable) AC'97 Audio Device
   119 00000029 E80D050000              	call	DetectAC97
   120 0000002E 731B                    	jnc     short GetFileName
   121                                  
   122                                  _dev_not_ready:
   123                                  	; couldn't find the audio device!
   124                                  	sys	_msg, noDevMsg, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000030 BB[CF250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000035 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000003A BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000003F B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000044 CD40                <1>  int 40h
   125 00000046 E979030000                      jmp     Exit
   126                                  
   127                                  GetFileName:  
   128 0000004B 89E6                    	mov	esi, esp
   129 0000004D AD                      	lodsd
   130 0000004E 83F802                  	cmp	eax, 2 ; two arguments 
   131                                  	       ; (program file name & mod file name)
   132 00000051 0F827B030000            	jb	pmsg_usage ; nothing to do
   133                                  
   134 00000057 AD                      	lodsd ; program file name address 
   135 00000058 AD                      	lodsd ; mod file name address (file to be read)
   136 00000059 89C6                    	mov	esi, eax
   137 0000005B BF[4E280000]            	mov	edi, wav_file_name
   138                                  ScanName:       
   139 00000060 AC                      	lodsb
   140 00000061 84C0                    	test	al, al
   141 00000063 0F8469030000            	je	pmsg_usage
   142 00000069 3C20                    	cmp	al, 20h
   143 0000006B 74F3                    	je	short ScanName	; scan start of name.
   144 0000006D AA                      	stosb
   145 0000006E B4FF                    	mov	ah, 0FFh
   146                                  a_0:	
   147 00000070 FEC4                    	inc	ah
   148                                  a_1:
   149 00000072 AC                      	lodsb
   150 00000073 AA                      	stosb
   151 00000074 3C2E                    	cmp	al, '.'
   152 00000076 74F8                    	je	short a_0	
   153 00000078 20C0                    	and	al, al
   154 0000007A 75F6                    	jnz	short a_1
   155                                  
   156 0000007C 08E4                    	or	ah, ah		; if period NOT found,
   157 0000007E 750B                    	jnz	short _1 	; then add a .WAV extension.
   158                                  SetExt:
   159 00000080 4F                      	dec	edi
   160 00000081 C7072E574156            	mov	dword [edi], '.WAV'
   161 00000087 C6470400                	mov	byte [edi+4], 0
   162                                  
   163                                  _1:
   164 0000008B E849060000              	call	write_audio_dev_info 
   165                                  
   166                                  ; open the file
   167                                          ; open existing file
   168 00000090 E8F6040000                      call    openFile ; no error? ok.
   169 00000095 731B                            jnc     short _gsr
   170                                  
   171                                  ; file not found!
   172                                  	sys	_msg, noFileErrMsg, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000097 BB[FA250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000009C B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000000A1 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000000A6 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000000AB CD40                <1>  int 40h
   173                                  _exit_:
   174 000000AD E912030000                      jmp     Exit
   175                                  
   176                                  _gsr:  
   177 000000B2 E80E050000                     	call    getSampleRate		; read the sample rate
   178                                                                          ; pass it onto codec.
   179                                  	; 25/11/2023
   180 000000B7 72F4                    	jc	short _exit_		; nothing to do
   181                                  
   182 000000B9 66A3[2E280000]          	mov	[sample_rate], ax
   183 000000BF 880D[2C280000]          	mov	[stmo], cl
   184 000000C5 8815[2D280000]          	mov	[bps], dl
   185                                  
   186                                  	; 26/11/2023
   187 000000CB C605[A1280000]00        	mov	byte [fbs_shift], 0 ; 0 = stereo and 16 bit 
   188 000000D2 FEC9                    	dec	cl
   189 000000D4 7506                    	jnz	short _gsr_1 ; stereo
   190 000000D6 FE05[A1280000]          	inc	byte [fbs_shift] ; 1 = mono or 8 bit		
   191                                  _gsr_1:	
   192 000000DC 80FA08                  	cmp	dl, 8 
   193 000000DF 7706                    	ja	short _gsr_2 ; 16 bit samples
   194 000000E1 FE05[A1280000]          	inc	byte [fbs_shift] ; 2 = mono and 8 bit
   195                                  _gsr_2:	
   196                                  	; 29/05/2024
   197 000000E7 E8CF060000              	call	write_ac97_pci_dev_info
   198                                  
   199                                  	; 31/05/2024
   200                                  	; 30/05/2024
   201                                  	;call	check_vra
   202                                  
   203                                  	; 30/05/2024
   204 000000EC E870200000              	call	codecConfig		; unmute codec, set rates.
   205 000000F1 0F82F3020000            	jc	init_err
   206                                  
   207                                  	; 25/11/2023
   208 000000F7 E87F080000              	call	write_VRA_info
   209                                  
   210                                  	; 01/05/2017
   211 000000FC E8EF050000              	call	write_wav_file_info
   212                                  
   213                                  	; 25/11/2023
   214                                  	; ------------------------------------------
   215                                  
   216 00000101 803D[31280000]01        	cmp	byte [VRA], 1
   217 00000108 7205                    	jb	short chk_sample_rate
   218                                  
   219                                  playwav_48_khz:	
   220                                  	;mov	dword [loadfromwavfile], loadFromFile
   221                                  	;mov	dword [buffersize], 65536
   222 0000010A E969020000              	jmp	PlayNow
   223                                  
   224                                  chk_sample_rate:
   225                                  	; set conversion parameters
   226                                  	; (for 8, 11.025, 16, 22.050, 24, 32 kHZ)
   227 0000010F 66A1[2E280000]          	mov	ax, [sample_rate]
   228 00000115 663D80BB                	cmp	ax, 48000
   229 00000119 74EF                    	je	short playwav_48_khz
   230                                  chk_22khz:
   231 0000011B 663D2256                	cmp	ax, 22050
   232 0000011F 7545                    	jne	short chk_11khz
   233 00000121 803D[2D280000]08        	cmp	byte [bps], 8
   234 00000128 7615                    	jna	short chk_22khz_1
   235 0000012A BB[1C160000]            	mov	ebx, load_22khz_stereo_16_bit
   236 0000012F 803D[2C280000]01        	cmp	byte [stmo], 1 
   237 00000136 751A                    	jne	short chk_22khz_2
   238 00000138 BB[8E150000]            	mov	ebx, load_22khz_mono_16_bit
   239 0000013D EB13                    	jmp	short chk_22khz_2
   240                                  chk_22khz_1:
   241 0000013F BB[06150000]            	mov	ebx, load_22khz_stereo_8_bit
   242 00000144 803D[2C280000]01        	cmp	byte [stmo], 1 
   243 0000014B 7505                    	jne	short chk_22khz_2
   244 0000014D BB[7C140000]            	mov	ebx, load_22khz_mono_8_bit
   245                                  chk_22khz_2:
   246 00000152 B85A1D0000              	mov	eax, 7514  ; (442*17)
   247 00000157 BA25000000              	mov	edx, 37
   248 0000015C B911000000              	mov	ecx, 17 
   249 00000161 E9BA010000              	jmp	set_sizes	
   250                                  chk_11khz:
   251 00000166 663D112B                	cmp	ax, 11025
   252 0000016A 7545                    	jne	short chk_44khz
   253 0000016C 803D[2D280000]08        	cmp	byte [bps], 8
   254 00000173 7615                    	jna	short chk_11khz_1
   255 00000175 BB[3C180000]            	mov	ebx, load_11khz_stereo_16_bit
   256 0000017A 803D[2C280000]01        	cmp	byte [stmo], 1 
   257 00000181 751A                    	jne	short chk_11khz_2
   258 00000183 BB[C2170000]            	mov	ebx, load_11khz_mono_16_bit
   259 00000188 EB13                    	jmp	short chk_11khz_2
   260                                  chk_11khz_1:
   261 0000018A BB[47170000]            	mov	ebx, load_11khz_stereo_8_bit
   262 0000018F 803D[2C280000]01        	cmp	byte [stmo], 1 
   263 00000196 7505                    	jne	short chk_11khz_2
   264 00000198 BB[CE160000]            	mov	ebx, load_11khz_mono_8_bit
   265                                  chk_11khz_2:
   266 0000019D B8AD0E0000              	mov	eax, 3757  ; (221*17)
   267 000001A2 BA4A000000              	mov	edx, 74
   268 000001A7 B911000000              	mov	ecx, 17
   269 000001AC E96F010000              	jmp	set_sizes 
   270                                  chk_44khz:
   271 000001B1 663D44AC                	cmp	ax, 44100
   272 000001B5 7545                    	jne	short chk_16khz
   273 000001B7 803D[2D280000]08        	cmp	byte [bps], 8
   274 000001BE 7615                    	jna	short chk_44khz_1
   275 000001C0 BB[671A0000]            	mov	ebx, load_44khz_stereo_16_bit
   276 000001C5 803D[2C280000]01        	cmp	byte [stmo], 1 
   277 000001CC 751A                    	jne	short chk_44khz_2
   278 000001CE BB[ED190000]            	mov	ebx, load_44khz_mono_16_bit
   279 000001D3 EB13                    	jmp	short chk_44khz_2
   280                                  chk_44khz_1:
   281 000001D5 BB[6F190000]            	mov	ebx, load_44khz_stereo_8_bit
   282 000001DA 803D[2C280000]01        	cmp	byte [stmo], 1 
   283 000001E1 7505                    	jne	short chk_44khz_2
   284 000001E3 BB[F2180000]            	mov	ebx, load_44khz_mono_8_bit
   285                                  chk_44khz_2:
   286 000001E8 B8D93A0000              	mov	eax, 15065 ; (655*23)
   287 000001ED BA19000000              	mov	edx, 25
   288 000001F2 B917000000              	mov	ecx, 23
   289 000001F7 E924010000              	jmp	set_sizes 
   290                                  chk_16khz:
   291 000001FC 663D803E                	cmp	ax, 16000
   292 00000200 7545                    	jne	short chk_8khz
   293 00000202 803D[2D280000]08        	cmp	byte [bps], 8
   294 00000209 7615                    	jna	short chk_16khz_1
   295 0000020B BB[B80F0000]            	mov	ebx, load_16khz_stereo_16_bit
   296 00000210 803D[2C280000]01        	cmp	byte [stmo], 1 
   297 00000217 751A                    	jne	short chk_16khz_2
   298 00000219 BB[360F0000]            	mov	ebx, load_16khz_mono_16_bit
   299 0000021E EB13                    	jmp	short chk_16khz_2
   300                                  chk_16khz_1:
   301 00000220 BB[7B0E0000]            	mov	ebx, load_16khz_stereo_8_bit
   302 00000225 803D[2C280000]01        	cmp	byte [stmo], 1 
   303 0000022C 7505                    	jne	short chk_16khz_2
   304 0000022E BB[FB0D0000]            	mov	ebx, load_16khz_mono_8_bit
   305                                  chk_16khz_2:
   306 00000233 B855150000              	mov	eax, 5461
   307 00000238 BA03000000              	mov	edx, 3
   308 0000023D B901000000              	mov	ecx, 1
   309 00000242 E9D9000000              	jmp	set_sizes 
   310                                  chk_8khz:
   311 00000247 663D401F                	cmp	ax, 8000
   312 0000024B 7545                    	jne	short chk_24khz
   313 0000024D 803D[2D280000]08        	cmp	byte [bps], 8
   314 00000254 7615                    	jna	short chk_8khz_1
   315 00000256 BB[AF0C0000]            	mov	ebx, load_8khz_stereo_16_bit
   316 0000025B 803D[2C280000]01        	cmp	byte [stmo], 1 
   317 00000262 751A                    	jne	short chk_8khz_2
   318 00000264 BB[DE0B0000]            	mov	ebx, load_8khz_mono_16_bit
   319 00000269 EB13                    	jmp	short chk_8khz_2
   320                                  chk_8khz_1:
   321 0000026B BB[AD0A0000]            	mov	ebx, load_8khz_stereo_8_bit
   322 00000270 803D[2C280000]01        	cmp	byte [stmo], 1 
   323 00000277 7505                    	jne	short chk_8khz_2
   324 00000279 BB[C8090000]            	mov	ebx, load_8khz_mono_8_bit
   325                                  chk_8khz_2:
   326 0000027E B8AA0A0000              	mov	eax, 2730
   327 00000283 BA06000000              	mov	edx, 6
   328 00000288 B901000000              	mov	ecx, 1
   329 0000028D E98E000000              	jmp	set_sizes 
   330                                  chk_24khz:
   331 00000292 663DC05D                	cmp	ax, 24000
   332 00000296 7542                    	jne	short chk_32khz
   333 00000298 803D[2D280000]08        	cmp	byte [bps], 8
   334 0000029F 7615                    	jna	short chk_24khz_1
   335 000002A1 BB[E6110000]            	mov	ebx, load_24khz_stereo_16_bit
   336 000002A6 803D[2C280000]01        	cmp	byte [stmo], 1 
   337 000002AD 751A                    	jne	short chk_24khz_2
   338 000002AF BB[82110000]            	mov	ebx, load_24khz_mono_16_bit
   339 000002B4 EB13                    	jmp	short chk_24khz_2
   340                                  chk_24khz_1:
   341 000002B6 BB[F7100000]            	mov	ebx, load_24khz_stereo_8_bit
   342 000002BB 803D[2C280000]01        	cmp	byte [stmo], 1 
   343 000002C2 7505                    	jne	short chk_24khz_2
   344 000002C4 BB[8F100000]            	mov	ebx, load_24khz_mono_8_bit
   345                                  chk_24khz_2:
   346 000002C9 B800200000              	mov	eax, 8192
   347 000002CE BA02000000              	mov	edx, 2
   348 000002D3 B901000000              	mov	ecx, 1
   349 000002D8 EB46                    	jmp	short set_sizes 
   350                                  chk_32khz:
   351 000002DA 663D007D                	cmp	ax, 32000
   352 000002DE 7574                    	jne	short vra_needed
   353 000002E0 803D[2D280000]08        	cmp	byte [bps], 8
   354 000002E7 7615                    	jna	short chk_32khz_1
   355 000002E9 BB[EB130000]            	mov	ebx, load_32khz_stereo_16_bit
   356 000002EE 803D[2C280000]01        	cmp	byte [stmo], 1 
   357 000002F5 751A                    	jne	short chk_32khz_2
   358 000002F7 BB[80130000]            	mov	ebx, load_32khz_mono_16_bit
   359 000002FC EB13                    	jmp	short chk_32khz_2
   360                                  chk_32khz_1:
   361 000002FE BB[E2120000]            	mov	ebx, load_32khz_stereo_8_bit
   362 00000303 803D[2C280000]01        	cmp	byte [stmo], 1 
   363 0000030A 7505                    	jne	short chk_32khz_2
   364 0000030C BB[6E120000]            	mov	ebx, load_32khz_mono_8_bit
   365                                  chk_32khz_2:
   366 00000311 B8AA2A0000              	mov	eax, 10922
   367 00000316 BA03000000              	mov	edx, 3
   368 0000031B B902000000              	mov	ecx, 2
   369                                  	;jmp	short set_sizes 
   370                                  set_sizes:
   371 00000320 803D[2C280000]01        	cmp	byte [stmo], 1
   372 00000327 7402                    	je	short ss_1
   373 00000329 D1E0                    	shl	eax, 1
   374                                  ss_1:
   375 0000032B 803D[2D280000]08        	cmp	byte [bps], 8
   376 00000332 7602                    	jna	short ss_2
   377                                  	; 16 bit samples
   378 00000334 D1E0                    	shl	eax, 1
   379                                  ss_2:
   380 00000336 A3[70030000]            	mov	[loadsize], eax
   381 0000033B F7E2                    	mul	edx
   382                                  	;cmp	ecx, 1
   383                                  	;je	short ss_3
   384                                  ;ss_3:
   385 0000033D F7F1                    	div	ecx
   386 0000033F 8A0D[A1280000]          	mov	cl, [fbs_shift]
   387 00000345 D3E0                    	shl	eax, cl
   388                                  	; 26/11/2023
   389                                  	;shr	eax, 1	; buffer size is 16 bit sample count
   390 00000347 A3[74030000]            	mov	[buffersize], eax ; buffer size in bytes 
   391 0000034C 891D[6C030000]          	mov	[loadfromwavfile], ebx
   392 00000352 EB24                    	jmp	short PlayNow
   393                                  
   394                                  vra_needed:
   395                                  	sys	_msg, msg_no_vra, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000354 BB[64260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000359 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000035E BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000363 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000368 CD40                <1>  int 40h
   396 0000036A EB58                    	jmp	Exit
   397                                  
   398                                  	; 26/11/2023
   399                                  	; 13/11/2023
   400                                  loadfromwavfile:
   401 0000036C [23060000]              	dd	loadFromFile
   402                                  loadsize:	; read from wav file
   403 00000370 00000000                	dd	0
   404                                  buffersize:	; write to DMA buffer
   405 00000374 00000100                	dd	65536 ; bytes
   406                                  
   407                                  PlayNow: 
   408                                  
   409                                  ; 26/11/2023
   410                                  %if 0
   411                                  	; Allocate Audio Buffer (for user)
   412                                  	;sys	_audio, 0200h, BUFFERSIZE, audio_buffer
   413                                  	; 26/11/2023
   414                                  	sys	_audio, 0200h, [buffersize], audio_buffer
   415                                  	jnc	short _2
   416                                  
   417                                  	; 26/11/2023 - temporary
   418                                  	;sys	_msg, test_1, 255, 0Ch
   419                                  
   420                                  error_exit:
   421                                  	sys	_msg, trdos386_err_msg, 255, 0Eh
   422                                  	jmp	Exit
   423                                  _2:
   424                                  	; DIRECT CGA (TEXT MODE) MEMORY ACCESS
   425                                  	; bl = 0, bh = 4
   426                                  	; Direct access/map to CGA (Text) memory (0B8000h)
   427                                  
   428                                  	sys	_video, 0400h
   429                                  	cmp	eax, 0B8000h
   430                                  	jne	short error_exit
   431                                  
   432                                  	; Initialize Audio Device (bh = 3)
   433                                  	sys	_audio, 0301h, 0, audio_int_handler 
   434                                  ;	jc	short error_exit
   435                                  _3:
   436                                  
   437                                  %else
   438                                  	; 29/05/2024
   439                                  	; playwav4.asm
   440                                  _2:	
   441 00000378 E8E0200000              	call	check4keyboardstop	; flush keyboard buffer
   442 0000037D 72F9                    	jc	short _2		; 07/11/2023
   443                                  
   444                                   	;call	codecConfig		; unmute codec, set rates.
   445                                  	; 11/11/2023
   446                                  	;jc	short init_err
   447                                  %endif
   448                                  
   449                                  ;
   450                                  ; position file pointer to start in actual wav data
   451                                  ; MUCH improvement should really be done here to check if sample size is
   452                                  ; supported, make sure there are 2 channels, etc.  
   453                                  ;
   454                                          ;mov     ah, 42h
   455                                          ;mov     al, 0	; from start of file
   456                                          ;mov     bx, [FileHandle]
   457                                          ;xor     cx, cx
   458                                          ;mov     dx, 44	; jump past .wav/riff header
   459                                          ;int     21h
   460                                  
   461                                  	sys	_seek, [FileHandle], 44, 0
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000037F 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000385 B92C000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000038A BA00000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000038F B813000000          <1>  mov eax, %1
    89                              <1> 
    90 00000394 CD40                <1>  int 40h
   462                                  
   463                                  	sys	_msg, nextline, 255, 07h ; 01/05/2017
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000396 BB[3D270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000039B B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000003A0 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003A5 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000003AA CD40                <1>  int 40h
   464                                  
   465                                  	; 29/05/2024
   466                                  	; ----
   467                                  	; DIRECT CGA (TEXT MODE) MEMORY ACCESS
   468                                  	; bl = 0, bh = 4
   469                                  	; Direct access/map to CGA (Text) memory (0B8000h)
   470                                  
   471                                  	sys	_video, 0400h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000003AC BB00040000          <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82                              <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003B1 B81F000000          <1>  mov eax, %1
    89                              <1> 
    90 000003B6 CD40                <1>  int 40h
   472 000003B8 3D00800B00              	cmp	eax, 0B8000h
   473 000003BD 7543                    	jne	short error_exit
   474                                  	; ----
   475                                  
   476                                  ; play the .wav file. Most of the good stuff is in here.
   477                                  
   478 000003BF E856000000              	call    PlayWav
   479                                  
   480                                  ; close the .wav file and exit.
   481                                  
   482                                  ; 29/05/2024
   483                                  %if 0
   484                                  StopPlaying:
   485                                  	; Stop Playing
   486                                  	sys	_audio, 0700h
   487                                  	; Cancel callback service (for user)
   488                                  	sys	_audio, 0900h
   489                                  	; Deallocate Audio Buffer (for user)
   490                                  	sys	_audio, 0A00h
   491                                  	; Disable Audio Device
   492                                  	sys	_audio, 0C00h
   493                                  %endif
   494                                  
   495                                  Exit:  
   496 000003C4 E8DB010000                      call    closeFile
   497                                           
   498                                  	sys	_exit	; Bye!
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80                              <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82                              <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003C9 B801000000          <1>  mov eax, %1
    89                              <1> 
    90 000003CE CD40                <1>  int 40h
   499                                  here:
   500 000003D0 EBFE                    	jmp	short here
   501                                  
   502                                  pmsg_usage:
   503                                  	sys	_msg, msg_usage, 255, 0Bh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000003D2 BB[B0250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000003D7 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000003DC BA0B000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003E1 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000003E6 CD40                <1>  int 40h
   504 000003E8 EBDA                    	jmp	short Exit
   505                                  
   506                                  	; 29/05/2024
   507                                  init_err:
   508                                  	sys	_msg, msg_init_err, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000003EA BB[33260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000003EF B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000003F4 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000003F9 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000003FE CD40                <1>  int 40h
   509 00000400 EBC2                    	jmp	short Exit
   510                                  
   511                                  	; 29/05/2024
   512                                  error_exit:
   513                                  	sys	_msg, msg_error, 255, 0Eh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000402 BB[13260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000407 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000040C BA0E000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000411 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000416 CD40                <1>  int 40h
   514 00000418 EBAA                    	jmp	short Exit
   515                                  
   516                                  	; --------------------------------------------
   517                                  	
   518                                  	; 29/05/2024 (TYRDOS 386, playwav7.s)
   519                                  	; ((Modified from playwav4.asm, ich_wav4.asm))
   520                                  	; ------------------
   521                                  ;playwav_vra:
   522                                  PlayWav:
   523                                  	; create Buffer Descriptor List
   524                                  
   525                                  	;  Generic Form of Buffer Descriptor
   526                                  	;  ---------------------------------
   527                                  	;  63   62    61-48    47-32   31-0
   528                                  	;  ---  ---  --------  ------- -----
   529                                  	;  IOC  BUP -reserved- Buffer  Buffer
   530                                  	;		      Length   Pointer
   531                                  	;		      [15:0]   [31:0]
   532                                  
   533                                  	; 29/05/2024
   534                                  	; Allocate memory block (33 pages)
   535                                  	sys	_alloc, BDL_BUFFER, 33*4096, 0 ; no upper limit
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000041A BB[00300000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000041F B900100200          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000424 BA00000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000429 B82A000000          <1>  mov eax, %1
    89                              <1> 
    90 0000042E CD40                <1>  int 40h
   536 00000430 72D0                    	jc	short error_exit
   537                                  	
   538                                  	;mov	esi, eax
   539                                  
   540 00000432 A3[B2280000]            	mov	[_bdl_buffer], eax ; BDL_BUFFER physical address 
   541                                  
   542 00000437 0500100000              	add	eax, 4096	; WAVBUFFER_1 physical address
   543 0000043C 89C3                    	mov	ebx, eax
   544                                  	;mov	[wav_buffer1], eax
   545                                  	;add	eax, 65536	; WAVBUFFER_2 physical address
   546                                  	;mov	[wav_buffer2], eax
   547                                  
   548 0000043E BF[00300000]            	mov	edi, BDL_BUFFER
   549 00000443 B910000000              	mov	ecx, 16
   550                                  _0:
   551                                  	;mov	eax, WAVBUFFER_1
   552 00000448 89D8                    	mov	eax, ebx	; WAVBUFFER_1 physical address
   553 0000044A AB                      	stosd
   554                                  
   555 0000044B A1[74030000]            	mov	eax, [buffersize]
   556 00000450 D1E8                    	shr	eax, 1 ; buffer size in word
   557 00000452 0D00000040              	or	eax, BUP	; tuneloop (without interrupt)
   558 00000457 AB                      	stosd
   559                                  
   560                                  	;mov	eax, WAVBUFFER_2
   561 00000458 89D8                    	mov	eax, ebx
   562 0000045A 0500000100              	add	eax, 65536	; WAVBUFFER_2 physical address
   563 0000045F AB                      	stosd
   564                                  
   565 00000460 A1[74030000]            	mov	eax, [buffersize]
   566 00000465 D1E8                    	shr	eax, 1 ; buffer size in word
   567 00000467 0D00000040              	or	eax, BUP	; tuneloop (without interrupt)
   568 0000046C AB                      	stosd
   569                                  
   570 0000046D E2D9                    	loop	_0
   571                                  
   572                                  	;push	esi
   573                                  
   574                                  	; load 64k into buffer 1
   575 0000046F C705[AE280000]-         	mov	dword [audio_buffer], WAVBUFFER_1
   575 00000475 [00400000]         
   576 00000479 FF15[6C030000]          	call	dword [loadfromwavfile]
   577                                  
   578                                  	; and 64k into buffer 2
   579 0000047F C705[AE280000]-         	mov	dword [audio_buffer], WAVBUFFER_2
   579 00000485 [00400100]         
   580 00000489 FF15[6C030000]          	call	dword [loadfromwavfile]
   581                                  
   582                                  	;pop	esi
   583                                  	
   584                                  	; write NABMBAR+10h with offset of buffer descriptor list
   585                                  
   586                                         	;;mov	eax, BDL_BUFFER
   587                                          ;mov	eax, esi	; BDL_BUFFER physical address
   588                                  
   589 0000048F A1[B2280000]            	mov	eax, [_bdl_buffer] ; BDL_BUFFER physical address
   590                                  
   591 00000494 668B15[AC280000]        	mov	dx, [NABMBAR]
   592 0000049B 6683C210                        add     dx, PO_BDBAR_REG	; set pointer to BDL
   593                                  	;out	dx, eax 		; write to AC97 controller
   594                                  	; 29/05/2024
   595 0000049F 89C3                    	mov	ebx, eax ; data, dword
   596 000004A1 B405                    	mov	ah, 5	; write port dword
   597 000004A3 CD34                    	int	34h
   598                                  
   599                                  	; 31/05/2024
   600                                  	; 19/05/2024
   601                                  	;call	delay1_4ms
   602                                  
   603 000004A5 B01F                            mov	al, 31
   604 000004A7 E846200000              	call	setLastValidIndex
   605                                  
   606                                  	; 31/05/2024
   607                                  	; 19/05/2024
   608                                  	;call	delay1_4ms
   609                                  
   610                                  	; 17/02/2017
   611 000004AC 668B15[AC280000]                mov	dx, [NABMBAR]
   612 000004B3 6683C21B                        add	dx, PO_CR_REG		; PCM out Control Register
   613                                          ;mov	al, IOCE + RPBM	; Enable 'Interrupt On Completion' + run
   614                                  	;			; (LVBI interrupt will not be enabled)
   615                                  	; 06/11/2023 (TUNELOOP version, without interrupt)
   616 000004B7 B001                    	mov	al, RPBM
   617                                  	;out	dx, al			; Start bus master operation.
   618                                  	; 29/05/2024
   619                                  	; al = data, byte
   620 000004B9 B401                    	mov	ah, 1 ; write port, byte
   621 000004BB CD34                    	int	34h
   622                                  
   623                                  	; 19/05/2024
   624                                  	; 06/11/2023
   625                                  	;call	delay1_4ms	; 31/05/2024
   626                                  	;call	delay1_4ms
   627                                  	;call	delay1_4ms
   628                                  	;call	delay1_4ms
   629                                  
   630                                  ; while DMA engine is running, examine current index and wait until it hits 1
   631                                  ; as soon as it's 1, we need to refresh the data in wavbuffer1 with another
   632                                  ; 64k. Likewise when it's playing buffer 2, refresh buffer 1 and repeat.
   633                                  
   634                                  ; 18/11/2023
   635                                  ; 08/11/2023
   636                                  ; 07/11/2023
   637                                  
   638                                  tuneLoop:
   639                                  	; 18/11/2023 (ich_wav4.asm)
   640                                  	; 08/11/2023
   641                                  	; 06/11/2023
   642 000004BD B031                    	mov	al, '1'
   643 000004BF E86C000000              	call	tL0
   644                                  tL1:
   645 000004C4 E8EC1F0000              	call	updateLVI	; /set LVI != CIV/
   646 000004C9 7452                    	jz	short _exitt_	; 08/11/2023
   647 000004CB E88D1F0000              	call	check4keyboardstop
   648 000004D0 724B                    	jc	short _exitt_
   649 000004D2 E8CE1F0000              	call	getCurrentIndex
   650 000004D7 A801                    	test	al, BIT0
   651 000004D9 74E9                    	jz	short tL1	; loop if buffer 2 is not playing
   652                                  
   653                                  	; 29/05/2024
   654                                  	; load buffer 1
   655 000004DB C705[AE280000]-         	mov	dword [audio_buffer], WAVBUFFER_1
   655 000004E1 [00400000]         
   656 000004E5 FF15[6C030000]          	call	dword [loadfromwavfile]
   657 000004EB 7230                    	jc	short _exitt_	; end of file
   658                                  
   659 000004ED B032                    	mov	al, '2'
   660 000004EF E83C000000              	call	tL0
   661                                  tL2:
   662 000004F4 E8BC1F0000              	call    updateLVI
   663 000004F9 7422                    	jz	short _exitt_	; 08/11/2023
   664 000004FB E85D1F0000              	call    check4keyboardstop
   665 00000500 721B                    	jc	short _exitt_
   666 00000502 E89E1F0000              	call    getCurrentIndex
   667 00000507 A801                    	test	al, BIT0
   668 00000509 75E9                    	jnz	short tL2	; loop if buffer 1 is not playing
   669                                  
   670                                  	; 29/05/2024
   671                                  	; load buffer 2
   672 0000050B C705[AE280000]-         	mov	dword [audio_buffer], WAVBUFFER_2
   672 00000511 [00400100]         
   673 00000515 FF15[6C030000]          	call	dword [loadfromwavfile]
   674 0000051B 73A0                    	jnc	short tuneLoop
   675                                  _exitt_:
   676 0000051D 668B15[AC280000]        	mov	dx, [NABMBAR]		
   677 00000524 6683C21B                	add	dx, PO_CR_REG	; PCM out Control Register
   678 00000528 B000                    	mov	al, 0
   679                                  	;out	dx, al		; stop player
   680                                  	; 29/05/2024
   681                                  	; al = data, byte
   682 0000052A B401                    	mov	ah, 1  ; write port, byte
   683 0000052C CD34                    	int	34h	
   684                                  
   685                                  	; 29/05/2024
   686 0000052E B030                    	mov	al, '0'
   687                                  
   688                                  	;add	al, '0'
   689                                  	;call	tL0
   690                                  	;
   691                                  	;retn
   692                                  	; 06/11/2023
   693                                  	;jmp	short tL0
   694                                  	;retn
   695                                  
   696                                  	; 06/11/2023
   697                                  tL0:
   698                                  	; 29/05/2024 (TRDOS 386)
   699                                  	; 08/11/2023
   700                                  	; 05/11/2023
   701                                  	; 17/02/2017 - Buffer switch test (temporary)
   702                                  	; 06/11/2023
   703                                  	; al = buffer indicator ('1', '2' or '0' -stop- )
   704                                  	
   705 00000530 BB00800B00              	mov	ebx, 0B8000h ; video display page address
   706 00000535 B44E                    	mov	ah, 4Eh
   707 00000537 668903                  	mov	[ebx], ax ; show current play buffer (1, 2)
   708 0000053A C3                      	retn
   709                                  
   710                                  	; ------------------
   711                                  
   712                                  ; 29/05/2024
   713                                  %if 0
   714                                  	; 25/11/2023
   715                                  DetectAC97:
   716                                  	; Detect (BH=1) AC'97 (BL=2) Audio Device
   717                                          sys	_audio, 0102h
   718                                  	jc	short DetectAC97_retn
   719                                  
   720                                  	; 25/11/2023
   721                                  	; Get AC'97 Codec info
   722                                  	; (Function 14, sub function 1)
   723                                  	sys	_audio, 0E01h
   724                                  	; Save Variable Rate Audio support bit
   725                                  	and	al, 1
   726                                  	mov	[VRA], al
   727                                  
   728                                  DetectAC97_retn:
   729                                  	retn
   730                                  %else
   731                                  	; 29/05/2024
   732                                  DetectAC97:
   733                                  DetectICH:
   734                                  	; 22/11/2023
   735                                  	; 19/11/2023
   736                                  	; 01/11/2023 - TRDOS 386 Kernel v2.0.7
   737                                  	;; 10/06/2017
   738                                  	;; 05/06/2017
   739                                  	;; 29/05/2017
   740                                  	;; 28/05/2017
   741                                  
   742                                  	; 19/11/2023
   743 0000053B BE[9D260000]            	mov	esi, valid_ids	; address of Valid ICH (AC97) Device IDs
   744 00000540 B915000000              	mov	ecx, valid_id_count
   745                                  pfd_1:
   746 00000545 AD                      	lodsd
   747 00000546 E8EB1A0000              	call	pciFindDevice
   748 0000054B 7303                    	jnc	short d_ac97_1
   749 0000054D E2F6                    	loop	pfd_1
   750                                  
   751                                  	;stc
   752 0000054F C3                      	retn
   753                                  
   754                                  d_ac97_1:
   755                                  	; eax = BUS/DEV/FN
   756                                  	;	00000000BBBBBBBBDDDDDFFF00000000
   757                                  	; edx = DEV/VENDOR
   758                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
   759                                  
   760                                  	; playwav4.asm - 19/05/2024
   761                                  
   762 00000550 A3[A6280000]            	mov	[bus_dev_fn], eax
   763 00000555 8915[A2280000]          	mov	[dev_vendor], edx
   764                                  
   765                                  	; get ICH base address regs for mixer and bus master
   766                                  
   767 0000055B B010                            mov     al, NAMBAR_REG
   768 0000055D E8621B0000                      call    pciRegRead16			; read PCI registers 10-11
   769                                          ;and    dx, IO_ADDR_MASK 		; mask off BIT0
   770                                  	; 19/05/2024
   771 00000562 80E2FE                  	and	dl, 0FEh
   772                                  
   773 00000565 668915[AA280000]                mov     [NAMBAR], dx			; save audio mixer base addr
   774                                  
   775 0000056C B014                    	mov     al, NABMBAR_REG
   776 0000056E E8511B0000                      call    pciRegRead16
   777                                          ;and    dx, IO_ADDR_MASK
   778                                  	; 19/05/2024
   779 00000573 80E2C0                  	and	dl, 0C0h
   780                                  
   781 00000576 668915[AC280000]                mov     [NABMBAR], dx			; save bus master base addr
   782                                  
   783 0000057D B03C                    	mov	al, AC97_INT_LINE ; Interrupt line register (3Ch)
   784 0000057F E8391B0000              	call	pciRegRead8 ; 17/02/2017
   785                                  
   786 00000584 8815[A0280000]          	mov     [ac97_int_ln_reg], dl
   787                                  
   788                                  	;clc
   789                                  
   790 0000058A C3                      	retn
   791                                  %endif
   792                                  
   793                                  ;open or create file
   794                                  ;
   795                                  ;input: ds:dx-->filename (asciiz)
   796                                  ;       al=file Mode (create or open)
   797                                  ;output: none  cs:[FileHandle] filled
   798                                  ;
   799                                  openFile:
   800                                  	;mov	ah, 3Bh	; start with a mode
   801                                  	;add	ah, al	; add in create or open mode
   802                                  	;xor	ecx, ecx
   803                                  	;int	21h
   804                                  	;jc	short _of1
   805                                  	;;mov	[cs:FileHandle], ax
   806                                  
   807                                  	sys	_open, wav_file_name, 0
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000058B BB[4E280000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000590 B900000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000595 B805000000          <1>  mov eax, %1
    89                              <1> 
    90 0000059A CD40                <1>  int 40h
   808 0000059C 7205                    	jc	short _of1
   809                                  
   810 0000059E A3[03250000]            	mov	[FileHandle], eax
   811                                  _of1:
   812 000005A3 C3                      	retn
   813                                  
   814                                  ; close the currently open file
   815                                  ; input: none, uses cs:[FileHandle]
   816                                  closeFile:
   817 000005A4 833D[03250000]FF        	cmp	dword [FileHandle], -1
   818 000005AB 7417                    	je	short _cf1
   819                                  	;mov    bx, [FileHandle]  
   820                                  	;mov    ax, 3E00h
   821                                          ;int    21h              ;close file
   822                                  
   823                                  	sys	_close, [FileHandle]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000005AD 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82                              <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000005B3 B806000000          <1>  mov eax, %1
    89                              <1> 
    90 000005B8 CD40                <1>  int 40h
   824 000005BA C705[03250000]FFFF-     	mov 	dword [FileHandle], -1
   824 000005C2 FFFF               
   825                                  _cf1:
   826 000005C4 C3                      	retn
   827                                  
   828                                  getSampleRate:
   829                                  	
   830                                  ; reads the sample rate from the .wav file.
   831                                  ; entry: none - assumes file is already open
   832                                  ; exit: ax = sample rate (11025, 22050, 44100, 48000)
   833                                  ;	cx = number of channels (mono=1, stereo=2)
   834                                  ;	dx = bits per sample (8, 16)
   835                                  
   836 000005C5 53                      	push    ebx
   837                                  
   838                                          ;mov	ah, 42h
   839                                          ;mov	al, 0	; from start of file
   840                                          ;mov	bx, [FileHandle]
   841                                          ;xor	ecx, ecx
   842                                          ;mov	dx, 08h	; "WAVE"
   843                                          ;int	21h
   844                                  	
   845                                  	sys	_seek, [FileHandle], 8, 0
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000005C6 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000005CC B908000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000005D1 BA00000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000005D6 B813000000          <1>  mov eax, %1
    89                              <1> 
    90 000005DB CD40                <1>  int 40h
   846                                  
   847                                          ;mov	dx, smpRBuff
   848                                          ;mov	cx, 28	; 28 bytes
   849                                  	;mov	ah, 3fh
   850                                          ;int	21h
   851                                  
   852                                  	sys	_read, [FileHandle], smpRBuff, 28
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000005DD 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000005E3 B9[32280000]        <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000005E8 BA1C000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000005ED B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000005F2 CD40                <1>  int 40h
   853                                  
   854 000005F4 813D[32280000]5741-     	cmp	dword [smpRBuff], 'WAVE'
   854 000005FC 5645               
   855 000005FE 7520                    	jne	short gsr_stc
   856                                  
   857 00000600 66833D[3E280000]01      	cmp	word [smpRBuff+12], 1	; Offset 20, must be 1 (= PCM)
   858 00000608 7516                    	jne	short gsr_stc
   859                                  
   860 0000060A 668B0D[40280000]        	mov	cx, [smpRBuff+14]	; return num of channels in CX
   861 00000611 66A1[42280000]                  mov     ax, [smpRBuff+16]	; return sample rate in AX
   862 00000617 668B15[4C280000]        	mov	dx, [smpRBuff+26]	; return bits per sample value in DX
   863                                  gsr_retn:
   864 0000061E 5B                              pop     ebx
   865 0000061F C3                              retn
   866                                  gsr_stc:
   867 00000620 F9                      	stc
   868 00000621 EBFB                    	jmp	short gsr_retn
   869                                  
   870                                  ; 29/05/2024
   871                                  %if 0
   872                                  audio_int_handler:
   873                                  	; 18/08/2020 (14/10/2020, 'wavplay2.s')
   874                                  
   875                                  	;mov	byte [srb], 1 ; interrupt (or signal response byte)
   876                                  	
   877                                  	;cmp	byte [cbs_busy], 1
   878                                  	;jnb	short _callback_bsy_retn
   879                                  	
   880                                  	;mov	byte [cbs_busy], 1
   881                                  
   882                                  	mov	al, [half_buff]
   883                                  
   884                                  	cmp	al, 1
   885                                  	jb	short _callback_retn
   886                                  
   887                                  	; 18/08/2020
   888                                  	mov	byte [srb], 1
   889                                  
   890                                  	xor	byte [half_buff], 3 ; 2->1, 1->2
   891                                  
   892                                  	add	al, '0'
   893                                  tL0:	; 26/11/2023
   894                                  	mov	ah, 4Eh
   895                                  	mov	ebx, 0B8000h ; video display page address
   896                                  	mov	[ebx], ax ; show playing buffer (1, 2)
   897                                  _callback_retn:
   898                                  	;mov	byte [cbs_busy], 0
   899                                  _callback_bsy_retn:
   900                                  	sys	_rele ; return from callback service 
   901                                  	; we must not come here !
   902                                  	sys	_exit
   903                                  %endif
   904                                  	
   905                                  loadFromFile:
   906                                  	; 26/11/2023
   907 00000623 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
   908                                  					; last of the file?
   909 0000062A 7402                    	jz	short lff_0		; no
   910 0000062C F9                      	stc
   911 0000062D C3                      	retn
   912                                  lff_0:
   913                                  	; 13/06/2017
   914                                  	;mov	edx, BUFFERSIZE
   915                                  	; 26/11/2023
   916                                  	;mov	edi, audio_buffer
   917                                  	; 29/05/2024
   918 0000062E 8B3D[AE280000]          	mov	edi, [audio_buffer]
   919 00000634 8B15[74030000]          	mov	edx, [buffersize]	; bytes
   920 0000063A 8A0D[A1280000]          	mov	cl, [fbs_shift]   
   921 00000640 20C9                    	and	cl, cl
   922 00000642 7409                    	jz	short lff_1 ; stereo, 16 bit
   923                                  
   924                                  	; fbs_shift =
   925                                  	;	2 for mono and 8 bit sample (multiplier = 4)
   926                                  	;	1 for mono or 8 bit sample (multiplier = 2)
   927 00000644 D3EA                    	shr	edx, cl
   928                                  	;inc	edx
   929                                  
   930 00000646 BE[00400200]            	mov     esi, temp_buffer
   931 0000064B EB02                    	jmp	short lff_2
   932                                  lff_1:
   933                                  	;;mov	esi, audio_buffer
   934                                  	; 29/05/2024
   935                                  	;mov	esi, [audio_buffer]
   936 0000064D 89FE                    	mov	esi, edi ; audio_buffer
   937                                  lff_2:
   938                                  	; 17/03/2017
   939                                  	; esi = buffer address
   940                                  	; edx = buffer size
   941                                   
   942                                  	; 26/11/2023
   943                                  	; load file into memory
   944                                  	sys 	_read, [FileHandle], esi
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000064F 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000655 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84                              <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000657 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000065C CD40                <1>  int 40h
   945 0000065E 89D1                    	mov	ecx, edx
   946 00000660 724A                    	jc	short padfill ; error !
   947                                  
   948 00000662 21C0                    	and	eax, eax
   949 00000664 7446                    	jz	short padfill
   950                                  lff_3:
   951                                  	; 26/11/2023
   952 00000666 8A1D[A1280000]          	mov	bl, [fbs_shift]
   953 0000066C 20DB                    	and	bl, bl
   954 0000066E 745C                    	jz	short lff_11
   955                                  
   956 00000670 29C1                    	sub	ecx, eax
   957 00000672 89CD                    	mov	ebp, ecx
   958                                  
   959                                  	;mov	esi, temp_buffer
   960                                  	;mov	edi, audio_buffer
   961 00000674 89C1                    	mov	ecx, eax   ; byte count
   962                                  
   963 00000676 803D[2D280000]08        	cmp	byte [bps], 8 ; bits per sample (8 or 16)
   964 0000067D 751E                    	jne	short lff_6 ; 16 bit samples
   965                                  	; 8 bit samples
   966 0000067F FECB                    	dec	bl  ; shift count, 1 = stereo, 2 = mono
   967 00000681 740E                    	jz	short lff_5 ; 8 bit, stereo
   968                                  lff_4:
   969                                  	; mono & 8 bit
   970 00000683 AC                      	lodsb
   971 00000684 2C80                    	sub	al, 80h ; 08/11/2023
   972 00000686 C1E008                  	shl	eax, 8 ; convert 8 bit sample to 16 bit sample
   973 00000689 66AB                    	stosw	; left channel
   974 0000068B 66AB                    	stosw	; right channel
   975 0000068D E2F4                    	loop	lff_4
   976 0000068F EB16                    	jmp	short lff_8
   977                                  lff_5:
   978                                  	; stereo & 8 bit
   979 00000691 AC                      	lodsb
   980 00000692 2C80                    	sub	al, 80h ; 08/11/2023
   981 00000694 C1E008                  	shl	eax, 8 ; convert 8 bit sample to 16 bit sample
   982 00000697 66AB                    	stosw
   983 00000699 E2F6                    	loop	lff_5			
   984 0000069B EB0A                    	jmp	short lff_8
   985                                  lff_6:
   986 0000069D D1E9                    	shr	ecx, 1 ; word count
   987                                  lff_7:
   988 0000069F 66AD                    	lodsw
   989 000006A1 66AB                    	stosw	; left channel
   990 000006A3 66AB                    	stosw	; right channel
   991 000006A5 E2F8                    	loop	lff_7
   992                                  lff_8:
   993                                  	; 27/11/2023
   994 000006A7 F8                      	clc
   995 000006A8 89E9                    	mov	ecx, ebp
   996 000006AA E314                    	jecxz	endLFF_retn
   997                                  	
   998                                  padfill:
   999 000006AC 803D[2D280000]10        	cmp 	byte [bps], 16
  1000 000006B3 740C                    	je	short lff_10
  1001                                  	; Minimum Value = 0
  1002 000006B5 30C0                            xor     al, al
  1003 000006B7 F3AA                    	rep	stosb
  1004                                  lff_9:
  1005 000006B9 800D[30280000]01                or	byte [flags], ENDOFFILE	; end of file flag
  1006                                  endLFF_retn:
  1007 000006C0 C3                              retn
  1008                                  lff_10:
  1009 000006C1 31C0                    	xor	eax, eax
  1010                                  	; Minimum value = 8000h (-32768)
  1011 000006C3 D1E9                    	shr	ecx, 1 
  1012 000006C5 B480                    	mov	ah, 80h ; ax = -32768
  1013 000006C7 F366AB                  	rep	stosw
  1014 000006CA EBED                    	jmp	short lff_9
  1015                                  
  1016                                  lff_11:
  1017                                  	; 16 bit stereo
  1018                                  	; ecx = buffer size
  1019                                  	; eax = read count
  1020 000006CC 29C1                    	sub	ecx, eax
  1021 000006CE 76F0                    	jna	short endLFF_retn
  1022 000006D0 01C7                    	add	edi, eax  ; audio_buffer + eax
  1023 000006D2 EBED                    	jmp	short lff_10 ; padfill
  1024                                  
  1025                                  error_exit_2:
  1026                                  	; 26/11/2023 - temporary
  1027                                  	;sys	_msg, test_2, 255, 0Ch
  1028 000006D4 E929FDFFFF              	jmp	error_exit
  1029                                  	
  1030                                  	; 26/11/2023 - temporary
  1031                                  ;test_1:
  1032                                  ;	db 13, 10, 'Test 1', 13,10, 0
  1033                                  ;test_2:
  1034                                  ;	db 13, 10, 'Test 2', 13,10, 0
  1035                                  	
  1036                                  ; 29/05/2024
  1037                                  %if 0
  1038                                  
  1039                                  PlayWav:
  1040                                  	; 26/11/2023
  1041                                  	; 18/08/2020 (27/07/2020, 'wavplay2.s')
  1042                                  	; 13/06/2017
  1043                                  	; Convert 8 bit samples to 16 bit samples
  1044                                  	; and convert mono samples to stereo samples
  1045                                  
  1046                                  	; 26/11/2023
  1047                                  	; load 32768 bytes into audio buffer
  1048                                  	;mov	edi, audio_buffer
  1049                                  	;;mov	edx, BUFFERSIZE
  1050                                  	; 26/11/2023
  1051                                  	;mov	edx, [buffersize]
  1052                                  	;call	loadFromFile
  1053                                  	; 26/11/2023
  1054                                  	call	dword [loadfromwavfile]
  1055                                  	jc	short error_exit_2
  1056                                  	mov	byte [half_buff], 1 ; (DMA) Buffer 1
  1057                                  
  1058                                  	; 18/08/2020 (27/07/2020, 'wavplay2.s')
  1059                                  	test    byte [flags], ENDOFFILE  ; end of file
  1060                                  	jnz	short _6 ; yes
  1061                                  			 ; bypass filling dma half buffer 2
  1062                                  
  1063                                  	; bh = 16 : update (current, first) dma half buffer
  1064                                  	; bl = 0  : then switch to the next (second) half buffer
  1065                                  	sys	_audio, 1000h
  1066                                  
  1067                                  	; 18/08/2020
  1068                                  	; [audio_flag] = 1 (in TRDOS 386 kernel)
  1069                                  
  1070                                  	; audio_buffer must be filled again after above system call 
  1071                                  	; (Because audio interrupt will be generated by AC97 hardware
  1072                                  	; at the end of the first half of dma buffer.. so, 
  1073                                  	; the second half must be ready. 'sound_play' will use it.)
  1074                                  
  1075                                  	; 26/11/2023
  1076                                  	;mov	edi, audio_buffer
  1077                                  	;;mov	edx, BUFFERSIZE
  1078                                  	; 26/11/2023
  1079                                  	;mov	edx, [buffersize]
  1080                                  	;call	loadFromFile
  1081                                  	; 26/11/2023
  1082                                  	call	dword [loadfromwavfile]
  1083                                  	;jc	short p_return
  1084                                  _6:
  1085                                  	; Set Master Volume Level (BL=0 or 80h)
  1086                                  	; 	for next playing (BL>=80h)
  1087                                  	;sys	_audio, 0B80h, 1D1Dh
  1088                                  	sys	_audio, 0B00h, 1D1Dh
  1089                                  
  1090                                  	; 18/08/2020
  1091                                  	;mov	byte [volume_level], 1Dh
  1092                                  	mov	[volume_level], cl
  1093                                  
  1094                                  	; Start	to play
  1095                                  	mov	al, [bps]
  1096                                  	shr	al, 4 ; 8 -> 0, 16 -> 1
  1097                                  	shl	al, 1 ; 16 -> 2, 8 -> 0
  1098                                  	mov	bl, [stmo]
  1099                                  	dec	bl
  1100                                  	or	bl, al
  1101                                  	mov	cx, [sample_rate] 
  1102                                  	mov	bh, 4 ; start to play	
  1103                                  	sys	_audio
  1104                                  
  1105                                  	;mov	ebx, 0B8000h ; video display page address
  1106                                  	;mov	ah, 4Eh
  1107                                  	;mov	al, [half_buffer]
  1108                                  	;mov	[ebx], ax ; show playing buffer (1, 2)
  1109                                  
  1110                                  	; 18/08/2020 (27/07/2020, 'wavplay2.s')
  1111                                  	; Here..
  1112                                  	; If byte [flags] <> ENDOFFILE ...
  1113                                  	; user's audio_buffer has been copied to dma half buffer 2
  1114                                  
  1115                                  	; [audio_flag] = 0 (in TRDOS 386 kernel)
  1116                                  
  1117                                  	; audio_buffer must be filled again after above system call 
  1118                                  	; (Because, audio interrupt will be generated by VT8237R
  1119                                  	; at the end of the first half of dma buffer.. so, 
  1120                                  	; the 2nd half of dma buffer is ready but the 1st half
  1121                                  	; must be filled again.)
  1122                                  
  1123                                  	; 18/08/2020
  1124                                  	test    byte [flags], ENDOFFILE  ; end of file
  1125                                  	jnz	short p_loop ; yes
  1126                                  
  1127                                  	; 18/08/2020
  1128                                  	; load 32768 bytes into audio buffer
  1129                                  	;; (for the second half of DMA buffer)
  1130                                  	; 27/11/2023
  1131                                  	; 20/05/2017
  1132                                  	;mov	edi, audio_buffer
  1133                                  	;mov	edx, BUFFERSIZE
  1134                                  	; 26/11/2023
  1135                                  	;mov	edx, [buffersize]
  1136                                  	;call	loadFromFile
  1137                                  	; 26/11/2023
  1138                                  	call	dword [loadfromwavfile]
  1139                                  	;jc	short p_return
  1140                                  	;mov	byte [half_buff], 2 ; (DMA) Buffer 2
  1141                                  
  1142                                  	; we need to wait for 'SRB' (audio interrupt)
  1143                                  	; (we can not return from 'PlayWav' here 
  1144                                  	;  even if we have got an error from file reading)
  1145                                  	; ((!!current audio data must be played!!))
  1146                                  
  1147                                  	; 18/08/2020
  1148                                  	;mov	byte [srb], 1
  1149                                  
  1150                                  p_loop:
  1151                                  	;mov	ah, 1		; any key pressed?
  1152                                  	;int	32h		; no, Loop.
  1153                                  	;jz	short q_loop
  1154                                  	;
  1155                                  	;mov	ah, 0		; flush key buffer...
  1156                                  	;int	32h
  1157                                  
  1158                                  	; 18/08/2020 (14/10/2017, 'wavplay2.s')
  1159                                  	cmp	byte [srb], 0
  1160                                  	jna	short q_loop
  1161                                  	mov	byte [srb], 0
  1162                                  	; 27/11/2023
  1163                                  	;mov	edi, audio_buffer
  1164                                  	;mov	edx, BUFFERSIZE
  1165                                  	; 26/11/2023
  1166                                  	;mov	edx, [buffersize]
  1167                                  	;call	loadFromFile
  1168                                  	; 26/11/2023
  1169                                  	call	dword [loadfromwavfile]
  1170                                  	jc	short p_return
  1171                                  q_loop:
  1172                                  	mov     ah, 1		; any key pressed?
  1173                                  	int     32h		; no, Loop.
  1174                                  	jz	short p_loop
  1175                                  
  1176                                  	mov     ah, 0		; flush key buffer...
  1177                                  	int     32h
  1178                                  	
  1179                                  	cmp	al, '+' ; increase sound volume
  1180                                  	je	short inc_volume_level
  1181                                  	cmp	al, '-'
  1182                                  	je	short dec_volume_level
  1183                                  
  1184                                  p_return:
  1185                                  	mov	byte [half_buff], 0
  1186                                  	retn
  1187                                  
  1188                                  	; 18/08/2020 (14/10/2017, 'wavplay2.s')
  1189                                  inc_volume_level:
  1190                                  	mov	cl, [volume_level]
  1191                                  	cmp	cl, 1Fh ; 31
  1192                                  	jnb	short q_loop
  1193                                  	inc	cl
  1194                                  change_volume_level:
  1195                                  	mov	[volume_level], cl
  1196                                  	mov	ch, cl
  1197                                  	; Set Master Volume Level
  1198                                  	sys	_audio, 0B00h
  1199                                  	jmp	short p_loop
  1200                                  dec_volume_level:
  1201                                  	mov	cl, [volume_level]
  1202                                  	cmp	cl, 1 ; 1
  1203                                  	jna	short p_loop
  1204                                  	dec	cl
  1205                                  	jmp	short change_volume_level
  1206                                  %endif
  1207                                  
  1208                                  write_audio_dev_info:
  1209                                  	; EBX = Message address
  1210                                  	; ECX = Max. message length (or stop on ZERO character)
  1211                                  	;	(1 to 255)
  1212                                  	; DL  = Message color (07h = light gray, 0Fh = white) 
  1213                                       	sys 	_msg, msgAudioCardInfo, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000006D9 BB[87250000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000006DE B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000006E3 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000006E8 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000006ED CD40                <1>  int 40h
  1214 000006EF C3                      	retn
  1215                                  
  1216                                  write_wav_file_info:
  1217                                  	; 01/05/2017
  1218                                  	sys	_msg, msgWavFileName, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000006F0 BB[F1260000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000006F5 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000006FA BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000006FF B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000704 CD40                <1>  int 40h
  1219                                  	sys	_msg, wav_file_name, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000706 BB[4E280000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000070B B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000710 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000715 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 0000071A CD40                <1>  int 40h
  1220                                  
  1221                                  write_sample_rate:
  1222                                  	; 01/05/2017
  1223 0000071C 66A1[2E280000]          	mov	ax, [sample_rate]
  1224                                  	; ax = sample rate (hertz)
  1225 00000722 31D2                    	xor	edx, edx
  1226 00000724 66B90A00                	mov	cx, 10
  1227 00000728 66F7F1                  	div	cx
  1228 0000072B 0015[16270000]          	add	[msgHertz+4], dl
  1229 00000731 29D2                    	sub	edx, edx
  1230 00000733 66F7F1                  	div	cx
  1231 00000736 0015[15270000]          	add	[msgHertz+3], dl
  1232 0000073C 29D2                    	sub	edx, edx
  1233 0000073E 66F7F1                  	div	cx
  1234 00000741 0015[14270000]          	add	[msgHertz+2], dl
  1235 00000747 29D2                    	sub	edx, edx
  1236 00000749 66F7F1                  	div	cx
  1237 0000074C 0015[13270000]          	add	[msgHertz+1], dl
  1238 00000752 0005[12270000]          	add	[msgHertz], al
  1239                                  	
  1240                                  	sys	_msg, msgSampleRate, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000758 BB[03270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000075D B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000762 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000767 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 0000076C CD40                <1>  int 40h
  1241                                  
  1242 0000076E BE[2D270000]            	mov	esi, msg16Bits
  1243 00000773 803D[2D280000]10        	cmp	byte [bps], 16
  1244 0000077A 7405                    	je	short wsr_1
  1245 0000077C BE[1D270000]            	mov	esi, msg8Bits
  1246                                  wsr_1:
  1247                                  	sys	_msg, esi, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000781 89F3                <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000783 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000788 BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000078D B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000792 CD40                <1>  int 40h
  1248                                  
  1249 00000794 BE[26270000]            	mov	esi, msgMono
  1250 00000799 803D[2C280000]01        	cmp	byte [stmo], 1
  1251 000007A0 7405                    	je	short wsr_2
  1252 000007A2 BE[37270000]            	mov	esi, msgStereo		
  1253                                  wsr_2:
  1254                                  	sys	_msg, esi, 255, 0Fh
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000007A7 89F3                <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000007A9 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000007AE BA0F000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000007B3 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000007B8 CD40                <1>  int 40h
  1255 000007BA C3                              retn
  1256                                  
  1257                                  write_ac97_pci_dev_info:
  1258                                  	; 06/06/2017
  1259                                  	; 03/06/2017
  1260                                  	; BUS/DEV/FN
  1261                                  	;	00000000BBBBBBBBDDDDDFFF00000000
  1262                                  	; DEV/VENDOR
  1263                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
  1264                                  
  1265                                  	;mov	esi, [dev_vendor]
  1266                                  	;mov	eax, esi
  1267                                  	; 31/05/2024
  1268 000007BB A1[A2280000]            	mov	eax, [dev_vendor]
  1269 000007C0 0FB6D8                  	movzx	ebx, al
  1270 000007C3 88DA                    	mov	dl, bl
  1271 000007C5 80E30F                  	and	bl, 0Fh
  1272 000007C8 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1273 000007CE A2[85270000]            	mov	[msgVendorId+3], al
  1274 000007D3 88D3                    	mov	bl, dl
  1275 000007D5 C0EB04                  	shr	bl, 4
  1276 000007D8 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1277 000007DE A2[84270000]            	mov	[msgVendorId+2], al
  1278 000007E3 88E3                    	mov	bl, ah
  1279 000007E5 88DA                    	mov	dl, bl
  1280 000007E7 80E30F                  	and	bl, 0Fh
  1281 000007EA 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1282 000007F0 A2[83270000]            	mov	[msgVendorId+1], al
  1283 000007F5 88D3                    	mov	bl, dl
  1284 000007F7 C0EB04                  	shr	bl, 4
  1285 000007FA 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1286 00000800 A2[82270000]            	mov	[msgVendorId], al
  1287 00000805 C1E810                  	shr	eax, 16
  1288 00000808 88C3                    	mov	bl, al
  1289 0000080A 88DA                    	mov	dl, bl
  1290 0000080C 80E30F                  	and	bl, 0Fh
  1291 0000080F 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1292 00000815 A2[96270000]            	mov	[msgDevId+3], al
  1293 0000081A 88D3                    	mov	bl, dl
  1294 0000081C C0EB04                  	shr	bl, 4
  1295 0000081F 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1296 00000825 A2[95270000]            	mov	[msgDevId+2], al
  1297 0000082A 88E3                    	mov	bl, ah
  1298 0000082C 88DA                    	mov	dl, bl
  1299 0000082E 80E30F                  	and	bl, 0Fh
  1300 00000831 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1301 00000837 A2[94270000]            	mov	[msgDevId+1], al
  1302 0000083C 88D3                    	mov	bl, dl
  1303 0000083E C0EB04                  	shr	bl, 4
  1304 00000841 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1305 00000847 A2[93270000]            	mov	[msgDevId], al
  1306                                  
  1307                                  	;mov	esi, [bus_dev_fn]
  1308                                  	;shr	esi, 8
  1309                                  	;mov	ax, si
  1310                                  	; 31/05/2024
  1311 0000084C A1[A6280000]            	mov	eax, [bus_dev_fn]
  1312 00000851 C1E808                  	shr	eax, 8
  1313 00000854 88C3                    	mov	bl, al
  1314 00000856 88DA                    	mov	dl, bl
  1315 00000858 80E307                  	and	bl, 7 ; bit 0,1,2
  1316 0000085B 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1317 00000861 A2[BA270000]            	mov	[msgFncNo+1], al
  1318 00000866 88D3                    	mov	bl, dl
  1319 00000868 C0EB03                  	shr	bl, 3
  1320 0000086B 88DA                    	mov	dl, bl
  1321 0000086D 80E30F                  	and	bl, 0Fh
  1322 00000870 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1323 00000876 A2[AC270000]            	mov	[msgDevNo+1], al
  1324 0000087B 88D3                    	mov	bl, dl
  1325 0000087D C0EB04                  	shr	bl, 4
  1326 00000880 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1327 00000886 A2[AB270000]            	mov	[msgDevNo], al
  1328 0000088B 88E3                    	mov	bl, ah
  1329 0000088D 88DA                    	mov	dl, bl
  1330 0000088F 80E30F                  	and	bl, 0Fh
  1331 00000892 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1332 00000898 A2[A0270000]            	mov	[msgBusNo+1], al
  1333 0000089D 88D3                    	mov	bl, dl
  1334 0000089F C0EB04                  	shr	bl, 4
  1335 000008A2 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1336 000008A8 A2[9F270000]            	mov	[msgBusNo], al
  1337                                  
  1338                                  	;mov	ax, [ac97_NamBar]
  1339 000008AD 66A1[AA280000]          	mov	ax, [NAMBAR]	; 29/05/2024
  1340 000008B3 88C3                    	mov	bl, al
  1341 000008B5 88DA                    	mov	dl, bl
  1342 000008B7 80E30F                  	and	bl, 0Fh
  1343 000008BA 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1344 000008C0 A2[C9270000]            	mov	[msgNamBar+3], al
  1345 000008C5 88D3                    	mov	bl, dl
  1346 000008C7 C0EB04                  	shr	bl, 4
  1347 000008CA 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1348 000008D0 A2[C8270000]            	mov	[msgNamBar+2], al
  1349 000008D5 88E3                    	mov	bl, ah
  1350 000008D7 88DA                    	mov	dl, bl
  1351 000008D9 80E30F                  	and	bl, 0Fh
  1352 000008DC 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1353 000008E2 A2[C7270000]            	mov	[msgNamBar+1], al
  1354 000008E7 88D3                    	mov	bl, dl
  1355 000008E9 C0EB04                  	shr	bl, 4
  1356 000008EC 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1357 000008F2 A2[C6270000]            	mov	[msgNamBar], al
  1358                                  
  1359                                  	;mov	ax, [ac97_NabmBar]
  1360 000008F7 66A1[AC280000]          	mov	ax, [NABMBAR]	; 29/05/2024
  1361 000008FD 88C3                    	mov	bl, al
  1362 000008FF 88DA                    	mov	dl, bl
  1363 00000901 80E30F                  	and	bl, 0Fh
  1364 00000904 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1365 0000090A A2[D9270000]            	mov	[msgNabmBar+3], al
  1366 0000090F 88D3                    	mov	bl, dl
  1367 00000911 C0EB04                  	shr	bl, 4
  1368 00000914 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1369 0000091A A2[D8270000]            	mov	[msgNabmBar+2], al
  1370 0000091F 88E3                    	mov	bl, ah
  1371 00000921 88DA                    	mov	dl, bl
  1372 00000923 80E30F                  	and	bl, 0Fh
  1373 00000926 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1374 0000092C A2[D7270000]            	mov	[msgNabmBar+1], al
  1375 00000931 88D3                    	mov	bl, dl
  1376 00000933 C0EB04                  	shr	bl, 4
  1377 00000936 8A83[40270000]          	mov	al, [ebx+hex_chars]
  1378 0000093C A2[D6270000]            	mov	[msgNabmBar], al
  1379                                  
  1380                                  	;xor	ah, ah
  1381 00000941 31C0                    	xor	eax, eax ; 31/05/2024
  1382 00000943 A0[A0280000]            	mov	al, [ac97_int_ln_reg]
  1383 00000948 B10A                    	mov	cl, 10
  1384 0000094A F6F1                    	div	cl
  1385 0000094C 660105[E2270000]        	add	[msgIRQ], ax
  1386 00000953 20C0                    	and	al, al
  1387 00000955 750D                    	jnz	short _w_ac97imsg_
  1388 00000957 A0[E3270000]            	mov	al, [msgIRQ+1]
  1389 0000095C B420                    	mov	ah, ' '
  1390 0000095E 66A3[E2270000]          	mov	[msgIRQ], ax
  1391                                  _w_ac97imsg_:
  1392                                  	sys	_msg, msgAC97Info, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000964 BB[51270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000969 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000096E BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000973 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 00000978 CD40                <1>  int 40h
  1393                                  
  1394 0000097A C3                              retn
  1395                                  
  1396                                  write_VRA_info:
  1397                                  	; 25/11/2023
  1398                                  	sys	_msg, msgVRAheader, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000097B BB[E7270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000980 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000985 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000098A B823000000          <1>  mov eax, %1
    89                              <1> 
    90 0000098F CD40                <1>  int 40h
  1399 00000991 803D[31280000]00        	cmp	byte [VRA], 0
  1400 00000998 7617                    	jna	short _w_VRAi_no
  1401                                  _w_VRAi_yes:
  1402                                  	sys	_msg, msgVRAyes, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000099A BB[F5270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000099F B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000009A4 BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000009A9 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000009AE CD40                <1>  int 40h
  1403 000009B0 C3                      	retn
  1404                                  _w_VRAi_no:
  1405                                  	sys	_msg, msgVRAno, 255, 07h
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000009B1 BB[FB270000]        <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000009B6 B9FF000000          <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000009BB BA07000000          <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000009C0 B823000000          <1>  mov eax, %1
    89                              <1> 
    90 000009C5 CD40                <1>  int 40h
  1406 000009C7 C3                      	retn
  1407                                  
  1408                                  ; 26/11/2023
  1409                                  ; 25/11/2023 - playwav6.s (32 bit registers, TRDOS 386 adaption)
  1410                                  ; 15/11/2023 - PLAYWAV5.COM, ich_wav5.asm
  1411                                  ; 14/11/2023
  1412                                  ; 13/11/2023 - Erdogan Tan - (VRA, sample rate conversion)
  1413                                  ; --------------------------------------------------------
  1414                                  
  1415                                  ;;Note:	At the end of every buffer load,
  1416                                  ;;	during buffer switch/swap, there will be discontinuity
  1417                                  ;;	between the last converted sample and the 1st sample
  1418                                  ;;	of the next buffer.
  1419                                  ;;	(like as a dot noises vaguely between normal sound samples)
  1420                                  ;;	-To avoid this defect, the 1st sample of
  1421                                  ;;	the next buffer may be read from the wav file but
  1422                                  ;;	the file pointer would need to be set to 1 sample back
  1423                                  ;;	again via seek system call. Time comsumption problem! -
  1424                                  ;;
  1425                                  ;;	Erdogan Tan - 15/11/2023
  1426                                  ;;
  1427                                  ;;	((If entire wav data would be loaded at once.. conversion
  1428                                  ;;	defect/noise would disappear.. but for DOS, to keep
  1429                                  ;;	64KB buffer limit is important also it is important
  1430                                  ;;	for running under 1MB barrier without HIMEM.SYS or DPMI.
  1431                                  ;;	I have tested this program by using 2-30MB wav files.))
  1432                                  ;;
  1433                                  ;;	Test Computer:	ASUS desktop/mainboard, M2N4-SLI, 2010.
  1434                                  ;;			AMD Athlon 64 X2 2200 MHZ CPU.
  1435                                  ;;		       	NFORCE4 (CK804) AC97 audio hardware.
  1436                                  ;;			Realtek ALC850 codec.
  1437                                  ;;		       	Retro DOS v4.2 (MSDOS 6.22) operating system.
  1438                                  
  1439                                  load_8khz_mono_8_bit:
  1440                                  	; 15/11/2023
  1441                                  	; 14/11/2023
  1442                                  	; 13/11/2023
  1443 000009C8 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1444                                  					; last of the file?
  1445 000009CF 7402                    	jz	short lff8m_0		; no
  1446 000009D1 F9                      	stc
  1447 000009D2 C3                      	retn
  1448                                  
  1449                                  lff8m_0:
  1450 000009D3 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1451                                          ;mov	edx, [loadsize]
  1452                                  
  1453                                  	; esi = buffer address
  1454                                  	;; edx = buffer size
  1455                                  
  1456                                  	; load file into memory
  1457                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000009D8 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000009DE 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000009E0 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000009E6 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000009EB CD40                <1>  int 40h
  1458 000009ED 7305                    	jnc	short lff8m_6
  1459 000009EF E9B0000000              	jmp	lff8m_5  ; error !
  1460                                  
  1461                                  lff8m_6:
  1462                                  	;mov	edi, audio_buffer
  1463                                  	; 29/05/2024
  1464 000009F4 8B3D[AE280000]          	mov	edi, [audio_buffer]
  1465 000009FA 21C0                    	and	eax, eax
  1466 000009FC 0F8499000000            	jz	lff8_eof
  1467                                  
  1468 00000A02 89C1                    	mov	ecx, eax		; byte count
  1469                                  lff8m_1:
  1470 00000A04 AC                      	lodsb
  1471 00000A05 A2[2D200000]            	mov	[previous_val], al
  1472 00000A0A 2C80                    	sub	al, 80h
  1473 00000A0C 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1474 00000A10 66AB                    	stosw		; original sample (left channel)
  1475 00000A12 66AB                    	stosw		; original sample (right channel)
  1476                                  	;xor	eax, eax
  1477 00000A14 B080                    	mov	al, 80h
  1478 00000A16 49                      	dec	ecx
  1479 00000A17 7402                    	jz	short lff8m_2
  1480 00000A19 8A06                    	mov	al, [esi]
  1481                                  lff8m_2:
  1482                                  	;mov	[next_val], ax
  1483 00000A1B 88C7                    	mov	bh, al	; [next_val]
  1484 00000A1D 8A25[2D200000]          	mov	ah, [previous_val]
  1485 00000A23 00E0                    	add	al, ah	; [previous_val]
  1486 00000A25 D0D8                    	rcr	al, 1
  1487 00000A27 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample
  1488 00000A29 00E0                    	add	al, ah	; [previous_val]
  1489 00000A2B D0D8                    	rcr	al, 1	
  1490 00000A2D 88C3                    	mov	bl, al 	; this is temporary interpolation value	
  1491 00000A2F 00E0                    	add	al, ah	; [previous_val]
  1492 00000A31 D0D8                    	rcr	al, 1
  1493 00000A33 2C80                    	sub	al, 80h
  1494 00000A35 66C1E008                	shl	ax, 8	
  1495 00000A39 66AB                    	stosw		; this is 1st interpolated sample (L)
  1496 00000A3B 66AB                    	stosw		; this is 1st interpolated sample (R)
  1497 00000A3D 88D8                    	mov	al, bl
  1498 00000A3F 00D0                    	add	al, dl
  1499 00000A41 D0D8                    	rcr	al, 1
  1500 00000A43 2C80                    	sub	al, 80h
  1501 00000A45 66C1E008                	shl	ax, 8
  1502 00000A49 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1503 00000A4B 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1504 00000A4D 88D0                    	mov	al, dl
  1505 00000A4F 2C80                    	sub	al, 80h
  1506 00000A51 66C1E008                	shl	ax, 8
  1507 00000A55 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1508 00000A57 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1509                                  	;mov	al, [next_val]
  1510 00000A59 88F8                    	mov	al, bh
  1511 00000A5B 00D0                    	add	al, dl
  1512 00000A5D D0D8                    	rcr	al, 1
  1513 00000A5F 88C3                    	mov	bl, al	; this is temporary interpolation value
  1514 00000A61 00D0                    	add	al, dl
  1515 00000A63 D0D8                    	rcr	al, 1
  1516 00000A65 2C80                    	sub	al, 80h
  1517 00000A67 66C1E008                	shl	ax, 8
  1518 00000A6B 66AB                    	stosw		; this is 4th interpolated sample (L)
  1519 00000A6D 66AB                    	stosw		; this is 4th interpolated sample (R)
  1520                                  	;mov	al, [next_val]
  1521 00000A6F 88F8                    	mov	al, bh
  1522 00000A71 00D8                    	add	al, bl
  1523 00000A73 D0D8                    	rcr	al, 1
  1524 00000A75 2C80                    	sub	al, 80h
  1525 00000A77 66C1E008                	shl	ax, 8
  1526 00000A7B 66AB                    	stosw		; this is 5th interpolated sample (L)
  1527 00000A7D 66AB                    	stosw		; this is 5th interpolated sample (R)
  1528                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1529 00000A7F 09C9                    	or	ecx, ecx
  1530 00000A81 7581                    	jnz	short lff8m_1
  1531                                  
  1532                                  	; --------------
  1533                                  
  1534                                  lff8s_3:
  1535                                  lff8m_3:
  1536                                  lff8s2_3:
  1537                                  lff8m2_3:
  1538                                  lff16s_3:
  1539                                  lff16m_3:
  1540                                  lff16s2_3:
  1541                                  lff16m2_3:
  1542                                  lff24_3:
  1543                                  lff32_3:
  1544                                  lff44_3:
  1545                                  lff22_3:
  1546                                  lff11_3:
  1547                                  	; 08/12/2024 (BugFix)
  1548                                  	; 01/06/2024 (BugFix)
  1549 00000A83 8B0D[74030000]          	mov	ecx, [buffersize] ; 16 bit (48 kHZ, stereo) sample size
  1550                                  	;shl	ecx, 1	; byte count ; Bug !
  1551                                  	; 08/12/2024
  1552 00000A89 030D[AE280000]          	add	ecx, [audio_buffer]
  1553 00000A8F 29F9                    	sub	ecx, edi
  1554 00000A91 7607                    	jna	short lff8m_4
  1555                                  	;inc	ecx
  1556 00000A93 C1E902                  	shr	ecx, 2
  1557 00000A96 31C0                    	xor	eax, eax ; fill (remain part of) buffer with zeros
  1558 00000A98 F3AB                    	rep	stosd
  1559                                  lff8m_4:
  1560                                  	; 01/06/2024 (BugFix)
  1561                                  	; cf=1 ; Bug !
  1562                                  	; 08/12/2024
  1563                                  	;clc
  1564 00000A9A C3                      	retn
  1565                                  
  1566                                  lff8_eof:
  1567                                  lff16_eof:
  1568                                  lff24_eof:
  1569                                  lff32_eof:
  1570                                  lff44_eof:
  1571                                  lff22_eof:
  1572                                  lff11_eof:
  1573                                  	; 15/11/2023
  1574 00000A9B C605[30280000]01        	mov	byte [flags], ENDOFFILE
  1575 00000AA2 EBDF                    	jmp	short lff8m_3
  1576                                  
  1577                                  lff8s_5:
  1578                                  lff8m_5:
  1579                                  lff8s2_5:
  1580                                  lff8m2_5:
  1581                                  lff16s_5:
  1582                                  lff16m_5:
  1583                                  lff16s2_5:
  1584                                  lff16m2_5:
  1585                                  lff24_5:
  1586                                  lff32_5:
  1587                                  lff44_5:
  1588                                  lff22_5:
  1589                                  lff11_5:
  1590 00000AA4 B021                    	mov	al, '!'  ; error
  1591 00000AA6 E885FAFFFF              	call	tL0
  1592                                  	
  1593                                  	;jmp	short lff8m_3
  1594                                  	; 15/11/2023
  1595 00000AAB EBEE                    	jmp	lff8_eof
  1596                                  
  1597                                  	; --------------
  1598                                  
  1599                                  load_8khz_stereo_8_bit:
  1600                                  	; 15/11/2023
  1601                                  	; 14/11/2023
  1602                                  	; 13/11/2023
  1603 00000AAD F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1604                                  					; last of the file?
  1605 00000AB4 7402                    	jz	short lff8s_0		; no
  1606 00000AB6 F9                      	stc
  1607 00000AB7 C3                      	retn
  1608                                  
  1609                                  lff8s_0:
  1610 00000AB8 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1611                                          ;mov	edx, [loadsize]
  1612                                  
  1613                                  	; esi = buffer address
  1614                                  	;; edx = buffer size
  1615                                  
  1616                                  	; load file into memory
  1617                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000ABD 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000AC3 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000AC5 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000ACB B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000AD0 CD40                <1>  int 40h
  1618 00000AD2 72D0                    	jc	short lff8s_5 ; error !
  1619                                  
  1620                                  	;mov	edi, audio_buffer
  1621                                  	; 29/05/2024
  1622 00000AD4 8B3D[AE280000]          	mov	edi, [audio_buffer]
  1623                                  	
  1624 00000ADA D1E8                    	shr	eax, 1
  1625 00000ADC 74BD                    	jz	short lff8_eof
  1626                                  
  1627 00000ADE 89C1                    	mov	ecx, eax	; word count
  1628                                  lff8s_1:
  1629 00000AE0 AC                      	lodsb
  1630 00000AE1 A2[2D200000]            	mov	[previous_val_l], al
  1631 00000AE6 2C80                    	sub	al, 80h
  1632 00000AE8 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1633 00000AEC 66AB                    	stosw		; original sample (L)
  1634 00000AEE AC                      	lodsb
  1635 00000AEF A2[2F200000]            	mov	[previous_val_r], al
  1636 00000AF4 2C80                    	sub	al, 80h
  1637 00000AF6 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1638 00000AFA 66AB                    	stosw		; original sample (R)
  1639                                  
  1640                                  	;xor	eax, eax
  1641 00000AFC 66B88080                	mov	ax, 8080h
  1642 00000B00 49                      	dec	ecx
  1643 00000B01 7403                    	jz	short lff8s_2
  1644                                  		; convert 8 bit sample to 16 bit sample
  1645 00000B03 668B06                  	mov	ax, [esi]
  1646                                  lff8s_2:
  1647 00000B06 A2[31200000]            	mov	[next_val_l], al
  1648 00000B0B 8825[33200000]          	mov	[next_val_r], ah
  1649 00000B11 8A25[2D200000]          	mov	ah, [previous_val_l]
  1650 00000B17 00E0                    	add	al, ah
  1651 00000B19 D0D8                    	rcr	al, 1
  1652 00000B1B 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample (L)
  1653 00000B1D 00E0                    	add	al, ah
  1654 00000B1F D0D8                    	rcr	al, 1	
  1655 00000B21 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1656 00000B23 00E0                    	add	al, ah
  1657 00000B25 D0D8                    	rcr	al, 1
  1658 00000B27 2C80                    	sub	al, 80h
  1659 00000B29 66C1E008                	shl	ax, 8
  1660 00000B2D 66AB                    	stosw		; this is 1st interpolated sample (L)
  1661 00000B2F A0[33200000]            	mov	al, [next_val_r]
  1662 00000B34 8A25[2F200000]          	mov	ah, [previous_val_r]
  1663 00000B3A 00E0                    	add	al, ah
  1664 00000B3C D0D8                    	rcr	al, 1
  1665 00000B3E 88C6                    	mov	dh, al	; this is interpolated middle (3th) sample (R)
  1666 00000B40 00E0                    	add	al, ah
  1667 00000B42 D0D8                    	rcr	al, 1
  1668 00000B44 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1669 00000B46 00E0                    	add	al, ah
  1670 00000B48 D0D8                    	rcr	al, 1
  1671 00000B4A 2C80                    	sub	al, 80h
  1672 00000B4C 66C1E008                	shl	ax, 8
  1673 00000B50 66AB                    	stosw		; this is 1st interpolated sample (R)
  1674 00000B52 88D8                    	mov	al, bl
  1675 00000B54 00D0                    	add	al, dl
  1676 00000B56 D0D8                    	rcr	al, 1
  1677 00000B58 2C80                    	sub	al, 80h
  1678 00000B5A 66C1E008                	shl	ax, 8
  1679 00000B5E 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1680 00000B60 88F8                    	mov	al, bh
  1681 00000B62 00F0                    	add	al, dh
  1682 00000B64 D0D8                    	rcr	al, 1
  1683 00000B66 2C80                    	sub	al, 80h
  1684 00000B68 66C1E008                	shl	ax, 8
  1685 00000B6C 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1686 00000B6E 88D0                    	mov	al, dl
  1687 00000B70 2C80                    	sub	al, 80h
  1688 00000B72 66C1E008                	shl	ax, 8
  1689 00000B76 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1690 00000B78 88F0                    	mov	al, dh
  1691 00000B7A 2C80                    	sub	al, 80h
  1692 00000B7C 66C1E008                	shl	ax, 8
  1693 00000B80 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1694 00000B82 A0[31200000]            	mov	al, [next_val_l]
  1695 00000B87 00D0                    	add	al, dl
  1696 00000B89 D0D8                    	rcr	al, 1
  1697 00000B8B 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1698 00000B8D 00D0                    	add	al, dl
  1699 00000B8F D0D8                    	rcr	al, 1
  1700 00000B91 2C80                    	sub	al, 80h
  1701 00000B93 66C1E008                	shl	ax, 8
  1702 00000B97 66AB                    	stosw		; this is 4th interpolated sample (L)
  1703 00000B99 A0[33200000]            	mov	al, [next_val_r]
  1704 00000B9E 00F0                    	add	al, dh
  1705 00000BA0 D0D8                    	rcr	al, 1
  1706 00000BA2 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1707 00000BA4 00F0                    	add	al, dh
  1708 00000BA6 D0D8                    	rcr	al, 1
  1709 00000BA8 2C80                    	sub	al, 80h
  1710 00000BAA 66C1E008                	shl	ax, 8
  1711 00000BAE 66AB                    	stosw		; this is 4th interpolated sample (R)
  1712 00000BB0 A0[31200000]            	mov	al, [next_val_l]
  1713 00000BB5 00D8                    	add	al, bl
  1714 00000BB7 D0D8                    	rcr	al, 1
  1715 00000BB9 2C80                    	sub	al, 80h
  1716 00000BBB 66C1E008                	shl	ax, 8
  1717 00000BBF 66AB                    	stosw		; this is 5th interpolated sample (L)
  1718 00000BC1 A0[33200000]            	mov	al, [next_val_r]
  1719 00000BC6 00F8                    	add	al, bh
  1720 00000BC8 D0D8                    	rcr	al, 1
  1721 00000BCA 2C80                    	sub	al, 80h
  1722 00000BCC 66C1E008                	shl	ax, 8
  1723 00000BD0 66AB                    	stosw		; this is 5th interpolated sample (R)
  1724                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1725 00000BD2 E305                    	jecxz	lff8s_6
  1726 00000BD4 E907FFFFFF              	jmp	lff8s_1
  1727                                  lff8s_6:
  1728 00000BD9 E9A5FEFFFF              	jmp	lff8s_3
  1729                                  
  1730                                  load_8khz_mono_16_bit:
  1731                                  	; 13/11/2023
  1732 00000BDE F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1733                                  					; last of the file?
  1734 00000BE5 7402                    	jz	short lff8m2_0		; no
  1735 00000BE7 F9                      	stc
  1736 00000BE8 C3                      	retn
  1737                                  
  1738                                  lff8m2_0:
  1739 00000BE9 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1740                                          ;mov	edx, [loadsize]
  1741                                  
  1742                                  	; esi = buffer address
  1743                                  	;; edx = buffer size
  1744                                  
  1745                                  	; load file into memory
  1746                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000BEE 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000BF4 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000BF6 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000BFC B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000C01 CD40                <1>  int 40h
  1747 00000C03 0F82A1000000            	jc	lff8m2_7 ; error !
  1748                                  
  1749                                  	;mov	edi, audio_buffer
  1750                                  	; 29/05/2024
  1751 00000C09 8B3D[AE280000]          	mov	edi, [audio_buffer]
  1752                                  	
  1753 00000C0F D1E8                    	shr	eax, 1
  1754 00000C11 7505                    	jnz	short lff8m2_8
  1755 00000C13 E983FEFFFF              	jmp	lff8_eof
  1756                                  
  1757                                  lff8m2_8:
  1758 00000C18 89C1                    	mov	ecx, eax	; word count
  1759                                  lff8m2_1:
  1760 00000C1A 66AD                    	lodsw
  1761 00000C1C 66AB                    	stosw		; original sample (left channel)
  1762 00000C1E 66AB                    	stosw		; original sample (right channel)
  1763 00000C20 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1764 00000C23 66A3[2D200000]          	mov	[previous_val], ax
  1765 00000C29 31C0                    	xor	eax, eax
  1766 00000C2B 49                      	dec	ecx
  1767 00000C2C 7403                    	jz	short lff8m2_2
  1768 00000C2E 668B06                  	mov	ax, [esi]
  1769                                  lff8m2_2:
  1770 00000C31 80C480                  	add	ah, 80h ; convert sound level to 0-65535 format
  1771 00000C34 89C5                    	mov	ebp, eax	; [next_val]
  1772 00000C36 660305[2D200000]        	add	ax, [previous_val]
  1773 00000C3D 66D1D8                  	rcr	ax, 1
  1774 00000C40 89C2                    	mov	edx, eax ; this is interpolated middle (3th) sample
  1775 00000C42 660305[2D200000]        	add	ax, [previous_val]
  1776 00000C49 66D1D8                  	rcr	ax, 1	; this is temporary interpolation value
  1777 00000C4C 89C3                    	mov	ebx, eax 		
  1778 00000C4E 660305[2D200000]        	add	ax, [previous_val]
  1779 00000C55 66D1D8                  	rcr	ax, 1
  1780 00000C58 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1781 00000C5B 66AB                    	stosw		; this is 1st interpolated sample (L)
  1782 00000C5D 66AB                    	stosw		; this is 1st interpolated sample (R)
  1783 00000C5F 89D8                    	mov	eax, ebx
  1784 00000C61 6601D0                  	add	ax, dx
  1785 00000C64 66D1D8                  	rcr	ax, 1
  1786 00000C67 80EC80                  	sub	ah, 80h
  1787 00000C6A 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1788 00000C6C 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1789 00000C6E 89D0                    	mov	eax, edx
  1790 00000C70 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1791 00000C73 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1792 00000C75 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1793 00000C77 89E8                    	mov	eax, ebp
  1794 00000C79 6601D0                  	add	ax, dx
  1795 00000C7C 66D1D8                  	rcr	ax, 1
  1796 00000C7F 89C3                    	mov	ebx, eax ; this is temporary interpolation value
  1797 00000C81 6601D0                  	add	ax, dx
  1798 00000C84 66D1D8                  	rcr	ax, 1
  1799 00000C87 80EC80                  	sub	ah, 80h
  1800 00000C8A 66AB                    	stosw		; this is 4th interpolated sample (L)
  1801 00000C8C 66AB                    	stosw		; this is 4th interpolated sample (R)
  1802 00000C8E 89E8                    	mov	eax, ebp
  1803 00000C90 6601D8                  	add	ax, bx
  1804 00000C93 66D1D8                  	rcr	ax, 1
  1805 00000C96 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1806 00000C99 66AB                    	stosw		; this is 5th interpolated sample (L)
  1807 00000C9B 66AB                    	stosw		; this is 5th interpolated sample (R)
  1808                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1809 00000C9D 09C9                    	or	ecx, ecx
  1810 00000C9F 0F8575FFFFFF            	jnz	lff8m2_1
  1811 00000CA5 E9D9FDFFFF              	jmp	lff8m2_3
  1812                                  
  1813                                  lff8m2_7:
  1814                                  lff8s2_7:
  1815 00000CAA E9F5FDFFFF              	jmp	lff8m2_5  ; error
  1816                                  
  1817                                  load_8khz_stereo_16_bit:
  1818                                  	; 16/11/2023
  1819                                  	; 15/11/2023
  1820                                  	; 13/11/2023
  1821 00000CAF F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1822                                  					; last of the file?
  1823 00000CB6 7402                    	jz	short lff8s2_0		; no
  1824 00000CB8 F9                      	stc
  1825 00000CB9 C3                      	retn
  1826                                  
  1827                                  lff8s2_0:
  1828 00000CBA BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1829                                          ;mov	edx, [loadsize]
  1830                                  
  1831                                  	; esi = buffer address
  1832                                  	;; edx = buffer size
  1833                                  
  1834                                  	; load file into memory
  1835                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000CBF 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000CC5 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000CC7 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000CCD B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000CD2 CD40                <1>  int 40h
  1836 00000CD4 72D4                    	jc	short lff8s2_7 ; error !
  1837                                  
  1838                                  	;mov	edi, audio_buffer
  1839                                  	; 29/05/2024
  1840 00000CD6 8B3D[AE280000]          	mov	edi, [audio_buffer]
  1841                                  	
  1842 00000CDC C1E802                  	shr	eax, 2
  1843 00000CDF 7505                    	jnz	short lff8s2_8
  1844 00000CE1 E9B5FDFFFF              	jmp	lff8_eof
  1845                                  
  1846                                  lff8s2_8:
  1847 00000CE6 89C1                    	mov	ecx, eax ; dword count
  1848                                  lff8s2_1:
  1849 00000CE8 66AD                    	lodsw
  1850 00000CEA 66AB                    	stosw		; original sample (L)
  1851                                  	; 15/11/2023
  1852 00000CEC 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1853 00000CEF 66A3[2D200000]          	mov	[previous_val_l], ax
  1854 00000CF5 66AD                    	lodsw
  1855 00000CF7 66AB                    	stosw		; original sample (R)
  1856 00000CF9 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1857 00000CFC 66A3[2F200000]          	mov	[previous_val_r], ax
  1858 00000D02 31D2                    	xor	edx, edx
  1859 00000D04 31C0                    	xor	eax, eax
  1860                                  	; 16/11/2023
  1861 00000D06 49                      	dec	ecx
  1862 00000D07 7407                    	jz	short lff8s2_2
  1863 00000D09 668B06                  	mov	ax, [esi]
  1864 00000D0C 668B5602                	mov	dx, [esi+2]
  1865                                  lff8s2_2:
  1866 00000D10 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1867 00000D13 66A3[31200000]          	mov	[next_val_l], ax
  1868 00000D19 80C680                  	add	dh, 80h	; convert sound level to 0-65535 format
  1869 00000D1C 668915[33200000]        	mov	[next_val_r], dx
  1870 00000D23 660305[2D200000]        	add	ax, [previous_val_l]
  1871 00000D2A 66D1D8                  	rcr	ax, 1
  1872 00000D2D 89C2                    	mov	edx, eax ; this is interpolated middle (3th) sample (L)
  1873 00000D2F 660305[2D200000]        	add	ax, [previous_val_l]
  1874 00000D36 66D1D8                  	rcr	ax, 1	
  1875 00000D39 89C3                    	mov	ebx, eax ; this is temporary interpolation value (L)
  1876 00000D3B 660305[2D200000]        	add	ax, [previous_val_l]
  1877 00000D42 66D1D8                  	rcr	ax, 1
  1878 00000D45 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1879 00000D48 66AB                    	stosw		; this is 1st interpolated sample (L)
  1880 00000D4A 66A1[33200000]          	mov	ax, [next_val_r]
  1881 00000D50 660305[2F200000]        	add	ax, [previous_val_r]
  1882 00000D57 66D1D8                  	rcr	ax, 1
  1883 00000D5A 89C5                    	mov	ebp, eax ; this is interpolated middle (3th) sample (R)
  1884 00000D5C 660305[2F200000]        	add	ax, [previous_val_r]
  1885 00000D63 66D1D8                  	rcr	ax, 1
  1886 00000D66 50                      	push	eax ; *	; this is temporary interpolation value (R)
  1887 00000D67 660305[2F200000]        	add	ax, [previous_val_r]
  1888 00000D6E 66D1D8                  	rcr	ax, 1
  1889 00000D71 80EC80                  	sub	ah, 80h
  1890 00000D74 66AB                    	stosw		; this is 1st interpolated sample (R)
  1891 00000D76 89D8                    	mov	eax, ebx
  1892 00000D78 6601D0                  	add	ax, dx
  1893 00000D7B 66D1D8                  	rcr	ax, 1
  1894 00000D7E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1895 00000D81 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1896 00000D83 58                      	pop	eax ; *
  1897 00000D84 6601E8                  	add	ax, bp
  1898 00000D87 66D1D8                  	rcr	ax, 1
  1899 00000D8A 80EC80                  	sub	ah, 80h
  1900 00000D8D 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1901 00000D8F 89D0                    	mov	eax, edx
  1902 00000D91 80EC80                  	sub	ah, 80h
  1903 00000D94 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1904 00000D96 89E8                    	mov	eax, ebp
  1905 00000D98 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1906 00000D9B 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1907 00000D9D 66A1[31200000]          	mov	ax, [next_val_l]
  1908 00000DA3 6601D0                  	add	ax, dx
  1909 00000DA6 66D1D8                  	rcr	ax, 1
  1910 00000DA9 89C3                    	mov	ebx, eax ; this is temporary interpolation value (L)
  1911 00000DAB 6601D0                  	add	ax, dx
  1912 00000DAE 66D1D8                  	rcr	ax, 1
  1913 00000DB1 80EC80                  	sub	ah, 80h
  1914 00000DB4 66AB                    	stosw		; this is 4th interpolated sample (L)
  1915 00000DB6 66A1[33200000]          	mov	ax, [next_val_r]
  1916 00000DBC 6601E8                  	add	ax, bp
  1917 00000DBF 66D1D8                  	rcr	ax, 1
  1918 00000DC2 50                      	push	eax ; ** ; this is temporary interpolation value (R)
  1919 00000DC3 6601E8                  	add	ax, bp
  1920 00000DC6 66D1D8                  	rcr	ax, 1
  1921 00000DC9 80EC80                  	sub	ah, 80h
  1922 00000DCC 66AB                    	stosw		; this is 4th interpolated sample (R)
  1923 00000DCE 66A1[31200000]          	mov	ax, [next_val_l]
  1924 00000DD4 6601D8                  	add	ax, bx
  1925 00000DD7 66D1D8                  	rcr	ax, 1
  1926 00000DDA 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1927 00000DDD 66AB                    	stosw		; this is 5th interpolated sample (L)
  1928 00000DDF 58                      	pop	eax ; **
  1929 00000DE0 660305[33200000]        	add	ax, [next_val_r]
  1930 00000DE7 66D1D8                  	rcr	ax, 1
  1931 00000DEA 80EC80                  	sub	ah, 80h
  1932 00000DED 66AB                    	stosw		; this is 5th interpolated sample (R)
  1933                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1934 00000DEF E305                    	jecxz	lff8_s2_9
  1935 00000DF1 E9F2FEFFFF              	jmp	lff8s2_1
  1936                                  lff8_s2_9:
  1937 00000DF6 E988FCFFFF              	jmp	lff8s2_3
  1938                                  
  1939                                  ; .....................
  1940                                  
  1941                                  load_16khz_mono_8_bit:
  1942                                  	; 14/11/2023
  1943                                  	; 13/11/2023
  1944 00000DFB F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1945                                  					; last of the file?
  1946 00000E02 7402                    	jz	short lff16m_0		; no
  1947 00000E04 F9                      	stc
  1948 00000E05 C3                      	retn
  1949                                  
  1950                                  lff16m_0:
  1951 00000E06 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1952                                          ;mov	edx, [loadsize]
  1953                                  
  1954                                  	; esi = buffer address
  1955                                  	;; edx = buffer size
  1956                                  
  1957                                  	; load file into memory
  1958                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000E0B 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000E11 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000E13 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000E19 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000E1E CD40                <1>  int 40h
  1959 00000E20 7254                    	jc	short lff16m_7 ; error !
  1960                                  
  1961                                  	;mov	edi, audio_buffer
  1962                                  	; 29/05/2024
  1963 00000E22 8B3D[AE280000]          	mov	edi, [audio_buffer]
  1964                                  	
  1965 00000E28 21C0                    	and	eax, eax
  1966 00000E2A 7505                    	jnz	short lff16m_8
  1967 00000E2C E96AFCFFFF              	jmp	lff16_eof
  1968                                  
  1969                                  lff16m_8:
  1970 00000E31 89C1                    	mov	ecx, eax		; byte count
  1971                                  lff16m_1:
  1972 00000E33 AC                      	lodsb
  1973                                  	;mov	[previous_val], al
  1974 00000E34 88C3                    	mov	bl, al
  1975 00000E36 2C80                    	sub	al, 80h
  1976 00000E38 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1977 00000E3C 66AB                    	stosw		; original sample (left channel)
  1978 00000E3E 66AB                    	stosw		; original sample (right channel)
  1979                                  	;xor	ax, ax
  1980                                  	; 14/11/22023
  1981 00000E40 B080                    	mov	al, 80h
  1982 00000E42 49                      	dec	ecx
  1983 00000E43 7402                    	jz	short lff16m_2
  1984 00000E45 8A06                    	mov	al, [esi]
  1985                                  lff16m_2:
  1986                                  	;mov	[next_val], al
  1987 00000E47 88C7                    	mov	bh, al
  1988                                  	;add	al, [previous_val]
  1989 00000E49 00D8                    	add	al, bl
  1990 00000E4B D0D8                    	rcr	al, 1
  1991 00000E4D 88C2                    	mov	dl, al	; this is interpolated middle (temp) sample
  1992                                  	;add	al, [previous_val]
  1993 00000E4F 00D8                    	add	al, bl
  1994 00000E51 D0D8                    	rcr	al, 1
  1995 00000E53 2C80                    	sub	al, 80h
  1996 00000E55 66C1E008                	shl	ax, 8
  1997 00000E59 66AB                    	stosw		; this is 1st interpolated sample (L)
  1998 00000E5B 66AB                    	stosw		; this is 1st interpolated sample (R)
  1999                                  	;mov	al, [next_val]
  2000 00000E5D 88F8                    	mov	al, bh
  2001 00000E5F 00D0                    	add	al, dl
  2002 00000E61 D0D8                    	rcr	al, 1
  2003 00000E63 2C80                    	sub	al, 80h
  2004 00000E65 66C1E008                	shl	ax, 8
  2005 00000E69 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2006 00000E6B 66AB                    	stosw		; this is 2nd interpolated sample (R)
  2007                                  	
  2008                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2009 00000E6D 09C9                    	or	ecx, ecx
  2010 00000E6F 75C2                    	jnz	short lff16m_1
  2011 00000E71 E90DFCFFFF              	jmp	lff16m_3
  2012                                  
  2013                                  lff16m_7:
  2014                                  lff16s_7:
  2015 00000E76 E929FCFFFF              	jmp	lff16m_5  ; error
  2016                                  
  2017                                  load_16khz_stereo_8_bit:
  2018                                  	; 14/11/2023
  2019                                  	; 13/11/2023
  2020 00000E7B F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2021                                  					; last of the file?
  2022 00000E82 7402                    	jz	short lff16s_0		; no
  2023 00000E84 F9                      	stc
  2024 00000E85 C3                      	retn
  2025                                  
  2026                                  lff16s_0:
  2027 00000E86 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2028                                          ;mov	edx, [loadsize]
  2029                                  
  2030                                  	; esi = buffer address
  2031                                  	;; edx = buffer size
  2032                                  
  2033                                  	; load file into memory
  2034                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000E8B 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000E91 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000E93 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000E99 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000E9E CD40                <1>  int 40h
  2035 00000EA0 72D4                    	jc	short lff16s_7 ; error !
  2036                                  
  2037                                  	;mov	edi, audio_buffer
  2038                                  	; 29/05/2024
  2039 00000EA2 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2040                                  	
  2041 00000EA8 D1E8                    	shr	eax, 1
  2042 00000EAA 7505                    	jnz	short lff16s_8
  2043 00000EAC E9EAFBFFFF              	jmp	lff16_eof
  2044                                  
  2045                                  lff16s_8:
  2046 00000EB1 89C1                    	mov	ecx, eax	; word count
  2047                                  lff16s_1:
  2048 00000EB3 AC                      	lodsb
  2049 00000EB4 A2[2D200000]            	mov	[previous_val_l], al
  2050 00000EB9 2C80                    	sub	al, 80h
  2051 00000EBB 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2052 00000EBF 66AB                    	stosw		; original sample (L)
  2053 00000EC1 AC                      	lodsb
  2054 00000EC2 A2[2F200000]            	mov	[previous_val_r], al
  2055 00000EC7 2C80                    	sub	al, 80h
  2056 00000EC9 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2057 00000ECD 66AB                    	stosw		; original sample (R)
  2058                                  
  2059                                  	;xor	eax, eax
  2060 00000ECF 66B88080                	mov	ax, 8080h
  2061 00000ED3 49                      	dec	ecx
  2062 00000ED4 7403                    	jz	short lff16s_2
  2063                                  		; convert 8 bit sample to 16 bit sample
  2064 00000ED6 668B06                  	mov	ax, [esi]
  2065                                  lff16s_2:
  2066                                  	;mov	[next_val_l], al
  2067                                  	;mov	[next_val_r], ah
  2068 00000ED9 89C3                    	mov	ebx, eax
  2069 00000EDB 0205[2D200000]          	add	al, [previous_val_l]
  2070 00000EE1 D0D8                    	rcr	al, 1
  2071 00000EE3 88C2                    	mov	dl, al	; this is temporary interpolation value (L)
  2072 00000EE5 0205[2D200000]          	add	al, [previous_val_l]
  2073 00000EEB D0D8                    	rcr	al, 1
  2074 00000EED 2C80                    	sub	al, 80h
  2075 00000EEF 66C1E008                	shl	ax, 8
  2076 00000EF3 66AB                    	stosw		; this is 1st interpolated sample (L)
  2077 00000EF5 88F8                    	mov	al, bh	; [next_val_r]
  2078 00000EF7 0205[2F200000]          	add	al, [previous_val_r]
  2079 00000EFD D0D8                    	rcr	al, 1
  2080 00000EFF 88C6                    	mov	dh, al	; this is temporary interpolation value (R)
  2081 00000F01 0205[2F200000]          	add	al, [previous_val_r]
  2082 00000F07 D0D8                    	rcr	al, 1
  2083 00000F09 2C80                    	sub	al, 80h
  2084 00000F0B 66C1E008                	shl	ax, 8
  2085 00000F0F 66AB                    	stosw		; this is 1st interpolated sample (R)
  2086 00000F11 88D0                    	mov	al, dl
  2087 00000F13 00D8                    	add	al, bl	; [next_val_l]
  2088 00000F15 D0D8                    	rcr	al, 1
  2089 00000F17 2C80                    	sub	al, 80h
  2090 00000F19 66C1E008                	shl	ax, 8
  2091 00000F1D 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2092 00000F1F 88F0                    	mov	al, dh
  2093 00000F21 00F8                    	add	al, bh	; [next_val_r]
  2094 00000F23 D0D8                    	rcr	al, 1
  2095 00000F25 2C80                    	sub	al, 80h
  2096 00000F27 66C1E008                	shl	ax, 8
  2097 00000F2B 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  2098                                  	
  2099                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2100 00000F2D 09C9                    	or	ecx, ecx
  2101 00000F2F 7582                    	jnz	short lff16s_1
  2102 00000F31 E94DFBFFFF              	jmp	lff16s_3
  2103                                  
  2104                                  load_16khz_mono_16_bit:
  2105                                  	; 15/11/2023
  2106                                  	; 13/11/2023
  2107 00000F36 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2108                                  					; last of the file?
  2109 00000F3D 7402                    	jz	short lff16m2_0		; no
  2110 00000F3F F9                      	stc
  2111 00000F40 C3                      	retn
  2112                                  
  2113                                  lff16m2_0:
  2114 00000F41 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2115                                          ;mov	edx, [loadsize]
  2116                                  
  2117                                  	; esi = buffer address
  2118                                  	;; edx = buffer size
  2119                                  
  2120                                  	; load file into memory
  2121                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000F46 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000F4C 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000F4E 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000F54 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000F59 CD40                <1>  int 40h
  2122 00000F5B 7256                    	jc	short lff16m2_7 ; error !
  2123                                  
  2124                                  	;mov	edi, audio_buffer
  2125                                  	; 29/05/2024
  2126 00000F5D 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2127                                  	
  2128 00000F63 D1E8                    	shr	eax, 1
  2129 00000F65 7505                    	jnz	short lff16m2_8
  2130 00000F67 E92FFBFFFF              	jmp	lff16_eof
  2131                                  
  2132                                  lff16m2_8:
  2133 00000F6C 89C1                    	mov	ecx, eax  ; word count
  2134                                  lff16m2_1:
  2135 00000F6E 66AD                    	lodsw
  2136 00000F70 66AB                    	stosw		; original sample (left channel)
  2137 00000F72 66AB                    	stosw		; original sample (right channel)
  2138 00000F74 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2139                                  	;mov	[previous_val], ax
  2140 00000F77 89C3                    	mov	ebx, eax	
  2141 00000F79 31C0                    	xor	eax, eax
  2142 00000F7B 49                      	dec	ecx
  2143 00000F7C 7403                    	jz	short lff16m2_2
  2144 00000F7E 668B06                  	mov	ax, [esi]
  2145                                  lff16m2_2:
  2146 00000F81 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2147 00000F84 89C5                    	mov	ebp, eax	; [next_val]
  2148                                  	;add	ax, [previous_val]
  2149 00000F86 6601D8                  	add	ax, bx
  2150 00000F89 66D1D8                  	rcr	ax, 1
  2151 00000F8C 89C2                    	mov	edx, eax ; this is temporary interpolation value
  2152                                  	;add	ax, [previous_val]
  2153 00000F8E 6601D8                  	add	ax, bx
  2154 00000F91 66D1D8                  	rcr	ax, 1
  2155 00000F94 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2156 00000F97 66AB                    	stosw		; this is 1st interpolated sample (L)
  2157 00000F99 66AB                    	stosw		; this is 1st interpolated sample (R)
  2158 00000F9B 89E8                    	mov	eax, ebp 
  2159 00000F9D 6601D0                  	add	ax, dx
  2160 00000FA0 66D1D8                  	rcr	ax, 1
  2161 00000FA3 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2162 00000FA6 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2163 00000FA8 66AB                    	stosw		; this is 2nd interpolated sample (R)
  2164                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2165 00000FAA 09C9                    	or	ecx, ecx
  2166 00000FAC 75C0                    	jnz	short lff16m2_1
  2167 00000FAE E9D0FAFFFF              	jmp	lff16m2_3
  2168                                  
  2169                                  lff16m2_7:
  2170                                  lff16s2_7:
  2171 00000FB3 E9ECFAFFFF              	jmp	lff16m2_5  ; error
  2172                                  
  2173                                  load_16khz_stereo_16_bit:
  2174                                  	; 16/11/2023
  2175                                  	; 15/11/2023
  2176                                  	; 13/11/2023
  2177 00000FB8 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2178                                  					; last of the file?
  2179 00000FBF 7402                    	jz	short lff16s2_0		; no
  2180 00000FC1 F9                      	stc
  2181 00000FC2 C3                      	retn
  2182                                  
  2183                                  lff16s2_0:
  2184 00000FC3 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2185                                          ;mov	edx, [loadsize]
  2186                                  
  2187                                  	; esi = buffer address
  2188                                  	;; edx = buffer size
  2189                                  
  2190                                  	; load file into memory
  2191                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00000FC8 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00000FCE 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00000FD0 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00000FD6 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00000FDB CD40                <1>  int 40h
  2192 00000FDD 72D4                    	jc	short lff16s2_7 ; error !
  2193                                  
  2194                                  	;mov	edi, audio_buffer
  2195                                  	; 29/05/2024
  2196 00000FDF 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2197                                  	
  2198 00000FE5 C1E802                  	shr	eax, 2
  2199 00000FE8 7505                    	jnz	short lff16s2_8
  2200 00000FEA E9ACFAFFFF              	jmp	lff16_eof
  2201                                  
  2202                                  lff16s2_8:
  2203 00000FEF 89C1                    	mov	ecx, eax  ; dword count
  2204                                  lff16s2_1:
  2205 00000FF1 66AD                    	lodsw
  2206 00000FF3 66AB                    	stosw		; original sample (L)
  2207 00000FF5 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2208 00000FF8 66A3[2D200000]          	mov	[previous_val_l], ax
  2209 00000FFE 66AD                    	lodsw
  2210 00001000 66AB                    	stosw		; original sample (R)
  2211 00001002 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2212 00001005 66A3[2F200000]          	mov	[previous_val_r], ax
  2213 0000100B 31D2                    	xor	edx, edx
  2214 0000100D 31C0                    	xor	eax, eax
  2215                                  	; 16/11/2023
  2216 0000100F 49                      	dec	ecx
  2217 00001010 7407                    	jz	short lff16s2_2
  2218 00001012 668B06                  	mov	ax, [esi]
  2219 00001015 668B5602                	mov	dx, [esi+2]
  2220                                  lff16s2_2:
  2221 00001019 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2222                                  	;mov	[next_val_l], ax
  2223 0000101C 89C5                    	mov	ebp, eax
  2224 0000101E 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2225 00001021 668915[33200000]        	mov	[next_val_r], dx
  2226 00001028 660305[2D200000]        	add	ax, [previous_val_l]
  2227 0000102F 66D1D8                  	rcr	ax, 1
  2228 00001032 89C2                    	mov	edx, eax ; this is temporary interpolation value (L)
  2229 00001034 660305[2D200000]        	add	ax, [previous_val_l]
  2230 0000103B 66D1D8                  	rcr	ax, 1
  2231 0000103E 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2232 00001041 66AB                    	stosw		; this is 1st interpolated sample (L)
  2233 00001043 66A1[33200000]          	mov	ax, [next_val_r]
  2234 00001049 660305[2F200000]        	add	ax, [previous_val_r]
  2235 00001050 66D1D8                  	rcr	ax, 1
  2236 00001053 89C3                    	mov	ebx, eax ; this is temporary interpolation value (R)
  2237 00001055 660305[2F200000]        	add	ax, [previous_val_r]
  2238 0000105C 66D1D8                  	rcr	ax, 1
  2239 0000105F 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2240 00001062 66AB                    	stosw		; this is 1st interpolated sample (R)
  2241                                  	;mov	ax, [next_val_l]
  2242 00001064 89E8                    	mov	eax, ebp
  2243 00001066 6601D0                  	add	ax, dx
  2244 00001069 66D1D8                  	rcr	ax, 1
  2245 0000106C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2246 0000106F 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2247 00001071 66A1[33200000]          	mov	ax, [next_val_r]
  2248 00001077 6601D8                  	add	ax, bx
  2249 0000107A 66D1D8                  	rcr	ax, 1
  2250 0000107D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2251 00001080 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  2252                                  	
  2253                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2254 00001082 09C9                    	or	ecx, ecx
  2255 00001084 0F8567FFFFFF            	jnz	lff16s2_1
  2256 0000108A E9F4F9FFFF              	jmp	lff16s2_3
  2257                                  
  2258                                  ; .....................
  2259                                  
  2260                                  load_24khz_mono_8_bit:
  2261                                  	; 15/11/2023
  2262 0000108F F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2263                                  					; last of the file?
  2264 00001096 7402                    	jz	short lff24m_0		; no
  2265 00001098 F9                      	stc
  2266 00001099 C3                      	retn
  2267                                  
  2268                                  lff24m_0:
  2269 0000109A BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2270                                          ;mov	edx, [loadsize]
  2271                                  
  2272                                  	; esi = buffer address
  2273                                  	;; edx = buffer size
  2274                                  
  2275                                  	; load file into memory
  2276                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000109F 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000010A5 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000010A7 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000010AD B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000010B2 CD40                <1>  int 40h
  2277 000010B4 723C                    	jc	short lff24m_7 ; error !
  2278                                  
  2279                                  	;mov	edi, audio_buffer
  2280                                  	; 29/05/2024
  2281 000010B6 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2282                                  	
  2283 000010BC 21C0                    	and	eax, eax
  2284 000010BE 7505                    	jnz	short lff24m_8
  2285 000010C0 E9D6F9FFFF              	jmp	lff24_eof
  2286                                  
  2287                                  lff24m_8:
  2288 000010C5 89C1                    	mov	ecx, eax	; byte count
  2289                                  lff24m_1:
  2290 000010C7 AC                      	lodsb
  2291                                  	;mov	[previous_val], al
  2292 000010C8 88C3                    	mov	bl, al
  2293 000010CA 2C80                    	sub	al, 80h
  2294 000010CC 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2295 000010D0 66AB                    	stosw		; original sample (left channel)
  2296 000010D2 66AB                    	stosw		; original sample (right channel)
  2297                                  	;xor	eax, eax
  2298 000010D4 B080                    	mov	al, 80h
  2299 000010D6 49                      	dec	ecx
  2300 000010D7 7402                    	jz	short lff24m_2
  2301 000010D9 8A06                    	mov	al, [esi]
  2302                                  lff24m_2:
  2303                                  	;;mov	[next_val], al
  2304                                  	;mov	bh, al
  2305                                  	;add	al, [previous_val]
  2306 000010DB 00D8                    	add	al, bl
  2307 000010DD D0D8                    	rcr	al, 1
  2308 000010DF 2C80                    	sub	al, 80h
  2309 000010E1 66C1E008                	shl	ax, 8
  2310 000010E5 66AB                    	stosw		; this is interpolated sample (L)
  2311 000010E7 66AB                    	stosw		; this is interpolated sample (R)
  2312                                  	
  2313                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2314 000010E9 09C9                    	or	ecx, ecx
  2315 000010EB 75DA                    	jnz	short lff24m_1
  2316 000010ED E991F9FFFF              	jmp	lff24_3
  2317                                  
  2318                                  lff24m_7:
  2319                                  lff24s_7:
  2320 000010F2 E9ADF9FFFF              	jmp	lff24_5  ; error
  2321                                  
  2322                                  load_24khz_stereo_8_bit:
  2323                                  	; 15/11/2023
  2324 000010F7 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2325                                  					; last of the file?
  2326 000010FE 7402                    	jz	short lff24s_0		; no
  2327 00001100 F9                      	stc
  2328 00001101 C3                      	retn
  2329                                  
  2330                                  lff24s_0:
  2331 00001102 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2332                                          ;mov	edx, [loadsize]
  2333                                  
  2334                                  	; esi = buffer address
  2335                                  	;; edx = buffer size
  2336                                  
  2337                                  	; load file into memory
  2338                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001107 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000110D 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000110F 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001115 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000111A CD40                <1>  int 40h
  2339 0000111C 72D4                    	jc	short lff24s_7 ; error !
  2340                                  
  2341                                  	;mov	edi, audio_buffer
  2342                                  	; 29/05/2024
  2343 0000111E 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2344                                  	
  2345 00001124 D1E8                    	shr	eax, 1
  2346 00001126 7505                    	jnz	short lff24s_8
  2347 00001128 E96EF9FFFF              	jmp	lff24_eof
  2348                                  
  2349                                  lff24s_8:
  2350 0000112D 89C1                    	mov	ecx, eax  ; word count
  2351                                  lff24s_1:
  2352 0000112F AC                      	lodsb
  2353 00001130 A2[2D200000]            	mov	[previous_val_l], al
  2354 00001135 2C80                    	sub	al, 80h
  2355 00001137 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2356 0000113B 66AB                    	stosw		; original sample (L)
  2357 0000113D AC                      	lodsb
  2358 0000113E A2[2F200000]            	mov	[previous_val_r], al
  2359 00001143 2C80                    	sub	al, 80h
  2360 00001145 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2361 00001149 66AB                    	stosw		; original sample (R)
  2362                                  
  2363                                  	;xor	eax, eax
  2364 0000114B 66B88080                	mov	ax, 8080h
  2365 0000114F 49                      	dec	ecx
  2366 00001150 7403                    	jz	short lff24s_2
  2367                                  		; convert 8 bit sample to 16 bit sample
  2368 00001152 668B06                  	mov	ax, [esi]
  2369                                  lff24s_2:
  2370                                  	;;mov	[next_val_l], al
  2371                                  	;;mov	[next_val_r], ah
  2372                                  	;mov	bx, ax
  2373 00001155 88E7                    	mov	bh, ah
  2374 00001157 0205[2D200000]          	add	al, [previous_val_l]
  2375 0000115D D0D8                    	rcr	al, 1
  2376                                  	;mov	dl, al
  2377 0000115F 2C80                    	sub	al, 80h
  2378 00001161 66C1E008                	shl	ax, 8
  2379 00001165 66AB                    	stosw		; this is interpolated sample (L)
  2380 00001167 88F8                    	mov	al, bh	; [next_val_r]
  2381 00001169 0205[2F200000]          	add	al, [previous_val_r]
  2382 0000116F D0D8                    	rcr	al, 1
  2383                                  	;mov	dh, al
  2384 00001171 2C80                    	sub	al, 80h
  2385 00001173 66C1E008                	shl	ax, 8
  2386 00001177 66AB                    	stosw		; this is interpolated sample (R)
  2387                                  		
  2388                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2389 00001179 09C9                    	or	ecx, ecx
  2390 0000117B 75B2                    	jnz	short lff24s_1
  2391 0000117D E901F9FFFF              	jmp	lff24_3
  2392                                  
  2393                                  load_24khz_mono_16_bit:
  2394                                  	; 15/11/2023
  2395 00001182 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2396                                  					; last of the file?
  2397 00001189 7402                    	jz	short lff24m2_0		; no
  2398 0000118B F9                      	stc
  2399 0000118C C3                      	retn
  2400                                  
  2401                                  lff24m2_0:
  2402 0000118D BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2403                                          ;mov	edx, [loadsize]
  2404                                  
  2405                                  	; esi = buffer address
  2406                                  	;; edx = buffer size
  2407                                  
  2408                                  	; load file into memory
  2409                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001192 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001198 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000119A 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000011A0 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000011A5 CD40                <1>  int 40h
  2410 000011A7 7238                    	jc	short lff24m2_7 ; error !
  2411                                  
  2412                                  	;mov	edi, audio_buffer
  2413                                  	; 29/05/2024
  2414 000011A9 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2415                                  	
  2416 000011AF D1E8                    	shr	eax, 1
  2417 000011B1 7505                    	jnz	short lff24m2_8
  2418 000011B3 E9E3F8FFFF              	jmp	lff24_eof
  2419                                  
  2420                                  lff24m2_8:
  2421 000011B8 89C1                    	mov	ecx, eax  ; word count
  2422                                  lff24m2_1:
  2423 000011BA 66AD                    	lodsw
  2424 000011BC 66AB                    	stosw		; original sample (left channel)
  2425 000011BE 66AB                    	stosw		; original sample (right channel)
  2426 000011C0 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2427                                  	;mov	[previous_val], ax
  2428                                  	;mov	ebx, eax	
  2429                                  	;xor	eax, eax
  2430 000011C3 31DB                    	xor	ebx, ebx
  2431 000011C5 49                      	dec	ecx
  2432 000011C6 7403                    	jz	short lff24m2_2
  2433                                  	;mov	ax, [esi]
  2434 000011C8 668B1E                  	mov	bx, [esi]
  2435                                  lff24m2_2:
  2436                                  	;add	ah, 80h ; convert sound level 0 to 65535 format
  2437                                  	;mov	ebp, eax	; [next_val]
  2438                                  	;add	ax, [previous_val]
  2439                                  	; ax = [previous_val]
  2440                                  	; bx = [next_val]
  2441 000011CB 6601D8                  	add	ax, bx
  2442 000011CE 66D1D8                  	rcr	ax, 1
  2443 000011D1 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2444 000011D4 66AB                    	stosw		; this is interpolated sample (L)
  2445 000011D6 66AB                    	stosw		; this is interpolated sample (R)
  2446                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2447 000011D8 09C9                    	or	ecx, ecx
  2448 000011DA 75DE                    	jnz	short lff24m2_1
  2449 000011DC E9A2F8FFFF              	jmp	lff24_3
  2450                                  
  2451                                  lff24m2_7:
  2452                                  lff24s2_7:
  2453 000011E1 E9BEF8FFFF              	jmp	lff24_5  ; error
  2454                                  
  2455                                  load_24khz_stereo_16_bit:
  2456                                  	; 16/11/2023
  2457                                  	; 15/11/2023
  2458 000011E6 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2459                                  					; last of the file?
  2460 000011ED 7402                    	jz	short lff24s2_0		; no
  2461 000011EF F9                      	stc
  2462 000011F0 C3                      	retn
  2463                                  
  2464                                  lff24s2_0:
  2465 000011F1 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2466                                          ;mov	edx, [loadsize]
  2467                                  
  2468                                  	; esi = buffer address
  2469                                  	;; edx = buffer size
  2470                                  
  2471                                  	; load file into memory
  2472                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000011F6 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000011FC 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000011FE 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001204 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001209 CD40                <1>  int 40h
  2473 0000120B 72D4                    	jc	short lff24s2_7 ; error !
  2474                                  
  2475                                  	;mov	edi, audio_buffer
  2476                                  	; 29/05/2024
  2477 0000120D 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2478                                  	
  2479 00001213 C1E802                  	shr	eax, 2
  2480 00001216 7505                    	jnz	short lff24s2_8
  2481 00001218 E97EF8FFFF              	jmp	lff24_eof
  2482                                  
  2483                                  lff24s2_8:
  2484 0000121D 89C1                    	mov	ecx, eax  ; dword count
  2485                                  lff24s2_1:
  2486 0000121F 66AD                    	lodsw
  2487 00001221 66AB                    	stosw		; original sample (L)
  2488 00001223 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2489 00001226 66A3[2D200000]          	mov	[previous_val_l], ax
  2490 0000122C 66AD                    	lodsw
  2491 0000122E 66AB                    	stosw		; original sample (R)
  2492 00001230 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2493                                  	;mov	[previous_val_r], ax
  2494 00001233 89C3                    	mov	ebx, eax
  2495 00001235 31D2                    	xor	edx, edx
  2496 00001237 31C0                    	xor	eax, eax
  2497                                  	; 16/11/2023
  2498 00001239 49                      	dec	ecx
  2499 0000123A 7407                    	jz	short lff24s2_2
  2500 0000123C 668B06                  	mov	ax, [esi]
  2501 0000123F 668B5602                	mov	dx, [esi+2]
  2502                                  lff24s2_2:
  2503 00001243 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2504                                  	;;mov	[next_val_l], ax
  2505                                  	;mov	ebp, eax
  2506 00001246 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2507                                  	;mov	[next_val_r], dx
  2508 00001249 660305[2D200000]        	add	ax, [previous_val_l]
  2509 00001250 66D1D8                  	rcr	ax, 1
  2510 00001253 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2511 00001256 66AB                    	stosw		; this is interpolated sample (L)
  2512                                  	;mov	ax, [next_val_r]
  2513 00001258 89D0                    	mov	eax, edx
  2514                                  	;add	ax, [previous_val_r]
  2515 0000125A 6601D8                  	add	ax, bx
  2516 0000125D 66D1D8                  	rcr	ax, 1
  2517 00001260 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2518 00001263 66AB                    	stosw		; this is interpolated sample (R)
  2519                                  	
  2520                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2521 00001265 09C9                    	or	ecx, ecx
  2522 00001267 75B6                    	jnz	short lff24s2_1
  2523 00001269 E915F8FFFF              	jmp	lff24_3
  2524                                  
  2525                                  ; .....................
  2526                                  
  2527                                  load_32khz_mono_8_bit:
  2528                                  	; 15/11/2023
  2529 0000126E F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2530                                  					; last of the file?
  2531 00001275 7402                    	jz	short lff32m_0		; no
  2532 00001277 F9                      	stc
  2533 00001278 C3                      	retn
  2534                                  
  2535                                  lff32m_0:
  2536 00001279 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2537                                          ;mov	edx, [loadsize]
  2538                                  
  2539                                  	; esi = buffer address
  2540                                  	;; edx = buffer size
  2541                                  
  2542                                  	; load file into memory
  2543                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000127E 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001284 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001286 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000128C B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001291 CD40                <1>  int 40h
  2544 00001293 7248                    	jc	short lff32m_7 ; error !
  2545                                  
  2546                                  	;mov	edi, audio_buffer
  2547                                  	; 29/05/2024
  2548 00001295 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2549                                  	
  2550 0000129B 21C0                    	and	eax, eax
  2551 0000129D 7505                    	jnz	short lff32m_8
  2552 0000129F E9F7F7FFFF              	jmp	lff32_eof
  2553                                  
  2554                                  lff32m_8:
  2555 000012A4 89C1                    	mov	ecx, eax	; byte count
  2556                                  lff32m_1:
  2557 000012A6 AC                      	lodsb
  2558                                  	;mov	[previous_val], al
  2559 000012A7 88C3                    	mov	bl, al
  2560 000012A9 2C80                    	sub	al, 80h
  2561 000012AB 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2562 000012AF 66AB                    	stosw		; original sample (left channel)
  2563 000012B1 66AB                    	stosw		; original sample (right channel)
  2564                                  	;xor	eax, eax
  2565 000012B3 B080                    	mov	al, 80h
  2566 000012B5 49                      	dec	ecx
  2567 000012B6 7402                    	jz	short lff32m_2
  2568 000012B8 8A06                    	mov	al, [esi]
  2569                                  lff32m_2:
  2570                                  	;;mov	[next_val], al
  2571                                  	;mov	bh, al
  2572                                  	;add	al, [previous_val]
  2573 000012BA 00D8                    	add	al, bl
  2574 000012BC D0D8                    	rcr	al, 1
  2575 000012BE 2C80                    	sub	al, 80h
  2576 000012C0 66C1E008                	shl	ax, 8
  2577 000012C4 66AB                    	stosw		; this is interpolated sample (L)
  2578 000012C6 66AB                    	stosw		; this is interpolated sample (R)
  2579                                  	
  2580                                  	; different than 8-16-24 kHZ !
  2581                                  	; 'original-interpolated-original' trio samples 
  2582 000012C8 E30E                    	jecxz	lff32m_3
  2583                                  
  2584 000012CA AC                      	lodsb
  2585 000012CB 2C80                    	sub	al, 80h
  2586 000012CD 66C1E008                	shl	ax, 8
  2587 000012D1 66AB                    	stosw		; original sample (left channel)
  2588 000012D3 66AB                    	stosw		; original sample (right channel)
  2589                                  
  2590                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2591 000012D5 49                      	dec	ecx
  2592 000012D6 75CE                    	jnz	short lff32m_1
  2593                                  lff32m_3:
  2594 000012D8 E9A6F7FFFF              	jmp	lff32_3
  2595                                  
  2596                                  lff32m_7:
  2597                                  lff32s_7:
  2598 000012DD E9C2F7FFFF              	jmp	lff32_5  ; error
  2599                                  
  2600                                  load_32khz_stereo_8_bit:
  2601                                  	; 15/11/2023
  2602 000012E2 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2603                                  					; last of the file?
  2604 000012E9 7402                    	jz	short lff32s_0		; no
  2605 000012EB F9                      	stc
  2606 000012EC C3                      	retn
  2607                                  
  2608                                  lff32s_0:
  2609 000012ED BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2610                                          ;mov	edx, [loadsize]
  2611                                  
  2612                                  	; esi = buffer address
  2613                                  	;; edx = buffer size
  2614                                  
  2615                                  	; load file into memory
  2616                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000012F2 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000012F8 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000012FA 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001300 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001305 CD40                <1>  int 40h
  2617 00001307 72D4                    	jc	short lff32s_7 ; error !
  2618                                  
  2619                                  	;mov	edi, audio_buffer
  2620                                  	; 29/05/2024
  2621 00001309 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2622                                  	
  2623 0000130F D1E8                    	shr	eax, 1
  2624 00001311 7505                    	jnz	short lff32s_8
  2625 00001313 E983F7FFFF              	jmp	lff32_eof
  2626                                  
  2627                                  lff32s_8:
  2628 00001318 89C1                    	mov	ecx, eax  ; word count
  2629                                  lff32s_1:
  2630 0000131A AC                      	lodsb
  2631 0000131B A2[2D200000]            	mov	[previous_val_l], al
  2632 00001320 2C80                    	sub	al, 80h
  2633 00001322 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2634 00001326 66AB                    	stosw		; original sample (L)
  2635 00001328 AC                      	lodsb
  2636 00001329 A2[2F200000]            	mov	[previous_val_r], al
  2637 0000132E 2C80                    	sub	al, 80h
  2638 00001330 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2639 00001334 66AB                    	stosw		; original sample (R)
  2640                                  
  2641                                  	;xor	eax, eax
  2642 00001336 66B88080                	mov	ax, 8080h
  2643 0000133A 49                      	dec	ecx
  2644 0000133B 7403                    	jz	short lff32s_2
  2645                                  		; convert 8 bit sample to 16 bit sample
  2646 0000133D 668B06                  	mov	ax, [esi]
  2647                                  lff32s_2:
  2648                                  	;;mov	[next_val_l], al
  2649                                  	;;mov	[next_val_r], ah
  2650                                  	;mov	bx, ax
  2651 00001340 88E7                    	mov	bh, ah
  2652 00001342 0205[2D200000]          	add	al, [previous_val_l]
  2653 00001348 D0D8                    	rcr	al, 1
  2654                                  	;mov	dl, al
  2655 0000134A 2C80                    	sub	al, 80h
  2656 0000134C 66C1E008                	shl	ax, 8
  2657 00001350 66AB                    	stosw		; this is interpolated sample (L)
  2658 00001352 88F8                    	mov	al, bh	; [next_val_r]
  2659 00001354 0205[2F200000]          	add	al, [previous_val_r]
  2660 0000135A D0D8                    	rcr	al, 1
  2661                                  	;mov	dh, al
  2662 0000135C 2C80                    	sub	al, 80h
  2663 0000135E 66C1E008                	shl	ax, 8
  2664 00001362 66AB                    	stosw		; this is interpolated sample (R)
  2665                                  
  2666                                  	; different than 8-16-24 kHZ !
  2667                                  	; 'original-interpolated-original' trio samples 
  2668 00001364 E315                    	jecxz	lff32s_3
  2669                                  
  2670 00001366 AC                      	lodsb
  2671 00001367 2C80                    	sub	al, 80h
  2672 00001369 66C1E008                	shl	ax, 8
  2673 0000136D 66AB                    	stosw		; original sample (left channel)
  2674                                  
  2675 0000136F AC                      	lodsb
  2676 00001370 2C80                    	sub	al, 80h
  2677 00001372 66C1E008                	shl	ax, 8
  2678 00001376 66AB                    	stosw		; original sample (right channel)
  2679                                  		
  2680                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2681 00001378 49                      	dec	ecx
  2682 00001379 759F                    	jnz	short lff32s_1
  2683                                  lff32s_3:
  2684 0000137B E903F7FFFF              	jmp	lff32_3
  2685                                  
  2686                                  load_32khz_mono_16_bit:
  2687                                  	; 15/11/2023
  2688 00001380 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2689                                  					; last of the file?
  2690 00001387 7402                    	jz	short lff32m2_0		; no
  2691 00001389 F9                      	stc
  2692 0000138A C3                      	retn
  2693                                  
  2694                                  lff32m2_0:
  2695 0000138B BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2696                                          ;mov	edx, [loadsize]
  2697                                  
  2698                                  	; esi = buffer address
  2699                                  	;; edx = buffer size
  2700                                  
  2701                                  	; load file into memory
  2702                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001390 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001396 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001398 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000139E B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000013A3 CD40                <1>  int 40h
  2703 000013A5 723F                    	jc	short lff32m2_7 ; error !
  2704                                  
  2705                                  	;mov	edi, audio_buffer
  2706                                  	; 29/05/2024
  2707 000013A7 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2708                                  	
  2709 000013AD D1E8                    	shr	eax, 1
  2710 000013AF 7505                    	jnz	short lff32m2_8
  2711 000013B1 E9E5F6FFFF              	jmp	lff32_eof
  2712                                  
  2713                                  lff32m2_8:
  2714 000013B6 89C1                    	mov	ecx, eax  ; word count
  2715                                  lff32m2_1:
  2716 000013B8 66AD                    	lodsw
  2717 000013BA 66AB                    	stosw		; original sample (left channel)
  2718 000013BC 66AB                    	stosw		; original sample (right channel)
  2719 000013BE 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2720                                  	;mov	[previous_val], ax
  2721                                  	;mov	ebx, eax	
  2722                                  	;xor	eax, eax
  2723 000013C1 31DB                    	xor	ebx, ebx
  2724 000013C3 49                      	dec	ecx
  2725 000013C4 7403                    	jz	short lff32m2_2
  2726                                  	;mov	ax, [esi]
  2727 000013C6 668B1E                  	mov	bx, [esi]
  2728                                  lff32m2_2:
  2729                                  	;add	ah, 80h ; convert sound level 0 to 65535 format
  2730                                  	;mov	ebp, eax	; [next_val]
  2731                                  	;add	ax, [previous_val]
  2732                                  	; ax = [previous_val]
  2733                                  	; bx = [next_val]
  2734 000013C9 6601D8                  	add	ax, bx
  2735 000013CC 66D1D8                  	rcr	ax, 1
  2736 000013CF 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2737 000013D2 66AB                    	stosw		; this is interpolated sample (L)
  2738 000013D4 66AB                    	stosw		; this is interpolated sample (R)
  2739                                  
  2740                                  	; different than 8-16-24 kHZ !
  2741                                  	; 'original-interpolated-original' trio samples 
  2742 000013D6 E309                    	jecxz	lff32m2_3
  2743                                  
  2744 000013D8 66AD                    	lodsw
  2745 000013DA 66AB                    	stosw		; original sample (left channel)
  2746 000013DC 66AB                    	stosw		; original sample (right channel)
  2747                                  
  2748                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2749 000013DE 49                      	dec	ecx
  2750 000013DF 75D7                    	jnz	short lff32m2_1
  2751                                  lff32m2_3:
  2752 000013E1 E99DF6FFFF              	jmp	lff32_3
  2753                                  
  2754                                  lff32m2_7:
  2755                                  lff32s2_7:
  2756 000013E6 E9B9F6FFFF              	jmp	lff32_5  ; error
  2757                                  
  2758                                  load_32khz_stereo_16_bit:
  2759                                  	; 16/11/2023
  2760                                  	; 15/11/2023
  2761 000013EB F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2762                                  					; last of the file?
  2763 000013F2 7402                    	jz	short lff32s2_0		; no
  2764 000013F4 F9                      	stc
  2765 000013F5 C3                      	retn
  2766                                  
  2767                                  lff32s2_0:
  2768 000013F6 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2769                                          ;mov	edx, [loadsize]
  2770                                  
  2771                                  	; esi = buffer address
  2772                                  	;; edx = buffer size
  2773                                  
  2774                                  	; load file into memory
  2775                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000013FB 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001401 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001403 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001409 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000140E CD40                <1>  int 40h
  2776 00001410 72D4                    	jc	short lff32s2_7 ; error !
  2777                                  
  2778                                  	;mov	edi, audio_buffer
  2779                                  	; 29/05/2024
  2780 00001412 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2781                                  	
  2782 00001418 C1E802                  	shr	eax, 2
  2783 0000141B 7505                    	jnz	short lff32s2_8
  2784 0000141D E979F6FFFF              	jmp	lff32_eof
  2785                                  
  2786                                  lff32s2_8:
  2787 00001422 89C1                    	mov	ecx, eax ; dword count
  2788                                  lff32s2_1:
  2789 00001424 66AD                    	lodsw
  2790 00001426 66AB                    	stosw		; original sample (L)
  2791 00001428 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2792 0000142B 66A3[2D200000]          	mov	[previous_val_l], ax
  2793 00001431 66AD                    	lodsw
  2794 00001433 66AB                    	stosw		; original sample (R)
  2795 00001435 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2796                                  	;mov	[previous_val_r], ax
  2797 00001438 89C3                    	mov	ebx, eax
  2798 0000143A 31D2                    	xor	edx, edx
  2799 0000143C 31C0                    	xor	eax, eax
  2800                                  	; 16/11/2023
  2801 0000143E 49                      	dec	ecx
  2802 0000143F 7407                    	jz	short lff32s2_2
  2803 00001441 668B06                  	mov	ax, [esi]
  2804 00001444 668B5602                	mov	dx, [esi+2]
  2805                                  lff32s2_2:
  2806 00001448 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  2807                                  	;;mov	[next_val_l], ax
  2808                                  	;mov	ebp, eax
  2809 0000144B 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  2810                                  	;mov	[next_val_r], dx
  2811 0000144E 660305[2D200000]        	add	ax, [previous_val_l]
  2812 00001455 66D1D8                  	rcr	ax, 1
  2813 00001458 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2814 0000145B 66AB                    	stosw		; this is interpolated sample (L)
  2815                                  	;mov	ax, [next_val_r]
  2816 0000145D 89D0                    	mov	eax, edx
  2817                                  	;add	ax, [previous_val_r]
  2818 0000145F 6601D8                  	add	ax, bx
  2819 00001462 66D1D8                  	rcr	ax, 1
  2820 00001465 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2821 00001468 66AB                    	stosw		; this is interpolated sample (R)
  2822                                  
  2823                                  	; different than 8-16-24 kHZ !
  2824                                  	; 'original-interpolated-original' trio samples 
  2825 0000146A E30B                    	jecxz	lff32s2_3
  2826                                  
  2827 0000146C 66AD                    	lodsw
  2828 0000146E 66AB                    	stosw	; original sample (L)
  2829 00001470 66AD                    	lodsw
  2830 00001472 66AB                    	stosw	; original sample (R)
  2831                                  	
  2832                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2833 00001474 49                      	dec	ecx
  2834 00001475 75AD                    	jnz	short lff32s2_1
  2835                                  lff32s2_3:
  2836 00001477 E907F6FFFF              	jmp	lff32_3
  2837                                  
  2838                                  ; .....................
  2839                                  
  2840                                  load_22khz_mono_8_bit:
  2841                                  	; 16/11/2023
  2842 0000147C F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2843                                  					; last of the file?
  2844 00001483 7402                    	jz	short lff22m_0		; no
  2845 00001485 F9                      	stc
  2846 00001486 C3                      	retn
  2847                                  
  2848                                  lff22m_0:
  2849 00001487 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2850                                          ;mov	edx, [loadsize]
  2851                                  
  2852                                  	; esi = buffer address
  2853                                  	;; edx = buffer size
  2854                                  
  2855                                  	; load file into memory
  2856                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000148C 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001492 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001494 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000149A B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000149F CD40                <1>  int 40h
  2857 000014A1 725E                    	jc	short lff22m_7 ; error !
  2858                                  
  2859                                  	;mov	edi, audio_buffer
  2860                                  	; 29/05/2024
  2861 000014A3 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2862                                  	
  2863 000014A9 21C0                    	and	eax, eax
  2864 000014AB 7505                    	jnz	short lff22m_8
  2865 000014AD E9E9F5FFFF              	jmp	lff22_eof
  2866                                  
  2867                                  lff22m_8:
  2868 000014B2 89C1                    	mov	ecx, eax	; byte count
  2869                                  lff22m_9:
  2870 000014B4 BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2871 000014B9 C605[35200000]03        	mov	byte [faz], 3  ; 3 steps/phases
  2872                                  lff22m_1:
  2873                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2874 000014C0 AC                      	lodsb
  2875 000014C1 B280                    	mov	dl, 80h
  2876 000014C3 49                      	dec	ecx
  2877 000014C4 7402                    	jz	short lff22m_2_1
  2878 000014C6 8A16                    	mov	dl, [esi]
  2879                                  lff22m_2_1:	
  2880                                  	; al = [previous_val]
  2881                                  	; dl = [next_val]
  2882 000014C8 E81A060000              	call	interpolating_3_8bit_mono ; 1 of 17
  2883 000014CD E32D                    	jecxz	lff22m_3
  2884                                  lff22m_2_2:
  2885 000014CF AC                      	lodsb
  2886 000014D0 B280                    	mov	dl, 80h
  2887 000014D2 49                      	dec	ecx
  2888 000014D3 7402                    	jz	short lff22m_2_3
  2889 000014D5 8A16                    	mov	dl, [esi]
  2890                                  lff22m_2_3:
  2891 000014D7 E88F060000               	call	interpolating_2_8bit_mono ; 2 of 17 .. 6 of 17
  2892 000014DC E31E                    	jecxz	lff22m_3
  2893 000014DE 4D                      	dec	ebp
  2894 000014DF 75EE                    	jnz	short lff22m_2_2
  2895                                  
  2896 000014E1 A0[35200000]            	mov	al, [faz]
  2897 000014E6 FEC8                    	dec	al
  2898 000014E8 74CA                    	jz	short lff22m_9
  2899 000014EA FE0D[35200000]          	dec	byte [faz]
  2900 000014F0 BD04000000              	mov	ebp, 4
  2901 000014F5 FEC8                    	dec	al
  2902 000014F7 75C7                    	jnz	short lff22m_1 ; 3:2:2:2:2 ; 7-11 of 17
  2903 000014F9 45                      	inc	ebp ; 5
  2904 000014FA EBC4                    	jmp	short lff22m_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2905                                  
  2906                                  lff22m_3:
  2907                                  lff22s_3:
  2908 000014FC E982F5FFFF              	jmp	lff22_3	; padfill
  2909                                  		; (put zeros in the remain words of the buffer)
  2910                                  lff22m_7:
  2911                                  lff22s_7:
  2912 00001501 E99EF5FFFF              	jmp	lff22_5  ; error
  2913                                  
  2914                                  load_22khz_stereo_8_bit:
  2915                                  	; 16/11/2023
  2916 00001506 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2917                                  					; last of the file?
  2918 0000150D 7402                    	jz	short lff22s_0		; no
  2919 0000150F F9                      	stc
  2920 00001510 C3                      	retn
  2921                                  
  2922                                  lff22s_0:
  2923 00001511 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2924                                          ;mov	edx, [loadsize]
  2925                                  
  2926                                  	; esi = buffer address
  2927                                  	;; edx = buffer size
  2928                                  
  2929                                  	; load file into memory
  2930                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001516 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000151C 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000151E 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001524 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001529 CD40                <1>  int 40h
  2931 0000152B 72D4                    	jc	short lff22s_7 ; error !
  2932                                  
  2933                                  	;mov	edi, audio_buffer
  2934                                  	; 29/05/2024
  2935 0000152D 8B3D[AE280000]          	mov	edi, [audio_buffer]
  2936                                  	
  2937 00001533 D1E8                    	shr	eax, 1
  2938 00001535 7505                    	jnz	short lff22s_8
  2939 00001537 E95FF5FFFF              	jmp	lff22_eof
  2940                                  
  2941                                  lff22s_8:
  2942 0000153C 89C1                    	mov	ecx, eax	; word count
  2943                                  lff22s_9:
  2944 0000153E BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2945 00001543 C605[35200000]03        	mov	byte [faz], 3  ; 3 steps/phase
  2946                                  lff22s_1:
  2947                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2948 0000154A 66AD                    	lodsw
  2949 0000154C 66BA8080                	mov	dx, 8080h
  2950 00001550 49                      	dec	ecx
  2951 00001551 7403                    	jz	short lff22s_2_1 
  2952 00001553 668B16                  	mov	dx, [esi]
  2953                                  lff22s_2_1:	
  2954                                  	; al = [previous_val_l]
  2955                                  	; ah = [previous_val_r]
  2956                                  	; dl = [next_val_l]
  2957                                  	; dh = [next_val_r]	
  2958 00001556 E8BD050000              	call	interpolating_3_8bit_stereo ; 1 of 17 
  2959 0000155B E39F                    	jecxz	lff22s_3
  2960                                  lff22s_2_2:
  2961 0000155D 66AD                    	lodsw
  2962 0000155F 66BA8080                	mov	dx, 8080h
  2963 00001563 49                      	dec	ecx
  2964 00001564 7403                    	jz	short lff22s_2_3
  2965 00001566 668B16                  	mov	dx, [esi]
  2966                                  lff22s_2_3:
  2967 00001569 E81A060000               	call	interpolating_2_8bit_stereo ; 2 of 17 .. 6 of 17
  2968 0000156E E38C                    	jecxz	lff22s_3
  2969 00001570 4D                      	dec	ebp
  2970 00001571 75EA                    	jnz	short lff22s_2_2
  2971                                  
  2972 00001573 A0[35200000]            	mov	al, [faz]
  2973 00001578 FEC8                    	dec	al
  2974 0000157A 74C2                    	jz	short lff22s_9
  2975 0000157C FE0D[35200000]          	dec	byte [faz]
  2976 00001582 BD04000000              	mov	ebp, 4
  2977 00001587 FEC8                    	dec	al
  2978 00001589 75BF                    	jnz	short lff22s_1 ; 3:2:2:2:2 ; 7-11 of 17
  2979 0000158B 45                      	inc	ebp ; 5
  2980 0000158C EBBC                    	jmp	short lff22s_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2981                                  
  2982                                  load_22khz_mono_16_bit:
  2983                                  	; 16/11/2023
  2984 0000158E F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2985                                  					; last of the file?
  2986 00001595 7402                    	jz	short lff22m2_0		; no
  2987 00001597 F9                      	stc
  2988 00001598 C3                      	retn
  2989                                  
  2990                                  lff22m2_0:
  2991 00001599 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2992                                          ;mov	edx, [loadsize]
  2993                                  
  2994                                  	; esi = buffer address
  2995                                  	;; edx = buffer size
  2996                                  
  2997                                  	; load file into memory
  2998                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000159E 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000015A4 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000015A6 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000015AC B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000015B1 CD40                <1>  int 40h
  2999 000015B3 7262                    	jc	short lff22m2_7 ; error !
  3000                                  
  3001                                  	;mov	edi, audio_buffer
  3002                                  	; 29/05/2024
  3003 000015B5 8B3D[AE280000]          	mov	edi, [audio_buffer]
  3004                                  	
  3005 000015BB D1E8                    	shr	eax, 1
  3006 000015BD 7505                    	jnz	short lff22m2_8
  3007 000015BF E9D7F4FFFF              	jmp	lff22_eof
  3008                                  
  3009                                  lff22m2_8:
  3010 000015C4 89C1                    	mov	ecx, eax	; word count
  3011                                  lff22m2_9:
  3012 000015C6 BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  3013 000015CB C605[35200000]03        	mov	byte [faz], 3  ; 3 steps/phases
  3014                                  lff22m2_1:
  3015                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  3016 000015D2 66AD                    	lodsw
  3017 000015D4 31D2                    	xor	edx, edx
  3018 000015D6 49                      	dec	ecx
  3019 000015D7 7403                    	jz	short lff22m2_2_1
  3020 000015D9 668B16                  	mov	dx, [esi]
  3021                                  lff22m2_2_1:	
  3022                                  	; ax = [previous_val]
  3023                                  	; dx = [next_val]
  3024 000015DC E8D8050000              	call	interpolating_3_16bit_mono ; 1 of 17
  3025 000015E1 E32F                    	jecxz	lff22m2_3
  3026                                  lff22m2_2_2:
  3027 000015E3 66AD                    	lodsw
  3028 000015E5 31D2                    	xor	edx, edx
  3029 000015E7 49                      	dec	ecx
  3030 000015E8 7403                    	jz	short lff22m2_2_3
  3031 000015EA 668B16                  	mov	dx, [esi]
  3032                                  lff22m2_2_3:
  3033 000015ED E85A060000               	call	interpolating_2_16bit_mono ; 2 of 17 .. 6 of 17
  3034 000015F2 E31E                    	jecxz	lff22m2_3
  3035 000015F4 4D                      	dec	ebp
  3036 000015F5 75EC                    	jnz	short lff22m2_2_2
  3037                                  
  3038 000015F7 A0[35200000]            	mov	al, [faz]
  3039 000015FC FEC8                    	dec	al
  3040 000015FE 74C6                    	jz	short lff22m2_9
  3041 00001600 FE0D[35200000]          	dec	byte [faz]
  3042 00001606 BD04000000              	mov	ebp, 4
  3043 0000160B FEC8                    	dec	al
  3044 0000160D 75C3                    	jnz	short lff22m2_1 ; 3:2:2:2:2 ; 7-11 of 17
  3045 0000160F 45                      	inc	ebp ; 5
  3046 00001610 EBC0                    	jmp	short lff22m2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  3047                                  
  3048                                  lff22m2_3:
  3049                                  lff22s2_3:
  3050 00001612 E96CF4FFFF              	jmp	lff22_3	; padfill
  3051                                  		; (put zeros in the remain words of the buffer)
  3052                                  lff22m2_7:
  3053                                  lff22s2_7:
  3054 00001617 E988F4FFFF              	jmp	lff22_5  ; error
  3055                                  
  3056                                  load_22khz_stereo_16_bit:
  3057                                  	; 16/11/2023
  3058 0000161C F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3059                                  					; last of the file?
  3060 00001623 7402                    	jz	short lff22s2_0		; no
  3061 00001625 F9                      	stc
  3062 00001626 C3                      	retn
  3063                                  
  3064                                  lff22s2_0:
  3065 00001627 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3066                                          ;mov	edx, [loadsize]
  3067                                  
  3068                                  	; esi = buffer address
  3069                                  	;; edx = buffer size
  3070                                  
  3071                                  	; load file into memory
  3072                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000162C 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001632 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001634 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000163A B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000163F CD40                <1>  int 40h
  3073 00001641 72D4                    	jc	short lff22s2_7 ; error !
  3074                                  
  3075                                  	;mov	edi, audio_buffer
  3076                                  	; 29/05/2024
  3077 00001643 8B3D[AE280000]          	mov	edi, [audio_buffer]
  3078                                  	
  3079 00001649 C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3080 0000164C 7505                    	jnz	short lff22s2_8
  3081 0000164E E948F4FFFF              	jmp	lff22_eof
  3082                                  
  3083                                  lff22s2_8:
  3084 00001653 89C1                    	mov	ecx, eax	; dword count
  3085                                  lff22s2_9:
  3086 00001655 BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  3087 0000165A C605[35200000]03        	mov	byte [faz], 3  ; 3 steps/phase
  3088                                  lff22s2_1:
  3089                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  3090 00001661 66AD                    	lodsw
  3091 00001663 89C3                    	mov	ebx, eax
  3092 00001665 66AD                    	lodsw
  3093 00001667 8B16                    	mov	edx, [esi]
  3094 00001669 668915[31200000]        	mov	[next_val_l], dx
  3095                                  	; 26/11/2023
  3096 00001670 C1EA10                  	shr	edx, 16
  3097 00001673 49                      	dec	ecx
  3098 00001674 7509                    	jnz	short lff22s2_2_1
  3099 00001676 31D2                    	xor	edx, edx ; 0
  3100 00001678 668915[31200000]        	mov	[next_val_l], dx
  3101                                  lff22s2_2_1:
  3102                                  	; bx = [previous_val_l]
  3103                                  	; ax = [previous_val_r]
  3104                                  	; [next_val_l]
  3105                                  	; dx = [next_val_r]
  3106 0000167F E865050000              	call	interpolating_3_16bit_stereo ; 1 of 17 
  3107 00001684 E38C                    	jecxz	lff22s2_3
  3108                                  lff22s2_2_2:
  3109 00001686 66AD                    	lodsw
  3110 00001688 89C3                    	mov	ebx, eax
  3111 0000168A 66AD                    	lodsw
  3112 0000168C 8B16                    	mov	edx, [esi]
  3113 0000168E 668915[31200000]        	mov	[next_val_l], dx
  3114                                  	; 26/11/2023
  3115 00001695 C1EA10                  	shr	edx, 16
  3116 00001698 49                      	dec	ecx
  3117 00001699 7509                    	jnz	short lff22s2_2_3
  3118 0000169B 31D2                    	xor	edx, edx ; 0
  3119 0000169D 668915[31200000]        	mov	[next_val_l], dx
  3120                                  lff22s2_2_3:
  3121 000016A4 E8BB050000               	call	interpolating_2_16bit_stereo ; 2 of 17 .. 6 of 17
  3122 000016A9 E31E                    	jecxz	lff22s2_2_4
  3123                                  
  3124 000016AB 4D                      	dec	ebp
  3125 000016AC 75D8                    	jnz	short lff22s2_2_2
  3126                                  
  3127 000016AE A0[35200000]            	mov	al, [faz]
  3128 000016B3 FEC8                    	dec	al
  3129 000016B5 749E                    	jz	short lff22s2_9
  3130 000016B7 FE0D[35200000]          	dec	byte [faz]
  3131 000016BD BD04000000              	mov	ebp, 4
  3132 000016C2 FEC8                    	dec	al
  3133 000016C4 759B                    	jnz	short lff22s2_1 ; 3:2:2:2:2 ; 7-11 of 17
  3134 000016C6 45                      	inc	ebp ; 5
  3135 000016C7 EB98                    	jmp	short lff22s2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  3136                                  
  3137                                  lff22s2_2_4:
  3138                                  	; 26/11/2023
  3139 000016C9 E9B5F3FFFF              	jmp	lff22_3	; padfill
  3140                                  
  3141                                  ; .....................
  3142                                  
  3143                                  load_11khz_mono_8_bit:
  3144                                  	; 18/11/2023
  3145 000016CE F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3146                                  					; last of the file?
  3147 000016D5 7402                    	jz	short lff11m_0		; no
  3148 000016D7 F9                      	stc
  3149 000016D8 C3                      	retn
  3150                                  
  3151                                  lff11m_0:
  3152 000016D9 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3153                                          ;mov	edx, [loadsize]
  3154                                  
  3155                                  	; esi = buffer address
  3156                                  	;; edx = buffer size
  3157                                  
  3158                                  	; load file into memory
  3159                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000016DE 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000016E4 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000016E6 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000016EC B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000016F1 CD40                <1>  int 40h
  3160 000016F3 7248                    	jc	short lff11m_7 ; error !
  3161                                  
  3162                                  	;mov	edi, audio_buffer
  3163                                  	; 29/05/2024
  3164 000016F5 8B3D[AE280000]          	mov	edi, [audio_buffer]
  3165                                  	
  3166 000016FB 21C0                    	and	eax, eax
  3167 000016FD 7505                    	jnz	short lff11m_8
  3168 000016FF E997F3FFFF              	jmp	lff11_eof
  3169                                  
  3170                                  lff11m_8:
  3171 00001704 89C1                    	mov	ecx, eax		; byte count
  3172                                  lff11m_9:
  3173 00001706 BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3174                                  lff11m_1:
  3175                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3176 0000170B AC                      	lodsb
  3177 0000170C B280                    	mov	dl, 80h
  3178 0000170E 49                      	dec	ecx
  3179 0000170F 7402                    	jz	short lff11m_2_1
  3180 00001711 8A16                    	mov	dl, [esi]
  3181                                  lff11m_2_1:	
  3182                                  	; al = [previous_val]
  3183                                  	; dl = [next_val]
  3184 00001713 E87D050000              	call	interpolating_5_8bit_mono
  3185 00001718 E328                    	jecxz	lff11m_3
  3186                                  lff11m_2_2:
  3187 0000171A AC                      	lodsb
  3188 0000171B B280                    	mov	dl, 80h
  3189 0000171D 49                      	dec	ecx
  3190 0000171E 7402                    	jz	short lff11m_2_3
  3191 00001720 8A16                    	mov	dl, [esi]
  3192                                  lff11m_2_3:
  3193 00001722 E87A060000               	call	interpolating_4_8bit_mono
  3194 00001727 E319                    	jecxz	lff11m_3
  3195                                  
  3196 00001729 4D                      	dec	ebp
  3197 0000172A 74DA                    	jz	short lff11m_9
  3198                                  
  3199 0000172C AC                      	lodsb
  3200 0000172D B280                    	mov	dl, 80h
  3201 0000172F 49                      	dec	ecx
  3202 00001730 7402                    	jz	short lff11m_2_4
  3203 00001732 8A16                    	mov	dl, [esi]
  3204                                  lff11m_2_4:
  3205 00001734 E868060000              	call	interpolating_4_8bit_mono
  3206 00001739 E307                    	jecxz	lff11m_3
  3207 0000173B EBCE                    	jmp	short lff11m_1
  3208                                  
  3209                                  lff11m_7:
  3210                                  lff11s_7:
  3211 0000173D E962F3FFFF              	jmp	lff11_5  ; error
  3212                                  
  3213                                  lff11m_3:
  3214                                  lff11s_3:
  3215 00001742 E93CF3FFFF              	jmp	lff11_3	; padfill
  3216                                  		; (put zeros in the remain words of the buffer)
  3217                                  
  3218                                  load_11khz_stereo_8_bit:
  3219                                  	; 18/11/2023
  3220 00001747 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3221                                  					; last of the file?
  3222 0000174E 7402                    	jz	short lff11s_0		; no
  3223 00001750 F9                      	stc
  3224 00001751 C3                      	retn
  3225                                  
  3226                                  lff11s_0:
  3227 00001752 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3228                                          ;mov	edx, [loadsize]
  3229                                  
  3230                                  	; esi = buffer address
  3231                                  	;; edx = buffer size
  3232                                  
  3233                                  	; load file into memory
  3234                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001757 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 0000175D 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000175F 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001765 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000176A CD40                <1>  int 40h
  3235 0000176C 72CF                    	jc	short lff11s_7 ; error !
  3236                                  
  3237                                  	;mov	edi, audio_buffer
  3238                                  	; 29/05/2024
  3239 0000176E 8B3D[AE280000]          	mov	edi, [audio_buffer]
  3240                                  	
  3241 00001774 D1E8                    	shr	eax, 1
  3242 00001776 7505                    	jnz	short lff11s_8
  3243 00001778 E91EF3FFFF              	jmp	lff11_eof
  3244                                  
  3245                                  lff11s_8:
  3246 0000177D 89C1                    	mov	ecx, eax	; word count
  3247                                  lff11s_9:
  3248 0000177F BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3249                                  lff11s_1:
  3250                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3251 00001784 66AD                    	lodsw
  3252 00001786 66BA8080                	mov	dx, 8080h
  3253 0000178A 49                      	dec	ecx
  3254 0000178B 7403                    	jz	short lff11s_2_1 
  3255 0000178D 668B16                  	mov	dx, [esi]
  3256                                  lff11s_2_1:	
  3257                                  	; al = [previous_val_l]
  3258                                  	; ah = [previous_val_r]
  3259                                  	; dl = [next_val_l]
  3260                                  	; dh = [next_val_r]	
  3261 00001790 E85F050000              	call	interpolating_5_8bit_stereo
  3262 00001795 E3AB                    	jecxz	lff11s_3
  3263                                  lff11s_2_2:
  3264 00001797 66AD                    	lodsw
  3265 00001799 66BA8080                	mov	dx, 8080h
  3266 0000179D 49                      	dec	ecx
  3267 0000179E 7403                    	jz	short lff11s_2_3
  3268 000017A0 668B16                  	mov	dx, [esi]
  3269                                  lff11s_2_3:
  3270 000017A3 E838060000               	call	interpolating_4_8bit_stereo
  3271 000017A8 E398                    	jecxz	lff11s_3
  3272                                  	
  3273 000017AA 4D                      	dec	ebp
  3274 000017AB 74D2                    	jz	short lff11s_9
  3275                                  
  3276 000017AD 66AD                    	lodsw
  3277 000017AF 66BA8080                	mov	dx, 8080h
  3278 000017B3 49                      	dec	ecx
  3279 000017B4 7403                    	jz	short lff11s_2_4
  3280 000017B6 668B16                  	mov	dx, [esi]
  3281                                  lff11s_2_4:
  3282 000017B9 E822060000              	call	interpolating_4_8bit_stereo
  3283 000017BE E382                    	jecxz	lff11s_3
  3284 000017C0 EBC2                    	jmp	short lff11s_1
  3285                                  
  3286                                  load_11khz_mono_16_bit:
  3287                                  	; 18/11/2023
  3288 000017C2 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3289                                  					; last of the file?
  3290 000017C9 7402                    	jz	short lff11m2_0		; no
  3291 000017CB F9                      	stc
  3292 000017CC C3                      	retn
  3293                                  
  3294                                  lff11m2_0:
  3295 000017CD BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3296                                          ;mov	edx, [loadsize]
  3297                                  
  3298                                  	; esi = buffer address
  3299                                  	;; edx = buffer size
  3300                                  
  3301                                  	; load file into memory
  3302                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000017D2 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 000017D8 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 000017DA 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 000017E0 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 000017E5 CD40                <1>  int 40h
  3303 000017E7 724E                    	jc	short lff11m2_7 ; error !
  3304                                  
  3305                                  	;mov	edi, audio_buffer
  3306                                  	; 29/05/2024
  3307 000017E9 8B3D[AE280000]          	mov	edi, [audio_buffer]
  3308                                  	
  3309 000017EF D1E8                    	shr	eax, 1
  3310 000017F1 7505                    	jnz	short lff11m2_8
  3311 000017F3 E9A3F2FFFF              	jmp	lff11_eof
  3312                                  
  3313                                  lff11m2_8:
  3314 000017F8 89C1                    	mov	ecx, eax	; word count
  3315                                  lff11m2_9:
  3316 000017FA BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3317                                  lff11m2_1:
  3318                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3319 000017FF 66AD                    	lodsw
  3320 00001801 31D2                    	xor	edx, edx
  3321 00001803 49                      	dec	ecx
  3322 00001804 7403                    	jz	short lff11m2_2_1
  3323 00001806 668B16                  	mov	dx, [esi]
  3324                                  lff11m2_2_1:	
  3325                                  	; ax = [previous_val]
  3326                                  	; dx = [next_val]
  3327 00001809 E83F060000              	call	interpolating_5_16bit_mono
  3328 0000180E E363                    	jecxz	lff11m2_3
  3329                                  lff11m2_2_2:
  3330 00001810 66AD                    	lodsw
  3331 00001812 31D2                    	xor	edx, edx
  3332 00001814 49                      	dec	ecx
  3333 00001815 7403                    	jz	short lff11m2_2_3
  3334 00001817 668B16                  	mov	dx, [esi]
  3335                                  lff11m2_2_3:
  3336 0000181A E858070000               	call	interpolating_4_16bit_mono
  3337 0000181F E352                    	jecxz	lff11m2_3
  3338                                  
  3339 00001821 4D                      	dec	ebp
  3340 00001822 74D6                    	jz	short lff11m2_9
  3341                                  
  3342 00001824 66AD                    	lodsw
  3343 00001826 31D2                    	xor	edx, edx
  3344 00001828 49                      	dec	ecx
  3345 00001829 7403                    	jz	short lff11m2_2_4
  3346 0000182B 668B16                  	mov	dx, [esi]
  3347                                  lff11m2_2_4:
  3348 0000182E E844070000               	call	interpolating_4_16bit_mono
  3349 00001833 E33E                    	jecxz	lff11m2_3
  3350 00001835 EBC8                    	jmp	short lff11m2_1
  3351                                  
  3352                                  lff11m2_7:
  3353                                  lff11s2_7:
  3354 00001837 E968F2FFFF              	jmp	lff11_5  ; error
  3355                                  
  3356                                  load_11khz_stereo_16_bit:
  3357                                  	; 18/11/2023
  3358 0000183C F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3359                                  					; last of the file?
  3360 00001843 7402                    	jz	short lff11s2_0		; no
  3361 00001845 F9                      	stc
  3362 00001846 C3                      	retn
  3363                                  
  3364                                  lff11s2_0:
  3365 00001847 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3366                                          ;mov	edx, [loadsize]
  3367                                  
  3368                                  	; esi = buffer address
  3369                                  	;; edx = buffer size
  3370                                  
  3371                                  	; load file into memory
  3372                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000184C 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001852 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001854 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000185A B803000000          <1>  mov eax, %1
    89                              <1> 
    90 0000185F CD40                <1>  int 40h
  3373 00001861 72D4                    	jc	short lff11s2_7 ; error !
  3374                                  
  3375                                  	;mov	edi, audio_buffer
  3376                                  	; 29/05/2024
  3377 00001863 8B3D[AE280000]          	mov	edi, [audio_buffer]
  3378                                  	
  3379 00001869 C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3380 0000186C 750A                    	jnz	short lff11s2_8
  3381 0000186E E928F2FFFF              	jmp	lff11_eof
  3382                                  
  3383                                  lff11m2_3:
  3384                                  lff11s2_3:
  3385 00001873 E90BF2FFFF              	jmp	lff11_3	; padfill
  3386                                  		; (put zeros in the remain words of the buffer)
  3387                                  
  3388                                  lff11s2_8:
  3389 00001878 89C1                    	mov	ecx, eax	; dword count
  3390                                  lff11s2_9:
  3391 0000187A BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3392                                  lff11s2_1:
  3393                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3394 0000187F 66AD                    	lodsw
  3395 00001881 89C3                    	mov	ebx, eax
  3396 00001883 66AD                    	lodsw
  3397 00001885 8B16                    	mov	edx, [esi]
  3398 00001887 8915[31200000]          	mov	[next_val_l], edx
  3399                                  	; 26/11/2023
  3400 0000188D C1EA10                  	shr	edx, 16
  3401                                  	;mov	[next_val_r], dx
  3402 00001890 49                      	dec	ecx
  3403 00001891 7509                    	jnz	short lff11s2_2_1
  3404 00001893 31D2                    	xor	edx, edx ; 0
  3405 00001895 668915[31200000]        	mov	[next_val_l], dx
  3406                                  	;mov	[next_val_r], dx
  3407                                  lff11s2_2_1:
  3408                                  	; bx = [previous_val_l]
  3409                                  	; ax = [previous_val_r]
  3410                                  	; [next_val_l]
  3411                                  	; dx = [next_val_r]
  3412 0000189C E807060000              	call	interpolating_5_16bit_stereo
  3413 000018A1 E3D0                    	jecxz	lff11s2_3
  3414                                  lff11s2_2_2:
  3415 000018A3 66AD                    	lodsw
  3416 000018A5 89C3                    	mov	ebx, eax
  3417 000018A7 66AD                    	lodsw
  3418 000018A9 8B16                    	mov	edx, [esi]
  3419 000018AB 668915[31200000]        	mov	[next_val_l], dx
  3420                                  	; 26/11/2023
  3421 000018B2 C1EA10                  	shr	edx, 16
  3422                                  	;mov	[next_val_r], dx
  3423 000018B5 49                      	dec	ecx
  3424 000018B6 7509                    	jnz	short lff11s2_2_3
  3425 000018B8 31D2                    	xor	edx, edx ; 0
  3426 000018BA 668915[31200000]        	mov	[next_val_l], dx
  3427                                  	;mov	[next_val_r], dx
  3428                                  lff11s2_2_3:
  3429 000018C1 E8EA060000               	call	interpolating_4_16bit_stereo
  3430 000018C6 E3AB                    	jecxz	lff11s2_3
  3431                                  	
  3432 000018C8 4D                      	dec	ebp
  3433 000018C9 74AF                    	jz	short lff11s2_9
  3434                                  
  3435 000018CB 66AD                    	lodsw
  3436 000018CD 89C3                    	mov	ebx, eax
  3437 000018CF 66AD                    	lodsw
  3438 000018D1 8B16                    	mov	edx, [esi]
  3439 000018D3 668915[31200000]        	mov	[next_val_l], dx
  3440                                  	; 26/11/2023
  3441 000018DA C1EA10                  	shr	edx, 16
  3442                                  	;mov	[next_val_r], dx
  3443 000018DD 49                      	dec	ecx
  3444 000018DE 7509                    	jnz	short lff11s2_2_4
  3445 000018E0 31D2                    	xor	edx, edx ; 0
  3446 000018E2 668915[31200000]        	mov	[next_val_l], dx
  3447                                  	;mov	[next_val_r], dx
  3448                                  lff11s2_2_4:
  3449 000018E9 E8C2060000               	call	interpolating_4_16bit_stereo
  3450 000018EE E383                    	jecxz	lff11s2_3
  3451 000018F0 EB8D                    	jmp	short lff11s2_1
  3452                                  
  3453                                  ; .....................
  3454                                  
  3455                                  load_44khz_mono_8_bit:
  3456                                  	; 18/11/2023
  3457 000018F2 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3458                                  					; last of the file?
  3459 000018F9 7402                    	jz	short lff44m_0		; no
  3460 000018FB F9                      	stc
  3461 000018FC C3                      	retn
  3462                                  
  3463                                  lff44m_0:
  3464 000018FD BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3465                                          ;mov	edx, [loadsize]
  3466                                  
  3467                                  	; esi = buffer address
  3468                                  	;; edx = buffer size
  3469                                  
  3470                                  	; load file into memory
  3471                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001902 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001908 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 0000190A 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001910 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001915 CD40                <1>  int 40h
  3472 00001917 7251                    	jc	short lff44m_7 ; error !
  3473                                  
  3474                                  	;mov	edi, audio_buffer
  3475                                  	; 29/05/2024
  3476 00001919 8B3D[AE280000]          	mov	edi, [audio_buffer]
  3477                                  	
  3478 0000191F 21C0                    	and	eax, eax
  3479 00001921 7505                    	jnz	short lff44m_8
  3480 00001923 E973F1FFFF              	jmp	lff44_eof
  3481                                  
  3482                                  lff44m_8:
  3483 00001928 89C1                    	mov	ecx, eax	; byte count
  3484                                  lff44m_9:
  3485 0000192A BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3486 0000192F C605[35200000]02        	mov	byte [faz], 2  ; 2 steps/phases
  3487                                  lff44m_1:
  3488                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3489                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3490 00001936 AC                      	lodsb
  3491 00001937 B280                    	mov	dl, 80h
  3492 00001939 49                      	dec	ecx
  3493 0000193A 7402                    	jz	short lff44m_2_1
  3494 0000193C 8A16                    	mov	dl, [esi]
  3495                                  lff44m_2_1:	
  3496                                  	; al = [previous_val]
  3497                                  	; dl = [next_val]
  3498 0000193E E828020000              	call	interpolating_2_8bit_mono
  3499 00001943 E320                    	jecxz	lff44m_3
  3500                                  lff44m_2_2:
  3501 00001945 AC                      	lodsb
  3502 00001946 2C80                    	sub	al, 80h
  3503 00001948 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3504 0000194C 66AB                    	stosw		; (L)
  3505 0000194E 66AB                    	stosw		; (R)	
  3506                                  
  3507 00001950 49                      	dec	ecx
  3508 00001951 7412                    	jz	short lff44m_3	
  3509 00001953 4D                      	dec	ebp
  3510 00001954 75EF                    	jnz	short lff44m_2_2
  3511                                  	
  3512 00001956 FE0D[35200000]          	dec	byte [faz]
  3513 0000195C 74CC                    	jz	short lff44m_9 
  3514 0000195E BD0B000000              	mov	ebp, 11
  3515 00001963 EBD1                    	jmp	short lff44m_1
  3516                                  
  3517                                  lff44m_3:
  3518                                  lff44s_3:
  3519 00001965 E919F1FFFF              	jmp	lff44_3	; padfill
  3520                                  		; (put zeros in the remain words of the buffer)
  3521                                  lff44m_7:
  3522                                  lff44s_7:
  3523 0000196A E935F1FFFF              	jmp	lff44_5  ; error
  3524                                  
  3525                                  load_44khz_stereo_8_bit:
  3526                                  	; 16/11/2023
  3527 0000196F F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3528                                  					; last of the file?
  3529 00001976 7402                    	jz	short lff44s_0		; no
  3530 00001978 F9                      	stc
  3531 00001979 C3                      	retn
  3532                                  
  3533                                  lff44s_0:
  3534 0000197A BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3535                                          ;mov	edx, [loadsize]
  3536                                  
  3537                                  	; esi = buffer address
  3538                                  	;; edx = buffer size
  3539                                  
  3540                                  	; load file into memory
  3541                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 0000197F 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001985 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001987 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 0000198D B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001992 CD40                <1>  int 40h
  3542 00001994 72D4                    	jc	short lff44s_7 ; error !
  3543                                  
  3544                                  	;mov	edi, audio_buffer
  3545                                  	; 29/05/2024
  3546 00001996 8B3D[AE280000]          	mov	edi, [audio_buffer]
  3547                                  	
  3548 0000199C D1E8                    	shr	eax, 1
  3549 0000199E 7505                    	jnz	short lff44s_8
  3550 000019A0 E9F6F0FFFF              	jmp	lff44_eof
  3551                                  
  3552                                  lff44s_8:
  3553 000019A5 89C1                    	mov	ecx, eax	; word count
  3554                                  lff44s_9:
  3555 000019A7 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3556 000019AC C605[35200000]02        	mov	byte [faz], 2  ; 2 steps/phase
  3557                                  lff44s_1:
  3558                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3559                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3560 000019B3 66AD                    	lodsw
  3561 000019B5 66BA8080                	mov	dx, 8080h
  3562 000019B9 49                      	dec	ecx
  3563 000019BA 7403                    	jz	short lff44s_2_1 
  3564 000019BC 668B16                  	mov	dx, [esi]
  3565                                  lff44s_2_1:	
  3566                                  	; al = [previous_val_l]
  3567                                  	; ah = [previous_val_r]
  3568                                  	; dl = [next_val_l]
  3569                                  	; dh = [next_val_r]	
  3570 000019BF E8C4010000              	call	interpolating_2_8bit_stereo
  3571 000019C4 E39F                    	jecxz	lff44s_3
  3572                                  lff44s_2_2:
  3573 000019C6 AC                      	lodsb
  3574 000019C7 2C80                    	sub	al, 80h
  3575 000019C9 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3576 000019CD 66AB                    	stosw		; (L)
  3577 000019CF AC                      	lodsb
  3578 000019D0 2C80                    	sub	al, 80h
  3579 000019D2 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3580 000019D6 66AB                    	stosw		; (R)
  3581                                  
  3582 000019D8 49                      	dec	ecx
  3583 000019D9 748A                    	jz	short lff44s_3	
  3584 000019DB 4D                      	dec	ebp
  3585 000019DC 75E8                    	jnz	short lff44s_2_2
  3586                                  	
  3587 000019DE FE0D[35200000]          	dec	byte [faz]
  3588 000019E4 74C1                    	jz	short lff44s_9 
  3589 000019E6 BD0B000000              	mov	ebp, 11
  3590 000019EB EBC6                    	jmp	short lff44s_1
  3591                                  
  3592                                  load_44khz_mono_16_bit:
  3593                                  	; 18/11/2023
  3594 000019ED F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3595                                  					; last of the file?
  3596 000019F4 7402                    	jz	short lff44m2_0		; no
  3597 000019F6 F9                      	stc
  3598 000019F7 C3                      	retn
  3599                                  
  3600                                  lff44m2_0:
  3601 000019F8 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3602                                          ;mov	edx, [loadsize]
  3603                                  
  3604                                  	; esi = buffer address
  3605                                  	;; edx = buffer size
  3606                                  
  3607                                  	; load file into memory
  3608                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 000019FD 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001A03 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001A05 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001A0B B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001A10 CD40                <1>  int 40h
  3609 00001A12 724E                    	jc	short lff44m2_7 ; error !
  3610                                  
  3611                                  	;mov	edi, audio_buffer
  3612                                  	; 29/05/2024
  3613 00001A14 8B3D[AE280000]          	mov	edi, [audio_buffer]
  3614                                  	
  3615 00001A1A D1E8                    	shr	eax, 1
  3616 00001A1C 7505                    	jnz	short lff44m2_8
  3617 00001A1E E978F0FFFF              	jmp	lff44_eof
  3618                                  
  3619                                  lff44m2_8:
  3620 00001A23 89C1                    	mov	ecx, eax	; word count
  3621                                  lff44m2_9:
  3622 00001A25 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3623 00001A2A C605[35200000]02        	mov	byte [faz], 2  ; 2 steps/phases
  3624                                  lff44m2_1:
  3625                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3626                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3627 00001A31 66AD                    	lodsw
  3628 00001A33 31D2                    	xor	edx, edx
  3629 00001A35 49                      	dec	ecx
  3630 00001A36 7403                    	jz	short lff44m2_2_1
  3631 00001A38 668B16                  	mov	dx, [esi]
  3632                                  lff44m2_2_1:	
  3633                                  	; ax = [previous_val]
  3634                                  	; dx = [next_val]
  3635 00001A3B E80C020000              	call	interpolating_2_16bit_mono
  3636 00001A40 E31B                    	jecxz	lff44m2_3
  3637                                  lff44m2_2_2:
  3638 00001A42 66AD                    	lodsw
  3639 00001A44 66AB                    	stosw		; (L)eft Channel
  3640 00001A46 66AB                    	stosw		; (R)ight Channel
  3641                                  
  3642 00001A48 49                      	dec	ecx
  3643 00001A49 7412                    	jz	short lff44m2_3	
  3644 00001A4B 4D                      	dec	ebp
  3645 00001A4C 75F4                    	jnz	short lff44m2_2_2
  3646                                  	
  3647 00001A4E FE0D[35200000]          	dec	byte [faz]
  3648 00001A54 74CF                    	jz	short lff44m2_9 
  3649 00001A56 BD0B000000              	mov	ebp, 11
  3650 00001A5B EBD4                    	jmp	short lff44m2_1
  3651                                  
  3652                                  lff44m2_3:
  3653                                  lff44s2_3:
  3654 00001A5D E921F0FFFF              	jmp	lff44_3	; padfill
  3655                                  		; (put zeros in the remain words of the buffer)
  3656                                  lff44m2_7:
  3657                                  lff44s2_7:
  3658 00001A62 E93DF0FFFF              	jmp	lff44_5  ; error
  3659                                  
  3660                                  load_44khz_stereo_16_bit:
  3661                                  	; 18/11/2023
  3662 00001A67 F605[30280000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3663                                  					; last of the file?
  3664 00001A6E 7402                    	jz	short lff44s2_0		; no
  3665 00001A70 F9                      	stc
  3666 00001A71 C3                      	retn
  3667                                  
  3668                                  lff44s2_0:
  3669 00001A72 BE[00400200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3670                                          ;mov	edx, [loadsize]
  3671                                  
  3672                                  	; esi = buffer address
  3673                                  	;; edx = buffer size
  3674                                  
  3675                                  	; load file into memory
  3676                                  	sys 	_read, [FileHandle], esi, [loadsize]
    75                              <1> 
    76                              <1> 
    77                              <1> 
    78                              <1> 
    79                              <1>  %if %0 >= 2
    80 00001A77 8B1D[03250000]      <1>  mov ebx, %2
    81                              <1>  %if %0 >= 3
    82 00001A7D 89F1                <1>  mov ecx, %3
    83                              <1>  %if %0 = 4
    84 00001A7F 8B15[70030000]      <1>  mov edx, %4
    85                              <1>  %endif
    86                              <1>  %endif
    87                              <1>  %endif
    88 00001A85 B803000000          <1>  mov eax, %1
    89                              <1> 
    90 00001A8A CD40                <1>  int 40h
  3677 00001A8C 72D4                    	jc	short lff44s2_7 ; error !
  3678                                  
  3679                                  	;mov	edi, audio_buffer
  3680                                  	; 29/05/2024
  3681 00001A8E 8B3D[AE280000]          	mov	edi, [audio_buffer]
  3682                                  	
  3683 00001A94 C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3684 00001A97 7505                    	jnz	short lff44s2_8
  3685 00001A99 E9FDEFFFFF              	jmp	lff44_eof
  3686                                  
  3687                                  lff44s2_8:
  3688 00001A9E 89C1                    	mov	ecx, eax	; dword count
  3689                                  lff44s2_9:
  3690 00001AA0 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3691 00001AA5 C605[35200000]02        	mov	byte [faz], 2  ; 2 steps/phase
  3692                                  lff44s2_1:
  3693                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3694                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3695 00001AAC 66AD                    	lodsw
  3696 00001AAE 89C3                    	mov	ebx, eax
  3697 00001AB0 66AD                    	lodsw
  3698                                  	;mov	dx, [esi]
  3699                                  	;mov	[next_val_l], dx
  3700                                  	;mov	dx, [esi+2]
  3701                                  	; 26/11/2023
  3702 00001AB2 8B16                    	mov	edx, [esi]
  3703 00001AB4 668915[31200000]        	mov	[next_val_l], dx
  3704 00001ABB C1EA10                  	shr	edx, 16
  3705 00001ABE 49                      	dec	ecx
  3706 00001ABF 7509                    	jnz	short lff44s2_2_1
  3707 00001AC1 31D2                    	xor	edx, edx ; 0
  3708 00001AC3 668915[31200000]        	mov	[next_val_l], dx
  3709                                  lff44s2_2_1:
  3710                                  	; bx = [previous_val_l]
  3711                                  	; ax = [previous_val_r]
  3712                                  	; [next_val_l]
  3713                                  	; dx = [next_val_r]
  3714 00001ACA E895010000              	call	interpolating_2_16bit_stereo
  3715 00001ACF E38C                    	jecxz	lff44s2_3
  3716                                  lff44s2_2_2:
  3717                                  	;movsw		; (L)eft Channel
  3718                                  	;movsw		; (R)ight Channel
  3719 00001AD1 A5                      	movsd
  3720                                  
  3721 00001AD2 49                      	dec	ecx
  3722 00001AD3 7488                    	jz	short lff44s2_3	
  3723 00001AD5 4D                      	dec	ebp
  3724 00001AD6 75F9                    	jnz	short lff44s2_2_2
  3725                                  	
  3726 00001AD8 FE0D[35200000]          	dec	byte [faz]
  3727 00001ADE 74C0                    	jz	short lff44s2_9 
  3728 00001AE0 BD0B000000              	mov	ebp, 11
  3729 00001AE5 EBC5                    	jmp	short lff44s2_1
  3730                                  
  3731                                  ; .....................
  3732                                  
  3733                                  interpolating_3_8bit_mono:
  3734                                  	; 16/11/2023
  3735                                  	; al = [previous_val]
  3736                                  	; dl = [next_val]
  3737                                  	; original-interpolated-interpolated
  3738 00001AE7 88C3                    	mov	bl, al
  3739 00001AE9 2C80                    	sub	al, 80h
  3740 00001AEB 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3741 00001AEF 66AB                    	stosw		; original sample (L)
  3742 00001AF1 66AB                    	stosw		; original sample (R)
  3743 00001AF3 88D8                    	mov	al, bl
  3744 00001AF5 00D0                    	add	al, dl	
  3745 00001AF7 D0D8                    	rcr	al, 1
  3746 00001AF9 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3747 00001AFB 00D8                    	add	al, bl
  3748 00001AFD D0D8                    	rcr	al, 1
  3749 00001AFF 2C80                    	sub	al, 80h
  3750 00001B01 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3751 00001B05 66AB                    	stosw		; interpolated sample 1 (L)
  3752 00001B07 66AB                    	stosw		; interpolated sample 1 (R)
  3753 00001B09 88F8                    	mov	al, bh
  3754 00001B0B 00D0                    	add	al, dl	; [next_val]
  3755 00001B0D D0D8                    	rcr	al, 1
  3756 00001B0F 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3757 00001B13 66AB                    	stosw		; interpolated sample 2 (L)
  3758 00001B15 66AB                    	stosw		; interpolated sample 2 (R)
  3759 00001B17 C3                      	retn
  3760                                  
  3761                                  interpolating_3_8bit_stereo:
  3762                                  	; 16/11/2023
  3763                                  	; al = [previous_val_l]
  3764                                  	; ah = [previous_val_r]
  3765                                  	; dl = [next_val_l]
  3766                                  	; dh = [next_val_r]	
  3767                                  	; original-interpolated-interpolated
  3768 00001B18 89C3                    	mov	ebx, eax
  3769 00001B1A 2C80                    	sub	al, 80h
  3770 00001B1C 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3771 00001B20 66AB                    	stosw		; original sample (L)
  3772 00001B22 88F8                    	mov	al, bh
  3773 00001B24 2C80                    	sub	al, 80h
  3774 00001B26 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3775 00001B2A 66AB                    	stosw		; original sample (R)
  3776 00001B2C 88D8                    	mov	al, bl
  3777 00001B2E 00D0                    	add	al, dl	; [next_val_l]	
  3778 00001B30 D0D8                    	rcr	al, 1
  3779 00001B32 50                      	push	eax ; *	; al = interpolated middle (L) (temporary)
  3780 00001B33 00D8                    	add	al, bl	; [previous_val_l]
  3781 00001B35 D0D8                    	rcr	al, 1
  3782 00001B37 2C80                    	sub	al, 80h
  3783 00001B39 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3784 00001B3D 66AB                    	stosw		; interpolated sample 1 (L)
  3785 00001B3F 88F8                    	mov	al, bh
  3786 00001B41 00F0                    	add	al, dh	; [next_val_r]
  3787 00001B43 D0D8                    	rcr	al, 1
  3788 00001B45 50                      	push	eax ; ** ; al = interpolated middle (R) (temporary)
  3789 00001B46 00F8                    	add	al, bh	; [previous_val_r]
  3790 00001B48 D0D8                    	rcr	al, 1
  3791 00001B4A 2C80                    	sub	al, 80h
  3792 00001B4C 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3793 00001B50 66AB                    	stosw		; interpolated sample 1 (R)
  3794 00001B52 5B                      	pop	ebx ; **
  3795 00001B53 58                      	pop	eax ; *
  3796 00001B54 00D0                    	add	al, dl	; [next_val_l]
  3797 00001B56 D0D8                    	rcr	al, 1
  3798 00001B58 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3799 00001B5C 66AB                    	stosw		; interpolated sample 2 (L)
  3800 00001B5E 88D8                    	mov	al, bl
  3801 00001B60 00F0                    	add	al, dh	; [next_val_r]
  3802 00001B62 D0D8                    	rcr	al, 1
  3803 00001B64 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3804 00001B68 66AB                    	stosw		; interpolated sample 2 (R)
  3805 00001B6A C3                      	retn
  3806                                  
  3807                                  interpolating_2_8bit_mono:
  3808                                  	; 16/11/2023
  3809                                  	; al = [previous_val]
  3810                                  	; dl = [next_val]
  3811                                  	; original-interpolated
  3812 00001B6B 88C3                    	mov	bl, al
  3813 00001B6D 2C80                    	sub	al, 80h
  3814 00001B6F 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3815 00001B73 66AB                    	stosw		; original sample (L)
  3816 00001B75 66AB                    	stosw		; original sample (R)
  3817 00001B77 88D8                    	mov	al, bl
  3818 00001B79 00D0                    	add	al, dl	
  3819 00001B7B D0D8                    	rcr	al, 1
  3820 00001B7D 2C80                    	sub	al, 80h
  3821 00001B7F 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3822 00001B83 66AB                    	stosw		; interpolated sample (L)
  3823 00001B85 66AB                    	stosw		; interpolated sample (R)
  3824 00001B87 C3                      	retn
  3825                                  
  3826                                  interpolating_2_8bit_stereo:
  3827                                  	; 16/11/2023
  3828                                  	; al = [previous_val_l]
  3829                                  	; ah = [previous_val_r]
  3830                                  	; dl = [next_val_l]
  3831                                  	; dh = [next_val_r]	
  3832                                  	; original-interpolated
  3833 00001B88 89C3                    	mov	ebx, eax
  3834 00001B8A 2C80                    	sub	al, 80h
  3835 00001B8C 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3836 00001B90 66AB                    	stosw		; original sample (L)
  3837 00001B92 88F8                    	mov	al, bh
  3838 00001B94 2C80                    	sub	al, 80h
  3839 00001B96 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3840 00001B9A 66AB                    	stosw		; original sample (R)
  3841 00001B9C 88D8                    	mov	al, bl	; [previous_val_l]
  3842 00001B9E 00D0                    	add	al, dl	; [next_val_l]	
  3843 00001BA0 D0D8                    	rcr	al, 1
  3844 00001BA2 2C80                    	sub	al, 80h
  3845 00001BA4 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3846 00001BA8 66AB                    	stosw		; interpolated sample (L)
  3847 00001BAA 88F8                    	mov	al, bh
  3848 00001BAC 00F0                    	add	al, dh	; [next_val_r]
  3849 00001BAE D0D8                    	rcr	al, 1
  3850 00001BB0 2C80                    	sub	al, 80h
  3851 00001BB2 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3852 00001BB6 66AB                    	stosw		; interpolated sample (R)
  3853 00001BB8 C3                      	retn
  3854                                  
  3855                                  interpolating_3_16bit_mono:
  3856                                  	; 16/11/2023
  3857                                  	; ax = [previous_val]
  3858                                  	; dx = [next_val]
  3859                                  	; original-interpolated-interpolated
  3860                                  
  3861 00001BB9 66AB                    	stosw		; original sample (L)
  3862 00001BBB 66AB                    	stosw		; original sample (R)
  3863 00001BBD 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3864 00001BC0 50                      	push	eax ; *	; [previous_val]
  3865 00001BC1 80C680                  	add	dh, 80h
  3866 00001BC4 6601D0                  	add	ax, dx
  3867 00001BC7 66D1D8                  	rcr	ax, 1
  3868 00001BCA 5B                      	pop	ebx ; *		
  3869 00001BCB 93                      	xchg	ebx, eax ; bx  = interpolated middle (temporary)
  3870 00001BCC 6601D8                  	add	ax, bx	; [previous_val] + interpolated middle
  3871 00001BCF 66D1D8                  	rcr	ax, 1
  3872 00001BD2 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3873 00001BD5 66AB                    	stosw 		; interpolated sample 1 (L)
  3874 00001BD7 66AB                    	stosw		; interpolated sample 1 (R)
  3875 00001BD9 89D8                    	mov	eax, ebx
  3876 00001BDB 6601D0                  	add	ax, dx	 ;interpolated middle + [next_val]
  3877 00001BDE 66D1D8                  	rcr	ax, 1
  3878 00001BE1 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3879 00001BE4 66AB                    	stosw		; interpolated sample 2 (L)
  3880 00001BE6 66AB                    	stosw		; interpolated sample 2 (R)
  3881 00001BE8 C3                      	retn
  3882                                  
  3883                                  interpolating_3_16bit_stereo:
  3884                                  	; 16/11/2023
  3885                                  	; bx = [previous_val_l]
  3886                                  	; ax = [previous_val_r]
  3887                                  	; [next_val_l]
  3888                                  	; dx = [next_val_r]
  3889                                  	; original-interpolated-interpolated
  3890                                  
  3891 00001BE9 93                      	xchg	eax, ebx
  3892 00001BEA 66AB                    	stosw		; original sample (L)
  3893 00001BEC 93                      	xchg	eax, ebx
  3894 00001BED 66AB                    	stosw		; original sample (R)
  3895 00001BEF 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3896 00001BF2 50                      	push	eax ; *	; [previous_val_r]
  3897 00001BF3 80C780                  	add	bh, 80h
  3898 00001BF6 8005[32200000]80        	add	byte [next_val_l+1], 80h
  3899 00001BFD 66A1[31200000]          	mov	ax, [next_val_l]
  3900 00001C03 6601D8                  	add	ax, bx	; [previous_val_l]
  3901 00001C06 66D1D8                  	rcr	ax, 1
  3902 00001C09 93                      	xchg	eax, ebx ; ax = [previous_val_l]	
  3903 00001C0A 6601D8                  	add	ax, bx	; bx = interpolated middle (L)
  3904 00001C0D 66D1D8                  	rcr	ax, 1
  3905 00001C10 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3906 00001C13 66AB                    	stosw 		; interpolated sample 1 (L)
  3907 00001C15 58                      	pop	eax  ; *
  3908 00001C16 80C680                  	add	dh, 80h ; convert sound level 0 to 65535 format
  3909 00001C19 52                      	push	edx  ; * ; [next_val_r]
  3910 00001C1A 92                      	xchg	eax, edx
  3911 00001C1B 6601D0                  	add	ax, dx	; [next_val_r] + [previous_val_r]
  3912 00001C1E 66D1D8                  	rcr	ax, 1	; / 2
  3913 00001C21 50                      	push	eax ; ** ; interpolated middle (R)
  3914 00001C22 6601D0                  	add	ax, dx	; + [previous_val_r]
  3915 00001C25 66D1D8                  	rcr	ax, 1
  3916 00001C28 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3917 00001C2B 66AB                    	stosw 		; interpolated sample 1 (R)
  3918 00001C2D 66A1[31200000]          	mov	ax, [next_val_l]
  3919 00001C33 6601D8                  	add	ax, bx	; + interpolated middle (L)
  3920 00001C36 66D1D8                  	rcr	ax, 1
  3921 00001C39 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3922 00001C3C 66AB                    	stosw 		; interpolated sample 2 (L)
  3923 00001C3E 58                      	pop	eax ; **
  3924 00001C3F 5A                      	pop	edx ; *	
  3925 00001C40 6601D0                  	add	ax, dx	; interpolated middle + [next_val_r]
  3926 00001C43 66D1D8                  	rcr	ax, 1	; / 2
  3927 00001C46 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3928 00001C49 66AB                    	stosw 		; interpolated sample 2 (L)
  3929 00001C4B C3                      	retn
  3930                                  
  3931                                  interpolating_2_16bit_mono:
  3932                                  	; 16/11/2023
  3933                                  	; ax = [previous_val]
  3934                                  	; dx = [next_val]
  3935                                  	; original-interpolated
  3936                                  
  3937 00001C4C 66AB                    	stosw		; original sample (L)
  3938 00001C4E 66AB                    	stosw		; original sample (R)
  3939 00001C50 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3940 00001C53 80C680                  	add	dh, 80h
  3941 00001C56 6601D0                  	add	ax, dx
  3942 00001C59 66D1D8                  	rcr	ax, 1
  3943 00001C5C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3944 00001C5F 66AB                    	stosw		; interpolated sample (L)
  3945 00001C61 66AB                    	stosw		; interpolated sample (R)
  3946 00001C63 C3                      	retn
  3947                                  
  3948                                  interpolating_2_16bit_stereo:
  3949                                  	; 16/11/2023
  3950                                  	; bx = [previous_val_l]
  3951                                  	; ax = [previous_val_r]
  3952                                  	; [next_val_l]
  3953                                  	; dx = [next_val_r]
  3954                                  	; original-interpolated
  3955                                  
  3956 00001C64 93                      	xchg	eax, ebx
  3957 00001C65 66AB                    	stosw		; original sample (L)
  3958 00001C67 93                      	xchg	eax, ebx
  3959 00001C68 66AB                    	stosw		; original sample (R)
  3960 00001C6A 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3961 00001C6D 80C680                  	add	dh, 80h
  3962 00001C70 6601D0                  	add	ax, dx	; [previous_val_r] + [next_val_r]
  3963 00001C73 66D1D8                  	rcr	ax, 1	; / 2
  3964 00001C76 50                      	push	eax ; *	; interpolated sample (R)
  3965 00001C77 66A1[31200000]          	mov	ax, [next_val_l]
  3966 00001C7D 80C480                  	add	ah, 80h
  3967 00001C80 80C780                  	add	bh, 80h
  3968 00001C83 6601D8                  	add	ax, bx	; [next_val_l] + [previous_val_l]
  3969 00001C86 66D1D8                  	rcr	ax, 1	; / 2		
  3970 00001C89 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3971 00001C8C 66AB                    	stosw 		; interpolated sample (L)
  3972 00001C8E 58                      	pop	eax ; *	
  3973 00001C8F 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3974 00001C92 66AB                    	stosw 		; interpolated sample (R)
  3975 00001C94 C3                      	retn
  3976                                  
  3977                                  interpolating_5_8bit_mono:
  3978                                  	; 17/11/2023
  3979                                  	; al = [previous_val]
  3980                                  	; dl = [next_val]
  3981                                  	; original-interpltd-interpltd-interpltd-interpltd
  3982 00001C95 88C3                    	mov	bl, al
  3983 00001C97 2C80                    	sub	al, 80h
  3984 00001C99 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3985 00001C9D 66AB                    	stosw		; original sample (L)
  3986 00001C9F 66AB                    	stosw		; original sample (R)
  3987 00001CA1 88D8                    	mov	al, bl
  3988 00001CA3 00D0                    	add	al, dl	
  3989 00001CA5 D0D8                    	rcr	al, 1
  3990 00001CA7 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3991 00001CA9 00D8                    	add	al, bl  ; [previous_val]
  3992 00001CAB D0D8                    	rcr	al, 1 	
  3993 00001CAD 88C6                    	mov	dh, al	; interpolated 1st quarter (temporary)
  3994 00001CAF 00D8                    	add	al, bl
  3995 00001CB1 D0D8                    	rcr	al, 1
  3996 00001CB3 2C80                    	sub	al, 80h
  3997 00001CB5 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3998 00001CB9 66AB                    	stosw		; interpolated sample 1 (L)
  3999 00001CBB 66AB                    	stosw		; interpolated sample 1 (R)
  4000 00001CBD 88F8                    	mov	al, bh
  4001 00001CBF 00F0                    	add	al, dh
  4002 00001CC1 D0D8                    	rcr	al, 1
  4003 00001CC3 2C80                    	sub	al, 80h
  4004 00001CC5 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4005 00001CC9 66AB                    	stosw		; interpolated sample 2 (L)
  4006 00001CCB 66AB                    	stosw		; interpolated sample 2 (R)
  4007 00001CCD 88F8                    	mov	al, bh
  4008 00001CCF 00D0                    	add	al, dl	; [next_val]
  4009 00001CD1 D0D8                    	rcr	al, 1
  4010 00001CD3 88C6                    	mov	dh, al	; interpolated 3rd quarter (temporary)
  4011 00001CD5 00F8                    	add	al, bh
  4012 00001CD7 D0D8                    	rcr	al, 1
  4013 00001CD9 2C80                    	sub	al, 80h
  4014 00001CDB 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4015 00001CDF 66AB                    	stosw		; interpolated sample 3 (L)
  4016 00001CE1 66AB                    	stosw		; interpolated sample 3 (R)
  4017 00001CE3 88F0                    	mov	al, dh
  4018 00001CE5 00D0                    	add	al, dl
  4019 00001CE7 D0D8                    	rcr	al, 1
  4020 00001CE9 2C80                    	sub	al, 80h
  4021 00001CEB 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4022 00001CEF 66AB                    	stosw		; interpolated sample 4 (L)
  4023 00001CF1 66AB                    	stosw		; interpolated sample 4 (R)
  4024 00001CF3 C3                      	retn
  4025                                  
  4026                                  interpolating_5_8bit_stereo:
  4027                                  	; 17/11/2023
  4028                                  	; al = [previous_val_l]
  4029                                  	; ah = [previous_val_r]
  4030                                  	; dl = [next_val_l]
  4031                                  	; dh = [next_val_r]	
  4032                                  	; original-interpltd-interpltd-interpltd-interpltd
  4033 00001CF4 89C3                    	mov	ebx, eax
  4034 00001CF6 2C80                    	sub	al, 80h
  4035 00001CF8 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4036 00001CFC 66AB                    	stosw		; original sample (L)
  4037 00001CFE 88F8                    	mov	al, bh
  4038 00001D00 2C80                    	sub	al, 80h
  4039 00001D02 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4040 00001D06 66AB                    	stosw		; original sample (R)
  4041 00001D08 52                      	push	edx ; *
  4042 00001D09 88D8                    	mov	al, bl
  4043 00001D0B 00D0                    	add	al, dl	; [next_val_l]
  4044 00001D0D D0D8                    	rcr	al, 1
  4045 00001D0F 50                      	push	eax ; **	; al = interpolated middle (L) (temporary)
  4046 00001D10 00D8                    	add	al, bl	; [previous_val_l]
  4047 00001D12 D0D8                    	rcr	al, 1
  4048 00001D14 86D8                    	xchg	al, bl	
  4049 00001D16 00D8                    	add	al, bl	; bl = interpolated 1st quarter (L) (temp)
  4050 00001D18 D0D8                    	rcr	al, 1
  4051 00001D1A 2C80                    	sub	al, 80h
  4052 00001D1C 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4053 00001D20 66AB                    	stosw		; interpolated sample 1 (L)
  4054 00001D22 88F8                    	mov	al, bh
  4055 00001D24 00F0                    	add	al, dh	; [next_val_r]
  4056 00001D26 D0D8                    	rcr	al, 1
  4057 00001D28 50                      	push	eax ; *** ; al = interpolated middle (R) (temporary)
  4058 00001D29 00F8                    	add	al, bh	; [previous_val_r]
  4059 00001D2B D0D8                    	rcr	al, 1
  4060 00001D2D 86F8                    	xchg	al, bh	
  4061 00001D2F 00F8                    	add	al, bh	; bh = interpolated 1st quarter (R) (temp)
  4062 00001D31 D0D8                    	rcr	al, 1
  4063 00001D33 2C80                    	sub	al, 80h
  4064 00001D35 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4065 00001D39 66AB                    	stosw		; interpolated sample 1 (R)
  4066 00001D3B 5A                      	pop	edx ; ***
  4067 00001D3C 58                      	pop	eax ; **	; al = interpolated middle (L) (temporary)
  4068 00001D3D 86D8                    	xchg	al, bl	; al = interpolated 1st quarter (L) (temp)
  4069 00001D3F 00D8                    	add	al, bl	; bl = interpolated middle (L) (temporary)
  4070 00001D41 D0D8                    	rcr	al, 1
  4071 00001D43 2C80                    	sub	al, 80h
  4072 00001D45 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4073 00001D49 66AB                    	stosw		; interpolated sample 2 (L)	
  4074 00001D4B 88D0                    	mov	al, dl 	; interpolated middle (R) (temporary)
  4075 00001D4D 86F8                    	xchg	al, bh	; al = interpolated 1st quarter (R) (temp)
  4076 00001D4F 00F8                    	add	al, bh	; bh = interpolated middle (R) (temporary)
  4077 00001D51 D0D8                    	rcr	al, 1
  4078 00001D53 2C80                    	sub	al, 80h
  4079 00001D55 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4080 00001D59 66AB                    	stosw		; interpolated sample 2 (R)
  4081 00001D5B 5A                      	pop	edx ; *
  4082 00001D5C 88D8                    	mov	al, bl	; interpolated middle (L) (temporary)
  4083 00001D5E 00D0                    	add	al, dl	; [next_val_l]
  4084 00001D60 D0D8                    	rcr	al, 1
  4085 00001D62 86D8                    	xchg	al, bl	; al = interpolated middle (R) (temporary)	
  4086 00001D64 00D8                    	add	al, bl	; bl = interpolated 3rd quarter (L) (temp) 
  4087 00001D66 D0D8                    	rcr	al, 1
  4088 00001D68 2C80                    	sub	al, 80h
  4089 00001D6A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4090 00001D6E 66AB                    	stosw		; interpolated sample 3 (L)
  4091 00001D70 88F8                    	mov	al, bh	
  4092 00001D72 00F0                    	add	al, dh	; interpolated middle (R) + [next_val_r]
  4093 00001D74 D0D8                    	rcr	al, 1
  4094 00001D76 86F8                    	xchg	al, bh	; al = interpolated middle (R)
  4095 00001D78 00F8                    	add	al, bh	; bh = interpolated 3rd quarter (R) (temp)
  4096 00001D7A D0D8                    	rcr	al, 1
  4097 00001D7C 2C80                    	sub	al, 80h
  4098 00001D7E 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4099 00001D82 66AB                    	stosw		; interpolated sample 3 (R)
  4100 00001D84 88D8                    	mov	al, bl
  4101 00001D86 00D0                    	add	al, dl	; [next_val_l]
  4102 00001D88 D0D8                    	rcr	al, 1
  4103 00001D8A 2C80                    	sub	al, 80h
  4104 00001D8C 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4105 00001D90 66AB                    	stosw		; interpolated sample 4 (L)
  4106 00001D92 88F8                    	mov	al, bh
  4107 00001D94 00F0                    	add	al, dh	; [next_val_r]
  4108 00001D96 D0D8                    	rcr	al, 1
  4109 00001D98 2C80                    	sub	al, 80h
  4110 00001D9A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4111 00001D9E 66AB                    	stosw		; interpolated sample 4 (R)
  4112 00001DA0 C3                      	retn
  4113                                  
  4114                                  interpolating_4_8bit_mono:
  4115                                  	; 17/11/2023
  4116                                  	; al = [previous_val]
  4117                                  	; dl = [next_val]
  4118                                  	; original-interpolated-interpolated-interpolated
  4119 00001DA1 88C3                    	mov	bl, al
  4120 00001DA3 2C80                    	sub	al, 80h
  4121 00001DA5 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4122 00001DA9 66AB                    	stosw		; original sample (L)
  4123 00001DAB 66AB                    	stosw		; original sample (R)
  4124 00001DAD 88D8                    	mov	al, bl
  4125 00001DAF 00D0                    	add	al, dl	
  4126 00001DB1 D0D8                    	rcr	al, 1
  4127 00001DB3 86D8                    	xchg	al, bl  ; al = [previous_val]
  4128 00001DB5 00D8                    	add	al, bl	; bl = interpolated middle (sample 2)
  4129 00001DB7 D0D8                    	rcr	al, 1 	
  4130 00001DB9 2C80                    	sub	al, 80h
  4131 00001DBB 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4132 00001DBF 66AB                    	stosw		; interpolated sample 1 (L)
  4133 00001DC1 66AB                    	stosw		; interpolated sample 1 (R)
  4134 00001DC3 88D8                    	mov	al, bl	; interpolated middle (sample 2)
  4135 00001DC5 2C80                    	sub	al, 80h
  4136 00001DC7 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4137 00001DCB 66AB                    	stosw		; interpolated sample 2 (L)
  4138 00001DCD 66AB                    	stosw		; interpolated sample 2 (R)
  4139 00001DCF 88D8                    	mov	al, bl
  4140 00001DD1 00D0                    	add	al, dl	; [next_val]
  4141 00001DD3 D0D8                    	rcr	al, 1
  4142 00001DD5 2C80                    	sub	al, 80h
  4143 00001DD7 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4144 00001DDB 66AB                    	stosw		; interpolated sample 3 (L)
  4145 00001DDD 66AB                    	stosw		; interpolated sample 3 (R)
  4146 00001DDF C3                      	retn
  4147                                  
  4148                                  interpolating_4_8bit_stereo:
  4149                                  	; 17/11/2023
  4150                                  	; al = [previous_val_l]
  4151                                  	; ah = [previous_val_r]
  4152                                  	; dl = [next_val_l]
  4153                                  	; dh = [next_val_r]	
  4154                                  	; original-interpolated-interpolated-interpolated
  4155 00001DE0 89C3                    	mov	ebx, eax
  4156 00001DE2 2C80                    	sub	al, 80h
  4157 00001DE4 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4158 00001DE8 66AB                    	stosw		; original sample (L)
  4159 00001DEA 88F8                    	mov	al, bh
  4160 00001DEC 2C80                    	sub	al, 80h
  4161 00001DEE 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4162 00001DF2 66AB                    	stosw		; original sample (R)
  4163 00001DF4 88D8                    	mov	al, bl
  4164 00001DF6 00D0                    	add	al, dl	; [next_val_l]
  4165 00001DF8 D0D8                    	rcr	al, 1
  4166 00001DFA 86D8                    	xchg	al, bl	; al = [previous_val_l]
  4167 00001DFC 00D8                    	add	al, bl	; bl = interpolated middle (L) (sample 2)
  4168 00001DFE D0D8                    	rcr	al, 1
  4169 00001E00 2C80                    	sub	al, 80h
  4170 00001E02 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4171 00001E06 66AB                    	stosw		; interpolated sample 1 (L)
  4172 00001E08 88F8                    	mov	al, bh
  4173 00001E0A 00F0                    	add	al, dh	; [next_val_r]
  4174 00001E0C D0D8                    	rcr	al, 1
  4175 00001E0E 86F8                    	xchg	al, bh	; al = [previous_val_h]
  4176 00001E10 00F8                    	add	al, bh	; bh = interpolated middle (R) (sample 2)
  4177 00001E12 D0D8                    	rcr	al, 1
  4178 00001E14 2C80                    	sub	al, 80h
  4179 00001E16 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4180 00001E1A 66AB                    	stosw		; interpolated sample 1 (R)
  4181 00001E1C 88D8                    	mov	al, bl	; interpolated middle (L) (sample 2)
  4182 00001E1E 2C80                    	sub	al, 80h
  4183 00001E20 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4184 00001E24 66AB                    	stosw		; interpolated sample 2 (L)
  4185 00001E26 88F8                    	mov	al, bh	; interpolated middle (L) (sample 2)
  4186 00001E28 2C80                    	sub	al, 80h
  4187 00001E2A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4188 00001E2E 66AB                    	stosw		; interpolated sample 2 (L)
  4189 00001E30 88D8                    	mov	al, bl
  4190 00001E32 00D0                    	add	al, dl	; [next_val_l]
  4191 00001E34 D0D8                    	rcr	al, 1
  4192 00001E36 2C80                    	sub	al, 80h
  4193 00001E38 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4194 00001E3C 66AB                    	stosw		; interpolated sample 3 (L)
  4195 00001E3E 88F8                    	mov	al, bh
  4196 00001E40 00F0                    	add	al, dh	; [next_val_r]
  4197 00001E42 D0D8                    	rcr	al, 1
  4198 00001E44 2C80                    	sub	al, 80h
  4199 00001E46 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4200 00001E4A 66AB                    	stosw		; interpolated sample 3 (R)
  4201 00001E4C C3                      	retn
  4202                                  
  4203                                  interpolating_5_16bit_mono:
  4204                                  	; 18/11/2023
  4205                                  	; ax = [previous_val]
  4206                                  	; dx = [next_val]
  4207                                  	; original-interpltd-interpltd-interpltd-interpltd
  4208 00001E4D 66AB                    	stosw		; original sample (L)
  4209 00001E4F 66AB                    	stosw		; original sample (R)
  4210 00001E51 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4211 00001E54 89C3                    	mov	ebx, eax ; [previous_val]
  4212 00001E56 80C680                  	add	dh, 80h
  4213 00001E59 6601D0                  	add	ax, dx
  4214 00001E5C 66D1D8                  	rcr	ax, 1
  4215 00001E5F 50                      	push	eax ; *	; interpolated middle (temporary)
  4216 00001E60 6601D8                  	add	ax, bx	; interpolated middle + [previous_val] 
  4217 00001E63 66D1D8                  	rcr	ax, 1
  4218 00001E66 50                      	push	eax ; **	; interpolated 1st quarter (temporary)
  4219 00001E67 6601D8                  	add	ax, bx	; 1st quarter + [previous_val]
  4220 00001E6A 66D1D8                  	rcr	ax, 1	
  4221 00001E6D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4222 00001E70 66AB                    	stosw 		; interpolated sample 1 (L)
  4223 00001E72 66AB                    	stosw		; interpolated sample 1 (R)
  4224 00001E74 58                      	pop	eax ; **	
  4225 00001E75 5B                      	pop	ebx ; *
  4226 00001E76 6601D8                  	add	ax, bx	; 1st quarter + middle
  4227 00001E79 66D1D8                  	rcr	ax, 1	; / 2
  4228 00001E7C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again	
  4229 00001E7F 66AB                    	stosw		; interpolated sample 2 (L)
  4230 00001E81 66AB                    	stosw		; interpolated sample 2 (R)		
  4231 00001E83 89D8                    	mov	eax, ebx
  4232 00001E85 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  4233 00001E88 66D1D8                  	rcr	ax, 1
  4234 00001E8B 50                      	push	eax ; *	; interpolated 3rd quarter (temporary)
  4235 00001E8C 6601D8                  	add	ax, bx	; + interpolated middle
  4236 00001E8F 66D1D8                  	rcr	ax, 1
  4237 00001E92 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4238 00001E95 66AB                    	stosw		; interpolated sample 3 (L)
  4239 00001E97 66AB                    	stosw		; interpolated sample 3 (R)
  4240 00001E99 58                      	pop	eax ; *	
  4241 00001E9A 6601D0                  	add	ax, dx	; 3rd quarter + [next_val]
  4242 00001E9D 66D1D8                  	rcr	ax, 1	; / 2
  4243 00001EA0 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4244 00001EA3 66AB                    	stosw		; interpolated sample 4 (L)
  4245 00001EA5 66AB                    	stosw		; interpolated sample 4 (R)
  4246 00001EA7 C3                      	retn
  4247                                  
  4248                                  interpolating_5_16bit_stereo:
  4249                                  	; 18/11/2023
  4250                                  	; bx = [previous_val_l]
  4251                                  	; ax = [previous_val_r]
  4252                                  	; [next_val_l]
  4253                                  	; [next_val_r]
  4254                                  	; original-interpltd-interpltd-interpltd-interpltd
  4255 00001EA8 51                      	push	ecx ; !
  4256 00001EA9 93                      	xchg	eax, ebx
  4257 00001EAA 66AB                    	stosw		; original sample (L)
  4258 00001EAC 93                      	xchg	eax, ebx
  4259 00001EAD 66AB                    	stosw		; original sample (R)
  4260 00001EAF 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4261 00001EB2 50                      	push	eax ; *	; [previous_val_r]
  4262 00001EB3 80C780                  	add	bh, 80h
  4263 00001EB6 8005[32200000]80        	add	byte [next_val_l+1], 80h
  4264 00001EBD 66A1[31200000]          	mov	ax, [next_val_l]
  4265 00001EC3 6601D8                  	add	ax, bx	; [previous_val_l]
  4266 00001EC6 66D1D8                  	rcr	ax, 1
  4267 00001EC9 89C1                    	mov	ecx, eax ; interpolated middle (L)
  4268 00001ECB 6601D8                  	add	ax, bx	
  4269 00001ECE 66D1D8                  	rcr	ax, 1
  4270 00001ED1 89C2                    	mov	edx, eax ; interpolated 1st quarter (L)	
  4271 00001ED3 6601D8                  	add	ax, bx	; [previous_val_l]
  4272 00001ED6 66D1D8                  	rcr	ax, 1
  4273 00001ED9 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4274 00001EDC 66AB                    	stosw 		; interpolated sample 1 (L)
  4275 00001EDE 89C8                    	mov	eax, ecx
  4276 00001EE0 6601D0                  	add	ax, dx	; middle (L) + 1st quarter (L) 
  4277 00001EE3 66D1D8                  	rcr	ax, 1	; / 2
  4278 00001EE6 89C3                    	mov	ebx, eax  ; interpolated sample 2 (L)
  4279 00001EE8 5A                      	pop	edx ; *	; [previous_val_r]
  4280 00001EE9 89D0                    	mov	eax, edx
  4281 00001EEB 8005[34200000]80        	add	byte [next_val_r+1], 80h
  4282 00001EF2 660305[33200000]        	add	ax, [next_val_r]
  4283 00001EF9 66D1D8                  	rcr	ax, 1
  4284 00001EFC 50                      	push	eax ; *	; interpolated middle (R)
  4285 00001EFD 6601D0                  	add	ax, dx
  4286 00001F00 66D1D8                  	rcr	ax, 1
  4287 00001F03 50                      	push	eax ; ** ; interpolated 1st quarter (R)
  4288 00001F04 6601D0                  	add	ax, dx	; [previous_val_r]
  4289 00001F07 66D1D8                  	rcr	ax, 1
  4290 00001F0A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4291 00001F0D 66AB                    	stosw 		; interpolated sample 1 (R)
  4292 00001F0F 89D8                    	mov	eax, ebx
  4293 00001F11 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4294 00001F14 66AB                    	stosw 		; interpolated sample 2 (L)
  4295 00001F16 58                      	pop	eax ; **
  4296 00001F17 5A                      	pop	edx ; *
  4297 00001F18 6601D0                  	add	ax, dx	; 1st quarter (R) + middle (R)
  4298 00001F1B 66D1D8                  	rcr	ax, 1	; / 2
  4299 00001F1E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4300 00001F21 66AB                    	stosw 		; interpolated sample 2 (R)
  4301 00001F23 89C8                    	mov	eax, ecx
  4302 00001F25 660305[31200000]        	add	ax, [next_val_l]
  4303 00001F2C 66D1D8                  	rcr	ax, 1
  4304 00001F2F 50                      	push	eax ; * ; interpolated 3rd quarter (L)
  4305 00001F30 6601C8                  	add	ax, cx	; interpolated middle (L)
  4306 00001F33 66D1D8                  	rcr	ax, 1
  4307 00001F36 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4308 00001F39 66AB                    	stosw 		; interpolated sample 3 (L)
  4309 00001F3B 89D0                    	mov	eax, edx
  4310 00001F3D 660305[33200000]        	add	ax, [next_val_r]
  4311 00001F44 66D1D8                  	rcr	ax, 1
  4312 00001F47 50                      	push	eax ; ** ; interpolated 3rd quarter (R)
  4313 00001F48 6601D0                  	add	ax, dx	; interpolated middle (R)
  4314 00001F4B 66D1D8                  	rcr	ax, 1
  4315 00001F4E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4316 00001F51 66AB                    	stosw 		; interpolated sample 3 (R)
  4317 00001F53 5B                      	pop	ebx ; **
  4318 00001F54 58                      	pop	eax ; *
  4319 00001F55 660305[31200000]        	add	ax, [next_val_l]
  4320 00001F5C 66D1D8                  	rcr	ax, 1
  4321 00001F5F 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4322 00001F62 66AB                    	stosw 		; interpolated sample 4 (L)
  4323 00001F64 89D8                    	mov	eax, ebx	
  4324 00001F66 660305[33200000]        	add	ax, [next_val_r]
  4325 00001F6D 66D1D8                  	rcr	ax, 1
  4326 00001F70 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4327 00001F73 66AB                    	stosw 		; interpolated sample 4 (R)
  4328 00001F75 59                      	pop	ecx ; !
  4329 00001F76 C3                      	retn
  4330                                  
  4331                                  interpolating_4_16bit_mono:
  4332                                  	; 18/11/2023
  4333                                  	; ax = [previous_val]
  4334                                  	; dx = [next_val]
  4335                                  	; original-interpolated
  4336                                  
  4337 00001F77 66AB                    	stosw		; original sample (L)
  4338 00001F79 66AB                    	stosw		; original sample (R)
  4339 00001F7B 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4340 00001F7E 89C3                    	mov	ebx, eax ; [previous_val]
  4341 00001F80 80C680                  	add	dh, 80h
  4342 00001F83 6601D0                  	add	ax, dx	; [previous_val] + [next_val]
  4343 00001F86 66D1D8                  	rcr	ax, 1
  4344 00001F89 93                      	xchg	eax, ebx	
  4345 00001F8A 6601D8                  	add	ax, bx	; [previous_val] + interpolated middle
  4346 00001F8D 66D1D8                  	rcr	ax, 1
  4347 00001F90 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4348 00001F93 66AB                    	stosw 		; interpolated sample 1 (L)
  4349 00001F95 66AB                    	stosw		; interpolated sample 1 (R)
  4350 00001F97 89D8                    	mov	eax, ebx ; interpolated middle
  4351 00001F99 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4352 00001F9C 66AB                    	stosw 		; interpolated sample 2 (L)
  4353 00001F9E 66AB                    	stosw		; interpolated sample 2 (R)
  4354 00001FA0 89D8                    	mov	eax, ebx
  4355 00001FA2 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  4356 00001FA5 66D1D8                  	rcr	ax, 1
  4357 00001FA8 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4358 00001FAB 66AB                    	stosw		; interpolated sample 3 (L)
  4359 00001FAD 66AB                    	stosw		; interpolated sample 3 (R)
  4360 00001FAF C3                      	retn
  4361                                  
  4362                                  interpolating_4_16bit_stereo:
  4363                                  	; 18/11/2023
  4364                                  	; bx = [previous_val_l]
  4365                                  	; ax = [previous_val_r]
  4366                                  	; [next_val_l]
  4367                                  	; [next_val_r]
  4368                                  	; original-interpolated-interpolated-interpolated
  4369 00001FB0 93                      	xchg	eax, ebx
  4370 00001FB1 66AB                    	stosw		; original sample (L)
  4371 00001FB3 93                      	xchg	eax, ebx
  4372 00001FB4 66AB                    	stosw		; original sample (R)
  4373 00001FB6 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4374 00001FB9 89C2                    	mov	edx, eax ; [previous_val_r]
  4375 00001FBB 80C780                  	add	bh, 80h
  4376 00001FBE 8005[32200000]80        	add	byte [next_val_l+1], 80h
  4377 00001FC5 66A1[31200000]          	mov	ax, [next_val_l]
  4378 00001FCB 6601D8                  	add	ax, bx	; [previous_val_l]
  4379 00001FCE 66D1D8                  	rcr	ax, 1
  4380 00001FD1 93                      	xchg	eax, ebx	
  4381 00001FD2 6601D8                  	add	ax, bx	; bx = interpolated middle (L)
  4382 00001FD5 66D1D8                  	rcr	ax, 1
  4383 00001FD8 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4384 00001FDB 66AB                    	stosw 		; interpolated sample 1 (L)
  4385 00001FDD 8005[34200000]80        	add	byte [next_val_r+1], 80h
  4386 00001FE4 89D0                    	mov	eax, edx ; [previous_val_r]
  4387 00001FE6 660305[33200000]        	add	ax, [next_val_r]
  4388 00001FED 66D1D8                  	rcr	ax, 1
  4389 00001FF0 92                      	xchg	eax, edx	
  4390 00001FF1 6601D0                  	add	ax, dx	; dx = interpolated middle (R)
  4391 00001FF4 66D1D8                  	rcr	ax, 1
  4392 00001FF7 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4393 00001FFA 66AB                    	stosw 		; interpolated sample 1 (R)
  4394 00001FFC 89D8                    	mov	eax, ebx
  4395 00001FFE 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4396 00002001 66AB                    	stosw 		; interpolated sample 2 (L)
  4397 00002003 89D0                    	mov	eax, edx
  4398 00002005 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4399 00002008 66AB                    	stosw 		; interpolated sample 2 (R)
  4400 0000200A 89D8                    	mov	eax, ebx
  4401 0000200C 660305[31200000]        	add	ax, [next_val_l]
  4402 00002013 66D1D8                  	rcr	ax, 1
  4403 00002016 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4404 00002019 66AB                    	stosw 		; interpolated sample 3 (L)
  4405 0000201B 89D0                    	mov	eax, edx
  4406 0000201D 660305[33200000]        	add	ax, [next_val_r]
  4407 00002024 66D1D8                  	rcr	ax, 1
  4408 00002027 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4409 0000202A 66AB                    	stosw 		; interpolated sample 3 (R)
  4410 0000202C C3                      	retn
  4411                                  
  4412                                  ; 13/11/2023
  4413                                  previous_val:
  4414 0000202D 0000                    previous_val_l: dw 0
  4415 0000202F 0000                    previous_val_r: dw 0
  4416                                  next_val:
  4417 00002031 0000                    next_val_l: dw 0
  4418 00002033 0000                    next_val_r: dw 0
  4419                                  
  4420                                  ; 16/11/2023
  4421 00002035 00                      faz:	db 0	
  4422                                  	
  4423                                  ; --------------------------------------------------------
  4424                                  ; 27/05/2024 - (TRDOS 386 Kernel) audio.s
  4425                                  ; --------------------------------------------------------
  4426                                  
  4427                                  NOT_PCI32_PCI16	EQU 03FFFFFFFh ; NOT BIT31+BIT30 ; 19/03/2017
  4428                                  NOT_BIT31 EQU 7FFFFFFFh
  4429                                  
  4430                                  pciFindDevice:
  4431                                  	; 19/11/2023
  4432                                  	; 03/04/2017 ('pci.asm', 20/03/2017)
  4433                                  	;
  4434                                  	; scan through PCI space looking for a device+vendor ID
  4435                                  	;
  4436                                  	; Entry: EAX=Device+Vendor ID
  4437                                  	;
  4438                                  	; Exit: EAX=PCI address if device found
  4439                                  	;	EDX=Device+Vendor ID
  4440                                  	;       CY clear if found, set if not found. EAX invalid if CY set.
  4441                                  	;
  4442                                  	; Destroys: ebx, edi ; 19/11/2023
  4443                                  
  4444                                          ; 19/11/2023
  4445 00002036 89C3                    	mov	ebx, eax
  4446 00002038 BF00000080              	mov	edi, 80000000h
  4447                                  nextPCIdevice:
  4448 0000203D 89F8                    	mov 	eax, edi		; read PCI registers
  4449 0000203F E88C000000              	call	pciRegRead32
  4450                                  	; 19/11/2023
  4451 00002044 39DA                    	cmp	edx, ebx
  4452 00002046 7412                    	je	short PCIScanExit	; found
  4453                                  	; 19/11/2023
  4454 00002048 81FF00F8FF80            	cmp	edi, 80FFF800h
  4455 0000204E 7308                    	jnb	short pfd_nf		; not found
  4456 00002050 81C700010000            	add	edi, 100h
  4457 00002056 EBE5                    	jmp	short nextPCIdevice
  4458                                  pfd_nf:
  4459 00002058 F9                      	stc
  4460 00002059 C3                      	retn
  4461                                  PCIScanExit:
  4462                                  	;pushf
  4463 0000205A B8FFFFFF7F              	mov	eax, NOT_BIT31 	; 19/03/2017
  4464 0000205F 21F8                    	and	eax, edi	; return only bus/dev/fn #
  4465 00002061 C3                      	retn
  4466                                  
  4467                                  pciRegRead:
  4468                                  	; 03/04/2017 ('pci.asm', 20/03/2017)
  4469                                  	;
  4470                                  	; 8/16/32bit PCI reader
  4471                                  	;
  4472                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  4473                                  	;           BIT30 set if 32 bit access requested
  4474                                  	;           BIT29 set if 16 bit access requested
  4475                                  	;           otherwise defaults to 8 bit read
  4476                                  	;
  4477                                  	; Exit:  DL,DX,EDX register data depending on requested read size
  4478                                  	;
  4479                                  	; Note1: this routine is meant to be called via pciRegRead8,
  4480                                  	;	 pciRegread16 or pciRegRead32, listed below.
  4481                                  	;
  4482                                  	; Note2: don't attempt to read 32 bits of data from a non dword
  4483                                  	;	 aligned reg number. Likewise, don't do 16 bit reads from
  4484                                  	;	 non word aligned reg #
  4485                                  	
  4486 00002062 53                      	push	ebx
  4487 00002063 51                      	push	ecx
  4488 00002064 89C3                            mov     ebx, eax		; save eax, dh
  4489 00002066 88F1                            mov     cl, dh
  4490                                  
  4491 00002068 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  4492 0000206D 0D00000080                      or      eax, BIT31		; make a PCI access request
  4493 00002072 24FC                            and     al, ~3 ; NOT 3		; force index to be dword
  4494                                  
  4495 00002074 66BAF80C                        mov     dx, PCI_INDEX_PORT
  4496                                          ;out	dx, eax			; write PCI selector
  4497                                  	; 29/05/2024
  4498 00002078 53                      	push	ebx
  4499 00002079 89C3                    	mov	ebx, eax ; data, dword
  4500 0000207B B405                    	mov	ah, 5 ; write port, dword
  4501                                  	; dx = port number
  4502 0000207D CD34                    	int	34h
  4503 0000207F 5B                      	pop	ebx
  4504                                  	
  4505 00002080 66BAFC0C                        mov     dx, PCI_DATA_PORT
  4506 00002084 88D8                            mov     al, bl
  4507 00002086 2403                            and     al, 3			; figure out which port to
  4508 00002088 00C2                            add     dl, al			; read to
  4509                                  
  4510 0000208A F7C3000000C0            	test    ebx, PCI32+PCI16
  4511 00002090 750A                            jnz     short _pregr0
  4512                                  
  4513                                  	;in	al, dx			; return 8 bits of data
  4514                                  	; 29/05/2024
  4515 00002092 B400                    	mov	ah, 0 ; read port, byte
  4516                                  	; dx = port number
  4517 00002094 CD34                    	int	34h
  4518                                          
  4519 00002096 88C2                    	mov	dl, al
  4520 00002098 88CE                    	mov     dh, cl			; restore dh for 8 bit read
  4521 0000209A EB17                    	jmp	short _pregr2
  4522                                  _pregr0:	
  4523 0000209C F7C300000080            	test    ebx, PCI32
  4524 000020A2 7509                            jnz	short _pregr1
  4525                                  
  4526                                  	;in	ax, dx
  4527                                  	; 29/05/2024
  4528 000020A4 B402                    	mov	ah, 2 ; read port, word
  4529                                  	; dx = port number
  4530 000020A6 CD34                    	int	34h	        
  4531                                  
  4532 000020A8 6689C2                  	mov     dx, ax			; return 16 bits of data
  4533 000020AB EB06                    	jmp	short _pregr2
  4534                                  _pregr1:
  4535                                  	;in	eax, dx			; return 32 bits of data
  4536                                  	; 29/05/2024
  4537 000020AD B404                    	mov	ah, 4 ; read port, dword
  4538                                  	; dx = port number
  4539 000020AF CD34                    	int	34h
  4540                                  
  4541 000020B1 89C2                    	mov	edx, eax
  4542                                  _pregr2:
  4543 000020B3 89D8                    	mov     eax, ebx		; restore eax
  4544 000020B5 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  4545 000020BA 59                      	pop	ecx
  4546 000020BB 5B                      	pop	ebx
  4547 000020BC C3                      	retn
  4548                                  
  4549                                  pciRegRead8:
  4550 000020BD 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 8 bit read size
  4551 000020C2 EB9E                            jmp     short pciRegRead	; call generic PCI access
  4552                                  
  4553                                  pciRegRead16:
  4554 000020C4 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 16 bit read size
  4555 000020C9 0D00000040                      or      eax, PCI16		; call generic PCI access
  4556 000020CE EB92                            jmp     short pciRegRead
  4557                                  
  4558                                  pciRegRead32:
  4559 000020D0 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 32 bit read size
  4560 000020D5 0D00000080                      or      eax, PCI32		; call generic PCI access
  4561 000020DA EB86                            jmp     pciRegRead
  4562                                  
  4563                                  pciRegWrite:
  4564                                  	; 03/04/2017 ('pci.asm', 29/11/2016)
  4565                                  	;
  4566                                  	; 8/16/32bit PCI writer
  4567                                  	;
  4568                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  4569                                  	;           BIT31 set if 32 bit access requested
  4570                                  	;           BIT30 set if 16 bit access requested
  4571                                  	;           otherwise defaults to 8bit read
  4572                                  	;        DL/DX/EDX data to write depending on size
  4573                                  	;
  4574                                  	; Note1: this routine is meant to be called via pciRegWrite8, 
  4575                                  	;	 pciRegWrite16 or pciRegWrite32 as detailed below.
  4576                                  	;
  4577                                  	; Note2: don't attempt to write 32bits of data from a non dword
  4578                                  	;	 aligned reg number. Likewise, don't do 16 bit writes from
  4579                                  	;	 non word aligned reg #
  4580                                  
  4581 000020DC 53                      	push	ebx
  4582 000020DD 51                      	push	ecx
  4583 000020DE 89C3                            mov     ebx, eax		; save eax, edx
  4584 000020E0 89D1                            mov     ecx, edx
  4585 000020E2 25FFFFFF3F              	and     eax, NOT_PCI32_PCI16	; clear out data size request
  4586 000020E7 0D00000080                      or      eax, BIT31		; make a PCI access request
  4587 000020EC 24FC                            and     al, ~3 ; NOT 3		; force index to be dword
  4588                                  
  4589 000020EE 66BAF80C                        mov     dx, PCI_INDEX_PORT
  4590                                  	;out	dx, eax			; write PCI selector
  4591                                  	; 29/05/2024
  4592 000020F2 53                      	push	ebx
  4593 000020F3 89C3                    	mov	ebx, eax ; data, dword
  4594 000020F5 B405                    	mov	ah, 5 ; write port, dword
  4595                                  	; dx = port number
  4596 000020F7 CD34                    	int	34h
  4597 000020F9 5B                      	pop	ebx
  4598                                  	
  4599 000020FA 66BAFC0C                        mov     dx, PCI_DATA_PORT
  4600 000020FE 88D8                            mov     al, bl
  4601 00002100 2403                            and     al, 3			; figure out which port to
  4602 00002102 00C2                            add     dl, al			; write to
  4603                                  
  4604 00002104 F7C3000000C0            	test    ebx, PCI32+PCI16
  4605 0000210A 7508                            jnz     short _pregw0
  4606 0000210C 88C8                    	mov	al, cl 			; put data into al
  4607                                  	;out	dx, al
  4608                                  	; 29/05/2024
  4609                                  	; al = data, byte
  4610 0000210E B401                    	mov	ah, 1 ; write port, byte
  4611                                  	; dx = port number
  4612 00002110 CD34                    	int	34h
  4613                                  
  4614 00002112 EB1F                    	jmp	short _pregw2
  4615                                  _pregw0:
  4616 00002114 F7C300000080            	test    ebx, PCI32
  4617 0000211A 750D                            jnz     short _pregw1
  4618 0000211C 6689C8                  	mov	ax, cx			; put data into ax
  4619                                  	;out	dx, ax
  4620                                  	; 29/05/2024
  4621 0000211F 53                      	push	ebx
  4622 00002120 89C3                    	mov	ebx, eax ; data, word
  4623 00002122 B403                    	mov	ah, 3 ; write port, word
  4624                                  	; dx = port number
  4625 00002124 CD34                    	int	34h
  4626 00002126 5B                      	pop	ebx
  4627                                  
  4628 00002127 EB0A                    	jmp	short _pregw2
  4629                                  _pregw1:
  4630 00002129 89C8                    	mov	eax, ecx		; put data into eax
  4631                                  	;out	dx, eax
  4632                                  	; 29/05/2024
  4633 0000212B 53                      	push	ebx
  4634 0000212C 89C3                    	mov	ebx, eax ; data, dword
  4635 0000212E B405                    	mov	ah, 5 ; write port, dword
  4636                                  	; dx = port number
  4637 00002130 CD34                    	int	34h
  4638 00002132 5B                      	pop	ebx
  4639                                  _pregw2:
  4640 00002133 89D8                            mov     eax, ebx		; restore eax
  4641 00002135 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  4642 0000213A 89CA                            mov     edx, ecx		; restore dx
  4643 0000213C 59                      	pop	ecx
  4644 0000213D 5B                      	pop	ebx
  4645 0000213E C3                      	retn
  4646                                  
  4647                                  pciRegWrite8:
  4648 0000213F 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 8 bit write size
  4649 00002144 EB96                            jmp	short pciRegWrite	; call generic PCI access
  4650                                  
  4651                                  pciRegWrite16:
  4652 00002146 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 16 bit write size
  4653 0000214B 0D00000040                      or      eax, PCI16		; call generic PCI access
  4654 00002150 EB8A                            jmp	short pciRegWrite
  4655                                  
  4656                                  pciRegWrite32:
  4657 00002152 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 32 bit write size
  4658 00002157 0D00000080                      or      eax, PCI32		; call generic PCI access
  4659 0000215C E97BFFFFFF                      jmp	pciRegWrite
  4660                                  
  4661                                  ; --------------------------------------------------------
  4662                                  ; 19/05/2024 - (playwav4.asm) ac97_vra.asm
  4663                                  ; --------------------------------------------------------
  4664                                  
  4665                                  	; 13/11/2023
  4666                                  
  4667                                  ;VRA:	db 1
  4668                                  
  4669                                  codecConfig:
  4670                                  	; 29/05/2024 (playwav7.s modification)
  4671                                  	; 19/05/2024
  4672                                  	; 19/11/2023
  4673                                  	; 15/11/2023
  4674                                  	; 04/11/2023
  4675                                  	; 17/02/2017 
  4676                                  	; 07/11/2016 (Erdogan Tan)
  4677                                  
  4678                                  	;AC97_EA_VRA equ 1
  4679                                  	AC97_EA_VRA equ BIT0
  4680                                  
  4681                                  	; 04/11/2023
  4682                                  init_ac97_controller:
  4683 00002161 A1[A6280000]            	mov	eax, [bus_dev_fn]
  4684 00002166 B004                    	mov	al, PCI_CMD_REG
  4685 00002168 E857FFFFFF              	call	pciRegRead16		; read PCI command register
  4686 0000216D 80CA05                  	or      dl, IO_ENA+BM_ENA	; enable IO and bus master
  4687 00002170 E8D1FFFFFF              	call	pciRegWrite16
  4688                                  
  4689                                  	;call	delay_100ms
  4690                                  
  4691                                  	; 19/05/2024
  4692                                  	; ('PLAYMOD3.ASM', Erdogan Tan, 18/05/2024)
  4693                                  
  4694                                  init_ac97_codec:
  4695                                  	; 18/11/2023
  4696 00002175 BD28000000              	mov	ebp, 40
  4697                                  	; 29/05/2024
  4698                                  	;mov	ebp, 1000
  4699                                  _initc_1:
  4700                                  	; 29/05/2024
  4701 0000217A 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  4702 0000217E 660315[AC280000]        	add	dx, [NABMBAR]
  4703                                  	;in	eax, dx
  4704 00002185 B404                    	mov	ah, 4	; read port, dword
  4705 00002187 CD34                    	int	34h
  4706                                  
  4707                                  	; 19/05/2024
  4708                                  	;call	delay1_4ms
  4709                                  
  4710 00002189 83F8FF                  	cmp	eax, 0FFFFFFFFh ; -1
  4711 0000218C 750A                    	jne	short _initc_3
  4712                                  _initc_2:
  4713 0000218E 4D                      	dec	ebp
  4714 0000218F 7425                    	jz	short _ac97_codec_ready
  4715                                  
  4716                                  	; 31/05/2024
  4717 00002191 E886020000              	call	delay_100ms
  4718 00002196 EBE2                    	jmp	short _initc_1
  4719                                  _initc_3:
  4720 00002198 A900030010              	test	eax, CTRL_ST_CREADY
  4721 0000219D 7517                    	jnz	short _ac97_codec_ready
  4722                                  
  4723                                  	; 30/05/2024
  4724 0000219F 803D[07250000]01        	cmp	byte [reset], 1
  4725 000021A6 73E6                    	jnb	short _initc_2
  4726                                  
  4727 000021A8 E893010000              	call	reset_ac97_codec
  4728                                  	; 30/05/2024
  4729 000021AD C605[07250000]01        	mov	byte [reset], 1
  4730                                  	; 19/05/2024
  4731 000021B4 EBD8                    	jmp	short _initc_2
  4732                                  
  4733                                  _ac97_codec_ready:
  4734 000021B6 668B15[AA280000]        	mov	dx, [NAMBAR]
  4735                                  	;add	dx, 0 ; ac_reg_0 ; reset register
  4736                                  	;out	dx, ax
  4737                                  	; 29/05/2024
  4738 000021BD 53                      	push	ebx
  4739 000021BE 89C3                    	mov	ebx, eax ; bx = data, word
  4740 000021C0 B403                    	mov	ah, 3	; write port, word
  4741 000021C2 CD34                    	int	34h
  4742 000021C4 5B                      	pop	ebx
  4743                                  
  4744                                  	; 31/05/2024
  4745                                  	; 29/05/2024
  4746                                  	;call	delay_100ms
  4747                                  
  4748                                  	; 19/11/2023
  4749 000021C5 09ED                    	or	ebp, ebp
  4750 000021C7 7539                    	jnz	short _ac97_codec_init_ok
  4751                                  
  4752 000021C9 31C0                    	xor	eax, eax ; 0
  4753 000021CB 668B15[AA280000]        	mov	dx, [NAMBAR]
  4754 000021D2 6683C226                	add	dx, CODEC_REG_POWERDOWN
  4755                                  	;out	dx, ax
  4756                                  	; 29/05/2024
  4757 000021D6 53                      	push	ebx
  4758 000021D7 89C3                    	mov	ebx, eax
  4759 000021D9 B403                    	mov	ah, 3	; write port, word
  4760 000021DB CD34                    	int	34h
  4761 000021DD 5B                      	pop	ebx
  4762                                  	
  4763                                  	; 19/11/2023
  4764                                  	; wait for 1 second
  4765                                  	; 19/05/2024
  4766 000021DE B9E8030000              	mov	ecx, 1000 ; 1000*4*0.25ms = 1s
  4767                                  	;;mov	ecx, 10
  4768                                  	; 30/05/2024
  4769                                  	;mov	ecx, 40
  4770                                  _ac97_codec_rloop:
  4771                                  	;call	delay_100ms
  4772                                  	; 31/05/2024
  4773 000021E3 E843020000              	call	delay1_4ms
  4774                                  
  4775                                  	;mov	dx, [NAMBAR]
  4776                                  	;add	dx, CODEC_REG_POWERDOWN
  4777                                  	;in	ax, dx
  4778                                  	; 29/05/2024
  4779 000021E8 668B15[AA280000]        	mov	dx, [NAMBAR]
  4780 000021EF 6683C226                	add	dx, CODEC_REG_POWERDOWN
  4781                                  	; 31/05/2024
  4782 000021F3 B402                    	mov	ah, 2	; read port, word
  4783 000021F5 CD34                    	int	34h
  4784                                  
  4785                                  	; 31/05/2024
  4786                                  	;call	delay1_4ms
  4787                                  	
  4788 000021F7 6683E00F                	and	ax, 0Fh
  4789 000021FB 3C0F                    	cmp	al, 0Fh
  4790 000021FD 7403                    	je	short _ac97_codec_init_ok
  4791 000021FF E2E2                    	loop	_ac97_codec_rloop 
  4792                                  
  4793                                  init_ac97_codec_err1:
  4794                                  	;stc	; cf = 1 ; 19/05/2024
  4795                                  init_ac97_codec_err2:
  4796 00002201 C3                      	retn
  4797                                  
  4798                                  _ac97_codec_init_ok:
  4799 00002202 E8DA000000              	call 	reset_ac97_controller
  4800                                  
  4801                                  	; 31/05/2024
  4802                                  	; 30/05/2024
  4803                                  	; 19/05/2024
  4804                                  	;call	delay_100ms
  4805                                  
  4806                                  	; 30/05/2024
  4807                                  	;call	delay1_4ms
  4808                                  	;call	delay1_4ms
  4809                                  	;call	delay1_4ms
  4810                                  	;call	delay1_4ms
  4811                                  
  4812                                  setup_ac97_codec:
  4813                                  	; 12/11/2023
  4814 00002207 66813D[2E280000]80-     	cmp	word [sample_rate], 48000
  4814 0000220F BB                 
  4815 00002210 0F849C000000            	je	skip_rate
  4816                                  	
  4817                                  	; 31/05/2024
  4818                                  	; 30/05/2024
  4819                                  	; 29/05/2024
  4820                                  	;cmp	byte [VRA], 0
  4821                                  	;jna	short skip_rate
  4822                                  
  4823                                  	; 11/11/2023
  4824 00002216 668B15[AA280000]        	mov	dx, [NAMBAR]
  4825 0000221D 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4826                                  	;in	ax, dx
  4827                                  	; 29/05/2024
  4828 00002221 B402                    	mov	ah, 2 ; read port, word
  4829 00002223 CD34                    	int	34h
  4830                                  
  4831                                  	; 30/05/2024
  4832                                  	; 19/05/2024
  4833 00002225 E801020000              	call	delay1_4ms
  4834                                  
  4835                                  	;and	al, ~BIT1 ; Clear DRA
  4836                                  	;;;
  4837                                  	; 30/05/2024
  4838 0000222A 24FC                    	and	al, ~(BIT1+BIT0) ; Clear DRA+VRA
  4839                                  	;out	dx, ax
  4840                                  	; 31/05/2024
  4841 0000222C 53                      	push	ebx
  4842 0000222D 89C3                    	mov	ebx, eax
  4843 0000222F 668B15[AA280000]        	mov	dx, [NAMBAR]
  4844 00002236 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4845 0000223A B403                    	mov	ah, 3 ; write port, word
  4846 0000223C CD34                    	int	34h
  4847 0000223E 5B                      	pop	ebx
  4848                                  
  4849                                  	; 31/05/2024
  4850 0000223F E8B1010000              	call	check_vra
  4851                                  
  4852                                  	; 31/05/2024 - temporary (interpolated sample rate test)
  4853                                  	;mov	byte [VRA], 0
  4854                                  
  4855                                  	; 31/05/2024
  4856 00002244 803D[31280000]00        	cmp	byte [VRA], 0
  4857 0000224B 7665                    	jna	short skip_rate
  4858                                  
  4859 0000224D 668B15[AA280000]        	mov	dx, [NAMBAR]
  4860 00002254 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4861                                  	;in	ax, dx
  4862                                  	; 31/05/2024
  4863 00002258 B402                    	mov	ah, 2 ; read port, word
  4864 0000225A CD34                    	int	34h
  4865                                  
  4866                                  	;and	al, ~BIT1 ; Clear DRA
  4867                                  	;;;
  4868                                  
  4869 0000225C 0C01                    	or	al, AC97_EA_VRA ; 1 ; 04/11/2023
  4870                                  	;out	dx, ax			; Enable variable rate audio
  4871                                  	; 29/05/2024
  4872 0000225E 53                      	push	ebx
  4873 0000225F 89C3                    	mov	ebx, eax
  4874                                  	;
  4875                                  	; 30/05/2024
  4876 00002261 668B15[AA280000]        	mov	dx, [NAMBAR]
  4877 00002268 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4878                                  	;
  4879 0000226C B403                    	mov	ah, 3 ; write port, word
  4880 0000226E CD34                    	int	34h
  4881 00002270 5B                      	pop	ebx
  4882                                  
  4883                                  	;mov	cx, 10
  4884 00002271 B90A000000              	mov	ecx, 10 ; 30/05/2024
  4885                                  check_vra_loop:
  4886                                  	; 31/05/2024
  4887                                  	;call	delay_100ms
  4888                                  	; 30/05/2024
  4889 00002276 E8B0010000              	call	delay1_4ms
  4890                                  
  4891                                  	; 11/11/2023
  4892                                  	;in	ax, dx
  4893                                  	; 29/05/2024
  4894 0000227B 668B15[AA280000]        	mov	dx, [NAMBAR]
  4895 00002282 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG  	; 2Ah
  4896 00002286 B402                    	mov	ah, 2 ; read port, word
  4897 00002288 CD34                    	int	34h
  4898                                  
  4899 0000228A A801                    	test	al, AC97_EA_VRA ; 1
  4900 0000228C 750B                    	jnz	short set_rate
  4901                                  
  4902                                  	; 11/11/2023
  4903 0000228E E2E6                    	loop	check_vra_loop
  4904                                  
  4905                                  ;vra_not_supported:	; 19/05/2024
  4906 00002290 C605[31280000]00        	mov	byte [VRA], 0
  4907 00002297 EB19                    	jmp	short skip_rate
  4908                                  
  4909                                  set_rate:
  4910 00002299 66A1[2E280000]          	mov	ax, [sample_rate] ; 17/02/2017 (Erdogan Tan)
  4911                                  
  4912 0000229F 668B15[AA280000]        	mov    	dx, [NAMBAR]               	
  4913 000022A6 6683C22C                	add    	dx, CODEC_PCM_FRONT_DACRATE_REG	; 2Ch  	  
  4914                                  	;out	dx, ax 			; PCM Front/Center Output Sample Rate
  4915                                  	; 29/05/2024
  4916 000022AA 53                      	push	ebx
  4917 000022AB 89C3                    	mov	ebx, eax  ; bx = data, word
  4918 000022AD B403                    	mov	ah, 3 ; write port, word
  4919 000022AF CD34                    	int	34h
  4920 000022B1 5B                      	pop	ebx
  4921                                  
  4922                                  	; 29/05/2024
  4923                                  	;call	delay_100ms
  4924                                  	; 30/05/2024
  4925                                  	;call	delay1_4ms
  4926                                  
  4927                                  	; 12/11/2023
  4928                                  skip_rate:
  4929 000022B2 66B80202                	mov	ax, 0202h
  4930 000022B6 668B15[AA280000]          	mov	dx, [NAMBAR]
  4931 000022BD 6683C202                  	add	dx, CODEC_MASTER_VOL_REG	;02h 
  4932                                  	;out	dx, ax
  4933                                  	; 29/05/2024
  4934 000022C1 53                      	push	ebx
  4935 000022C2 89C3                    	mov	ebx, eax  ; bx = data, word
  4936 000022C4 B403                    	mov	ah, 3 ; write port, word
  4937 000022C6 CD34                    	int	34h
  4938 000022C8 5B                      	pop	ebx
  4939                                  
  4940                                  	; 29/05/2024
  4941                                  	;call	delay1_4ms
  4942                                  	;call	delay1_4ms
  4943                                  	;call	delay1_4ms
  4944                                  	;call	delay1_4ms
  4945                                  
  4946 000022C9 66B80202                	mov	ax, 0202h
  4947 000022CD 668B15[AA280000]          	mov	dx, [NAMBAR]
  4948 000022D4 6683C218                  	add	dx, CODEC_PCM_OUT_REG		;18h 
  4949                                    	;out	dx, ax
  4950                                  	; 29/05/2024
  4951 000022D8 53                      	push	ebx
  4952 000022D9 89C3                    	mov	ebx, eax  ; bx = data, word
  4953 000022DB B403                    	mov	ah, 3 ; write port, word
  4954 000022DD CD34                    	int	34h
  4955 000022DF 5B                      	pop	ebx
  4956                                  
  4957                                   	; 29/05/2024
  4958                                  	;call	delay1_4ms
  4959                                  	;call	delay1_4ms
  4960                                  	;call	delay1_4ms
  4961                                  	;call	delay1_4ms
  4962                                  
  4963                                  	; 19/05/2024
  4964                                  	;clc
  4965                                  
  4966 000022E0 C3                              retn
  4967                                  
  4968                                  reset_ac97_controller:
  4969                                  	; 29/05/2024 (TRDOS 386)
  4970                                  	; 19/05/2024
  4971                                  	; 11/11/2023
  4972                                  	; 10/06/2017
  4973                                  	; 29/05/2017
  4974                                  	; 28/05/2017
  4975                                  	; reset AC97 audio controller registers
  4976 000022E1 31C0                    	xor	eax, eax
  4977 000022E3 66BA0B00                        mov	dx, PI_CR_REG
  4978 000022E7 660315[AC280000]        	add	dx, [NABMBAR]
  4979                                  	;out	dx, al
  4980                                  	; 29/05/2024
  4981                                  	; al = data, byte
  4982 000022EE B401                    	mov	ah, 1 ; write port, byte
  4983 000022F0 CD34                    	int	34h
  4984                                  
  4985                                  	; 19/05/2024
  4986                                  	;call	delay1_4ms
  4987                                  
  4988 000022F2 66BA1B00                        mov     dx, PO_CR_REG
  4989 000022F6 660315[AC280000]        	add	dx, [NABMBAR]
  4990                                  	;out	dx, al
  4991                                  	; 29/05/2024
  4992                                  	; al = data, byte
  4993 000022FD B401                    	mov	ah, 1 ; write port, byte
  4994 000022FF CD34                    	int	34h
  4995                                  
  4996                                  	; 19/05/2024
  4997                                  	;call	delay1_4ms
  4998                                  
  4999 00002301 66BA2B00                        mov     dx, MC_CR_REG
  5000 00002305 660315[AC280000]        	add	dx, [NABMBAR]
  5001                                  	;out	dx, al
  5002                                  	; 29/05/2024
  5003                                  	; al = data, byte
  5004 0000230C B401                    	mov	ah, 1 ; write port, byte
  5005 0000230E CD34                    	int	34h
  5006                                  
  5007                                  	; 19/05/2024
  5008                                  	;call	delay1_4ms
  5009                                  
  5010 00002310 B002                            mov	al, RR
  5011 00002312 66BA0B00                        mov	dx, PI_CR_REG
  5012 00002316 660315[AC280000]        	add	dx, [NABMBAR]
  5013                                  	;out	dx, al
  5014                                  	; 29/05/2024
  5015                                  	; al = data, byte
  5016 0000231D B401                    	mov	ah, 1 ; write port, byte
  5017 0000231F CD34                    	int	34h
  5018                                  
  5019                                  	; 19/05/2024
  5020                                  	;call	delay1_4ms
  5021                                  
  5022 00002321 66BA1B00                        mov	dx, PO_CR_REG
  5023 00002325 660315[AC280000]        	add	dx, [NABMBAR]
  5024                                  	;out	dx, al
  5025                                  	; 29/05/2024
  5026                                  	; al = data, byte
  5027 0000232C B401                    	mov	ah, 1 ; write port, byte
  5028 0000232E CD34                    	int	34h
  5029                                  
  5030                                  	; 19/05/2024
  5031                                  	;call	delay1_4ms
  5032                                  
  5033 00002330 66BA2B00                        mov	dx, MC_CR_REG
  5034 00002334 660315[AC280000]        	add	dx, [NABMBAR]
  5035                                  	;out	dx, al
  5036                                  	; 29/05/2024
  5037                                  	; al = data, byte
  5038 0000233B B401                    	mov	ah, 1 ; write port, byte
  5039 0000233D CD34                    	int	34h
  5040                                  
  5041                                  	; 19/05/2024
  5042                                  	;call	delay1_4ms
  5043                                  
  5044 0000233F C3                      	retn
  5045                                  
  5046                                  reset_ac97_codec:
  5047                                  	; 29/05/2024 (TRDOS 386)
  5048                                  	; 11/11/2023
  5049                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  5050 00002340 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5051 00002344 660315[AC280000]        	add	dx, [NABMBAR]
  5052                                  	;in	eax, dx
  5053                                  	; 29/05/2024
  5054 0000234B B404                    	mov	ah, 4 ; read port, dword
  5055 0000234D CD34                    	int	34h
  5056                                  
  5057                                  	;test	eax, 2
  5058                                  	; 06/08/2022
  5059 0000234F A802                    	test	al, 2
  5060 00002351 7407                    	jz	short _r_ac97codec_cold	
  5061                                  
  5062 00002353 E80F000000              	call	warm_ac97codec_reset
  5063 00002358 7308                    	jnc	short _r_ac97codec_ok
  5064                                  _r_ac97codec_cold:
  5065 0000235A E845000000                      call	cold_ac97codec_reset
  5066 0000235F 7301                            jnc	short _r_ac97codec_ok
  5067                                  	
  5068                                  	; 16/04/2017
  5069                                          ;xor	eax, eax	; timeout error
  5070                                         	;stc
  5071 00002361 C3                      	retn
  5072                                  
  5073                                  _r_ac97codec_ok:
  5074 00002362 31C0                            xor     eax, eax
  5075                                          ;mov	al, VIA_ACLINK_C00_READY ; 1
  5076 00002364 FEC0                            inc	al
  5077 00002366 C3                      	retn
  5078                                  
  5079                                  warm_ac97codec_reset:
  5080                                  	; 29/05/2024 (TRDOS 386)
  5081                                  	; 11/11/2023
  5082                                  	; 06/08/2022 - TRDOS 386 v2.0.5
  5083                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  5084 00002367 B806000000              	mov	eax, 6
  5085 0000236C 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5086 00002370 660315[AC280000]        	add	dx, [NABMBAR]
  5087                                  	;out	dx, eax
  5088                                  	; 29/05/2024
  5089 00002377 53                      	push	ebx
  5090 00002378 89C3                    	mov	ebx, eax  ; ebx = data, dword
  5091 0000237A B405                    	mov	ah, 5 ; write port, dword
  5092 0000237C CD34                    	int	34h
  5093 0000237E 5B                      	pop	ebx
  5094                                  
  5095                                  	; 30/05/2024
  5096 0000237F B90A000000              	mov	ecx, 10	; total 1s
  5097                                  	; 29/05/2024
  5098                                  	;mov	ecx, 4000
  5099                                  _warm_ac97c_rst_wait:
  5100                                  	; 30/05/2024
  5101 00002384 E893000000              	call	delay_100ms
  5102                                  
  5103 00002389 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  5104 0000238D 660315[AC280000]        	add	dx, [NABMBAR]
  5105                                  	;in	eax, dx
  5106                                  	; 29/05/2024
  5107 00002394 B404                    	mov	ah, 4 ; read port, dword
  5108 00002396 CD34                    	int	34h
  5109                                  
  5110 00002398 A900030010              	test	eax, CTRL_ST_CREADY
  5111 0000239D 7504                    	jnz	short _warm_ac97c_rst_ok
  5112                                  
  5113 0000239F 49                      	dec	ecx
  5114 000023A0 75E2                    	jnz	short _warm_ac97c_rst_wait
  5115                                  
  5116                                  _warm_ac97c_rst_fail:
  5117 000023A2 F9                              stc
  5118                                  _warm_ac97c_rst_ok:
  5119 000023A3 C3                      	retn
  5120                                  
  5121                                  cold_ac97codec_reset:
  5122                                  	; 11/11/2023
  5123                                  	; 06/08/2022 - TRDOS 386 v2.0.5
  5124                                  	; 28/05/2017 - Erdogan Tan (Ref: KolibriOS, intelac97.asm)
  5125 000023A4 B802000000                      mov	eax, 2
  5126 000023A9 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5127 000023AD 660315[AC280000]        	add	dx, [NABMBAR]
  5128                                  	;out	dx, eax
  5129                                  	; 29/05/2024
  5130 000023B4 53                      	push	ebx
  5131 000023B5 89C3                    	mov	ebx, eax  ; ebx = data, dword
  5132 000023B7 B405                    	mov	ah, 5 ; write port, dword
  5133 000023B9 CD34                    	int	34h
  5134 000023BB 5B                      	pop	ebx
  5135                                  
  5136                                  	; 30/05/2024
  5137 000023BC E85B000000              	call	delay_100ms 	; wait 100 ms
  5138 000023C1 E856000000              	call	delay_100ms 	; wait 100 ms
  5139 000023C6 E851000000              	call	delay_100ms 	; wait 100 ms
  5140 000023CB E84C000000              	call	delay_100ms 	; wait 100 ms
  5141                                  
  5142                                  	; 30/05/2024
  5143 000023D0 B910000000              	mov	ecx, 16	; total 20*100 ms = 2s
  5144                                  	; 29/05/2024
  5145                                  	;mov	ecx, 16000
  5146                                  _cold_ac97c_rst_wait:
  5147 000023D5 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  5148 000023D9 660315[AC280000]        	add	dx, [NABMBAR]
  5149                                  	;in	eax, dx
  5150                                  	; 29/05/2024
  5151 000023E0 B404                    	mov	ah, 4 ; read port, dword
  5152 000023E2 CD34                    	int	34h
  5153                                  
  5154 000023E4 A900030010              	test	eax, CTRL_ST_CREADY
  5155 000023E9 7509                    	jnz	short _cold_ac97c_rst_ok
  5156                                  
  5157                                  	; 30/05/2024
  5158                                  	; 29/05/2024
  5159 000023EB E82C000000              	call	delay_100ms
  5160                                  
  5161 000023F0 49                      	dec	ecx
  5162 000023F1 75E2                    	jnz	short _cold_ac97c_rst_wait
  5163                                  
  5164                                  _cold_ac97c_rst_fail:
  5165 000023F3 F9                              stc
  5166                                  _cold_ac97c_rst_ok:
  5167 000023F4 C3                      	retn
  5168                                  
  5169                                  ; 30/05/2024
  5170                                  %if 1
  5171                                  check_vra:
  5172                                  	; 29/05/2024
  5173 000023F5 C605[31280000]01        	mov	byte [VRA], 1
  5174                                  
  5175                                  	; 29/05/2024 - audio.s (TRDOS 386 Kernel) - 27/05/2024
  5176                                  	; 24/05/2024
  5177                                  	; 23/05/2024
  5178 000023FC 668B15[AA280000]        	mov	dx, [NAMBAR]
  5179 00002403 6683C228                	add	dx, CODEC_EXT_AUDIO_REG	; 28h
  5180                                  	;in	ax, dx
  5181                                  	; 29/05/2024
  5182 00002407 B402                    	mov	ah, 2 ; read port, word
  5183 00002409 CD34                    	int	34h
  5184                                  
  5185                                  	; 30/05/2024
  5186                                  	; 23/05/2024
  5187 0000240B E81B000000              	call	delay1_4ms
  5188                                  
  5189                                  	; 29/05/2024
  5190 00002410 A801                    	test	al, BIT0
  5191                                  	;test	al, 1 ; BIT0 ; Variable Rate Audio bit
  5192 00002412 7507                    	jnz	short check_vra_ok
  5193                                  
  5194                                  vra_not_supported:
  5195                                  	; 13/11/2023
  5196 00002414 C605[31280000]00        	mov	byte [VRA], 0
  5197                                  check_vra_ok:
  5198 0000241B C3                      	retn
  5199                                  %endif
  5200                                  
  5201                                  ; --------------------------------------------------------
  5202                                  
  5203                                  PORTB		EQU 061h
  5204                                  REFRESH_STATUS	EQU 010h	; Refresh signal status
  5205                                  
  5206                                  delay_100ms:
  5207 0000241C 51                      	push	ecx
  5208 0000241D B990010000              	mov	ecx, 400  ; 400*0.25ms
  5209                                  _delay_x_ms:
  5210 00002422 E804000000              	call	delay1_4ms
  5211 00002427 E2F9                            loop	_delay_x_ms
  5212 00002429 59                      	pop	ecx
  5213 0000242A C3                      	retn
  5214                                  
  5215                                  delay1_4ms:
  5216                                  	; 30/05/2024 (TRDOS 386)
  5217 0000242B 50                              push    eax 
  5218 0000242C 51                              push    ecx
  5219 0000242D 53                      	push	ebx
  5220 0000242E 52                      	push	edx
  5221 0000242F B910000000                      mov     ecx, 16			; close enough.
  5222                                  	;in	al, PORTB
  5223                                  	; 30/05/2024
  5224 00002434 66BA6100                	mov	dx, PORTB
  5225 00002438 B400                    	mov	ah, 0  ; read port, byte
  5226 0000243A CD34                    	int	34h
  5227                                  
  5228 0000243C 2410                    	and	al, REFRESH_STATUS
  5229                                  	;mov	ah, al			; Start toggle state
  5230 0000243E 88C3                    	mov	bl, al
  5231 00002440 09C9                    	or	ecx, ecx
  5232 00002442 7401                    	jz	short _d4ms1
  5233 00002444 41                      	inc	ecx			; Throwaway first toggle
  5234                                  _d4ms1:	
  5235                                  	;in	al, PORTB		; Read system control port
  5236                                  	; 30/05/2024
  5237 00002445 66BA6100                	mov	dx, PORTB
  5238 00002449 B400                    	mov	ah, 0  ; read port, byte
  5239 0000244B CD34                    	int	34h
  5240                                  
  5241 0000244D 2410                    	and	al, REFRESH_STATUS	; Refresh toggles 15.085 microseconds
  5242                                  	;cmp	ah, al
  5243 0000244F 38C3                    	cmp	bl, al
  5244 00002451 74F2                    	je	short _d4ms1		; Wait for state change
  5245                                  
  5246                                  	;mov	ah, al			; Update with new state
  5247 00002453 88C3                    	mov	bl, al
  5248 00002455 49                      	dec	ecx
  5249 00002456 75ED                    	jnz	short _d4ms1
  5250                                  
  5251 00002458 5A                      	pop	edx
  5252 00002459 5B                              pop	ebx
  5253 0000245A 59                      	pop	ecx
  5254 0000245B 58                              pop	eax
  5255 0000245C C3                              retn
  5256                                  
  5257                                  ; --------------------------------------------------------
  5258                                  ; 19/05/2024 - (playwav4.asm) ich_wav4.asm
  5259                                  ; --------------------------------------------------------
  5260                                  
  5261                                  check4keyboardstop:
  5262                                  	; 29/05/2024 (TRDOS 386)
  5263                                  	; 19/05/2024
  5264                                  	; 08/11/2023
  5265                                  	; 06/11/2023
  5266                                  	; 04/11/2023
  5267 0000245D B401                    	mov	ah, 1
  5268                                  	;int	16h
  5269 0000245F CD32                    	int	32h	; TRDOS 386
  5270                                  	;clc
  5271 00002461 743E                    	jz	short _cksr
  5272                                  
  5273 00002463 30E4                    	xor	ah, ah
  5274                                  	;int	16h
  5275 00002465 CD32                    	int	32h	; TRDOS 386
  5276                                  
  5277                                  	;;;
  5278                                  	; 19/05/2024 (change PCM out volume)
  5279 00002467 3C2B                    	cmp	al, '+'
  5280 00002469 750D                    	jne	short p_1
  5281                                  	
  5282 0000246B A0[02250000]            	mov	al, [volume]
  5283 00002470 3C00                    	cmp	al, 0
  5284 00002472 762E                    	jna	short p_3
  5285 00002474 FEC8                    	dec	al
  5286 00002476 EB0F                    	jmp	short p_2
  5287                                  p_1:
  5288 00002478 3C2D                    	cmp	al, '-'
  5289 0000247A 7527                    	jne	short p_4
  5290                                  
  5291 0000247C A0[02250000]            	mov	al, [volume]
  5292 00002481 3C1F                    	cmp	al, 31
  5293 00002483 731D                    	jnb	short p_3
  5294 00002485 FEC0                    	inc	al
  5295                                  p_2:
  5296 00002487 A2[02250000]            	mov	[volume], al
  5297 0000248C 88C4                    	mov	ah, al
  5298 0000248E 668B15[AA280000]        	mov     dx, [NAMBAR]
  5299                                    	;add    dx, CODEC_MASTER_VOL_REG
  5300 00002495 6683C218                	add	dx, CODEC_PCM_OUT_REG
  5301                                  	;out	dx, ax
  5302                                  	; 29/05/2024
  5303 00002499 53                      	push	ebx
  5304 0000249A 89C3                    	mov	ebx, eax ; bx = data, word
  5305 0000249C B403                    	mov	ah, 3 ; write port, word
  5306 0000249E CD34                    	int	34h
  5307 000024A0 5B                      	pop	ebx
  5308                                  
  5309                                  	;call	delay1_4ms
  5310                                          ;call	delay1_4ms
  5311                                          ;call	delay1_4ms
  5312                                          ;call	delay1_4ms
  5313                                  _cksr:		; 19/05/2024
  5314 000024A1 F8                      	clc
  5315                                  p_3:
  5316 000024A2 C3                      	retn
  5317                                  p_4:
  5318                                  	;;;
  5319                                  ;_cskr:	
  5320 000024A3 F9                      	stc
  5321 000024A4 C3                      	retn
  5322                                  
  5323                                  ; returns AL = current index value
  5324                                  getCurrentIndex:
  5325                                  	; 29/05/2024 (TRDOS 386)
  5326                                  	; 08/11/2023
  5327 000024A5 668B15[AC280000]        	mov	dx, [NABMBAR]
  5328 000024AC 6683C214                	add	dx, PO_CIV_REG
  5329                                  	;in	al, dx
  5330                                  	; 29/05/2024
  5331 000024B0 B400                    	mov	ah, 0 ; read port, byte
  5332 000024B2 CD34                    	int	34h
  5333                                  uLVI2:	;	06/11/2023
  5334 000024B4 C3                      	retn
  5335                                  
  5336                                  updateLVI:
  5337                                  	; 29/05/2024 (TRDOS 386)
  5338                                  	; 08/11/2023
  5339                                  	; 07/11/2023
  5340                                  	; 06/11/2023
  5341 000024B5 668B15[AC280000]        	mov	dx, [NABMBAR]
  5342 000024BC 6683C214                	add	dx, PO_CIV_REG
  5343                                  	; (Current Index Value and Last Valid Index value)
  5344                                  	;in	ax, dx
  5345                                  	; 29/05/2024
  5346 000024C0 B402                    	mov	ah, 2 ; read port, word
  5347 000024C2 CD34                    	int	34h
  5348                                  
  5349 000024C4 38E0                    	cmp	al, ah ; is current index = last index ?
  5350 000024C6 75EC                    	jne	short uLVI2
  5351                                  
  5352                                  	; 08/11/2023	
  5353 000024C8 E8D8FFFFFF              	call	getCurrentIndex
  5354                                   
  5355 000024CD F605[30280000]01        	test	byte [flags], ENDOFFILE
  5356                                  	;jnz	short uLVI1
  5357 000024D4 7418                    	jz	short uLVI0  ; 08/11/2023
  5358                                  
  5359                                  	; 08/11/2023
  5360 000024D6 50                      	push	eax	; 29/05/2024 (32 bit)
  5361 000024D7 668B15[AC280000]        	mov	dx, [NABMBAR]
  5362 000024DE 6683C216                	add	dx, PO_SR_REG  ; PCM out status register
  5363                                  	;in	ax, dx
  5364                                  	; 29/05/2024
  5365 000024E2 B402                    	mov	ah, 2 ; read port, word
  5366 000024E4 CD34                    	int	34h
  5367                                  
  5368 000024E6 A803                    	test	al, 3 ; bit 1 = Current Equals Last Valid (CELV)
  5369                                  		      ; (has been processed)
  5370                                  		      ; bit 0 = 1 -> DMA Controller Halted (DCH)
  5371 000024E8 58                      	pop	eax
  5372 000024E9 7407                    	jz	short uLVI1
  5373                                  uLVI3:
  5374 000024EB 31C0                    	xor	eax, eax
  5375                                  	; zf = 1
  5376 000024ED C3                      	retn
  5377                                  uLVI0:
  5378                                          ; not at the end of the file yet.
  5379 000024EE FEC8                    	dec	al
  5380 000024F0 241F                    	and	al, 1Fh
  5381                                  uLVI1:
  5382                                  	;call	setLastValidIndex
  5383                                  ;uLVI2:
  5384                                  	;retn
  5385                                  
  5386                                  ;input AL = index # to stop on
  5387                                  setLastValidIndex:
  5388                                  	; 29/05/2024 (TRDOS 386)
  5389                                  	; 08/11/2023
  5390 000024F2 668B15[AC280000]        	mov	dx, [NABMBAR]
  5391 000024F9 6683C215                	add	dx, PO_LVI_REG
  5392                                          ;out	dx, al
  5393                                  	; 29/05/2024
  5394                                  	; al = data, byte
  5395 000024FD B401                    	mov	ah, 1 ; write port, byte
  5396 000024FF CD34                    	int	34h
  5397 00002501 C3                      	retn
  5398                                  
  5399                                  ; 29/05/2024
  5400                                  ; 19/05/2024
  5401 00002502 02                      volume: db	02h
  5402                                  	
  5403                                  ; --------------------------------------------------------
  5404                                  
  5405                                  ; DATA
  5406                                  
  5407                                  FileHandle:	
  5408 00002503 FFFFFFFF                	dd	-1
  5409                                  
  5410                                  ; 30/05/2024
  5411 00002507 00                      reset:	db	0
  5412                                  
  5413                                  Credits:
  5414 00002508 54696E792057415620-     	db	'Tiny WAV Player for TRDOS 386 by Erdogan Tan. '
  5414 00002511 506C6179657220666F-
  5414 0000251A 72205452444F532033-
  5414 00002523 383620627920457264-
  5414 0000252C 6F67616E2054616E2E-
  5414 00002535 20                 
  5415                                  	;;db	'August 2020.',10,13,0
  5416                                  	;db	'May 2024.',10,13,0
  5417 00002536 446563656D62657220-     	db	'December 2024',10,13,0
  5417 0000253F 323032340A0D00     
  5418 00002546 31372F30362F323031-     	db	'17/06/2017', 10,13,0
  5418 0000254F 370A0D00           
  5419 00002553 31382F30382F323032-     	db	'18/08/2020', 10,13,0
  5419 0000255C 300A0D00           
  5420 00002560 32372F31312F323032-     	db	'27/11/2023', 10,13,0
  5420 00002569 330A0D00           
  5421 0000256D 32392F30352F323032-     	db	'29/05/2024', 10,13,0
  5421 00002576 340A0D00           
  5422 0000257A 30382F31322F323032-     	db	'08/12/2024', 10,13,0
  5422 00002583 340A0D00           
  5423                                  
  5424                                  msgAudioCardInfo:
  5425 00002587 666F7220496E74656C-     	db 	'for Intel AC97 (ICH) Audio Controller.', 10,13,0
  5425 00002590 204143393720284943-
  5425 00002599 482920417564696F20-
  5425 000025A2 436F6E74726F6C6C65-
  5425 000025AB 722E0A0D00         
  5426                                  
  5427                                  msg_usage:
  5428 000025B0 75736167653A20706C-     	db	'usage: playwav7 filename.wav',10,13,0 ; 29/05/2024
  5428 000025B9 617977617637206669-
  5428 000025C2 6C656E616D652E7761-
  5428 000025CB 760A0D00           
  5429                                  
  5430                                  noDevMsg:
  5431 000025CF 4572726F723A20556E-     	db	'Error: Unable to find AC97 audio device!'
  5431 000025D8 61626C6520746F2066-
  5431 000025E1 696E64204143393720-
  5431 000025EA 617564696F20646576-
  5431 000025F3 69636521           
  5432 000025F7 0A0D00                  	db	10,13,0
  5433                                  
  5434                                  noFileErrMsg:
  5435 000025FA 4572726F723A206669-     	db	'Error: file not found.',10,13,0
  5435 00002603 6C65206E6F7420666F-
  5435 0000260C 756E642E0A0D00     
  5436                                  
  5437                                  msg_error:	; 29/05/2024
  5438                                  trdos386_err_msg:
  5439 00002613 5452444F5320333836-     	db	'TRDOS 386 System call error !',10,13,0
  5439 0000261C 2053797374656D2063-
  5439 00002625 616C6C206572726F72-
  5439 0000262E 20210A0D00         
  5440                                  
  5441                                  ; 29/05/2024
  5442                                  ; 11/11/2023
  5443                                  msg_init_err:
  5444 00002633 0A0D                    	db	10,13
  5445 00002635 4143393720436F6E74-     	db	"AC97 Controller/Codec initialization error !"
  5445 0000263E 726F6C6C65722F436F-
  5445 00002647 64656320696E697469-
  5445 00002650 616C697A6174696F6E-
  5445 00002659 206572726F722021   
  5446 00002661 0A0D00                  	db	10,13,0 ; 01/06/2024
  5447                                  
  5448                                  ; 25/11/2023
  5449                                  msg_no_vra:
  5450 00002664 0A0D                    	db	10,13
  5451 00002666 4E6F20565241207375-     	db	"No VRA support ! Only 48 kHZ sample rate supported !"
  5451 0000266F 70706F72742021204F-
  5451 00002678 6E6C79203438206B48-
  5451 00002681 5A2073616D706C6520-
  5451 0000268A 726174652073757070-
  5451 00002693 6F727465642021     
  5452 0000269A 0A0D00                  	db	10,13,0
  5453                                  
  5454                                  ; 29/05/2024 (TRDOS 386)
  5455                                  ; 17/02/2017
  5456                                  ; Valid ICH device IDs
  5457                                  
  5458                                  valid_ids:
  5459 0000269D 86801524                dd	(ICH_DID << 16) + INTEL_VID  	 ; 8086h:2415h
  5460 000026A1 86802524                dd	(ICH0_DID << 16) + INTEL_VID 	 ; 8086h:2425h
  5461 000026A5 86804524                dd	(ICH2_DID << 16) + INTEL_VID 	 ; 8086h:2445h
  5462 000026A9 86808524                dd	(ICH3_DID << 16) + INTEL_VID 	 ; 8086h:2485h
  5463 000026AD 8680C524                dd	(ICH4_DID << 16) + INTEL_VID 	 ; 8086h:24C5h
  5464 000026B1 8680D524                dd	(ICH5_DID << 16) + INTEL_VID 	 ; 8086h:24D5h
  5465 000026B5 86806E26                dd	(ICH6_DID << 16) + INTEL_VID 	 ; 8086h:266Eh
  5466 000026B9 8680A625                dd	(ESB6300_DID << 16) + INTEL_VID  ; 8086h:25A6h
  5467 000026BD 86809826                dd	(ESB631X_DID << 16) + INTEL_VID  ; 8086h:2698h
  5468 000026C1 8680DE27                dd	(ICH7_DID << 16) + INTEL_VID 	 ; 8086h:27DEh
  5469                                  ; 03/11/2023 - Erdogan Tan
  5470 000026C5 86809571                dd	(MX82440_DID << 16) + INTEL_VID  ; 8086h:7195h
  5471 000026C9 39101270                dd	(SI7012_DID << 16)  + SIS_VID	 ; 1039h:7012h
  5472 000026CD DE10B101                dd 	(NFORCE_DID << 16)  + NVIDIA_VID ; 10DEh:01B1h
  5473 000026D1 DE106A00                dd 	(NFORCE2_DID << 16) + NVIDIA_VID ; 10DEh:006Ah
  5474 000026D5 22106D74                dd 	(AMD8111_DID << 16) + AMD_VID 	 ; 1022h:746Dh
  5475 000026D9 22104574                dd 	(AMD768_DID << 16)  + AMD_VID 	 ; 1022h:7445h
  5476 000026DD DE105900                dd 	(CK804_DID << 16) + NVIDIA_VID	 ; 10DEh:0059h
  5477 000026E1 DE103A00                dd 	(MCP04_DID << 16) + NVIDIA_VID	 ; 10DEh:003Ah
  5478 000026E5 DE108A00                dd 	(CK8_DID << 16) + NVIDIA_VID	 ; 1022h:008Ah
  5479 000026E9 DE10DA00                dd 	(NFORCE3_DID << 16) + NVIDIA_VID ; 10DEh:00DAh
  5480 000026ED DE10EA00                dd 	(CK8S_DID << 16) + NVIDIA_VID	 ; 10DEh:00EAh
  5481                                  
  5482                                  valid_id_count:	equ ($ - valid_ids)>>2 ; 05/11/2023
  5483                                  
  5484 000026F1 0D0A5741562046696C-     msgWavFileName:	db 0Dh, 0Ah, "WAV File Name: ",0
  5484 000026FA 65204E616D653A2000 
  5485 00002703 0D0A53616D706C6520-     msgSampleRate:	db 0Dh, 0Ah, "Sample Rate: "
  5485 0000270C 526174653A20       
  5486 00002712 303030303020487A2C-     msgHertz:	db "00000 Hz, ", 0 
  5486 0000271B 2000               
  5487 0000271D 3820626974732C2000      msg8Bits:	db "8 bits, ", 0 
  5488 00002726 4D6F6E6F0D0A00          msgMono:	db "Mono", 0Dh, 0Ah, 0
  5489 0000272D 313620626974732C20-     msg16Bits:	db "16 bits, ", 0 
  5489 00002736 00                 
  5490 00002737 53746572656F            msgStereo:	db "Stereo"
  5491 0000273D 0D0A00                  nextline:	db 0Dh, 0Ah, 0
  5492                                  
  5493                                  ; 03/06/2017
  5494 00002740 303132333435363738-     hex_chars	db "0123456789ABCDEF", 0
  5494 00002749 3941424344454600   
  5495 00002751 0D0A                    msgAC97Info	db 0Dh, 0Ah
  5496 00002753 414339372041756469-     		db "AC97 Audio Controller & Codec Info", 0Dh, 0Ah 
  5496 0000275C 6F20436F6E74726F6C-
  5496 00002765 6C6572202620436F64-
  5496 0000276E 656320496E666F0D0A 
  5497 00002777 56656E646F72204944-     		db "Vendor ID: "
  5497 00002780 3A20               
  5498 00002782 303030306820446576-     msgVendorId	db "0000h Device ID: "
  5498 0000278B 6963652049443A20   
  5499 00002793 30303030680D0A          msgDevId	db "0000h", 0Dh, 0Ah
  5500 0000279A 4275733A20              		db "Bus: "
  5501 0000279F 303068204465766963-     msgBusNo	db "00h Device: "
  5501 000027A8 653A20             
  5502 000027AB 3030682046756E6374-     msgDevNo	db "00h Function: "
  5502 000027B4 696F6E3A20         
  5503 000027B9 303068                  msgFncNo	db "00h"
  5504 000027BC 0D0A                    		db 0Dh, 0Ah
  5505 000027BE 4E414D4241523A20        		db "NAMBAR: "
  5506 000027C6 30303030682020          msgNamBar	db "0000h  "
  5507 000027CD 4E41424D4241523A20      		db "NABMBAR: "
  5508 000027D6 303030306820204952-     msgNabmBar	db "0000h  IRQ: "
  5508 000027DF 513A20             
  5509 000027E2 3030                    msgIRQ		dw 3030h
  5510 000027E4 0D0A00                  		db 0Dh, 0Ah, 0
  5511                                  ; 25/11/2023
  5512 000027E7 56524120737570706F-     msgVRAheader:	db "VRA support: "
  5512 000027F0 72743A20           
  5513 000027F4 00                      		db 0	
  5514 000027F5 5945530D0A00            msgVRAyes:	db "YES", 0Dh, 0Ah, 0
  5515 000027FB 4E4F200D0A              msgVRAno:	db "NO ", 0Dh, 0Ah
  5516 00002800 28496E746572706F6C-     		db "(Interpolated sample rate playing method)"
  5516 00002809 617465642073616D70-
  5516 00002812 6C6520726174652070-
  5516 0000281B 6C6179696E67206D65-
  5516 00002824 74686F6429         
  5517 00002829 0D0A00                  		db 0Dh, 0Ah, 0
  5518                                  EOF: 
  5519                                  
  5520                                  ; BSS
  5521                                  
  5522                                  bss_start:
  5523                                  
  5524                                  ABSOLUTE bss_start
  5525                                  
  5526                                  alignb 4
  5527                                  
  5528 0000282C ??                      stmo:		resb 1 ; stereo or mono (1=stereo) 
  5529 0000282D ??                      bps:		resb 1 ; bits per sample (8,16)
  5530 0000282E ????                    sample_rate:	resw 1 ; Sample Frequency (Hz)
  5531                                  
  5532                                  ; 31/05/2024
  5533                                  ; 25/11/2023
  5534                                  ;bufferSize:	resd 1
  5535                                  
  5536 00002830 ??                      flags:		resb 1
  5537                                  
  5538                                  ; 29/05/2024
  5539                                  ;;cbs_busy:	resb 1
  5540                                  ;half_buff:	resb 1
  5541                                  ;srb:		resb 1
  5542                                  
  5543                                  ; 30/05/2024
  5544                                  ; 18/08/2020
  5545                                  ;volume_level:	resb 1
  5546                                  ; 25/11/2023
  5547 00002831 ??                      VRA:		resb 1	; Variable Rate Audio Support Status
  5548                                  
  5549 00002832 <res 1Ch>               smpRBuff:	resw 14 
  5550                                  
  5551                                  wav_file_name:
  5552 0000284E <res 50h>               		resb 80 ; wave file, path name (<= 80 bytes)
  5553                                  
  5554 0000289E ????                    		resw 1
  5555 000028A0 ??                      ac97_int_ln_reg: resb 1
  5556 000028A1 ??                      fbs_shift:	resb 1 ; 26/11/2023
  5557 000028A2 ????????                dev_vendor:	resd 1
  5558 000028A6 ????????                bus_dev_fn:	resd 1
  5559                                  ;ac97_NamBar:	resw 1
  5560                                  ;ac97_NabmBar:	resw 1
  5561                                  
  5562                                  ; 29/05/2024
  5563                                  ; 17/02/2017
  5564                                  ; NAMBAR:  Native Audio Mixer Base Address Register
  5565                                  ;    (ICH, Audio D31:F5, PCI Config Space) Address offset: 10h-13h
  5566                                  ; NABMBAR: Native Audio Bus Mastering Base Address register
  5567                                  ;    (ICH, Audio D31:F5, PCI Config Space) Address offset: 14h-17h
  5568 000028AA ????                    NAMBAR:		resw 1			; BAR for mixer
  5569 000028AC ????                    NABMBAR:	resw 1			; BAR for bus master regs
  5570                                  
  5571                                  ; 29/05/2024
  5572 000028AE ????????                audio_buffer:	resd 1
  5573                                  ; 29/05/2024
  5574 000028B2 ????????                _bdl_buffer:	resd 1
  5575                                  ;wav_buffer1:	resd 1
  5576                                  ;wav_buffer2:	resd 1
  5577                                  
  5578                                  bss_end:
  5579                                  
  5580 000028B6 <res 74Ah>              alignb 4096
  5581                                  		; 256 byte buffer for descriptor list
  5582 00003000 <res 100h>              BDL_BUFFER:	resb 256
  5583                                  
  5584 00003100 <res F00h>              alignb 4096
  5585                                  
  5586                                  ;audio_buffer:	resb BUFFERSIZE ; DMA Buffer Size / 2 (32768)
  5587                                  ; 29/05/2024
  5588                                  ; 26/11/2023
  5589                                  ;audio_buffer:	resb 65536
  5590                                  ; 29/05/2024
  5591 00004000 <res 10000h>            WAVBUFFER_1:	resb 65536
  5592 00014000 <res 10000h>            WAVBUFFER_2:	resb 65536
  5593                                  ; 13/06/2017
  5594                                  ;temp_buffer:	resb BUFFERSIZE
  5595                                  ; 26/11/2023
  5596 00024000 <res 10000h>            temp_buffer:	resb 65536
