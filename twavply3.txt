     1                                  ; ****************************************************************************
     2                                  ; twavplay.asm (for TRDOS 386) -twavplay3.s-
     3                                  ; ----------------------------------------------------------------------------
     4                                  ; TWAVPLAY.PRG ! AC'97 & SB16 WAV PLAYER & VGA DEMO program by Erdogan TAN
     5                                  ;
     6                                  ; 09/02/2025
     7                                  ;
     8                                  ; [ Last Modification: 10/02/2025 ]
     9                                  ;
    10                                  ; Assembler: NASM 2.15
    11                                  ; ----------------------------------------------------------------------------
    12                                  ;	   nasm  twavplay.s -l twavplay.txt -o TWAVPLAY.PRG
    13                                  ; ****************************************************************************
    14                                  
    15                                  ; VGA Video Mode 12h, 640*480 16 colors, stereo wave scope/graphics
    16                                  
    17                                  ; ----------------------------------------------------------------------------
    18                                  ; TuneLoop method for AC97 - Interrupt/Callback (syscalbac) method for SB16
    19                                  ; ----------------------------------------------------------------------------
    20                                  
    21                                  ; 09/02/2025
    22                                  ; Code reference:
    23                                  ;	twavplay.asm (TWAVPLAY.COM, 09/02/2025)
    24                                  ;	ac97play.s (AC97PLAY.PRG, 05/02/2025
    25                                  
    26                                  ; ----------------------------------------------------------------------------
    27                                  
    28                                  ; 30/11/2024
    29                                  ; 20/08/2024 ; TRDOS 386 v2.0.9
    30                                  ; 29/04/2016
    31                                  _ver 	equ 0
    32                                  _exit 	equ 1
    33                                  _fork 	equ 2
    34                                  _read 	equ 3
    35                                  _write	equ 4
    36                                  _open	equ 5
    37                                  _close 	equ 6
    38                                  _wait 	equ 7
    39                                  _creat 	equ 8
    40                                  _link 	equ 9
    41                                  _unlink	equ 10
    42                                  _exec	equ 11
    43                                  _chdir	equ 12
    44                                  _time 	equ 13
    45                                  _mkdir 	equ 14
    46                                  _chmod	equ 15
    47                                  _chown	equ 16
    48                                  _break	equ 17
    49                                  _stat	equ 18
    50                                  _seek	equ 19
    51                                  _tell 	equ 20
    52                                  _mount	equ 21
    53                                  _umount	equ 22
    54                                  _setuid	equ 23
    55                                  _getuid	equ 24
    56                                  _stime	equ 25
    57                                  _quit	equ 26
    58                                  _intr	equ 27
    59                                  _fstat	equ 28
    60                                  _emt 	equ 29
    61                                  _mdate 	equ 30
    62                                  _video 	equ 31
    63                                  _audio	equ 32
    64                                  _timer	equ 33
    65                                  _sleep	equ 34
    66                                  _msg    equ 35
    67                                  _geterr	equ 36
    68                                  _fpsave	equ 37
    69                                  _pri	equ 38
    70                                  _rele	equ 39
    71                                  _fff	equ 40
    72                                  _fnf	equ 41
    73                                  _alloc	equ 42
    74                                  _dalloc equ 43
    75                                  _calbac equ 44
    76                                  _dma	equ 45
    77                                  _stdio  equ 46
    78                                  
    79                                  ; ----------------------------------------------------------------------------
    80                                  
    81                                  %macro sys 1-4
    82                                      ; 29/04/2016 - TRDOS 386 (TRDOS v2.0)
    83                                      ; 03/09/2015
    84                                      ; 13/04/2015
    85                                      ; Retro UNIX 386 v1 system call.
    86                                      %if %0 >= 2
    87                                          mov ebx, %2
    88                                          %if %0 >= 3
    89                                              mov ecx, %3
    90                                              %if %0 = 4
    91                                                 mov edx, %4
    92                                              %endif
    93                                          %endif
    94                                      %endif
    95                                      mov eax, %1
    96                                      ;int 30h
    97                                      int 40h ; TRDOS 386 (TRDOS v2.0)
    98                                  %endmacro
    99                                  
   100                                  ; Retro UNIX 386 v1 system call format:
   101                                  ; sys systemcall (eax) <arg1 (ebx)>, <arg2 (ecx)>, <arg3 (edx)>
   102                                  
   103                                  ; ----------------------------------------------------------------------------
   104                                  
   105                                  %macro	SbOut	1
   106                                  %%Wait:
   107                                  	;in	al, dx
   108                                  	mov	ah, 0
   109                                  	int	34h
   110                                  	or	al, al
   111                                  	js	short %%Wait
   112                                  	mov	al, %1
   113                                  	;out	dx, al
   114                                  	mov	ah, 1
   115                                  	int	34h
   116                                  %endmacro
   117                                  
   118                                  ; ----------------------------------------------------------------------------
   119                                  
   120                                  ;BUFFERSIZE equ 65520 ; AC97
   121                                  ; 07/02/2025
   122                                  ;BUFFERSIZE equ 33680 ; AC97
   123                                  ; 08/02/2025	
   124                                  ;BUFFERSIZE equ 10548 ; AC97 ; 48kHZ 16bit stereo audio block (18.2 block/s) 
   125                                  
   126                                  ENDOFFILE equ 1	; flag for knowing end of file
   127                                  
   128                                  ;LOADSIZE equ 16384 ; SB16
   129                                  ;dma_buffer_size equ 32768  ; SB16
   130                                  ; 08/02/2025
   131                                  ;LOADSIZE equ 10560 ; SB16 ; 48kHZ 16bit stereo audio block (18.2 block/s)
   132                                  
   133                                  ; ----------------------------------------------------------------------------
   134                                  ; Reference:
   135                                  ; ----------
   136                                  ; Tiny Player v2.11 by Carlos Hasan.
   137                                  ;	June, 1994.
   138                                  
   139                                  ;=============================================================================
   140                                  ;	code
   141                                  ;=============================================================================
   142                                  
   143                                  [BITS 32] ; 32-bit intructions
   144                                  
   145                                  [ORG 0]
   146                                  
   147                                  	; 09/02/2025
   148                                  Start:
   149                                  	; Prints the Credits Text.
   150                                  	sys	_msg, Credits, 255, 0Bh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000000 BB[F4730000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000005 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000000A BA0B000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000000F B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00000014 CD40                <1>  int 40h
   151                                  
   152                                  	; Clear BSS (uninitialized data) area
   153 00000016 B9B0020000              	mov	ecx, (bss_end - bss_start) / 4
   154 0000001B BF[42770000]            	mov	edi, bss_start
   155 00000020 31C0                    	xor	eax, eax
   156 00000022 F366AB                  	rep	stosw
   157                                  
   158                                  	; Detect (& Enable) AC'97 or SB16 Audio Device
   159 00000025 E8A72B0000              	call	detect_audio_device
   160 0000002A 7318                    	jnc     short GetFileName
   161                                  
   162                                  _dev_not_ready:
   163                                  	; couldn't find the audio device!
   164                                  	sys	_msg, noDevMsg, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000002C BB[61740000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000031 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000036 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000003B B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00000040 CD40                <1>  int 40h
   165 00000042 EB6E                            jmp     Exit
   166                                  
   167                                  ; ----------------------------------------------------------------------------
   168                                  
   169                                  GetFileName:
   170                                  	; (TRDOS 386 -Retro UNIX 386- argument transfer method)
   171                                  	; (stack: argc,argv0addr,argv1addr,argv2addr ..
   172                                  	;			.. argv0text, argv1text ..) 
   173                                  	; ---- argc, argv[] ----
   174 00000044 89E6                    	mov	esi, esp
   175 00000046 AD                      	lodsd
   176 00000047 83F802                  	cmp	eax, 2 ; two arguments 
   177 0000004A 7302                    	jnb	short _x
   178 0000004C EB4E                    	jmp	pmsg_usage
   179                                  
   180                                  _x:
   181 0000004E AD                      	lodsd	; skip program (PRG) file name
   182 0000004F 8B36                    	mov	esi, [esi] ; WAV file name 
   183                                  
   184 00000051 BF[78770000]            	mov	edi, wav_file_name
   185 00000056 31C9                    	xor	ecx, ecx ; 0
   186                                  ScanName:       
   187 00000058 AC                      	lodsb
   188                                  
   189 00000059 3C0D                    	cmp	al, 0Dh	; CR
   190 0000005B 7633                    	jna	short a_4
   191                                  _y:
   192 0000005D 3C20                    	cmp	al, 20h
   193 0000005F 74F7                    	je	short ScanName	; scan start of name.
   194 00000061 AA                      	stosb
   195 00000062 B4FF                    	mov	ah, 0FFh
   196                                  a_0:	
   197 00000064 FEC4                    	inc	ah
   198                                  a_1:
   199 00000066 41                      	inc	ecx
   200 00000067 AC                      	lodsb
   201 00000068 AA                      	stosb
   202 00000069 3C2E                    	cmp	al, '.'
   203 0000006B 74F7                    	je	short a_0
   204 0000006D 3C20                    	cmp	al, 20h
   205 0000006F 7611                    	jna	short a_3
   206 00000071 20E4                    	and	ah, ah
   207 00000073 7406                    	jz	short a_2
   208                                  
   209 00000075 3C5C                    	cmp	al, '\'
   210 00000077 7502                    	jne	short a_2
   211 00000079 B400                    	mov	ah, 0
   212                                  a_2:
   213 0000007B 80F94B                  	cmp	cl, 75	; 64+8+'.'+3 -> offset 75 is the last chr
   214 0000007E 72E6                    	jb	short a_1
   215 00000080 EB0E                    	jmp	short a_4
   216                                  a_3:
   217 00000082 4F                      	dec	edi
   218 00000083 08E4                    	or	ah, ah		; if period NOT found,
   219 00000085 7509                    	jnz	short a_4 	; then add a .WAV extension.
   220                                  SetExt:
   221 00000087 C7072E574156            	mov	dword [edi], '.WAV' ; ! 64+12 is DOS limit
   222                                  				    ;   but writing +4 must not
   223                                  				    ;   destroy the following data
   224                                  				; so, 80 bytes path + 0 is possible here
   225 0000008D 83C704                  	add	edi, 4
   226                                  a_4:	
   227 00000090 C60700                  	mov	byte [edi], 0
   228                                  	
   229 00000093 803D[78770000]20        	cmp	byte [wav_file_name], 20h
   230 0000009A 7721                    	ja	short open_wav_file
   231                                  
   232                                  ; ----------------------------------------------------------------------------
   233                                  
   234                                  pmsg_usage: 
   235                                  	sys	_msg, msg_usage, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000009C BB[40740000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000000A1 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000000A6 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000000AB B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000000B0 CD40                <1>  int 40h
   236                                  
   237                                  Exit:
   238 000000B2 31DB                    	xor	ebx, ebx ; exit code = 0 ; not necessary
   239                                  	sys	_exit
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87                              <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000000B4 B801000000          <1>  mov eax, %1
    96                              <1> 
    97 000000B9 CD40                <1>  int 40h
   240                                  halt:
   241 000000BB EBFE                    	jmp	short halt
   242                                  
   243                                  ; ----------------------------------------------------------------------------
   244                                  
   245                                  open_wav_file:
   246                                          ; open existing file
   247 000000BD BA[78770000]            	mov	edx, wav_file_name
   248 000000C2 E8DC010000                      call    openFile ; no error? ok.
   249 000000C7 7330                            jnc     short _z
   250                                  
   251                                  	; file not found!
   252                                  	sys	_msg, noFileErrMsg, 255, 0Ch
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000000C9 BB[93740000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000000CE B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000000D3 BA0C000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000000D8 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000000DD CD40                <1>  int 40h
   253                                  
   254 000000DF EBD1                    	jmp	short Exit
   255                                  
   256                                  not_valid_wav:
   257                                  	; not a proper/valid wav file !
   258                                  	sys	_msg, not_valid_wavf, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000000E1 BB[AE740000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000000E6 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000000EB BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000000F0 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000000F5 CD40                <1>  int 40h
   259                                  
   260 000000F7 EBB9                    	jmp	short Exit
   261                                  
   262                                  _z:
   263 000000F9 E8C9010000                     	call    getWAVParameters
   264 000000FE 72E1                    	jc	short not_valid_wav
   265                                  
   266 00000100 B304                    	mov	bl, 4
   267 00000102 8A0D[6C770000]          	mov	cl, [WAVE_BlockAlign]
   268 00000108 28CB                    	sub	bl, cl	; = 0 for 16 bit stereo
   269                                  			; = 2 for 8 bit stereo or 16 bit mono
   270                                  			; = 3 for 8 bit mono
   271                                  
   272 0000010A D0EB                    	shr	bl, 1	; 0 --> 0, 2 --> 1, 3 --> 1
   273 0000010C 80D300                  	adc	bl, 0	; 3 --> 1 --> 2
   274 0000010F 881D[CC770000]          	mov	[fbs_shift], bl	; = 2 mono and 8 bit
   275                                  				; = 0 stereo and 16 bit
   276                                  				; = 1 mono or 8 bit
   277 00000115 31C0                    	xor	eax, eax
   278                                  
   279 00000117 803D[DA770000]01        	cmp	byte [audio_hardware], 1 ; SB16 ?
   280 0000011E 750B                    	jne	short _r
   281                                  				; no, skip [g_samples] calculation
   282                                  
   283                                  	; count of audio samples for graphics data
   284 00000120 FEC4                    	inc	ah
   285                                  	; eax = 256
   286 00000122 D0E9                    	shr	cl, 1
   287                                  	; 0 = 8 bit mono, 1 = 16 bit mono or 8 bit stereo
   288                                  	; 2 = 16 bit stereo  
   289 00000124 D3E0                    	shl	eax, cl
   290 00000126 A3[08820000]            	mov	[g_samples], eax ; 256 .. 1024
   291                                  
   292                                  _r:
   293                                  	; calculate 18.2 block/s buffer size for proper wave scope
   294 0000012B 66A1[64770000]          	mov	ax, [WAVE_SampleRate]
   295 00000131 31D2                    	xor	edx, edx
   296 00000133 B228                    	mov	dl, 4*10
   297 00000135 F7E2                    	mul	edx
   298 00000137 31C9                    	xor	ecx, ecx
   299 00000139 B1B6                    	mov	cl, 182
   300 0000013B F7F1                    	div	ecx
   301 0000013D 88D9                    	mov	cl, bl	; 0 = stereo & 16bit
   302                                  			; 1 = mono 16bit or stereo 8bit
   303                                  			; 2 = mono & 8bit
   304 0000013F 24FC                    	and	al, ~3 ; NOT 3
   305 00000141 D3E8                    	shr	eax, cl
   306                                  		; AX = 
   307                                  		; 10548 bytes for 48kHZ 16bit stereo
   308                                  		; 9692 bytes for 44kHZ 16bit stereo
   309                                  		; 7032 bytes for 32kHZ 16bit stereo
   310                                  		; 5272 bytes for 24kHz 16bit stereo
   311                                  		; 4844 bytes for 22kHZ 16bit stereo 
   312                                  		; 3516 bytes for 16kHZ 16bit stereo
   313                                  		; 2636 bytes for 12kHZ 16bit stereo
   314                                  		; 2420 bytes for 11kHZ 16bit stereo
   315                                  		; 1756 bytes for 8kHZ 16bit stereo
   316                                  
   317 00000143 A3[E4810000]            	mov	[loadsize], eax
   318                                  	
   319 00000148 803D[DA770000]01        	cmp	byte [audio_hardware], 1 ; SB16 ?
   320 0000014F 7404                    	je	short _t		; yes	
   321                                  
   322                                  	; AC97 codec plays 16 bit stereo PCM data only
   323 00000151 D3E0                    	shl	eax, cl
   324                                  	; count of 16 bit samples
   325 00000153 D1E8                    	shr	eax, 1
   326                                  _t:
   327 00000155 A3[E8810000]            	mov	[buffersize], eax ; (if audio hardware supports vra)	
   328                                  		 
   329                                  ; ----------------------------------------------------------------------------
   330                                  
   331                                  	; 10/02/2025
   332                                  	; 20/10/2017 - playwav.s
   333                                  
   334                                  allocate_dma_buffer:
   335 0000015A 803D[DA770000]01        	cmp	byte [audio_hardware], 1
   336 00000161 751F                    	jne	short allocate_ac97_buffers
   337                                  
   338                                  	; SB16
   339                                  
   340                                  	dmabufsize equ 24576 ; rounded up to page border (21120 will be use)
   341                                  
   342                                  	; DIRECT MEMORY ACCESS (for Audio DMA)
   343                                  	; ebx = DMA buffer address (virtual, user)
   344                                  	; ecx = buffer size (in bytes)
   345                                  	; edx = upper limit = 16MB
   346                                  
   347                                  	_16MB	equ 1024*1024*16
   348                                  
   349                                  	sys	_alloc, dma_buffer, dmabufsize, _16MB 
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000163 BB[00000200]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000168 B900600000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000016D BA00000001          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000172 B82A000000          <1>  mov eax, %1
    96                              <1> 
    97 00000177 CD40                <1>  int 40h
   350 00000179 7230                    	jc	short syscall_err
   351                                  
   352 0000017B A3[00820000]            	mov	[DMA_phy_buff], eax	; physical address
   353                                  	     				; of the buffer
   354                                  					; (which is needed
   355                                  					; for DMA controller)
   356                                  
   357 00000180 EB1D                    	jmp	short audio_hardware_init
   358                                  
   359                                  ; ----------------------------------------------------------------------------
   360                                  
   361                                  	; 10/02/2025
   362                                  	; 05/02/2025 - ac97play.s
   363                                  
   364                                  allocate_ac97_buffers:
   365                                  
   366                                  	; AC97
   367                                  
   368                                  	sys	_alloc, BDL_BUFFER, 7*4096, 0	; no upper limit
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000182 BB[00900000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000187 B900700000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000018C BA00000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000191 B82A000000          <1>  mov eax, %1
    96                              <1> 
    97 00000196 CD40                <1>  int 40h
   369 00000198 7211                    	jc	short syscall_err
   370                                  
   371 0000019A A3[FC810000]            	mov	[_bdl_buffer], eax ; BDL_BUFFER physical address
   372                                  
   373                                  ; ----------------------------------------------------------------------------
   374                                  
   375                                  audio_hardware_init:
   376                                  
   377 0000019F E875200000              	call	audio_system_init
   378                                  	;jc	short Exit
   379 000001A4 7320                    	jnc	short write_info
   380 000001A6 E907FFFFFF              	jmp	Exit
   381                                  
   382                                  ; ----------------------------------------------------------------------------
   383                                  
   384                                  syscall_err:
   385                                  	sys	_msg, trdos386_err_msg, 255, 0Eh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000001AB BB[5E750000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000001B0 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000001B5 BA0E000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000001BA B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000001BF CD40                <1>  int 40h
   386 000001C1 E9ECFEFFFF              	jmp	Exit
   387                                  
   388                                  ; ----------------------------------------------------------------------------
   389                                  
   390                                  write_info:
   391 000001C6 E8111D0000              	call	write_audio_dev_info
   392                                  
   393 000001CB E87E1F0000              	call	write_wav_file_info
   394                                  
   395                                  	sys	_msg, msgPressAKey, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000001D0 BB[0C770000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000001D5 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000001DA BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000001DF B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000001E4 CD40                <1>  int 40h
   396                                  
   397 000001E6 30E4                    	xor	ah, ah
   398 000001E8 CD32                    	int	32h	; TRDOS 386 keyboard interrupt
   399                                  			; getchar (wait for keystroke)
   400                                  
   401 000001EA 3C1B                    	cmp	al, 1Bh ; ESC
   402 000001EC 7505                    	jne	short _continue
   403 000001EE E9BFFEFFFF              	jmp	Exit
   404                                  
   405                                  _continue:
   406                                  	;call	audio_system_init
   407                                  	;jc	short Exit
   408                                  
   409                                  ; ----------------------------------------------------------------------------
   410                                  
   411                                  PlayNow: 
   412 000001F3 B900010000              	mov	ecx, 256
   413 000001F8 31DB                    	xor	ebx, ebx
   414 000001FA BF[E0770000]            	mov	edi, RowOfs
   415                                  MakeOfs:
   416 000001FF 89D8                    	mov	eax, ebx
   417 00000201 C1E007                  	shl	eax, 7 ; * 128
   418 00000204 B050                    	mov	al, 80
   419 00000206 F6E4                    	mul	ah
   420 00000208 66AB                    	stosw
   421 0000020A 43                      	inc	ebx
   422 0000020B E2F2                    	loop	MakeOfs
   423                                  
   424                                  ; ----------------------------------------------------------------------------
   425                                  
   426                                  	; DIRECT VGA MEMORY ACCESS
   427                                  	; bl = 0, bh = 5
   428                                  	; Direct access/map to VGA memory (0A0000h)
   429                                  
   430                                  	sys	_video, 0500h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000020D BB00050000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000212 B81F000000          <1>  mov eax, %1
    96                              <1> 
    97 00000217 CD40                <1>  int 40h
   431 00000219 3D00000A00              	cmp	eax, 0A0000h
   432 0000021E 758B                    	jne	short syscall_err
   433                                  
   434                                  ; ----------------------------------------------------------------------------
   435                                  
   436                                  	;;;;
   437                                  setgraphmode:
   438                                  	; set VGA 640x480x16 graphics mode
   439 00000220 66B81200                	mov	ax, 12h
   440 00000224 CD31                    	int	31h	; TRDOS 386 Video Interrupt
   441                                  			; Set video mode
   442 00000226 66BAC003                	mov	dx, 3C0h
   443 0000022A 30C0                    	xor	al, al
   444                                  setgraphmodel0:
   445                                  	;out	dx, al
   446 0000022C B401                    	mov	ah, 1	; outb
   447 0000022E CD34                    	int	34h	; TRDOS 386 IOCTL Interrupt
   448                                  	;out	dx, al
   449                                  	;mov	ah, 1	; outb
   450 00000230 CD34                    	int	34h
   451 00000232 FEC0                    	inc	al
   452 00000234 3C10                    	cmp	al, 10h
   453 00000236 72F4                    	jb	short setgraphmodel0
   454 00000238 B020                    	mov	al, 20h
   455                                  	;out	dx, al
   456                                  	;mov	ah, 1	; outb
   457 0000023A CD34                    	int	34h
   458                                  	;;;;
   459                                  
   460                                  ; ----------------------------------------------------------------------------
   461                                  	
   462                                  	;mov	esi, LOGO_ADDRESS
   463 0000023C E8192E0000              	call	putlbm
   464                                  ;	jnc	short loadlbm_ok
   465                                  ;
   466                                  ;loadlbm_err:
   467                                  ;	call	settextmode
   468                                  ;	sys	_msg, LOGO_ERROR_MSG, 255, 0Ch
   469                                  ;	jmp	Exit
   470                                  ;
   471                                  ;LOGO_ERROR_MSG:
   472                                  ;	db "Error loading the IFF/ILBM logo picture !", 0Dh, 0Ah, 0
   473                                  ;
   474                                  ;loadlbm_ok:
   475                                  
   476                                  ; ----------------------------------------------------------------------------
   477                                  	
   478 00000241 803D[DA770000]01        	cmp	byte [audio_hardware], 1
   479 00000248 7530                    	jne	short skip_sdc
   480                                  	
   481                                  	; parepare g_buffer wave graphics parameters
   482                                  
   483 0000024A BB[2F300000]            	mov	ebx, sdc_16bit_stereo
   484                                  
   485 0000024F A0[6C770000]            	mov	al, [WAVE_BlockAlign]
   486 00000254 3C04                    	cmp	al, 4
   487 00000256 741C                    	je	short set_sdc_p_ok
   488 00000258 BB[4C300000]            	mov	ebx, sdc_8bit_mono
   489 0000025D 3C01                    	cmp	al, 1
   490 0000025F 7413                    	je	short set_sdc_p_ok
   491 00000261 BB[40300000]            	mov	ebx, sdc_8bit_stereo
   492 00000266 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8
   493 0000026D 7405                    	je	short set_sdc_p_ok
   494 0000026F BB[35300000]            	mov	ebx, sdc_16bit_mono
   495                                  set_sdc_p_ok:
   496 00000274 891D[04820000]          	mov	[sound_data_copy], ebx
   497                                  
   498                                  skip_sdc:
   499                                  
   500                                  ; ----------------------------------------------------------------------------
   501                                  
   502                                  	; play the .wav file.
   503                                  
   504 0000027A E88A000000              	call	PlayWav
   505                                  
   506                                  ; ----------------------------------------------------------------------------
   507                                  
   508                                  	; close the .wav file and exit.
   509 0000027F E835000000              	call	closeFile
   510                                  
   511                                  ; ----------------------------------------------------------------------------
   512                                  
   513 00000284 803D[DA770000]01        	cmp	byte [audio_hardware], 1
   514 0000028B 750C                    	jne	short terminate
   515                                  
   516                                  	; Cancel syscalback service for Sound Blaster 16
   517                                  	
   518 0000028D A0[CA770000]            	mov	al, [audio_intr] ; 5 or 7
   519 00000292 30E4                    	xor	ah, ah ; reset
   520 00000294 E8FC2B0000              	call	set_hardware_int_vector
   521                                  
   522                                  ; ----------------------------------------------------------------------------
   523                                  
   524                                  terminate:
   525 00000299 E8432C0000              	call	settextmode
   526                                  	
   527 0000029E E90FFEFFFF              	jmp	Exit
   528                                  
   529                                  ; ----------------------------------------------------------------------------
   530                                  
   531                                  	; INPUT: edx = file name address
   532                                  	; OUTPUT: [FileHandle]
   533                                  openFile:
   534                                  	; open File for read
   535                                  	sys	_open, edx, 0
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000002A3 89D3                <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000002A5 B900000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000002AA B805000000          <1>  mov eax, %1
    96                              <1> 
    97 000002AF CD40                <1>  int 40h
   536 000002B1 7205                    	jc	short _of_err
   537                                  		; cf = 1 -> not found or access error
   538 000002B3 A3[EF730000]            	mov	[FileHandle], eax
   539                                  _of_err:
   540 000002B8 C3                      	retn
   541                                  
   542                                  ; ----------------------------------------------------------------------------
   543                                  
   544                                  	; INPUT: [FileHandle]
   545                                  	; OUTPUT: none
   546                                  closeFile:
   547                                  	sys	_close, [FileHandle]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000002B9 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000002BF B806000000          <1>  mov eax, %1
    96                              <1> 
    97 000002C4 CD40                <1>  int 40h
   548 000002C6 C3                      	retn
   549                                  
   550                                  ; ----------------------------------------------------------------------------
   551                                  
   552                                  getWAVParameters:
   553                                  	sys	_read, [FileHandle], WAVFILEHEADERbuff, 44
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000002C7 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000002CD B9[4C770000]        <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000002D2 BA2C000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000002D7 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000002DC CD40                <1>  int 40h
   554 000002DE 7228                    	jc	short gwavp_retn
   555                                  
   556 000002E0 83F82C                  	cmp	eax, 44
   557 000002E3 7223                    	jb	short gwavp_retn
   558                                  
   559 000002E5 813D[54770000]5741-     	cmp	dword [RIFF_Format], 'WAVE'
   559 000002ED 5645               
   560 000002EF 7516                    	jne	short gwavp_stc_retn
   561                                  
   562 000002F1 66833D[60770000]01      	cmp	word [WAVE_AudioFormat], 1 ; Offset 20, must be 1 (= PCM)
   563 000002F9 750C                    	jne	short gwavp_stc_retn
   564                                  
   565                                  	; (OpenMPT creates wav files with a new type header,
   566                                  	;  this program can not use the new type
   567                                  	;  because of 'data' offset is not at DATA_SubchunkID.)
   568                                  	; ((GoldWave creates common type wav file.))
   569                                  
   570 000002FB 813D[70770000]6461-     	cmp	dword [DATA_SubchunkID], 'data'
   570 00000303 7461               
   571 00000305 7401                    	je	short gwavp_retn
   572                                  
   573                                  gwavp_stc_retn:
   574 00000307 F9                      	stc
   575                                  gwavp_retn:
   576 00000308 C3                      	retn
   577                                  
   578                                  ;=============================================================================
   579                                  ;
   580                                  ;=============================================================================
   581                                  
   582                                  	; 10/02/2025
   583                                  	; 09/02/2025
   584                                  PlayWav:
   585 00000309 803D[DA770000]01        	cmp	byte [audio_hardware], 1
   586 00000310 776B                    	ja	short playwav_ac97
   587                                  
   588                                  playwav_sb16:
   589 00000312 803D[DD770000]01        	cmp	byte [stopped], 1
   590 00000319 7210                    	jb	short playwav_sb16_@
   591                                  
   592                                  	; replay
   593 0000031B C605[DD770000]00        	mov	byte [stopped], 0
   594 00000322 C605[32770000]01        	mov	byte [half_buffer], 1
   595                                  
   596 00000329 EB11                    	jmp	short playwav_sb16_@@
   597                                  
   598                                  playwav_sb16_@:
   599                                  	; set audio interrupt vector (to user's handler)
   600                                  	; set syscallback service for Sound Blaster 16
   601 0000032B A0[DB770000]            	mov	al, [IRQnum]
   602 00000330 B401                    	mov	ah, 1 ; set
   603                                  	; 10/02/2025
   604 00000332 BA[DB770000]            	mov	edx, IRQnum
   605 00000337 E8592B0000              	call	set_hardware_int_vector
   606                                  
   607                                  playwav_sb16_@@:
   608 0000033C BF[00000200]            	mov	edi, dma_buffer
   609 00000341 E8FC020000              	call	SB16_LoadFromFile
   610                                  
   611 00000346 A1[EC810000]            	mov	eax, [count]
   612 0000034B 0105[F0810000]          	add	[LoadedDataBytes], eax
   613                                  
   614 00000351 BF[00000200]            	mov	edi, dma_buffer
   615 00000356 033D[E4810000]          	add	edi, [loadsize] ; = add edi, [buffersize]
   616 0000035C E8E1020000              	call	SB16_LoadFromFile
   617                                  
   618 00000361 A1[EC810000]            	mov	eax, [count]
   619 00000366 0105[F0810000]          	add	[LoadedDataBytes], eax
   620                                  
   621 0000036C E8B31F0000              	call	sb16_init_play
   622                                  
   623 00000371 C605[DB770000]00        	mov	byte [IRQnum], 0
   624 00000378 E9C3000000              	jmp	SB16_TuneLoop
   625                                  
   626                                  playwav_ac97:
   627 0000037D 803D[DD770000]01        	cmp	byte [stopped], 1
   628 00000384 720E                    	jb	short playwav_ac97_@
   629                                  
   630 00000386 C605[DD770000]00        	mov	byte [stopped], 0
   631                                  
   632 0000038D E8DF260000              	call	ac97_RePlayWav
   633                                  
   634 00000392 EB0A                    	jmp	short AC97_TuneLoop
   635                                  
   636                                  playwav_ac97_@:
   637 00000394 E8D9230000              	call	ac97_play_setup
   638                                  
   639 00000399 E89A260000              	call	ac97_init_play
   640                                  
   641                                  	;jmp	short AC97_TuneLoop
   642                                  
   643                                  ; ----------------------------------------------------------------------------
   644                                  
   645                                  	; 09/02/2025
   646                                  AC97_TuneLoop:
   647                                  
   648                                  ;tuneLoop:
   649                                  tLWait:
   650 0000039E 803D[DD770000]00        	cmp	byte [stopped], 0
   651 000003A5 7612                    	jna	short tL1 
   652                                  tLWait@:
   653 000003A7 803D[DD770000]03        	cmp	byte [stopped], 3
   654 000003AE 7307                    	jnb	short tL0
   655                                  
   656 000003B0 E8F4000000              	call	checkUpdateEvents
   657 000003B5 73E7                    	jnc	short tLWait
   658                                  tL0:
   659 000003B7 EB33                    	jmp	_exitt_
   660                                  tL1:
   661 000003B9 E8C6270000              	call	updateLVI	; /set LVI != CIV/
   662 000003BE 74F7                    	jz	short tL0
   663                                  
   664 000003C0 E8E4000000              	call	checkUpdateEvents
   665 000003C5 72F0                    	jc	short tL0
   666                                  
   667 000003C7 803D[DD770000]00        	cmp	byte [stopped], 0
   668 000003CE 77D7                    	ja	short tLWait@
   669                                  
   670 000003D0 E89F270000              	call	getCurrentIndex
   671 000003D5 A801                    	test	al, BIT0
   672 000003D7 74E0                    	jz	short tL1	; loop if buffer 2 is not playing
   673                                  
   674                                  	; load buffer 1
   675 000003D9 BF[00A00000]            	mov     edi, WAV_BUFFER_1
   676 000003DE 893D[F8810000]          	mov	[audio_buffer], edi
   677 000003E4 FF15[E0810000]          	call	dword [loadfromwavfile]
   678 000003EA 7306                    	jnc	short tL2
   679                                  
   680                                  	; end of file
   681                                  _exitt_:
   682                                  	; Stop Playing
   683 000003EC E8F9260000              	call	ac97_stop
   684 000003F1 C3                      	retn
   685                                  tL2:
   686 000003F2 A1[EC810000]            	mov	eax, [count]
   687 000003F7 0105[F0810000]          	add	[LoadedDataBytes], eax
   688                                  tL3:
   689 000003FD E882270000              	call    updateLVI
   690 00000402 74E8                    	jz	short _exitt_
   691                                  
   692 00000404 E8A0000000              	call	checkUpdateEvents
   693 00000409 72E1                    	jc	short _exitt_
   694                                  
   695 0000040B 803D[DD770000]00        	cmp	byte [stopped], 0
   696 00000412 7793                    	ja	short tLWait@
   697                                  
   698 00000414 E85B270000              	call    getCurrentIndex
   699 00000419 A801                    	test	al, BIT0
   700 0000041B 75E0                    	jnz	short tL3	; loop if buffer 1 is not playing
   701                                  
   702                                  	; load buffer 2
   703 0000041D BF[00D00000]            	mov     edi, WAV_BUFFER_2
   704 00000422 893D[F8810000]          	mov	[audio_buffer], edi
   705 00000428 FF15[E0810000]          	call	dword [loadfromwavfile]
   706 0000042E 72BC                    	jc	short _exitt_
   707                                  
   708 00000430 A1[EC810000]            	mov	eax, [count]
   709 00000435 0105[F0810000]          	add	[LoadedDataBytes], eax
   710                                  
   711 0000043B E95EFFFFFF              	jmp	tLWait
   712                                  
   713                                  ; ----------------------------------------------------------------------------
   714                                  
   715                                  	; 10/02/2025
   716                                  	; 09/02/2025
   717                                  SB16_TuneLoop:
   718                                  ;TuneLoop:
   719                                  .tLWait:
   720 00000440 803D[DD770000]00        	cmp	byte [stopped], 0
   721 00000447 760D                    	jna	short .tL2
   722                                  .tL1:
   723 00000449 E85B000000              	call	checkUpdateEvents
   724 0000044E 73F0                    	jnc	short .tLWait
   725                                  ._exit_:
   726 00000450 E8991F0000              	call	sb16_stop
   727 00000455 C3                      	retn
   728                                  .tL2:
   729                                  	; Check SB 16 interrupt status
   730 00000456 803D[DB770000]00        	cmp	byte [IRQnum], 0
   731 0000045D 76EA                    	jna	short .tL1
   732                                  
   733                                  	;;;;
   734                                  	; 10/02/2025
   735 0000045F 668B15[D6770000]        	mov 	dx, [audio_io_base]
   736 00000466 80C20E                  	add	dl, 0Eh ; 8bit DMA-mode int ack
   737                                  	;in	al, dx
   738 00000469 B400                    	mov	ah, 0 ; inb
   739 0000046B CD34                    	int	34h
   740 0000046D 42                      	inc	edx ; 0Fh ; 16bit DMA-mode int ack
   741                                  	;in	al, dx	; SB 16 acknowledge.
   742 0000046E B400                    	mov	ah, 0 ; inb
   743 00000470 CD34                    	int	34h
   744                                  	;;;;
   745                                  
   746 00000472 8035[32770000]01        	xor	byte [half_buffer], 1
   747                                  
   748 00000479 C605[DB770000]00        	mov	byte [IRQnum], 0
   749                                  
   750                                  	; load buffer 1
   751 00000480 BF[00000200]            	mov	edi, dma_buffer  ; wav_buffer1
   752 00000485 803D[32770000]00        	cmp	byte [half_buffer], 0
   753 0000048C 7606                    	jna	short .tL3
   754                                  
   755                                  	; load buffer 2
   756 0000048E 033D[E4810000]          	add	edi, [loadsize]
   757                                  .tL3:
   758 00000494 E8A9010000              	call	SB16_LoadFromFile
   759 00000499 72B5                    	jc	short ._exit_	; end of file
   760                                  
   761 0000049B A1[EC810000]            	mov	eax, [count]
   762 000004A0 0105[F0810000]          	add	[LoadedDataBytes], eax
   763                                  
   764 000004A6 EBA1                    	jmp	short .tL1
   765                                  
   766                                  ;=============================================================================
   767                                  ;
   768                                  ;=============================================================================
   769                                  
   770                                  c4ue_ok:
   771 000004A8 C3                      	retn
   772                                  
   773                                  	; 10/02/2025
   774                                  	; 09/02/2025
   775                                  checkUpdateEvents:
   776 000004A9 E88E000000              	call	check4keyboardstop
   777 000004AE 72F8                    	jc	short c4ue_ok
   778                                  
   779 000004B0 50                      	push	eax ; *
   780 000004B1 09C0                    	or	eax, eax
   781 000004B3 7458                    	jz	short c4ue_cpt
   782                                  
   783 000004B5 3C20                    	cmp	al, 20h ; SPACE (spacebar) ; pause/play
   784 000004B7 752C                    	jne	short c4ue_chk_s
   785 000004B9 803D[DD770000]00        	cmp	byte [stopped], 0
   786 000004C0 7707                    	ja	short c4ue_chk_ps
   787                                  
   788 000004C2 E83C260000              	call	audio_pause
   789                                  
   790 000004C7 EB44                    	jmp	short c4ue_cpt
   791                                  
   792                                  c4ue_chk_ps:
   793 000004C9 803D[DD770000]01        	cmp	byte [stopped], 1
   794 000004D0 7707                    	ja	short c4ue_replay
   795                                  
   796                                  	; continue to play (after a pause)
   797 000004D2 E843260000              	call	audio_play
   798                                  
   799 000004D7 EB34                    	jmp	short c4ue_cpt
   800                                  
   801                                  c4ue_replay:
   802 000004D9 58                      	pop	eax ; *
   803 000004DA 58                      	pop	eax ; return address
   804                                  
   805 000004DB E835010000              	call	move_to_beginning
   806                                  
   807                                  	;mov	byte [stopped], 0
   808                                  
   809 000004E0 E924FEFFFF              	jmp	PlayWav
   810                                  
   811                                  c4ue_chk_s:
   812 000004E5 3C53                    	cmp	al, 'S'	; stop
   813 000004E7 7510                    	jne	short c4ue_chk_fb
   814 000004E9 803D[DD770000]00        	cmp	byte [stopped], 0
   815 000004F0 771B                    	ja	c4ue_cpt ; Already stopped/paused
   816                                  
   817 000004F2 E8E5250000              	call	audio_stop
   818                                  
   819 000004F7 EB14                    	jmp	short c4ue_cpt
   820                                  
   821                                  c4ue_chk_fb:
   822 000004F9 3C46                    	cmp	al, 'F'
   823 000004FB 7507                    	jne	short c4ue_chk_b
   824 000004FD E8EB000000              	call 	move_forward
   825 00000502 EB09                    	jmp	short c4ue_cpt
   826                                  
   827                                  c4ue_chk_b:
   828 00000504 3C42                    	cmp	al, 'B'
   829 00000506 7505                    	jne	short c4ue_cpt
   830                                  
   831 00000508 E8E0000000              	call 	move_backward
   832                                  
   833                                  c4ue_cpt:
   834 0000050D 59                      	pop	ecx ; *
   835                                  
   836                                  	sys	_time, 4 ; get timer ticks (18.2 ticks/second)
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000050E BB04000000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000513 B80D000000          <1>  mov eax, %1
    96                              <1> 
    97 00000518 CD40                <1>  int 40h
   837                                  
   838 0000051A 3B05[F4810000]          	cmp	eax, [timerticks]
   839 00000520 7407                    	je	short c4ue_skip_utt
   840                                  c4ue_utt:
   841 00000522 A3[F4810000]            	mov	[timerticks], eax
   842 00000527 EB05                    	jmp	short c4ue_cpt_@
   843                                  
   844                                  c4ue_skip_utt:
   845 00000529 21C9                    	and	ecx, ecx
   846 0000052B 7401                    	jz	short c4ue_cpt_@
   847                                  c4ue_vb_ok:
   848 0000052D C3                      	retn
   849                                  
   850                                  c4ue_cpt_@:
   851 0000052E 803D[DD770000]00        	cmp	byte [stopped], 0
   852 00000535 77F6                    	ja	short c4ue_vb_ok
   853                                  
   854 00000537 E9AC290000              	jmp	drawscopes
   855                                  
   856                                  ;=============================================================================
   857                                  ;
   858                                  ;=============================================================================
   859                                  
   860                                  	; 09/02/2025
   861                                  check4keyboardstop:
   862 0000053C B401                    	mov	ah, 1	; check keyboard buffer
   863 0000053E CD32                    	int	32h	; TRDOS 386 Keyboard Interrupt
   864                                  	;clc
   865 00000540 742E                    	jz	short _cksr ; empty
   866                                  
   867 00000542 30E4                    	xor	ah, ah	; Getchar
   868 00000544 CD32                    	int	32h
   869                                  
   870                                  	;;;;
   871                                  	; 10/02/2025
   872                                  clear_keyb_buf:
   873 00000546 50                      	push	eax
   874 00000547 B401                    	mov	ah, 1	; Getchar
   875 00000549 CD32                    	int	32h
   876 0000054B 7407                    	jz	short p_0
   877 0000054D 28E4                    	sub	ah, ah
   878 0000054F CD32                    	int	32h
   879 00000551 5A                      	pop	edx
   880 00000552 EBF2                    	jmp	short clear_keyb_buf
   881                                  p_0:		
   882 00000554 58                      	pop	eax
   883                                  	;;;;
   884                                  
   885                                  	; (change PCM out volume)
   886 00000555 3C2B                    	cmp	al, '+'
   887 00000557 7508                    	jne	short p_1
   888                                  
   889 00000559 FE05[DC770000]          	inc	byte [volume]
   890 0000055F EB0A                    	jmp	short p_2
   891                                  p_1:
   892 00000561 3C2D                    	cmp	al, '-'
   893 00000563 750E                    	jne	short p_4
   894                                  
   895 00000565 FE0D[DC770000]          	dec	byte [volume]
   896                                  p_2:
   897 0000056B E81E000000              	call	SetPCMOutVolume
   898                                  _cksr:
   899 00000570 31C0                    	xor	eax, eax
   900                                  p_3:
   901 00000572 C3                      	retn
   902                                  p_4:
   903 00000573 80FC01                  	cmp	ah, 01h  ; ESC
   904 00000576 7414                        	je	short p_quit
   905 00000578 3C03                    	cmp	al, 03h  ; CTRL+C
   906 0000057A 7410                    	je	short p_quit
   907                                  
   908 0000057C 3C20                    	cmp	al, 20h
   909 0000057E 74F2                    	je	short p_3
   910                                  
   911 00000580 3C0D                    	cmp	al, 0Dh ; CR/ENTER
   912 00000582 74EE                    	je	short p_3
   913                                  
   914 00000584 24DF                    	and	al, 0DFh
   915                                  
   916 00000586 3C51                    	cmp	al, 'Q'
   917 00000588 7402                    	je	short p_quit
   918                                  
   919 0000058A F8                      	clc
   920 0000058B C3                      	retn
   921                                  
   922                                  p_quit:
   923 0000058C F9                      	stc
   924 0000058D C3                      	retn
   925                                  
   926                                  ;-----------------------------------------------------------------------------
   927                                  ;
   928                                  ;-----------------------------------------------------------------------------
   929                                  
   930                                  	; 09/02/2025
   931                                  SetPCMOutVolume:
   932 0000058E 803D[DA770000]01        	cmp	byte [audio_hardware], 1
   933 00000595 7428                    	je	short sb16_set_volume
   934                                  
   935                                  ;-----------------------------------------------------------------------------
   936                                  
   937                                  ac97_set_volume:
   938 00000597 A0[DC770000]            	mov	al, [volume]
   939 0000059C B41F                    	mov	ah, 31
   940 0000059E 38E0                    	cmp	al, ah ; 31
   941 000005A0 7607                    	jna	short _ac97sv_@
   942 000005A2 88E0                    	mov	al, ah
   943 000005A4 A2[DC770000]            	mov	[volume], al ; max = 31, min = 0
   944                                  _ac97sv_@:
   945                                  	; max = 0, min = 31
   946 000005A9 28C4                    	sub	ah, al
   947 000005AB 88E0                    	mov	al, ah
   948 000005AD 668B15[D6770000]        	mov	dx, [NAMBAR]
   949                                    	;add	dx, CODEC_MASTER_VOL_REG
   950 000005B4 6683C218                	add	dx, CODEC_PCM_OUT_REG
   951                                  	;out	dx, ax
   952 000005B8 89C3                    	mov	ebx, eax
   953 000005BA B403                    	mov	ah, 3	; write port, word
   954 000005BC CD34                    	int	34h	; TRDOS 386 IOCTL interrupt
   955 000005BE C3                      	retn
   956                                  
   957                                  ;-----------------------------------------------------------------------------
   958                                  
   959                                  sb16_set_volume:
   960 000005BF A0[DC770000]            	mov	al, [volume]
   961 000005C4 B40F                    	mov	ah, 15
   962 000005C6 38E0                    	cmp	al, ah ; 15
   963 000005C8 7607                    	jna	short _sb16sv_@
   964 000005CA 88E0                    	mov	al, ah
   965 000005CC A2[DC770000]            	mov	[volume], al ; max = 15, min = 0
   966                                  _sb16sv_@:
   967                                  	; al = sound volume (15 = max, 0 = min)
   968 000005D1 50                      	push	eax
   969                                  	; Tell the SB 16 card which register to write
   970 000005D2 668B15[D6770000]        	mov	dx, [audio_io_base]
   971                                  	;add	dx, 4 ; Mixer chip address port
   972 000005D9 80C204                  	add	dl, 4
   973 000005DC B022                    	mov	al, 22h
   974                                  	;out	dx, al
   975 000005DE B401                    	mov	ah, 1	; write port, byte
   976 000005E0 CD34                    	int	34h	; TRDOS 386 IOCTL interrupt
   977                                  
   978 000005E2 58                      	pop	eax
   979                                  	;and	al, 0Fh
   980                                  	; Set the volume for both L and R
   981 000005E3 B311                    	mov	bl, 11h
   982 000005E5 F6E3                    	mul	bl
   983                                  	; Set new volume
   984                                  	;mov	dx, [audio_io_base]
   985                                  	;;add	dx, 5
   986                                  	;add	dl, 5
   987                                  	; 10/02/2025
   988 000005E7 42                      	inc	edx
   989                                  	;out	dx, al
   990 000005E8 B401                    	mov	ah, 1	; outb
   991 000005EA CD34                    	int	34h
   992 000005EC C3                      	retn
   993                                  
   994                                  ;=============================================================================
   995                                  ; 09/02/2025 - change song (wave file) play position
   996                                  ;=============================================================================
   997                                  
   998                                  move_backward:
   999                                  move_forward:
  1000                                  	;; In order to go backwards 5 seconds:
  1001                                  	;; Update file pointer to the beginning, skip headers
  1002 000005ED 88C1                    	mov	cl, al ; 'B' or 'F'
  1003                                  
  1004                                  move_backward_or_forward:
  1005                                  	; (Ref: player.asm, Matan Alfasi, 2017)
  1006                                    
  1007 000005EF B805000000              	mov	eax, 5
  1008 000005F4 0FB71D[6C770000]        	movzx	ebx, word [WAVE_BlockAlign]
  1009 000005FB F7E3                    	mul	ebx
  1010 000005FD 668B1D[64770000]        	mov	bx, [WAVE_SampleRate]
  1011 00000604 F7E3                    	mul	ebx
  1012                                  	; eax = transfer byte count for 5 seconds
  1013                                  
  1014 00000606 80F942                  	cmp	cl, 'B'
  1015 00000609 8B0D[F0810000]          	mov	ecx, [LoadedDataBytes]
  1016 0000060F 7508                    	jne	short move_fw ; cl = 'F'
  1017                                  move_bw:
  1018 00000611 29C1                    	sub	ecx, eax
  1019 00000613 7314                    	jnc	short move_file_pointer
  1020                                  move_to_beginning:
  1021 00000615 31C9                    	xor	ecx, ecx ; 0
  1022 00000617 EB10                    	jmp	short move_file_pointer
  1023                                  move_fw: 
  1024 00000619 01C1                    	add	ecx, eax
  1025 0000061B 720A                    	jc	short move_to_end
  1026 0000061D 8B1D[74770000]          	mov	ebx, [DATA_SubchunkSize]
  1027 00000623 39D9                    	cmp	ecx, ebx
  1028 00000625 7602                    	jna	short move_file_pointer
  1029                                  move_to_end:
  1030 00000627 89D9                    	mov	ecx, ebx
  1031                                  move_file_pointer:
  1032 00000629 890D[F0810000]          	mov	[LoadedDataBytes], ecx
  1033 0000062F 83C12C                  	add	ecx, 44 ; + header
  1034                                  
  1035                                  	; seek
  1036 00000632 31D2                    	xor	edx, edx ; offset from beginning of the file
  1037                                  	; ecx = offset	
  1038                                  	; ebx = file handle
  1039                                  	; edx = 0
  1040                                  	sys	_seek, [FileHandle]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000634 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000063A B813000000          <1>  mov eax, %1
    96                              <1> 
    97 0000063F CD40                <1>  int 40h
  1041                                  
  1042 00000641 C3                      	retn
  1043                                  
  1044                                  ;=============================================================================
  1045                                  ; Wave Data Loading procedure for Sound Blaster 16 (there is not a conversion)
  1046                                  ;=============================================================================
  1047                                  
  1048                                  	; 09/02/2025
  1049                                  SB16_LoadFromFile:
  1050 00000642 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1051                                  					; last of the file?
  1052 00000649 7402                    	jz	short sblff_0		; no
  1053 0000064B F9                      	stc
  1054 0000064C C3                      	retn
  1055                                  
  1056                                  sblff_0:
  1057                                  	; edi = audio buffer address
  1058                                  
  1059                                  	; load/read file
  1060                                  	; --------------
  1061                                  	; ebx = file handle
  1062                                  	; ecx = buffer
  1063                                  	; edx = read count
  1064                                  
  1065                                  	sys 	_read, [FileHandle], edi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000064D 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000653 89F9                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000655 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000065B B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000660 CD40                <1>  int 40h
  1066 00000662 721A                    	jc	short sblff_2 ; error !
  1067                                  
  1068 00000664 A3[EC810000]            	mov	[count], eax
  1069                                  
  1070 00000669 39D0                    	cmp	eax, edx
  1071 0000066B 7410                    	je	short _endLFF
  1072                                  
  1073                                  	; edi = buffer address
  1074 0000066D 01C7                    	add	edi, eax
  1075                                  sblff_1:
  1076 0000066F 89D1                    	mov	ecx, edx
  1077 00000671 E80C000000              	call    sb_padfill		; blank pad the remainder
  1078                                          ;clc				; don't exit with CY yet.
  1079 00000676 800D[CD770000]01                or	byte [flags], ENDOFFILE	; end of file flag
  1080                                  	; 07/02/2025
  1081                                  	;cmp	word [count], 1
  1082                                  _endLFF:
  1083 0000067D C3                              retn
  1084                                  
  1085                                  sblff_2:
  1086 0000067E 31C0                    	xor	eax, eax
  1087 00000680 EBED                    	jmp	short sblff_1
  1088                                  
  1089                                  ;-----------------------------------------------------------------------------
  1090                                  
  1091                                  sb_padfill:
  1092                                  	; edi = offset (to be filled with ZEROs)
  1093                                  	; eax = number of bytes loaded
  1094                                  	; ecx = buffer size (> loaded bytes)
  1095 00000682 29C1                    	sub	ecx, eax
  1096 00000684 31C0                    	xor	eax, eax
  1097 00000686 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  1098 0000068D 7702                    	ja	short padfill@
  1099 0000068F B080                    	mov	al, 80h
  1100                                  padfill@:
  1101 00000691 F3AA                    	rep	stosb
  1102 00000693 C3                      	retn
  1103                                  
  1104                                  ;=============================================================================
  1105                                  ; AC97 procedures - load and convert sound data
  1106                                  ;=============================================================================
  1107                                  
  1108                                  	; 09/02/2025
  1109                                  
  1110                                  ;-----------------------------------------------------------------------------
  1111                                  ; /////
  1112                                  ;-----------------------------------------------------------------------------
  1113                                  
  1114                                  	; 05/02/2025 - ac97play.s
  1115                                  loadFromFile:
  1116 00000694 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1117                                  					; last of the file?
  1118 0000069B 7402                    	jz	short lff_0		; no
  1119 0000069D F9                      	stc
  1120 0000069E C3                      	retn
  1121                                  
  1122                                  lff_0:
  1123                                  	; edi = audio buffer address
  1124                                  
  1125 0000069F 803D[CC770000]00        	cmp	byte [fbs_shift], 0
  1126 000006A6 7675                    	jna	short lff_1 ; stereo, 16 bit
  1127                                  
  1128                                  lff_2:
  1129                                  	;; fbs_shift =
  1130                                  	;;	2 for mono and 8 bit sample (multiplier = 4)
  1131                                  	;;	1 for mono or 8 bit sample (multiplier = 2)
  1132                                  	;;;;;;	0 for stereo and 16 bit sample (multiplier = 1)
  1133                                  	
  1134 000006A8 BE[00000200]            	mov	esi, temp_buffer 
  1135                                  
  1136                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000006AD 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000006B3 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000006B5 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000006BB B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000006C0 CD40                <1>  int 40h
  1137 000006C2 0F8286000000            	jc	lff_4 ; error !
  1138                                  
  1139 000006C8 A3[EC810000]            	mov	[count], eax
  1140                                  
  1141 000006CD 21C0                    	and	eax, eax
  1142 000006CF 747F                    	jz	lff_10
  1143                                  
  1144 000006D1 8A1D[CC770000]          	mov	bl, [fbs_shift]
  1145                                  
  1146 000006D7 89FA                    	mov	edx, edi ; audio buffer start address
  1147                                  
  1148 000006D9 89C1                    	mov	ecx, eax
  1149 000006DB 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8 ; bits per sample (8 or 16)
  1150 000006E2 751E                    	jne	short lff_7 ; 16 bit samples
  1151                                  	; 8 bit samples
  1152 000006E4 FECB                    	dec	bl  ; shift count, 1 = stereo, 2 = mono
  1153 000006E6 740E                    	jz	short lff_6 ; 8 bit, stereo
  1154                                  lff_5:
  1155                                  	; mono & 8 bit
  1156 000006E8 AC                      	lodsb
  1157 000006E9 2C80                    	sub	al, 80h
  1158 000006EB C1E008                  	shl	eax, 8 ; convert 8 bit sample to 16 bit sample
  1159 000006EE 66AB                    	stosw	; left channel
  1160 000006F0 66AB                    	stosw	; right channel
  1161 000006F2 E2F4                    	loop	lff_5
  1162 000006F4 EB16                    	jmp	short lff_9	
  1163                                  lff_6:
  1164                                  	; stereo & 8 bit
  1165 000006F6 AC                      	lodsb
  1166 000006F7 2C80                    	sub	al, 80h
  1167 000006F9 C1E008                  	shl	eax, 8 ; convert 8 bit sample to 16 bit sample
  1168 000006FC 66AB                    	stosw
  1169 000006FE E2F6                    	loop	lff_6			
  1170 00000700 EB0A                    	jmp	short lff_9
  1171                                  lff_7:
  1172 00000702 D1E9                    	shr	ecx, 1 ; word count
  1173                                  lff_8:
  1174 00000704 66AD                    	lodsw
  1175 00000706 66AB                    	stosw	; left channel
  1176 00000708 66AB                    	stosw	; right channel
  1177 0000070A E2F8                    	loop	lff_8
  1178                                  lff_9:
  1179 0000070C 89F8                    	mov	eax, edi
  1180 0000070E 8B0D[E8810000]          	mov	ecx, [buffersize] ; words
  1181 00000714 D1E1                    	shl	ecx, 1 ; bytes
  1182 00000716 01D1                    	add	ecx, edx ; + buffer start address
  1183 00000718 39C8                    	cmp	eax, ecx
  1184 0000071A 7225                    	jb	short lff_3
  1185 0000071C C3                      	retn
  1186                                  
  1187                                  lff_1:  
  1188                                  	; edi = audio buffer address
  1189                                  
  1190                                  	; load/read file
  1191                                  	; --------------
  1192                                  	; ebx = file handle
  1193                                  	; ecx = buffer
  1194                                  	; edx = read count
  1195                                  
  1196                                  	sys 	_read, [FileHandle], edi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000071D 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000723 89F9                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000725 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000072B B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000730 CD40                <1>  int 40h
  1197 00000732 721A                    	jc	short lff_4 ; error !
  1198                                  
  1199 00000734 A3[EC810000]            	mov	[count], eax
  1200                                  
  1201 00000739 39D0                    	cmp	eax, edx
  1202 0000073B 7410                    	je	short endLFF
  1203                                  
  1204 0000073D 01C7                    	add	edi, eax
  1205                                  
  1206 0000073F 89D1                    	mov	ecx, edx
  1207                                  lff_3:
  1208 00000741 E814000000              	call    padfill			; blank pad the remainder
  1209                                          ;clc				; don't exit with CY yet.
  1210 00000746 800D[CD770000]01                or	byte [flags], ENDOFFILE	; end of file flag
  1211                                  endLFF:
  1212 0000074D C3                              retn
  1213                                  lff_4:
  1214 0000074E 31C0                    	xor	eax, eax
  1215                                  lff_10:
  1216 00000750 8B0D[E8810000]          	mov	ecx, [buffersize] ; samples
  1217 00000756 D1E1                    	shl	ecx, 1	; bytes
  1218 00000758 EBE7                    	jmp	short lff_3
  1219                                  
  1220                                  ;-----------------------------------------------------------------------------
  1221                                  
  1222                                  padfill:
  1223                                  	; edi = offset (to be filled with ZEROs)
  1224                                  	; eax = di = number of bytes loaded
  1225                                  	; ecx = buffer size (> loaded bytes)	
  1226                                  
  1227 0000075A 29C1                    	sub	ecx, eax
  1228 0000075C 31C0                    	xor	eax, eax
  1229 0000075E F3AA                    	rep	stosb
  1230 00000760 C3                      	retn
  1231                                  
  1232                                  ;-----------------------------------------------------------------------------
  1233                                  ; interpolation procedures
  1234                                  ;-----------------------------------------------------------------------------
  1235                                  
  1236                                  ; 09/02/2025
  1237                                  ; 05/02/2025 - ac97play.s
  1238                                  ;----------------------------------------------------------------------------
  1239                                  
  1240                                  ;;Note:	At the end of every buffer load,
  1241                                  ;;	during buffer switch/swap, there will be discontinuity
  1242                                  ;;	between the last converted sample and the 1st sample
  1243                                  ;;	of the next buffer.
  1244                                  ;;	(like as a dot noises vaguely between normal sound samples)
  1245                                  ;;	-To avoid this defect, the 1st sample of
  1246                                  ;;	the next buffer may be read from the wav file but
  1247                                  ;;	the file pointer would need to be set to 1 sample back
  1248                                  ;;	again via seek system call. Time comsumption problem! -
  1249                                  ;;
  1250                                  ;;	Erdogan Tan - 15/11/2023
  1251                                  ;;
  1252                                  ;;	((If entire wav data would be loaded at once.. conversion
  1253                                  ;;	defect/noise would disappear.. but for DOS, to keep
  1254                                  ;;	64KB buffer limit is important also it is important
  1255                                  ;;	for running under 1MB barrier without HIMEM.SYS or DPMI.
  1256                                  ;;	I have tested this program by using 2-30MB wav files.))
  1257                                  ;;
  1258                                  ;;	Test Computer:	ASUS desktop/mainboard, M2N4-SLI, 2010.
  1259                                  ;;			AMD Athlon 64 X2 2200 MHZ CPU.
  1260                                  ;;		       	NFORCE4 (CK804) AC97 audio hardware.
  1261                                  ;;			Realtek ALC850 codec.
  1262                                  ;;		       	Retro DOS v4.2 (MSDOS 6.22) operating system.
  1263                                  
  1264                                  ;-----------------------------------------------------------------------------
  1265                                  ;-----------------------------------------------------------------------------
  1266                                  
  1267                                  load_8khz_mono_8_bit:
  1268 00000761 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1269                                  					; last of the file?
  1270 00000768 7402                    	jz	short lff8m_0		; no
  1271 0000076A F9                      	stc
  1272 0000076B C3                      	retn
  1273                                  
  1274                                  lff8m_0:
  1275                                  	; edi = audio buffer address
  1276                                  
  1277 0000076C BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1278                                  
  1279                                  	; load file into memory
  1280                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000771 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000777 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000779 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000077F B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000784 CD40                <1>  int 40h
  1281 00000786 7305                    	jnc	short lff8m_6
  1282 00000788 E9A8000000              	jmp	lff8m_5  ; error !
  1283                                  
  1284                                  lff8m_6:
  1285 0000078D A3[EC810000]            	mov	[count], eax
  1286                                  
  1287 00000792 21C0                    	and	eax, eax
  1288 00000794 0F849B000000            	jz	lff8_eof
  1289                                  
  1290 0000079A 89C1                    	mov	ecx, eax	; byte count
  1291                                  lff8m_1:
  1292 0000079C AC                      	lodsb
  1293 0000079D A2[D31E0000]            	mov	[previous_val], al
  1294 000007A2 2C80                    	sub	al, 80h
  1295 000007A4 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1296 000007A8 66AB                    	stosw		; original sample (left channel)
  1297 000007AA 66AB                    	stosw		; original sample (right channel)
  1298                                  	;xor	eax, eax
  1299 000007AC 8A06                    	mov	al, [esi]
  1300 000007AE 49                      	dec	ecx
  1301 000007AF 7502                    	jnz	short lff8m_2
  1302 000007B1 B080                    	mov	al, 80h
  1303                                  lff8m_2:
  1304                                  	;mov	[next_val], ax
  1305 000007B3 88C7                    	mov	bh, al	; [next_val]
  1306 000007B5 8A25[D31E0000]          	mov	ah, [previous_val]
  1307 000007BB 00E0                    	add	al, ah	; [previous_val]
  1308 000007BD D0D8                    	rcr	al, 1
  1309 000007BF 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample
  1310 000007C1 00E0                    	add	al, ah	; [previous_val]
  1311 000007C3 D0D8                    	rcr	al, 1	
  1312 000007C5 88C3                    	mov	bl, al 	; this is temporary interpolation value
  1313 000007C7 00E0                    	add	al, ah	; [previous_val]
  1314 000007C9 D0D8                    	rcr	al, 1
  1315 000007CB 2C80                    	sub	al, 80h
  1316 000007CD 66C1E008                	shl	ax, 8
  1317 000007D1 66AB                    	stosw		; this is 1st interpolated sample (L)
  1318 000007D3 66AB                    	stosw		; this is 1st interpolated sample (R)
  1319 000007D5 88D8                    	mov	al, bl
  1320 000007D7 00D0                    	add	al, dl
  1321 000007D9 D0D8                    	rcr	al, 1
  1322 000007DB 2C80                    	sub	al, 80h
  1323 000007DD 66C1E008                	shl	ax, 8
  1324 000007E1 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1325 000007E3 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1326 000007E5 88D0                    	mov	al, dl
  1327 000007E7 2C80                    	sub	al, 80h
  1328 000007E9 66C1E008                	shl	ax, 8
  1329 000007ED 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1330 000007EF 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1331                                  	;mov	al, [next_val]
  1332 000007F1 88F8                    	mov	al, bh
  1333 000007F3 00D0                    	add	al, dl
  1334 000007F5 D0D8                    	rcr	al, 1
  1335 000007F7 88C3                    	mov	bl, al	; this is temporary interpolation value
  1336 000007F9 00D0                    	add	al, dl
  1337 000007FB D0D8                    	rcr	al, 1
  1338 000007FD 2C80                    	sub	al, 80h
  1339 000007FF 66C1E008                	shl	ax, 8
  1340 00000803 66AB                    	stosw		; this is 4th interpolated sample (L)
  1341 00000805 66AB                    	stosw		; this is 4th interpolated sample (R)
  1342                                  	;mov	al, [next_val]
  1343 00000807 88F8                    	mov	al, bh
  1344 00000809 00D8                    	add	al, bl
  1345 0000080B D0D8                    	rcr	al, 1
  1346 0000080D 2C80                    	sub	al, 80h
  1347 0000080F 66C1E008                	shl	ax, 8
  1348 00000813 66AB                    	stosw		; this is 5th interpolated sample (L)
  1349 00000815 66AB                    	stosw		; this is 5th interpolated sample (R)
  1350                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1351 00000817 09C9                    	or	ecx, ecx
  1352 00000819 7581                    	jnz	short lff8m_1
  1353                                  
  1354                                  	; --------------
  1355                                  
  1356                                  lff8s_3:
  1357                                  lff8m_3:
  1358                                  lff8s2_3:
  1359                                  lff8m2_3:
  1360                                  lff16s_3:
  1361                                  lff16m_3:
  1362                                  lff16s2_3:
  1363                                  lff16m2_3:
  1364                                  lff24_3:
  1365                                  lff32_3:
  1366                                  lff44_3:
  1367                                  lff22_3:
  1368                                  lff11_3:
  1369                                  lff12_3:
  1370 0000081B 8B0D[E8810000]          	mov	ecx, [buffersize] ; buffer size in words
  1371 00000821 D1E1                    	shl	ecx, 1 ; buffer size in bytes
  1372 00000823 030D[F8810000]          	add	ecx, [audio_buffer]
  1373 00000829 29F9                    	sub	ecx, edi
  1374 0000082B 7607                    	jna	short lff8m_4
  1375                                  	;inc	ecx
  1376 0000082D C1E902                  	shr	ecx, 2
  1377 00000830 31C0                    	xor	eax, eax ; fill (remain part of) buffer with zeros
  1378 00000832 F3AB                    	rep	stosd
  1379                                  lff8m_4:
  1380                                  	;clc
  1381 00000834 C3                      	retn
  1382                                  
  1383                                  lff8s_5:
  1384                                  lff8m_5:
  1385                                  lff8s2_5:
  1386                                  lff8m2_5:
  1387                                  lff16s_5:
  1388                                  lff16m_5:
  1389                                  lff16s2_5:
  1390                                  lff16m2_5:
  1391                                  lff24_5:
  1392                                  lff32_5:
  1393                                  lff44_5:
  1394                                  lff22_5:
  1395                                  lff11_5:
  1396                                  lff12_5:
  1397                                  
  1398                                  lff8_eof:
  1399                                  lff16_eof:
  1400                                  lff24_eof:
  1401                                  lff32_eof:
  1402                                  lff44_eof:
  1403                                  lff22_eof:
  1404                                  lff11_eof:
  1405                                  lff12_eof:
  1406 00000835 C605[CD770000]01        	mov	byte [flags], ENDOFFILE
  1407 0000083C EBDD                    	jmp	short lff8m_3
  1408                                  
  1409                                  ;----------------------------------------------------------------------------
  1410                                  
  1411                                  load_8khz_stereo_8_bit:
  1412 0000083E F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1413                                  					; last of the file?
  1414 00000845 7402                    	jz	short lff8s_0		; no
  1415 00000847 F9                      	stc
  1416 00000848 C3                      	retn
  1417                                  
  1418                                  lff8s_0:
  1419                                  	; edi = audio buffer address
  1420                                  
  1421 00000849 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1422                                  
  1423                                  	; load file into memory
  1424                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000084E 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000854 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000856 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000085C B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000861 CD40                <1>  int 40h
  1425 00000863 72D0                    	jc	short lff8s_5 ; error !
  1426                                  
  1427 00000865 A3[EC810000]            	mov	[count], eax
  1428                                  
  1429 0000086A D1E8                    	shr	eax, 1
  1430 0000086C 74C7                    	jz	short lff8_eof
  1431                                  
  1432 0000086E 89C1                    	mov	ecx, eax	; word count
  1433                                  lff8s_1:
  1434 00000870 AC                      	lodsb
  1435 00000871 A2[D31E0000]            	mov	[previous_val_l], al
  1436 00000876 2C80                    	sub	al, 80h
  1437 00000878 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1438 0000087C 66AB                    	stosw		; original sample (L)
  1439 0000087E AC                      	lodsb
  1440 0000087F A2[D51E0000]            	mov	[previous_val_r], al
  1441 00000884 2C80                    	sub	al, 80h
  1442 00000886 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1443 0000088A 66AB                    	stosw		; original sample (R)
  1444                                  
  1445                                  	;xor	eax, eax
  1446 0000088C 668B06                  	mov	ax, [esi]
  1447 0000088F 49                      	dec	ecx
  1448 00000890 7504                    	jnz	short lff8s_2
  1449                                  		; convert 8 bit sample to 16 bit sample
  1450 00000892 66B88080                	mov	ax, 8080h
  1451                                  lff8s_2:
  1452 00000896 A2[D71E0000]            	mov	[next_val_l], al
  1453 0000089B 8825[D91E0000]          	mov	[next_val_r], ah
  1454 000008A1 8A25[D31E0000]          	mov	ah, [previous_val_l]
  1455 000008A7 00E0                    	add	al, ah
  1456 000008A9 D0D8                    	rcr	al, 1
  1457 000008AB 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample (L)
  1458 000008AD 00E0                    	add	al, ah
  1459 000008AF D0D8                    	rcr	al, 1	
  1460 000008B1 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1461 000008B3 00E0                    	add	al, ah
  1462 000008B5 D0D8                    	rcr	al, 1
  1463 000008B7 2C80                    	sub	al, 80h
  1464 000008B9 66C1E008                	shl	ax, 8
  1465 000008BD 66AB                    	stosw		; this is 1st interpolated sample (L)
  1466 000008BF A0[D91E0000]            	mov	al, [next_val_r]
  1467 000008C4 8A25[D51E0000]          	mov	ah, [previous_val_r]
  1468 000008CA 00E0                    	add	al, ah
  1469 000008CC D0D8                    	rcr	al, 1
  1470 000008CE 88C6                    	mov	dh, al	; this is interpolated middle (3th) sample (R)
  1471 000008D0 00E0                    	add	al, ah
  1472 000008D2 D0D8                    	rcr	al, 1
  1473 000008D4 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1474 000008D6 00E0                    	add	al, ah
  1475 000008D8 D0D8                    	rcr	al, 1
  1476 000008DA 2C80                    	sub	al, 80h
  1477 000008DC 66C1E008                	shl	ax, 8
  1478 000008E0 66AB                    	stosw		; this is 1st interpolated sample (R)
  1479 000008E2 88D8                    	mov	al, bl
  1480 000008E4 00D0                    	add	al, dl
  1481 000008E6 D0D8                    	rcr	al, 1
  1482 000008E8 2C80                    	sub	al, 80h
  1483 000008EA 66C1E008                	shl	ax, 8
  1484 000008EE 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1485 000008F0 88F8                    	mov	al, bh
  1486 000008F2 00F0                    	add	al, dh
  1487 000008F4 D0D8                    	rcr	al, 1
  1488 000008F6 2C80                    	sub	al, 80h
  1489 000008F8 66C1E008                	shl	ax, 8
  1490 000008FC 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1491 000008FE 88D0                    	mov	al, dl
  1492 00000900 2C80                    	sub	al, 80h
  1493 00000902 66C1E008                	shl	ax, 8
  1494 00000906 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1495 00000908 88F0                    	mov	al, dh
  1496 0000090A 2C80                    	sub	al, 80h
  1497 0000090C 66C1E008                	shl	ax, 8
  1498 00000910 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1499 00000912 A0[D71E0000]            	mov	al, [next_val_l]
  1500 00000917 00D0                    	add	al, dl
  1501 00000919 D0D8                    	rcr	al, 1
  1502 0000091B 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1503 0000091D 00D0                    	add	al, dl
  1504 0000091F D0D8                    	rcr	al, 1
  1505 00000921 2C80                    	sub	al, 80h
  1506 00000923 66C1E008                	shl	ax, 8
  1507 00000927 66AB                    	stosw		; this is 4th interpolated sample (L)
  1508 00000929 A0[D91E0000]            	mov	al, [next_val_r]
  1509 0000092E 00F0                    	add	al, dh
  1510 00000930 D0D8                    	rcr	al, 1
  1511 00000932 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1512 00000934 00F0                    	add	al, dh
  1513 00000936 D0D8                    	rcr	al, 1
  1514 00000938 2C80                    	sub	al, 80h
  1515 0000093A 66C1E008                	shl	ax, 8
  1516 0000093E 66AB                    	stosw		; this is 4th interpolated sample (R)
  1517 00000940 A0[D71E0000]            	mov	al, [next_val_l]
  1518 00000945 00D8                    	add	al, bl
  1519 00000947 D0D8                    	rcr	al, 1
  1520 00000949 2C80                    	sub	al, 80h
  1521 0000094B 66C1E008                	shl	ax, 8
  1522 0000094F 66AB                    	stosw		; this is 5th interpolated sample (L)
  1523 00000951 A0[D91E0000]            	mov	al, [next_val_r]
  1524 00000956 00F8                    	add	al, bh
  1525 00000958 D0D8                    	rcr	al, 1
  1526 0000095A 2C80                    	sub	al, 80h
  1527 0000095C 66C1E008                	shl	ax, 8
  1528 00000960 66AB                    	stosw		; this is 5th interpolated sample (R)
  1529                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1530 00000962 E305                    	jecxz	lff8s_6
  1531 00000964 E907FFFFFF              	jmp	lff8s_1
  1532                                  lff8s_6:
  1533 00000969 E9ADFEFFFF              	jmp	lff8s_3
  1534                                  
  1535                                  ;----------------------------------------------------------------------------
  1536                                  
  1537                                  load_8khz_mono_16_bit:
  1538 0000096E F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1539                                  					; last of the file?
  1540 00000975 7402                    	jz	short lff8m2_0		; no
  1541 00000977 F9                      	stc
  1542 00000978 C3                      	retn
  1543                                  
  1544                                  lff8m2_0:
  1545                                  	; edi = audio buffer address
  1546                                  
  1547 00000979 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1548                                  
  1549                                  	; load file into memory
  1550                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000097E 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000984 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000986 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000098C B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000991 CD40                <1>  int 40h
  1551 00000993 0F82A0000000            	jc	lff8m2_7 ; error !
  1552                                  
  1553 00000999 A3[EC810000]            	mov	[count], eax
  1554                                  
  1555 0000099E D1E8                    	shr	eax, 1
  1556 000009A0 7505                    	jnz	short lff8m2_8
  1557 000009A2 E98EFEFFFF              	jmp	lff8_eof
  1558                                  
  1559                                  lff8m2_8:
  1560 000009A7 89C1                    	mov	ecx, eax	; word count
  1561                                  lff8m2_1:
  1562 000009A9 66AD                    	lodsw
  1563 000009AB 66AB                    	stosw		; original sample (left channel)
  1564 000009AD 66AB                    	stosw		; original sample (right channel)
  1565 000009AF 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1566 000009B2 66A3[D31E0000]          	mov	[previous_val], ax
  1567 000009B8 668B06                  	mov	ax, [esi]
  1568 000009BB 49                      	dec	ecx
  1569 000009BC 7502                    	jnz	short lff8m2_2
  1570 000009BE 31C0                    	xor	eax, eax
  1571                                  lff8m2_2:
  1572 000009C0 80C480                  	add	ah, 80h ; convert sound level to 0-65535 format
  1573 000009C3 89C5                    	mov	ebp, eax ; [next_val]
  1574 000009C5 660305[D31E0000]        	add	ax, [previous_val]
  1575 000009CC 66D1D8                  	rcr	ax, 1
  1576 000009CF 89C2                    	mov	edx, eax ; this is interpolated middle (3th) sample
  1577 000009D1 660305[D31E0000]        	add	ax, [previous_val]
  1578 000009D8 66D1D8                  	rcr	ax, 1	; this is temporary interpolation value
  1579 000009DB 89C3                    	mov	ebx, eax 		
  1580 000009DD 660305[D31E0000]        	add	ax, [previous_val]
  1581 000009E4 66D1D8                  	rcr	ax, 1
  1582 000009E7 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1583 000009EA 66AB                    	stosw		; this is 1st interpolated sample (L)
  1584 000009EC 66AB                    	stosw		; this is 1st interpolated sample (R)
  1585 000009EE 89D8                    	mov	eax, ebx
  1586 000009F0 6601D0                  	add	ax, dx
  1587 000009F3 66D1D8                  	rcr	ax, 1
  1588 000009F6 80EC80                  	sub	ah, 80h
  1589 000009F9 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1590 000009FB 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1591 000009FD 89D0                    	mov	eax, edx
  1592 000009FF 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1593 00000A02 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1594 00000A04 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1595 00000A06 89E8                    	mov	eax, ebp
  1596 00000A08 6601D0                  	add	ax, dx
  1597 00000A0B 66D1D8                  	rcr	ax, 1
  1598 00000A0E 89C3                    	mov	ebx, eax ; this is temporary interpolation value
  1599 00000A10 6601D0                  	add	ax, dx
  1600 00000A13 66D1D8                  	rcr	ax, 1
  1601 00000A16 80EC80                  	sub	ah, 80h
  1602 00000A19 66AB                    	stosw		; this is 4th interpolated sample (L)
  1603 00000A1B 66AB                    	stosw		; this is 4th interpolated sample (R)
  1604 00000A1D 89E8                    	mov	eax, ebp
  1605 00000A1F 6601D8                  	add	ax, bx
  1606 00000A22 66D1D8                  	rcr	ax, 1
  1607 00000A25 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1608 00000A28 66AB                    	stosw		; this is 5th interpolated sample (L)
  1609 00000A2A 66AB                    	stosw		; this is 5th interpolated sample (R)
  1610                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1611 00000A2C 09C9                    	or	ecx, ecx
  1612 00000A2E 0F8575FFFFFF            	jnz	lff8m2_1
  1613 00000A34 E9E2FDFFFF              	jmp	lff8m2_3
  1614                                  
  1615                                  lff8m2_7:
  1616                                  lff8s2_7:
  1617 00000A39 E9F7FDFFFF              	jmp	lff8m2_5  ; error
  1618                                  
  1619                                  ;----------------------------------------------------------------------------
  1620                                  
  1621                                  load_8khz_stereo_16_bit:
  1622 00000A3E F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1623                                  					; last of the file?
  1624 00000A45 7402                    	jz	short lff8s2_0		; no
  1625 00000A47 F9                      	stc
  1626 00000A48 C3                      	retn
  1627                                  
  1628                                  lff8s2_0:
  1629                                  	; edi = audio buffer address
  1630                                  
  1631 00000A49 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1632                                  
  1633                                  	; load file into memory
  1634                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000A4E 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000A54 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000A56 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000A5C B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000A61 CD40                <1>  int 40h
  1635 00000A63 72D4                    	jc	short lff8s2_7 ; error !
  1636                                  
  1637 00000A65 A3[EC810000]            	mov	[count], eax
  1638                                  	
  1639 00000A6A C1E802                  	shr	eax, 2
  1640 00000A6D 7505                    	jnz	short lff8s2_8
  1641 00000A6F E9C1FDFFFF              	jmp	lff8_eof
  1642                                  
  1643                                  lff8s2_8:
  1644 00000A74 89C1                    	mov	ecx, eax ; dword count
  1645                                  lff8s2_1:
  1646 00000A76 66AD                    	lodsw
  1647 00000A78 66AB                    	stosw		; original sample (L)
  1648 00000A7A 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1649 00000A7D 66A3[D31E0000]          	mov	[previous_val_l], ax
  1650 00000A83 66AD                    	lodsw
  1651 00000A85 66AB                    	stosw		; original sample (R)
  1652 00000A87 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1653 00000A8A 66A3[D51E0000]          	mov	[previous_val_r], ax
  1654 00000A90 668B06                  	mov	ax, [esi]
  1655 00000A93 668B5602                	mov	dx, [esi+2]
  1656 00000A97 49                      	dec	ecx
  1657 00000A98 7504                    	jnz	short lff8s2_2
  1658 00000A9A 31D2                    	xor	edx, edx
  1659 00000A9C 31C0                    	xor	eax, eax
  1660                                  lff8s2_2:
  1661 00000A9E 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1662 00000AA1 66A3[D71E0000]          	mov	[next_val_l], ax
  1663 00000AA7 80C680                  	add	dh, 80h	; convert sound level to 0-65535 format
  1664 00000AAA 668915[D91E0000]        	mov	[next_val_r], dx
  1665 00000AB1 660305[D31E0000]        	add	ax, [previous_val_l]
  1666 00000AB8 66D1D8                  	rcr	ax, 1
  1667 00000ABB 89C2                    	mov	edx, eax ; this is interpolated middle (3th) sample (L)
  1668 00000ABD 660305[D31E0000]        	add	ax, [previous_val_l]
  1669 00000AC4 66D1D8                  	rcr	ax, 1	
  1670 00000AC7 89C3                    	mov	ebx, eax ; this is temporary interpolation value (L)
  1671 00000AC9 660305[D31E0000]        	add	ax, [previous_val_l]
  1672 00000AD0 66D1D8                  	rcr	ax, 1
  1673 00000AD3 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1674 00000AD6 66AB                    	stosw		; this is 1st interpolated sample (L)
  1675 00000AD8 66A1[D91E0000]          	mov	ax, [next_val_r]
  1676 00000ADE 660305[D51E0000]        	add	ax, [previous_val_r]
  1677 00000AE5 66D1D8                  	rcr	ax, 1
  1678 00000AE8 89C5                    	mov	ebp, eax ; this is interpolated middle (3th) sample (R)
  1679 00000AEA 660305[D51E0000]        	add	ax, [previous_val_r]
  1680 00000AF1 66D1D8                  	rcr	ax, 1
  1681 00000AF4 50                      	push	eax ; *	; this is temporary interpolation value (R)
  1682 00000AF5 660305[D51E0000]        	add	ax, [previous_val_r]
  1683 00000AFC 66D1D8                  	rcr	ax, 1
  1684 00000AFF 80EC80                  	sub	ah, 80h
  1685 00000B02 66AB                    	stosw		; this is 1st interpolated sample (R)
  1686 00000B04 89D8                    	mov	eax, ebx
  1687 00000B06 6601D0                  	add	ax, dx
  1688 00000B09 66D1D8                  	rcr	ax, 1
  1689 00000B0C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1690 00000B0F 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1691 00000B11 58                      	pop	eax ; *
  1692 00000B12 6601E8                  	add	ax, bp
  1693 00000B15 66D1D8                  	rcr	ax, 1
  1694 00000B18 80EC80                  	sub	ah, 80h
  1695 00000B1B 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1696 00000B1D 89D0                    	mov	eax, edx
  1697 00000B1F 80EC80                  	sub	ah, 80h
  1698 00000B22 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1699 00000B24 89E8                    	mov	eax, ebp
  1700 00000B26 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1701 00000B29 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1702 00000B2B 66A1[D71E0000]          	mov	ax, [next_val_l]
  1703 00000B31 6601D0                  	add	ax, dx
  1704 00000B34 66D1D8                  	rcr	ax, 1
  1705 00000B37 89C3                    	mov	ebx, eax ; this is temporary interpolation value (L)
  1706 00000B39 6601D0                  	add	ax, dx
  1707 00000B3C 66D1D8                  	rcr	ax, 1
  1708 00000B3F 80EC80                  	sub	ah, 80h
  1709 00000B42 66AB                    	stosw		; this is 4th interpolated sample (L)
  1710 00000B44 66A1[D91E0000]          	mov	ax, [next_val_r]
  1711 00000B4A 6601E8                  	add	ax, bp
  1712 00000B4D 66D1D8                  	rcr	ax, 1
  1713 00000B50 50                      	push	eax ; ** ; this is temporary interpolation value (R)
  1714 00000B51 6601E8                  	add	ax, bp
  1715 00000B54 66D1D8                  	rcr	ax, 1
  1716 00000B57 80EC80                  	sub	ah, 80h
  1717 00000B5A 66AB                    	stosw		; this is 4th interpolated sample (R)
  1718 00000B5C 66A1[D71E0000]          	mov	ax, [next_val_l]
  1719 00000B62 6601D8                  	add	ax, bx
  1720 00000B65 66D1D8                  	rcr	ax, 1
  1721 00000B68 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1722 00000B6B 66AB                    	stosw		; this is 5th interpolated sample (L)
  1723 00000B6D 58                      	pop	eax ; **
  1724 00000B6E 660305[D91E0000]        	add	ax, [next_val_r]
  1725 00000B75 66D1D8                  	rcr	ax, 1
  1726 00000B78 80EC80                  	sub	ah, 80h
  1727 00000B7B 66AB                    	stosw		; this is 5th interpolated sample (R)
  1728                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1729 00000B7D E305                    	jecxz	lff8_s2_9
  1730 00000B7F E9F2FEFFFF              	jmp	lff8s2_1
  1731                                  lff8_s2_9:
  1732 00000B84 E992FCFFFF              	jmp	lff8s2_3
  1733                                  
  1734                                  ;----------------------------------------------------------------------------
  1735                                  
  1736                                  load_16khz_mono_8_bit:
  1737 00000B89 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1738                                  					; last of the file?
  1739 00000B90 7402                    	jz	short lff16m_0		; no
  1740 00000B92 F9                      	stc
  1741 00000B93 C3                      	retn
  1742                                  
  1743                                  lff16m_0:
  1744                                  	; edi = audio buffer address
  1745                                  
  1746 00000B94 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1747                                  
  1748                                  	; load file into memory
  1749                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000B99 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000B9F 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000BA1 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000BA7 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000BAC CD40                <1>  int 40h
  1750 00000BAE 7253                    	jc	short lff16m_7 ; error !
  1751                                  
  1752 00000BB0 A3[EC810000]            	mov	[count], eax
  1753                                  	
  1754 00000BB5 21C0                    	and	eax, eax
  1755 00000BB7 7505                    	jnz	short lff16m_8
  1756 00000BB9 E977FCFFFF              	jmp	lff16_eof
  1757                                  
  1758                                  lff16m_8:
  1759 00000BBE 89C1                    	mov	ecx, eax		; byte count
  1760                                  lff16m_1:
  1761 00000BC0 AC                      	lodsb
  1762                                  	;mov	[previous_val], al
  1763 00000BC1 88C3                    	mov	bl, al
  1764 00000BC3 2C80                    	sub	al, 80h
  1765 00000BC5 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1766 00000BC9 66AB                    	stosw		; original sample (left channel)
  1767 00000BCB 66AB                    	stosw		; original sample (right channel)
  1768                                  	;xor	eax, eax
  1769 00000BCD 8A06                    	mov	al, [esi]
  1770 00000BCF 49                      	dec	ecx
  1771 00000BD0 7502                    	jnz	short lff16m_2
  1772 00000BD2 B080                    	mov	al, 80h
  1773                                  lff16m_2:
  1774                                  	;mov	[next_val], al
  1775 00000BD4 88C7                    	mov	bh, al
  1776                                  	;add	al, [previous_val]
  1777 00000BD6 00D8                    	add	al, bl
  1778 00000BD8 D0D8                    	rcr	al, 1
  1779 00000BDA 88C2                    	mov	dl, al	; this is interpolated middle (temp) sample
  1780                                  	;add	al, [previous_val]
  1781 00000BDC 00D8                    	add	al, bl
  1782 00000BDE D0D8                    	rcr	al, 1
  1783 00000BE0 2C80                    	sub	al, 80h
  1784 00000BE2 66C1E008                	shl	ax, 8
  1785 00000BE6 66AB                    	stosw		; this is 1st interpolated sample (L)
  1786 00000BE8 66AB                    	stosw		; this is 1st interpolated sample (R)
  1787                                  	;mov	al, [next_val]
  1788 00000BEA 88F8                    	mov	al, bh
  1789 00000BEC 00D0                    	add	al, dl
  1790 00000BEE D0D8                    	rcr	al, 1
  1791 00000BF0 2C80                    	sub	al, 80h
  1792 00000BF2 66C1E008                	shl	ax, 8
  1793 00000BF6 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1794 00000BF8 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1795                                  	
  1796                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1797 00000BFA 09C9                    	or	ecx, ecx
  1798 00000BFC 75C2                    	jnz	short lff16m_1
  1799 00000BFE E918FCFFFF              	jmp	lff16m_3
  1800                                  
  1801                                  lff16m_7:
  1802                                  lff16s_7:
  1803 00000C03 E92DFCFFFF              	jmp	lff16m_5  ; error
  1804                                  
  1805                                  ;----------------------------------------------------------------------------
  1806                                  
  1807                                  load_16khz_stereo_8_bit:
  1808 00000C08 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1809                                  					; last of the file?
  1810 00000C0F 7402                    	jz	short lff16s_0		; no
  1811 00000C11 F9                      	stc
  1812 00000C12 C3                      	retn
  1813                                  
  1814                                  lff16s_0:
  1815                                  	; edi = audio buffer address
  1816                                  
  1817 00000C13 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1818                                  
  1819                                  	; load file into memory
  1820                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000C18 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000C1E 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000C20 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000C26 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000C2B CD40                <1>  int 40h
  1821 00000C2D 72D4                    	jc	short lff16s_7 ; error !
  1822                                  
  1823 00000C2F A3[EC810000]            	mov	[count], eax
  1824                                  
  1825 00000C34 D1E8                    	shr	eax, 1
  1826 00000C36 7505                    	jnz	short lff16s_8
  1827 00000C38 E9F8FBFFFF              	jmp	lff16_eof
  1828                                  
  1829                                  lff16s_8:
  1830 00000C3D 89C1                    	mov	ecx, eax	; word count
  1831                                  lff16s_1:
  1832 00000C3F AC                      	lodsb
  1833 00000C40 A2[D31E0000]            	mov	[previous_val_l], al
  1834 00000C45 2C80                    	sub	al, 80h
  1835 00000C47 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1836 00000C4B 66AB                    	stosw		; original sample (L)
  1837 00000C4D AC                      	lodsb
  1838 00000C4E A2[D51E0000]            	mov	[previous_val_r], al
  1839 00000C53 2C80                    	sub	al, 80h
  1840 00000C55 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1841 00000C59 66AB                    	stosw		; original sample (R)
  1842                                  
  1843                                  	;xor	eax, eax
  1844 00000C5B 668B06                  	mov	ax, [esi]
  1845 00000C5E 49                      	dec	ecx
  1846 00000C5F 7504                    	jnz	short lff16s_2
  1847                                  		; convert 8 bit sample to 16 bit sample
  1848 00000C61 66B88080                	mov	ax, 8080h
  1849                                  lff16s_2:
  1850                                  	;mov	[next_val_l], al
  1851                                  	;mov	[next_val_r], ah
  1852 00000C65 89C3                    	mov	ebx, eax
  1853 00000C67 0205[D31E0000]          	add	al, [previous_val_l]
  1854 00000C6D D0D8                    	rcr	al, 1
  1855 00000C6F 88C2                    	mov	dl, al	; this is temporary interpolation value (L)
  1856 00000C71 0205[D31E0000]          	add	al, [previous_val_l]
  1857 00000C77 D0D8                    	rcr	al, 1
  1858 00000C79 2C80                    	sub	al, 80h
  1859 00000C7B 66C1E008                	shl	ax, 8
  1860 00000C7F 66AB                    	stosw		; this is 1st interpolated sample (L)
  1861 00000C81 88F8                    	mov	al, bh	; [next_val_r]
  1862 00000C83 0205[D51E0000]          	add	al, [previous_val_r]
  1863 00000C89 D0D8                    	rcr	al, 1
  1864 00000C8B 88C6                    	mov	dh, al	; this is temporary interpolation value (R)
  1865 00000C8D 0205[D51E0000]          	add	al, [previous_val_r]
  1866 00000C93 D0D8                    	rcr	al, 1
  1867 00000C95 2C80                    	sub	al, 80h
  1868 00000C97 66C1E008                	shl	ax, 8
  1869 00000C9B 66AB                    	stosw		; this is 1st interpolated sample (R)
  1870 00000C9D 88D0                    	mov	al, dl
  1871 00000C9F 00D8                    	add	al, bl	; [next_val_l]
  1872 00000CA1 D0D8                    	rcr	al, 1
  1873 00000CA3 2C80                    	sub	al, 80h
  1874 00000CA5 66C1E008                	shl	ax, 8
  1875 00000CA9 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1876 00000CAB 88F0                    	mov	al, dh
  1877 00000CAD 00F8                    	add	al, bh	; [next_val_r]
  1878 00000CAF D0D8                    	rcr	al, 1
  1879 00000CB1 2C80                    	sub	al, 80h
  1880 00000CB3 66C1E008                	shl	ax, 8
  1881 00000CB7 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1882                                  	
  1883                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1884 00000CB9 09C9                    	or	ecx, ecx
  1885 00000CBB 7582                    	jnz	short lff16s_1
  1886 00000CBD E959FBFFFF              	jmp	lff16s_3
  1887                                  
  1888                                  ;----------------------------------------------------------------------------
  1889                                  
  1890                                  load_16khz_mono_16_bit:
  1891 00000CC2 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1892                                  					; last of the file?
  1893 00000CC9 7402                    	jz	short lff16m2_0		; no
  1894 00000CCB F9                      	stc
  1895 00000CCC C3                      	retn
  1896                                  
  1897                                  lff16m2_0:
  1898                                  	; edi = audio buffer address
  1899                                  
  1900 00000CCD BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1901                                  
  1902                                  	; load file into memory
  1903                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000CD2 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000CD8 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000CDA 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000CE0 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000CE5 CD40                <1>  int 40h
  1904 00000CE7 7255                    	jc	short lff16m2_7 ; error !
  1905                                  
  1906 00000CE9 A3[EC810000]            	mov	[count], eax
  1907                                  	
  1908 00000CEE D1E8                    	shr	eax, 1
  1909 00000CF0 7505                    	jnz	short lff16m2_8
  1910 00000CF2 E93EFBFFFF              	jmp	lff16_eof
  1911                                  
  1912                                  lff16m2_8:
  1913 00000CF7 89C1                    	mov	ecx, eax  ; word count
  1914                                  lff16m2_1:
  1915 00000CF9 66AD                    	lodsw
  1916 00000CFB 66AB                    	stosw		; original sample (left channel)
  1917 00000CFD 66AB                    	stosw		; original sample (right channel)
  1918 00000CFF 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  1919                                  	;mov	[previous_val], ax
  1920 00000D02 89C3                    	mov	ebx, eax
  1921 00000D04 668B06                  	mov	ax, [esi]
  1922 00000D07 49                      	dec	ecx
  1923 00000D08 7502                    	jnz	short lff16m2_2
  1924 00000D0A 31C0                    	xor	eax, eax
  1925                                  lff16m2_2:
  1926 00000D0C 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  1927 00000D0F 89C5                    	mov	ebp, eax ; [next_val]
  1928                                  	;add	ax, [previous_val]
  1929 00000D11 6601D8                  	add	ax, bx
  1930 00000D14 66D1D8                  	rcr	ax, 1
  1931 00000D17 89C2                    	mov	edx, eax ; this is temporary interpolation value
  1932                                  	;add	ax, [previous_val]
  1933 00000D19 6601D8                  	add	ax, bx
  1934 00000D1C 66D1D8                  	rcr	ax, 1
  1935 00000D1F 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1936 00000D22 66AB                    	stosw		; this is 1st interpolated sample (L)
  1937 00000D24 66AB                    	stosw		; this is 1st interpolated sample (R)
  1938 00000D26 89E8                    	mov	eax, ebp 
  1939 00000D28 6601D0                  	add	ax, dx
  1940 00000D2B 66D1D8                  	rcr	ax, 1
  1941 00000D2E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1942 00000D31 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1943 00000D33 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1944                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1945 00000D35 09C9                    	or	ecx, ecx
  1946 00000D37 75C0                    	jnz	short lff16m2_1
  1947 00000D39 E9DDFAFFFF              	jmp	lff16m2_3
  1948                                  
  1949                                  lff16m2_7:
  1950                                  lff16s2_7:
  1951 00000D3E E9F2FAFFFF              	jmp	lff16m2_5  ; error
  1952                                  
  1953                                  ;----------------------------------------------------------------------------
  1954                                  
  1955                                  load_16khz_stereo_16_bit:
  1956 00000D43 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1957                                  					; last of the file?
  1958 00000D4A 7402                    	jz	short lff16s2_0		; no
  1959 00000D4C F9                      	stc
  1960 00000D4D C3                      	retn
  1961                                  
  1962                                  lff16s2_0:
  1963                                  	; edi = audio buffer address
  1964                                  
  1965 00000D4E BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1966                                  
  1967                                  	; load file into memory
  1968                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000D53 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000D59 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000D5B 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000D61 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000D66 CD40                <1>  int 40h
  1969 00000D68 72D4                    	jc	short lff16s2_7 ; error !
  1970                                  
  1971 00000D6A A3[EC810000]            	mov	[count], eax
  1972                                  	
  1973 00000D6F C1E802                  	shr	eax, 2
  1974 00000D72 7505                    	jnz	short lff16s2_8
  1975 00000D74 E9BCFAFFFF              	jmp	lff16_eof
  1976                                  
  1977                                  lff16s2_8:
  1978 00000D79 89C1                    	mov	ecx, eax  ; dword count
  1979                                  lff16s2_1:
  1980 00000D7B 66AD                    	lodsw
  1981 00000D7D 66AB                    	stosw		; original sample (L)
  1982 00000D7F 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  1983 00000D82 66A3[D31E0000]          	mov	[previous_val_l], ax
  1984 00000D88 66AD                    	lodsw
  1985 00000D8A 66AB                    	stosw		; original sample (R)
  1986 00000D8C 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  1987 00000D8F 66A3[D51E0000]          	mov	[previous_val_r], ax
  1988 00000D95 668B06                  	mov	ax, [esi]
  1989 00000D98 668B5602                	mov	dx, [esi+2]
  1990 00000D9C 49                      	dec	ecx
  1991 00000D9D 7504                    	jnz	short lff16s2_2
  1992 00000D9F 31D2                    	xor	edx, edx
  1993 00000DA1 31C0                    	xor	eax, eax
  1994                                  lff16s2_2:
  1995 00000DA3 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  1996                                  	;mov	[next_val_l], ax
  1997 00000DA6 89C5                    	mov	ebp, eax
  1998 00000DA8 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  1999 00000DAB 668915[D91E0000]        	mov	[next_val_r], dx
  2000 00000DB2 660305[D31E0000]        	add	ax, [previous_val_l]
  2001 00000DB9 66D1D8                  	rcr	ax, 1
  2002 00000DBC 89C2                    	mov	edx, eax ; this is temporary interpolation value (L)
  2003 00000DBE 660305[D31E0000]        	add	ax, [previous_val_l]
  2004 00000DC5 66D1D8                  	rcr	ax, 1
  2005 00000DC8 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2006 00000DCB 66AB                    	stosw		; this is 1st interpolated sample (L)
  2007 00000DCD 66A1[D91E0000]          	mov	ax, [next_val_r]
  2008 00000DD3 660305[D51E0000]        	add	ax, [previous_val_r]
  2009 00000DDA 66D1D8                  	rcr	ax, 1
  2010 00000DDD 89C3                    	mov	ebx, eax ; this is temporary interpolation value (R)
  2011 00000DDF 660305[D51E0000]        	add	ax, [previous_val_r]
  2012 00000DE6 66D1D8                  	rcr	ax, 1
  2013 00000DE9 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2014 00000DEC 66AB                    	stosw		; this is 1st interpolated sample (R)
  2015                                  	;mov	ax, [next_val_l]
  2016 00000DEE 89E8                    	mov	eax, ebp
  2017 00000DF0 6601D0                  	add	ax, dx
  2018 00000DF3 66D1D8                  	rcr	ax, 1
  2019 00000DF6 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2020 00000DF9 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2021 00000DFB 66A1[D91E0000]          	mov	ax, [next_val_r]
  2022 00000E01 6601D8                  	add	ax, bx
  2023 00000E04 66D1D8                  	rcr	ax, 1
  2024 00000E07 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2025 00000E0A 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  2026                                  	
  2027                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2028 00000E0C 09C9                    	or	ecx, ecx
  2029 00000E0E 0F8567FFFFFF            	jnz	lff16s2_1
  2030 00000E14 E902FAFFFF              	jmp	lff16s2_3
  2031                                  
  2032                                  ;----------------------------------------------------------------------------
  2033                                  
  2034                                  load_24khz_mono_8_bit:
  2035 00000E19 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2036                                  					; last of the file?
  2037 00000E20 7402                    	jz	short lff24m_0		; no
  2038 00000E22 F9                      	stc
  2039 00000E23 C3                      	retn
  2040                                  
  2041                                  lff24m_0:
  2042                                  	; edi = audio buffer address
  2043                                  
  2044 00000E24 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2045                                  
  2046                                  	; load file into memory
  2047                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000E29 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000E2F 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000E31 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000E37 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000E3C CD40                <1>  int 40h
  2048 00000E3E 723B                    	jc	short lff24m_7 ; error !
  2049                                  
  2050 00000E40 A3[EC810000]            	mov	[count], eax
  2051                                  	
  2052 00000E45 21C0                    	and	eax, eax
  2053 00000E47 7505                    	jnz	short lff24m_8
  2054 00000E49 E9E7F9FFFF              	jmp	lff24_eof
  2055                                  
  2056                                  lff24m_8:
  2057 00000E4E 89C1                    	mov	ecx, eax	; byte count
  2058                                  lff24m_1:
  2059 00000E50 AC                      	lodsb
  2060                                  	;mov	[previous_val], al
  2061 00000E51 88C3                    	mov	bl, al
  2062 00000E53 2C80                    	sub	al, 80h
  2063 00000E55 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2064 00000E59 66AB                    	stosw		; original sample (left channel)
  2065 00000E5B 66AB                    	stosw		; original sample (right channel)
  2066                                  	;xor	eax, eax
  2067 00000E5D 8A06                    	mov	al, [esi]
  2068 00000E5F 49                      	dec	ecx
  2069 00000E60 7502                    	jnz	short lff24m_2
  2070 00000E62 B080                    	mov	al, 80h
  2071                                  lff24m_2:
  2072                                  	;;mov	[next_val], al
  2073                                  	;mov	bh, al
  2074                                  	;add	al, [previous_val]
  2075 00000E64 00D8                    	add	al, bl
  2076 00000E66 D0D8                    	rcr	al, 1
  2077 00000E68 2C80                    	sub	al, 80h
  2078 00000E6A 66C1E008                	shl	ax, 8
  2079 00000E6E 66AB                    	stosw		; this is interpolated sample (L)
  2080 00000E70 66AB                    	stosw		; this is interpolated sample (R)
  2081                                  	
  2082                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2083 00000E72 09C9                    	or	ecx, ecx
  2084 00000E74 75DA                    	jnz	short lff24m_1
  2085 00000E76 E9A0F9FFFF              	jmp	lff24_3
  2086                                  
  2087                                  lff24m_7:
  2088                                  lff24s_7:
  2089 00000E7B E9B5F9FFFF              	jmp	lff24_5  ; error
  2090                                  
  2091                                  ;----------------------------------------------------------------------------
  2092                                  
  2093                                  load_24khz_stereo_8_bit:
  2094 00000E80 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2095                                  					; last of the file?
  2096 00000E87 7402                    	jz	short lff24s_0		; no
  2097 00000E89 F9                      	stc
  2098 00000E8A C3                      	retn
  2099                                  
  2100                                  lff24s_0:
  2101                                  	; edi = audio buffer address
  2102                                  
  2103 00000E8B BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2104                                  
  2105                                  	; load file into memory
  2106                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000E90 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000E96 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000E98 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000E9E B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000EA3 CD40                <1>  int 40h
  2107 00000EA5 72D4                    	jc	short lff24s_7 ; error !
  2108                                  
  2109 00000EA7 A3[EC810000]            	mov	[count], eax
  2110                                  
  2111 00000EAC D1E8                    	shr	eax, 1
  2112 00000EAE 7505                    	jnz	short lff24s_8
  2113 00000EB0 E980F9FFFF              	jmp	lff24_eof
  2114                                  
  2115                                  lff24s_8:
  2116 00000EB5 89C1                    	mov	ecx, eax  ; word count
  2117                                  lff24s_1:
  2118 00000EB7 AC                      	lodsb
  2119 00000EB8 A2[D31E0000]            	mov	[previous_val_l], al
  2120 00000EBD 2C80                    	sub	al, 80h
  2121 00000EBF 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2122 00000EC3 66AB                    	stosw		; original sample (L)
  2123 00000EC5 AC                      	lodsb
  2124 00000EC6 A2[D51E0000]            	mov	[previous_val_r], al
  2125 00000ECB 2C80                    	sub	al, 80h
  2126 00000ECD 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2127 00000ED1 66AB                    	stosw		; original sample (R)
  2128                                  
  2129                                  	;xor	eax, eax
  2130 00000ED3 668B06                  	mov	ax, [esi]
  2131 00000ED6 49                      	dec	ecx
  2132 00000ED7 7504                    	jnz	short lff24s_2
  2133                                  		; convert 8 bit sample to 16 bit sample
  2134 00000ED9 66B88080                	mov	ax, 8080h
  2135                                  lff24s_2:
  2136                                  	;;mov	[next_val_l], al
  2137                                  	;;mov	[next_val_r], ah
  2138                                  	;mov	bx, ax
  2139 00000EDD 88E7                    	mov	bh, ah
  2140 00000EDF 0205[D31E0000]          	add	al, [previous_val_l]
  2141 00000EE5 D0D8                    	rcr	al, 1
  2142                                  	;mov	dl, al
  2143 00000EE7 2C80                    	sub	al, 80h
  2144 00000EE9 66C1E008                	shl	ax, 8
  2145 00000EED 66AB                    	stosw		; this is interpolated sample (L)
  2146 00000EEF 88F8                    	mov	al, bh	; [next_val_r]
  2147 00000EF1 0205[D51E0000]          	add	al, [previous_val_r]
  2148 00000EF7 D0D8                    	rcr	al, 1
  2149                                  	;mov	dh, al
  2150 00000EF9 2C80                    	sub	al, 80h
  2151 00000EFB 66C1E008                	shl	ax, 8
  2152 00000EFF 66AB                    	stosw		; this is interpolated sample (R)
  2153                                  		
  2154                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2155 00000F01 09C9                    	or	ecx, ecx
  2156 00000F03 75B2                    	jnz	short lff24s_1
  2157 00000F05 E911F9FFFF              	jmp	lff24_3
  2158                                  
  2159                                  ;----------------------------------------------------------------------------
  2160                                  
  2161                                  load_24khz_mono_16_bit:
  2162 00000F0A F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2163                                  					; last of the file?
  2164 00000F11 7402                    	jz	short lff24m2_0		; no
  2165 00000F13 F9                      	stc
  2166 00000F14 C3                      	retn
  2167                                  
  2168                                  lff24m2_0:
  2169                                  	; edi = audio buffer address
  2170                                  
  2171 00000F15 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2172                                  
  2173                                  	; load file into memory
  2174                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000F1A 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000F20 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000F22 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000F28 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000F2D CD40                <1>  int 40h
  2175 00000F2F 723A                    	jc	short lff24m2_7 ; error !
  2176                                  
  2177 00000F31 A3[EC810000]            	mov	[count], eax
  2178                                  
  2179 00000F36 D1E8                    	shr	eax, 1
  2180 00000F38 7505                    	jnz	short lff24m2_8
  2181 00000F3A E9F6F8FFFF              	jmp	lff24_eof
  2182                                  
  2183                                  lff24m2_8:
  2184 00000F3F 89C1                    	mov	ecx, eax  ; word count
  2185                                  lff24m2_1:
  2186 00000F41 66AD                    	lodsw
  2187 00000F43 66AB                    	stosw		; original sample (left channel)
  2188 00000F45 66AB                    	stosw		; original sample (right channel)
  2189 00000F47 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2190                                  	;mov	[previous_val], ax
  2191                                  	;mov	ebx, eax
  2192 00000F4A 668B1E                  	mov	bx, [esi]
  2193 00000F4D 49                      	dec	ecx
  2194 00000F4E 7502                    	jnz	short lff24m2_2
  2195                                  	;xor	eax, eax
  2196 00000F50 31DB                    	xor	ebx, ebx
  2197                                  lff24m2_2:
  2198 00000F52 80C780                  	add	bh, 80h ; convert sound level 0 to 65535 format
  2199                                  	;add	ah, 80h
  2200                                  	;mov	ebp, eax	; [next_val]
  2201                                  	;add	ax, [previous_val]
  2202                                  	; ax = [previous_val]
  2203                                  	; bx = [next_val]
  2204 00000F55 6601D8                  	add	ax, bx
  2205 00000F58 66D1D8                  	rcr	ax, 1
  2206 00000F5B 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2207 00000F5E 66AB                    	stosw		; this is interpolated sample (L)
  2208 00000F60 66AB                    	stosw		; this is interpolated sample (R)
  2209                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2210 00000F62 09C9                    	or	ecx, ecx
  2211 00000F64 75DB                    	jnz	short lff24m2_1
  2212 00000F66 E9B0F8FFFF              	jmp	lff24_3
  2213                                  
  2214                                  lff24m2_7:
  2215                                  lff24s2_7:
  2216 00000F6B E9C5F8FFFF              	jmp	lff24_5  ; error
  2217                                  
  2218                                  ;----------------------------------------------------------------------------
  2219                                  
  2220                                  load_24khz_stereo_16_bit:
  2221 00000F70 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2222                                  					; last of the file?
  2223 00000F77 7402                    	jz	short lff24s2_0		; no
  2224 00000F79 F9                      	stc
  2225 00000F7A C3                      	retn
  2226                                  
  2227                                  lff24s2_0:
  2228                                  	; edi = audio buffer address
  2229                                  
  2230 00000F7B BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2231                                  
  2232                                  	; load file into memory
  2233                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000F80 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000F86 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000F88 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000F8E B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000F93 CD40                <1>  int 40h
  2234 00000F95 72D4                    	jc	short lff24s2_7 ; error !
  2235                                  
  2236 00000F97 A3[EC810000]            	mov	[count], eax
  2237                                  
  2238 00000F9C C1E802                  	shr	eax, 2
  2239 00000F9F 7505                    	jnz	short lff24s2_8
  2240 00000FA1 E98FF8FFFF              	jmp	lff24_eof
  2241                                  
  2242                                  lff24s2_8:
  2243 00000FA6 89C1                    	mov	ecx, eax  ; dword count
  2244                                  lff24s2_1:
  2245 00000FA8 66AD                    	lodsw
  2246 00000FAA 66AB                    	stosw		; original sample (L)
  2247 00000FAC 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2248 00000FAF 66A3[D31E0000]          	mov	[previous_val_l], ax
  2249 00000FB5 66AD                    	lodsw
  2250 00000FB7 66AB                    	stosw		; original sample (R)
  2251 00000FB9 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2252                                  	;mov	[previous_val_r], ax
  2253 00000FBC 89C3                    	mov	ebx, eax
  2254 00000FBE 668B06                  	mov	ax, [esi]
  2255 00000FC1 668B5602                	mov	dx, [esi+2]
  2256 00000FC5 49                      	dec	ecx
  2257 00000FC6 7504                    	jnz	short lff24s2_2
  2258 00000FC8 31D2                    	xor	edx, edx
  2259 00000FCA 31C0                    	xor	eax, eax
  2260                                  lff24s2_2:
  2261 00000FCC 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2262                                  	;;mov	[next_val_l], ax
  2263                                  	;mov	ebp, eax
  2264 00000FCF 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format
  2265                                  	;mov	[next_val_r], dx
  2266 00000FD2 660305[D31E0000]        	add	ax, [previous_val_l]
  2267 00000FD9 66D1D8                  	rcr	ax, 1
  2268 00000FDC 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2269 00000FDF 66AB                    	stosw		; this is interpolated sample (L)
  2270                                  	;mov	ax, [next_val_r]
  2271 00000FE1 89D0                    	mov	eax, edx
  2272                                  	;add	ax, [previous_val_r]
  2273 00000FE3 6601D8                  	add	ax, bx
  2274 00000FE6 66D1D8                  	rcr	ax, 1
  2275 00000FE9 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2276 00000FEC 66AB                    	stosw		; this is interpolated sample (R)
  2277                                  
  2278                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2279 00000FEE 09C9                    	or	ecx, ecx
  2280 00000FF0 75B6                    	jnz	short lff24s2_1
  2281 00000FF2 E924F8FFFF              	jmp	lff24_3
  2282                                  
  2283                                  ;----------------------------------------------------------------------------
  2284                                  
  2285                                  load_32khz_mono_8_bit:
  2286 00000FF7 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2287                                  					; last of the file?
  2288 00000FFE 7402                    	jz	short lff32m_0		; no
  2289 00001000 F9                      	stc
  2290 00001001 C3                      	retn
  2291                                  
  2292                                  lff32m_0:
  2293                                  	; edi = audio buffer address
  2294                                  
  2295 00001002 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2296                                  
  2297                                  	; load file into memory
  2298                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001007 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000100D 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000100F 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001015 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 0000101A CD40                <1>  int 40h
  2299 0000101C 7247                    	jc	short lff32m_7 ; error !
  2300                                  
  2301 0000101E A3[EC810000]            	mov	[count], eax
  2302                                  
  2303 00001023 21C0                    	and	eax, eax
  2304 00001025 7505                    	jnz	short lff32m_8
  2305 00001027 E909F8FFFF              	jmp	lff32_eof
  2306                                  
  2307                                  lff32m_8:
  2308 0000102C 89C1                    	mov	ecx, eax	; byte count
  2309                                  lff32m_1:
  2310 0000102E AC                      	lodsb
  2311                                  	;mov	[previous_val], al
  2312 0000102F 88C3                    	mov	bl, al
  2313 00001031 2C80                    	sub	al, 80h
  2314 00001033 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2315 00001037 66AB                    	stosw		; original sample (left channel)
  2316 00001039 66AB                    	stosw		; original sample (right channel)
  2317                                  	;xor	eax, eax
  2318 0000103B 8A06                    	mov	al, [esi]
  2319 0000103D 49                      	dec	ecx
  2320 0000103E 7502                    	jnz	short lff32m_2
  2321 00001040 B080                    	mov	al, 80h
  2322                                  lff32m_2:
  2323                                  	;;mov	[next_val], al
  2324                                  	;mov	bh, al
  2325                                  	;add	al, [previous_val]
  2326 00001042 00D8                    	add	al, bl
  2327 00001044 D0D8                    	rcr	al, 1
  2328 00001046 2C80                    	sub	al, 80h
  2329 00001048 66C1E008                	shl	ax, 8
  2330 0000104C 66AB                    	stosw		; this is interpolated sample (L)
  2331 0000104E 66AB                    	stosw		; this is interpolated sample (R)
  2332                                  	
  2333                                  	; different than 8-16-24 kHZ !
  2334                                  	; 'original-interpolated-original' trio samples
  2335 00001050 E30E                    	jecxz	lff32m_3
  2336                                  
  2337 00001052 AC                      	lodsb
  2338 00001053 2C80                    	sub	al, 80h
  2339 00001055 66C1E008                	shl	ax, 8
  2340 00001059 66AB                    	stosw		; original sample (left channel)
  2341 0000105B 66AB                    	stosw		; original sample (right channel)
  2342                                  
  2343                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2344 0000105D 49                      	dec	ecx
  2345 0000105E 75CE                    	jnz	short lff32m_1
  2346                                  lff32m_3:
  2347 00001060 E9B6F7FFFF              	jmp	lff32_3
  2348                                  
  2349                                  lff32m_7:
  2350                                  lff32s_7:
  2351 00001065 E9CBF7FFFF              	jmp	lff32_5  ; error
  2352                                  
  2353                                  ;----------------------------------------------------------------------------
  2354                                  
  2355                                  load_32khz_stereo_8_bit:
  2356 0000106A F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2357                                  					; last of the file?
  2358 00001071 7402                    	jz	short lff32s_0		; no
  2359 00001073 F9                      	stc
  2360 00001074 C3                      	retn
  2361                                  
  2362                                  lff32s_0:
  2363                                  	; edi = audio buffer address
  2364                                  
  2365 00001075 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2366                                  
  2367                                  	; load file into memory
  2368                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000107A 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00001080 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00001082 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001088 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 0000108D CD40                <1>  int 40h
  2369 0000108F 72D4                    	jc	short lff32s_7 ; error !
  2370                                  
  2371 00001091 A3[EC810000]            	mov	[count], eax
  2372                                  
  2373 00001096 D1E8                    	shr	eax, 1
  2374 00001098 7505                    	jnz	short lff32s_8
  2375 0000109A E996F7FFFF              	jmp	lff32_eof
  2376                                  
  2377                                  lff32s_8:
  2378 0000109F 89C1                    	mov	ecx, eax  ; word count
  2379                                  lff32s_1:
  2380 000010A1 AC                      	lodsb
  2381 000010A2 A2[D31E0000]            	mov	[previous_val_l], al
  2382 000010A7 2C80                    	sub	al, 80h
  2383 000010A9 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2384 000010AD 66AB                    	stosw		; original sample (L)
  2385 000010AF AC                      	lodsb
  2386 000010B0 A2[D51E0000]            	mov	[previous_val_r], al
  2387 000010B5 2C80                    	sub	al, 80h
  2388 000010B7 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2389 000010BB 66AB                    	stosw		; original sample (R)
  2390                                  
  2391                                  	;xor	eax, eax
  2392 000010BD 668B06                  	mov	ax, [esi]
  2393 000010C0 49                      	dec	ecx
  2394 000010C1 7504                    	jnz	short lff32s_2
  2395                                  		; convert 8 bit sample to 16 bit sample
  2396 000010C3 66B88080                	mov	ax, 8080h
  2397                                  lff32s_2:
  2398                                  	;;mov	[next_val_l], al
  2399                                  	;;mov	[next_val_r], ah
  2400                                  	;mov	bx, ax
  2401 000010C7 88E7                    	mov	bh, ah
  2402 000010C9 0205[D31E0000]          	add	al, [previous_val_l]
  2403 000010CF D0D8                    	rcr	al, 1
  2404                                  	;mov	dl, al
  2405 000010D1 2C80                    	sub	al, 80h
  2406 000010D3 66C1E008                	shl	ax, 8
  2407 000010D7 66AB                    	stosw		; this is interpolated sample (L)
  2408 000010D9 88F8                    	mov	al, bh	; [next_val_r]
  2409 000010DB 0205[D51E0000]          	add	al, [previous_val_r]
  2410 000010E1 D0D8                    	rcr	al, 1
  2411                                  	;mov	dh, al
  2412 000010E3 2C80                    	sub	al, 80h
  2413 000010E5 66C1E008                	shl	ax, 8
  2414 000010E9 66AB                    	stosw		; this is interpolated sample (R)
  2415                                  
  2416                                  	; different than 8-16-24 kHZ !
  2417                                  	; 'original-interpolated-original' trio samples
  2418 000010EB E315                    	jecxz	lff32s_3
  2419                                  
  2420 000010ED AC                      	lodsb
  2421 000010EE 2C80                    	sub	al, 80h
  2422 000010F0 66C1E008                	shl	ax, 8
  2423 000010F4 66AB                    	stosw		; original sample (left channel)
  2424                                  
  2425 000010F6 AC                      	lodsb
  2426 000010F7 2C80                    	sub	al, 80h
  2427 000010F9 66C1E008                	shl	ax, 8
  2428 000010FD 66AB                    	stosw		; original sample (right channel)
  2429                                  
  2430                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2431 000010FF 49                      	dec	ecx
  2432 00001100 759F                    	jnz	short lff32s_1
  2433                                  lff32s_3:
  2434 00001102 E914F7FFFF              	jmp	lff32_3
  2435                                  
  2436                                  ;----------------------------------------------------------------------------
  2437                                  
  2438                                  load_32khz_mono_16_bit:
  2439 00001107 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2440                                  					; last of the file?
  2441 0000110E 7402                    	jz	short lff32m2_0		; no
  2442 00001110 F9                      	stc
  2443 00001111 C3                      	retn
  2444                                  
  2445                                  lff32m2_0:
  2446                                  	; edi = audio buffer address
  2447                                  
  2448 00001112 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2449                                  
  2450                                  	; load file into memory
  2451                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001117 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000111D 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000111F 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001125 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 0000112A CD40                <1>  int 40h
  2452 0000112C 7241                    	jc	short lff32m2_7 ; error !
  2453                                  
  2454 0000112E A3[EC810000]            	mov	[count], eax
  2455                                  
  2456 00001133 D1E8                    	shr	eax, 1
  2457 00001135 7505                    	jnz	short lff32m2_8
  2458 00001137 E9F9F6FFFF              	jmp	lff32_eof
  2459                                  
  2460                                  lff32m2_8:
  2461 0000113C 89C1                    	mov	ecx, eax  ; word count
  2462                                  lff32m2_1:
  2463 0000113E 66AD                    	lodsw
  2464 00001140 66AB                    	stosw		; original sample (left channel)
  2465 00001142 66AB                    	stosw		; original sample (right channel)
  2466 00001144 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2467                                  	;mov	[previous_val], ax
  2468                                  	;mov	ebx, eax
  2469                                  	;xor	eax, eax
  2470                                  	;mov	ax, [esi]
  2471 00001147 668B1E                  	mov	bx, [esi]
  2472 0000114A 49                      	dec	ecx
  2473 0000114B 7502                    	jnz	short lff32m2_2
  2474 0000114D 31DB                    	xor	ebx, ebx
  2475                                  lff32m2_2:
  2476 0000114F 80C780                  	add	bh, 80h ; convert sound level 0 to 65535 format
  2477                                  	;add	ah, 80h
  2478                                  	;mov	ebp, eax ; [next_val]
  2479                                  	;add	ax, [previous_val]
  2480                                  	; ax = [previous_val]
  2481                                  	; bx = [next_val]
  2482 00001152 6601D8                  	add	ax, bx
  2483 00001155 66D1D8                  	rcr	ax, 1
  2484 00001158 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2485 0000115B 66AB                    	stosw		; this is interpolated sample (L)
  2486 0000115D 66AB                    	stosw		; this is interpolated sample (R)
  2487                                  
  2488                                  	; different than 8-16-24 kHZ !
  2489                                  	; 'original-interpolated-original' trio samples
  2490 0000115F E309                    	jecxz	lff32m2_3
  2491                                  
  2492 00001161 66AD                    	lodsw
  2493 00001163 66AB                    	stosw		; original sample (left channel)
  2494 00001165 66AB                    	stosw		; original sample (right channel)
  2495                                  
  2496                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2497 00001167 49                      	dec	ecx
  2498 00001168 75D4                    	jnz	short lff32m2_1
  2499                                  lff32m2_3:
  2500 0000116A E9ACF6FFFF              	jmp	lff32_3
  2501                                  
  2502                                  lff32m2_7:
  2503                                  lff32s2_7:
  2504 0000116F E9C1F6FFFF              	jmp	lff32_5  ; error
  2505                                  
  2506                                  ;----------------------------------------------------------------------------
  2507                                  
  2508                                  load_32khz_stereo_16_bit:
  2509 00001174 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2510                                  					; last of the file?
  2511 0000117B 7402                    	jz	short lff32s2_0		; no
  2512 0000117D F9                      	stc
  2513 0000117E C3                      	retn
  2514                                  
  2515                                  lff32s2_0:
  2516                                  	; edi = audio buffer address
  2517                                  
  2518 0000117F BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2519                                  
  2520                                  	; load file into memory
  2521                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001184 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000118A 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000118C 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001192 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001197 CD40                <1>  int 40h
  2522 00001199 72D4                    	jc	short lff32s2_7 ; error !
  2523                                  
  2524 0000119B A3[EC810000]            	mov	[count], eax
  2525                                  
  2526 000011A0 C1E802                  	shr	eax, 2
  2527 000011A3 7505                    	jnz	short lff32s2_8
  2528 000011A5 E98BF6FFFF              	jmp	lff32_eof
  2529                                  
  2530                                  lff32s2_8:
  2531 000011AA 89C1                    	mov	ecx, eax ; dword count
  2532                                  lff32s2_1:
  2533 000011AC 66AD                    	lodsw
  2534 000011AE 66AB                    	stosw		; original sample (L)
  2535 000011B0 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2536 000011B3 66A3[D31E0000]          	mov	[previous_val_l], ax
  2537 000011B9 66AD                    	lodsw
  2538 000011BB 66AB                    	stosw		; original sample (R)
  2539 000011BD 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2540                                  	;mov	[previous_val_r], ax
  2541 000011C0 89C3                    	mov	ebx, eax
  2542 000011C2 668B06                  	mov	ax, [esi]
  2543 000011C5 668B5602                	mov	dx, [esi+2]
  2544 000011C9 49                      	dec	ecx
  2545 000011CA 7504                    	jnz	short lff32s2_2
  2546 000011CC 31D2                    	xor	edx, edx
  2547 000011CE 31C0                    	xor	eax, eax
  2548                                  lff32s2_2:
  2549 000011D0 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2550                                  	;;mov	[next_val_l], ax
  2551                                  	;mov	ebp, eax
  2552 000011D3 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format
  2553                                  	;mov	[next_val_r], dx
  2554 000011D6 660305[D31E0000]        	add	ax, [previous_val_l]
  2555 000011DD 66D1D8                  	rcr	ax, 1
  2556 000011E0 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2557 000011E3 66AB                    	stosw		; this is interpolated sample (L)
  2558                                  	;mov	ax, [next_val_r]
  2559 000011E5 89D0                    	mov	eax, edx
  2560                                  	;add	ax, [previous_val_r]
  2561 000011E7 6601D8                  	add	ax, bx
  2562 000011EA 66D1D8                  	rcr	ax, 1
  2563 000011ED 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2564 000011F0 66AB                    	stosw		; this is interpolated sample (R)
  2565                                  
  2566                                  	; different than 8-16-24 kHZ !
  2567                                  	; 'original-interpolated-original' trio samples 
  2568 000011F2 E30B                    	jecxz	lff32s2_3
  2569                                  
  2570 000011F4 66AD                    	lodsw
  2571 000011F6 66AB                    	stosw	; original sample (L)
  2572 000011F8 66AD                    	lodsw
  2573 000011FA 66AB                    	stosw	; original sample (R)
  2574                                  
  2575                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2576 000011FC 49                      	dec	ecx
  2577 000011FD 75AD                    	jnz	short lff32s2_1
  2578                                  lff32s2_3:
  2579 000011FF E917F6FFFF              	jmp	lff32_3
  2580                                  
  2581                                  ;----------------------------------------------------------------------------
  2582                                  
  2583                                  load_22khz_mono_8_bit:
  2584 00001204 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2585                                  					; last of the file?
  2586 0000120B 7402                    	jz	short lff22m_0		; no
  2587 0000120D F9                      	stc
  2588 0000120E C3                      	retn
  2589                                  
  2590                                  lff22m_0:
  2591                                  	; edi = audio buffer address
  2592                                  
  2593 0000120F BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2594                                  
  2595                                  	; load file into memory
  2596                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001214 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000121A 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000121C 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001222 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001227 CD40                <1>  int 40h
  2597 00001229 725D                    	jc	short lff22m_7 ; error !
  2598                                  
  2599 0000122B A3[EC810000]            	mov	[count], eax
  2600                                  	
  2601 00001230 21C0                    	and	eax, eax
  2602 00001232 7505                    	jnz	short lff22m_8
  2603 00001234 E9FCF5FFFF              	jmp	lff22_eof
  2604                                  
  2605                                  lff22m_8:
  2606 00001239 89C1                    	mov	ecx, eax	; byte count
  2607                                  lff22m_9:
  2608 0000123B BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2609 00001240 C605[DB1E0000]03        	mov	byte [faz], 3  ; 3 steps/phases
  2610                                  lff22m_1:
  2611                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2612 00001247 AC                      	lodsb
  2613 00001248 8A16                    	mov	dl, [esi]
  2614 0000124A 49                      	dec	ecx
  2615 0000124B 7502                    	jnz	short lff22m_2_1
  2616 0000124D B280                    	mov	dl, 80h
  2617                                  lff22m_2_1:
  2618                                  	; al = [previous_val]
  2619                                  	; dl = [next_val]
  2620 0000124F E835070000              	call	interpolating_3_8bit_mono ; 1 of 17
  2621 00001254 E32D                    	jecxz	lff22m_3
  2622                                  lff22m_2_2:
  2623 00001256 AC                      	lodsb
  2624 00001257 8A16                    	mov	dl, [esi]
  2625 00001259 49                      	dec	ecx
  2626 0000125A 7502                    	jnz	short lff22m_2_3
  2627 0000125C B280                    	mov	dl, 80h
  2628                                  lff22m_2_3:
  2629 0000125E E8B0070000               	call	interpolating_2_8bit_mono ; 2 of 17 .. 6 of 17
  2630 00001263 E31E                    	jecxz	lff22m_3
  2631 00001265 4D                      	dec	ebp
  2632 00001266 75EE                    	jnz	short lff22m_2_2
  2633                                  
  2634 00001268 A0[DB1E0000]            	mov	al, [faz]
  2635 0000126D FEC8                    	dec	al
  2636 0000126F 74CA                    	jz	short lff22m_9
  2637 00001271 FE0D[DB1E0000]          	dec	byte [faz]
  2638 00001277 BD04000000              	mov	ebp, 4
  2639 0000127C FEC8                    	dec	al
  2640 0000127E 75C7                    	jnz	short lff22m_1 ; 3:2:2:2:2 ; 7-11 of 17
  2641 00001280 45                      	inc	ebp ; 5
  2642 00001281 EBC4                    	jmp	short lff22m_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2643                                  
  2644                                  lff22m_3:
  2645                                  lff22s_3:
  2646 00001283 E993F5FFFF              	jmp	lff22_3	; padfill
  2647                                  		; (put zeros in the remain words of the buffer)
  2648                                  lff22m_7:
  2649                                  lff22s_7:
  2650 00001288 E9A8F5FFFF              	jmp	lff22_5  ; error
  2651                                  
  2652                                  ;----------------------------------------------------------------------------
  2653                                  
  2654                                  load_22khz_stereo_8_bit:
  2655 0000128D F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2656                                  					; last of the file?
  2657 00001294 7402                    	jz	short lff22s_0		; no
  2658 00001296 F9                      	stc
  2659 00001297 C3                      	retn
  2660                                  
  2661                                  lff22s_0:
  2662                                  	; edi = audio buffer address
  2663                                  
  2664 00001298 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2665                                  
  2666                                  	; load file into memory
  2667                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000129D 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000012A3 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000012A5 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000012AB B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000012B0 CD40                <1>  int 40h
  2668 000012B2 72D4                    	jc	short lff22s_7 ; error !
  2669                                  
  2670 000012B4 A3[EC810000]            	mov	[count], eax
  2671                                  
  2672 000012B9 D1E8                    	shr	eax, 1
  2673 000012BB 7505                    	jnz	short lff22s_8
  2674 000012BD E973F5FFFF              	jmp	lff22_eof
  2675                                  
  2676                                  lff22s_8:
  2677 000012C2 89C1                    	mov	ecx, eax	; word count
  2678                                  lff22s_9:
  2679 000012C4 BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2680 000012C9 C605[DB1E0000]03        	mov	byte [faz], 3  ; 3 steps/phase
  2681                                  lff22s_1:
  2682                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2683 000012D0 66AD                    	lodsw
  2684 000012D2 668B16                  	mov	dx, [esi]
  2685 000012D5 49                      	dec	ecx
  2686 000012D6 7504                    	jnz	short lff22s_2_1
  2687 000012D8 66BA8080                	mov	dx, 8080h
  2688                                  lff22s_2_1:
  2689                                  	; al = [previous_val_l]
  2690                                  	; ah = [previous_val_r]
  2691                                  	; dl = [next_val_l]
  2692                                  	; dh = [next_val_r]
  2693 000012DC E8DB060000              	call	interpolating_3_8bit_stereo ; 1 of 17
  2694 000012E1 E3A0                    	jecxz	lff22s_3
  2695                                  lff22s_2_2:
  2696 000012E3 66AD                    	lodsw
  2697 000012E5 668B16                  	mov	dx, [esi]
  2698 000012E8 49                      	dec	ecx
  2699 000012E9 7504                    	jnz	short lff22s_2_3
  2700 000012EB 66BA8080                	mov	dx, 8080h
  2701                                  lff22s_2_3:
  2702 000012EF E83C070000               	call	interpolating_2_8bit_stereo ; 2 of 17 .. 6 of 17
  2703 000012F4 E38D                    	jecxz	lff22s_3
  2704 000012F6 4D                      	dec	ebp
  2705 000012F7 75EA                    	jnz	short lff22s_2_2
  2706                                  
  2707 000012F9 A0[DB1E0000]            	mov	al, [faz]
  2708 000012FE FEC8                    	dec	al
  2709 00001300 74C2                    	jz	short lff22s_9
  2710 00001302 FE0D[DB1E0000]          	dec	byte [faz]
  2711 00001308 BD04000000              	mov	ebp, 4
  2712 0000130D FEC8                    	dec	al
  2713 0000130F 75BF                    	jnz	short lff22s_1 ; 3:2:2:2:2 ; 7-11 of 17
  2714 00001311 45                      	inc	ebp ; 5
  2715 00001312 EBBC                    	jmp	short lff22s_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2716                                  
  2717                                  ;----------------------------------------------------------------------------
  2718                                  
  2719                                  load_22khz_mono_16_bit:
  2720 00001314 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2721                                  					; last of the file?
  2722 0000131B 7402                    	jz	short lff22m2_0		; no
  2723 0000131D F9                      	stc
  2724 0000131E C3                      	retn
  2725                                  
  2726                                  lff22m2_0:
  2727                                  	; edi = audio buffer address
  2728                                  
  2729 0000131F BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2730                                  
  2731                                  	; load file into memory
  2732                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001324 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000132A 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000132C 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001332 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001337 CD40                <1>  int 40h
  2733 00001339 7261                    	jc	short lff22m2_7 ; error !
  2734                                  
  2735 0000133B A3[EC810000]            	mov	[count], eax
  2736                                  
  2737 00001340 D1E8                    	shr	eax, 1
  2738 00001342 7505                    	jnz	short lff22m2_8
  2739 00001344 E9ECF4FFFF              	jmp	lff22_eof
  2740                                  
  2741                                  lff22m2_8:
  2742 00001349 89C1                    	mov	ecx, eax	; word count
  2743                                  lff22m2_9:
  2744 0000134B BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2745 00001350 C605[DB1E0000]03        	mov	byte [faz], 3  ; 3 steps/phases
  2746                                  lff22m2_1:
  2747                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2748 00001357 66AD                    	lodsw
  2749 00001359 668B16                  	mov	dx, [esi]
  2750 0000135C 49                      	dec	ecx
  2751 0000135D 7502                    	jnz	short lff22m2_2_1
  2752 0000135F 31D2                    	xor	edx, edx
  2753                                  lff22m2_2_1:	
  2754                                  	; ax = [previous_val]
  2755                                  	; dx = [next_val]
  2756 00001361 E8FB060000              	call	interpolating_3_16bit_mono ; 1 of 17
  2757 00001366 E32F                    	jecxz	lff22m2_3
  2758                                  lff22m2_2_2:
  2759 00001368 66AD                    	lodsw
  2760 0000136A 668B16                  	mov	dx, [esi]
  2761 0000136D 49                      	dec	ecx
  2762 0000136E 7502                    	jnz	short lff22m2_2_3
  2763 00001370 31D2                    	xor	edx, edx
  2764                                  lff22m2_2_3:
  2765 00001372 E87D070000               	call	interpolating_2_16bit_mono ; 2 of 17 .. 6 of 17
  2766 00001377 E31E                    	jecxz	lff22m2_3
  2767 00001379 4D                      	dec	ebp
  2768 0000137A 75EC                    	jnz	short lff22m2_2_2
  2769                                  
  2770 0000137C A0[DB1E0000]            	mov	al, [faz]
  2771 00001381 FEC8                    	dec	al
  2772 00001383 74C6                    	jz	short lff22m2_9
  2773 00001385 FE0D[DB1E0000]          	dec	byte [faz]
  2774 0000138B BD04000000              	mov	ebp, 4
  2775 00001390 FEC8                    	dec	al
  2776 00001392 75C3                    	jnz	short lff22m2_1 ; 3:2:2:2:2 ; 7-11 of 17
  2777 00001394 45                      	inc	ebp ; 5
  2778 00001395 EBC0                    	jmp	short lff22m2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2779                                  
  2780                                  lff22m2_3:
  2781                                  lff22s2_3:
  2782 00001397 E97FF4FFFF              	jmp	lff22_3	; padfill
  2783                                  		; (put zeros in the remain words of the buffer)
  2784                                  lff22m2_7:
  2785                                  lff22s2_7:
  2786 0000139C E994F4FFFF              	jmp	lff22_5  ; error
  2787                                  
  2788                                  ;----------------------------------------------------------------------------
  2789                                  
  2790                                  load_22khz_stereo_16_bit:
  2791 000013A1 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2792                                  					; last of the file?
  2793 000013A8 7402                    	jz	short lff22s2_0		; no
  2794 000013AA F9                      	stc
  2795 000013AB C3                      	retn
  2796                                  
  2797                                  lff22s2_0:
  2798                                  	; edi = audio buffer address
  2799                                  
  2800 000013AC BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2801                                  
  2802                                  	; load file into memory
  2803                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000013B1 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000013B7 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000013B9 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000013BF B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000013C4 CD40                <1>  int 40h
  2804 000013C6 72D4                    	jc	short lff22s2_7 ; error !
  2805                                  
  2806 000013C8 A3[EC810000]            	mov	[count], eax
  2807                                  
  2808 000013CD C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  2809 000013D0 7505                    	jnz	short lff22s2_8
  2810 000013D2 E95EF4FFFF              	jmp	lff22_eof
  2811                                  
  2812                                  lff22s2_8:
  2813 000013D7 89C1                    	mov	ecx, eax	; dword count
  2814                                  lff22s2_9:
  2815 000013D9 BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2816 000013DE C605[DB1E0000]03        	mov	byte [faz], 3  ; 3 steps/phase
  2817                                  lff22s2_1:
  2818                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2819 000013E5 66AD                    	lodsw
  2820 000013E7 89C3                    	mov	ebx, eax
  2821 000013E9 66AD                    	lodsw
  2822 000013EB 8B16                    	mov	edx, [esi]
  2823 000013ED 668915[D71E0000]        	mov	[next_val_l], dx
  2824 000013F4 C1EA10                  	shr	edx, 16
  2825 000013F7 49                      	dec	ecx
  2826 000013F8 7509                    	jnz	short lff22s2_2_1
  2827 000013FA 31D2                    	xor	edx, edx ; 0
  2828 000013FC 668915[D71E0000]        	mov	[next_val_l], dx
  2829                                  lff22s2_2_1:
  2830                                  	; bx = [previous_val_l]
  2831                                  	; ax = [previous_val_r]
  2832                                  	; [next_val_l]
  2833                                  	; dx = [next_val_r]
  2834 00001403 E889060000              	call	interpolating_3_16bit_stereo ; 1 of 17 
  2835 00001408 E38D                    	jecxz	lff22s2_3
  2836                                  lff22s2_2_2:
  2837 0000140A 66AD                    	lodsw
  2838 0000140C 89C3                    	mov	ebx, eax
  2839 0000140E 66AD                    	lodsw
  2840 00001410 8B16                    	mov	edx, [esi]
  2841 00001412 668915[D71E0000]        	mov	[next_val_l], dx
  2842 00001419 C1EA10                  	shr	edx, 16
  2843 0000141C 49                      	dec	ecx
  2844 0000141D 7509                    	jnz	short lff22s2_2_3
  2845 0000141F 31D2                    	xor	edx, edx ; 0
  2846 00001421 668915[D71E0000]        	mov	[next_val_l], dx
  2847                                  lff22s2_2_3:
  2848 00001428 E8DF060000               	call	interpolating_2_16bit_stereo ; 2 of 17 .. 6 of 17
  2849 0000142D E31E                    	jecxz	lff22s2_2_4
  2850                                  
  2851 0000142F 4D                      	dec	ebp
  2852 00001430 75D8                    	jnz	short lff22s2_2_2
  2853                                  
  2854 00001432 A0[DB1E0000]            	mov	al, [faz]
  2855 00001437 FEC8                    	dec	al
  2856 00001439 749E                    	jz	short lff22s2_9
  2857 0000143B FE0D[DB1E0000]          	dec	byte [faz]
  2858 00001441 BD04000000              	mov	ebp, 4
  2859 00001446 FEC8                    	dec	al
  2860 00001448 759B                    	jnz	short lff22s2_1 ; 3:2:2:2:2 ; 7-11 of 17
  2861 0000144A 45                      	inc	ebp ; 5
  2862 0000144B EB98                    	jmp	short lff22s2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2863                                  
  2864                                  lff22s2_2_4:
  2865 0000144D E9C9F3FFFF              	jmp	lff22_3	; padfill
  2866                                  
  2867                                  ;----------------------------------------------------------------------------
  2868                                  
  2869                                  load_11khz_mono_8_bit:
  2870 00001452 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2871                                  					; last of the file?
  2872 00001459 7402                    	jz	short lff11m_0		; no
  2873 0000145B F9                      	stc
  2874 0000145C C3                      	retn
  2875                                  
  2876                                  lff11m_0:
  2877                                  	; edi = audio buffer address
  2878                                  
  2879 0000145D BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2880                                  
  2881                                  	; load file into memory
  2882                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001462 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00001468 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000146A 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001470 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001475 CD40                <1>  int 40h
  2883 00001477 7247                    	jc	short lff11m_7 ; error !
  2884                                  
  2885 00001479 A3[EC810000]            	mov	[count], eax
  2886                                  
  2887 0000147E 21C0                    	and	eax, eax
  2888 00001480 7505                    	jnz	short lff11m_8
  2889 00001482 E9AEF3FFFF              	jmp	lff11_eof
  2890                                  
  2891                                  lff11m_8:
  2892 00001487 89C1                    	mov	ecx, eax	; byte count
  2893                                  lff11m_9:
  2894 00001489 BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  2895                                  lff11m_1:
  2896                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  2897 0000148E AC                      	lodsb
  2898 0000148F 8A16                    	mov	dl, [esi]
  2899 00001491 49                      	dec	ecx
  2900 00001492 7502                    	jnz	short lff11m_2_1
  2901 00001494 B280                    	mov	dl, 80h
  2902                                  lff11m_2_1:	
  2903                                  	; al = [previous_val]
  2904                                  	; dl = [next_val]
  2905 00001496 E8A0060000              	call	interpolating_5_8bit_mono
  2906 0000149B E328                    	jecxz	lff11m_3
  2907                                  lff11m_2_2:
  2908 0000149D AC                      	lodsb
  2909 0000149E 8A16                    	mov	dl, [esi]
  2910 000014A0 49                      	dec	ecx
  2911 000014A1 7502                    	jnz	short lff11m_2_3
  2912 000014A3 B280                    	mov	dl, 80h
  2913                                  lff11m_2_3:
  2914 000014A5 E89D070000               	call	interpolating_4_8bit_mono
  2915 000014AA E319                    	jecxz	lff11m_3
  2916                                  
  2917 000014AC 4D                      	dec	ebp
  2918 000014AD 74DA                    	jz	short lff11m_9
  2919                                  
  2920 000014AF AC                      	lodsb
  2921 000014B0 8A16                    	mov	dl, [esi]
  2922 000014B2 49                      	dec	ecx
  2923 000014B3 7502                    	jnz	short lff11m_2_4
  2924 000014B5 B280                    	mov	dl, 80h
  2925                                  lff11m_2_4:
  2926 000014B7 E88B070000              	call	interpolating_4_8bit_mono
  2927 000014BC E307                    	jecxz	lff11m_3
  2928 000014BE EBCE                    	jmp	short lff11m_1
  2929                                  
  2930                                  lff11m_7:
  2931                                  lff11s_7:
  2932 000014C0 E970F3FFFF              	jmp	lff11_5  ; error
  2933                                  
  2934                                  lff11m_3:
  2935                                  lff11s_3:
  2936 000014C5 E951F3FFFF              	jmp	lff11_3	; padfill
  2937                                  		; (put zeros in the remain words of the buffer)
  2938                                  
  2939                                  ;----------------------------------------------------------------------------
  2940                                  
  2941                                  load_11khz_stereo_8_bit:
  2942 000014CA F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2943                                  					; last of the file?
  2944 000014D1 7402                    	jz	short lff11s_0		; no
  2945 000014D3 F9                      	stc
  2946 000014D4 C3                      	retn
  2947                                  
  2948                                  lff11s_0:
  2949                                  	; edi = audio buffer address
  2950                                  
  2951 000014D5 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2952                                  
  2953                                  	; load file into memory
  2954                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000014DA 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000014E0 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000014E2 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000014E8 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000014ED CD40                <1>  int 40h
  2955 000014EF 72CF                    	jc	short lff11s_7 ; error !
  2956                                  
  2957 000014F1 A3[EC810000]            	mov	[count], eax
  2958                                  
  2959 000014F6 D1E8                    	shr	eax, 1
  2960 000014F8 7505                    	jnz	short lff11s_8
  2961 000014FA E936F3FFFF              	jmp	lff11_eof
  2962                                  
  2963                                  lff11s_8:
  2964 000014FF 89C1                    	mov	ecx, eax	; word count
  2965                                  lff11s_9:
  2966 00001501 BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  2967                                  lff11s_1:
  2968                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  2969 00001506 66AD                    	lodsw
  2970 00001508 668B16                  	mov	dx, [esi]
  2971 0000150B 49                      	dec	ecx
  2972 0000150C 7504                    	jnz	short lff11s_2_1
  2973 0000150E 66BA8080                	mov	dx, 8080h
  2974                                  lff11s_2_1:
  2975                                  	; al = [previous_val_l]
  2976                                  	; ah = [previous_val_r]
  2977                                  	; dl = [next_val_l]
  2978                                  	; dh = [next_val_r]
  2979 00001512 E883060000              	call	interpolating_5_8bit_stereo
  2980 00001517 E3AC                    	jecxz	lff11s_3
  2981                                  lff11s_2_2:
  2982 00001519 66AD                    	lodsw
  2983 0000151B 668B16                  	mov	dx, [esi]
  2984 0000151E 49                      	dec	ecx
  2985 0000151F 7504                    	jnz	short lff11s_2_3
  2986 00001521 66BA8080                	mov	dx, 8080h
  2987                                  lff11s_2_3:
  2988 00001525 E85C070000               	call	interpolating_4_8bit_stereo
  2989 0000152A E399                    	jecxz	lff11s_3
  2990                                  	
  2991 0000152C 4D                      	dec	ebp
  2992 0000152D 74D2                    	jz	short lff11s_9
  2993                                  
  2994 0000152F 66AD                    	lodsw
  2995 00001531 668B16                  	mov	dx, [esi]
  2996 00001534 49                      	dec	ecx
  2997 00001535 7504                    	jnz	short lff11s_2_4
  2998 00001537 66BA8080                	mov	dx, 8080h
  2999                                  lff11s_2_4:
  3000 0000153B E846070000              	call	interpolating_4_8bit_stereo
  3001 00001540 E383                    	jecxz	lff11s_3
  3002 00001542 EBC2                    	jmp	short lff11s_1
  3003                                  
  3004                                  ;----------------------------------------------------------------------------
  3005                                  
  3006                                  load_11khz_mono_16_bit:
  3007 00001544 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3008                                  					; last of the file?
  3009 0000154B 7402                    	jz	short lff11m2_0		; no
  3010 0000154D F9                      	stc
  3011 0000154E C3                      	retn
  3012                                  
  3013                                  lff11m2_0:
  3014                                  	; edi = audio buffer address
  3015                                  
  3016 0000154F BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3017                                  
  3018                                  	; load file into memory
  3019                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001554 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000155A 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000155C 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001562 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001567 CD40                <1>  int 40h
  3020 00001569 724D                    	jc	short lff11m2_7 ; error !
  3021                                  
  3022 0000156B A3[EC810000]            	mov	[count], eax
  3023                                  	
  3024 00001570 D1E8                    	shr	eax, 1
  3025 00001572 7505                    	jnz	short lff11m2_8
  3026 00001574 E9BCF2FFFF              	jmp	lff11_eof
  3027                                  
  3028                                  lff11m2_8:
  3029 00001579 89C1                    	mov	ecx, eax	; word count
  3030                                  lff11m2_9:
  3031 0000157B BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3032                                  lff11m2_1:
  3033                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3034 00001580 66AD                    	lodsw
  3035 00001582 668B16                  	mov	dx, [esi]
  3036 00001585 49                      	dec	ecx
  3037 00001586 7502                    	jnz	short lff11m2_2_1
  3038 00001588 31D2                    	xor	edx, edx
  3039                                  lff11m2_2_1:	
  3040                                  	; ax = [previous_val]
  3041                                  	; dx = [next_val]
  3042 0000158A E864070000              	call	interpolating_5_16bit_mono
  3043 0000158F E362                    	jecxz	lff11m2_3
  3044                                  lff11m2_2_2:
  3045 00001591 66AD                    	lodsw
  3046 00001593 668B16                  	mov	dx, [esi]
  3047 00001596 49                      	dec	ecx
  3048 00001597 7502                    	jnz	short lff11m2_2_3
  3049 00001599 31D2                    	xor	edx, edx
  3050                                  lff11m2_2_3:
  3051 0000159B E87D080000               	call	interpolating_4_16bit_mono
  3052 000015A0 E351                    	jecxz	lff11m2_3
  3053                                  
  3054 000015A2 4D                      	dec	ebp
  3055 000015A3 74D6                    	jz	short lff11m2_9
  3056                                  
  3057 000015A5 66AD                    	lodsw
  3058 000015A7 668B16                  	mov	dx, [esi]
  3059 000015AA 49                      	dec	ecx
  3060 000015AB 7502                    	jnz	short lff11m2_2_4
  3061 000015AD 31D2                    	xor	edx, edx
  3062                                  lff11m2_2_4:
  3063 000015AF E869080000               	call	interpolating_4_16bit_mono
  3064 000015B4 E33D                    	jecxz	lff11m2_3
  3065 000015B6 EBC8                    	jmp	short lff11m2_1
  3066                                  
  3067                                  lff11m2_7:
  3068                                  lff11s2_7:
  3069 000015B8 E978F2FFFF              	jmp	lff11_5  ; error
  3070                                  
  3071                                  ;----------------------------------------------------------------------------
  3072                                  
  3073                                  load_11khz_stereo_16_bit:
  3074 000015BD F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3075                                  					; last of the file?
  3076 000015C4 7402                    	jz	short lff11s2_0		; no
  3077 000015C6 F9                      	stc
  3078 000015C7 C3                      	retn
  3079                                  
  3080                                  lff11s2_0:
  3081                                  	; edi = audio buffer address
  3082                                  
  3083 000015C8 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3084                                  
  3085                                  	; load file into memory
  3086                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000015CD 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000015D3 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000015D5 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000015DB B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000015E0 CD40                <1>  int 40h
  3087 000015E2 72D4                    	jc	short lff11s2_7 ; error !
  3088                                  
  3089 000015E4 A3[EC810000]            	mov	[count], eax
  3090                                  	
  3091 000015E9 C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3092 000015EC 750A                    	jnz	short lff11s2_8
  3093 000015EE E942F2FFFF              	jmp	lff11_eof
  3094                                  
  3095                                  lff11m2_3:
  3096                                  lff11s2_3:
  3097 000015F3 E923F2FFFF              	jmp	lff11_3	; padfill
  3098                                  		; (put zeros in the remain words of the buffer)
  3099                                  
  3100                                  lff11s2_8:
  3101 000015F8 89C1                    	mov	ecx, eax	; dword count
  3102                                  lff11s2_9:
  3103 000015FA BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3104                                  lff11s2_1:
  3105                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3106 000015FF 66AD                    	lodsw
  3107 00001601 89C3                    	mov	ebx, eax
  3108 00001603 66AD                    	lodsw
  3109 00001605 8B16                    	mov	edx, [esi]
  3110                                  	;mov	[next_val_l], edx
  3111                                  	;shr	edx, 16
  3112                                  	;mov	[next_val_r], dx
  3113 00001607 49                      	dec	ecx
  3114 00001608 7502                    	jnz	short lff11s2_2_1
  3115 0000160A 31D2                    	xor	edx, edx ; 0
  3116                                  	;mov	[next_val_l], dx
  3117                                  	;mov	[next_val_r], dx
  3118                                  lff11s2_2_1:
  3119                                  	; bx = [previous_val_l]
  3120                                  	; ax = [previous_val_r]
  3121                                  	; [next_val_l]
  3122                                  	; dx = [next_val_r]
  3123 0000160C 8915[D71E0000]          	mov	[next_val_l], edx
  3124                                  
  3125 00001612 E837070000              	call	interpolating_5_16bit_stereo
  3126 00001617 E3DA                    	jecxz	lff11s2_3
  3127                                  lff11s2_2_2:
  3128 00001619 66AD                    	lodsw
  3129 0000161B 89C3                    	mov	ebx, eax
  3130 0000161D 66AD                    	lodsw
  3131 0000161F 8B16                    	mov	edx, [esi]
  3132                                  	;mov	[next_val_l], dx
  3133                                  	;shr	edx, 16
  3134                                  	;mov	[next_val_r], dx
  3135 00001621 49                      	dec	ecx
  3136 00001622 7502                    	jnz	short lff11s2_2_3
  3137 00001624 31D2                    	xor	edx, edx ; 0
  3138                                  	;mov	[next_val_l], dx
  3139                                  	;mov	[next_val_r], dx
  3140                                  lff11s2_2_3:
  3141 00001626 8915[D71E0000]          	mov	[next_val_l], edx
  3142                                  
  3143 0000162C E825080000              	call	interpolating_4_16bit_stereo
  3144 00001631 E3C0                    	jecxz	lff11s2_3
  3145                                  	
  3146 00001633 4D                      	dec	ebp
  3147 00001634 74C4                    	jz	short lff11s2_9
  3148                                  
  3149 00001636 66AD                    	lodsw
  3150 00001638 89C3                    	mov	ebx, eax
  3151 0000163A 66AD                    	lodsw
  3152 0000163C 8B16                    	mov	edx, [esi]
  3153                                  	;mov	[next_val_l], dx
  3154                                  	;shr	edx, 16
  3155                                  	;mov	[next_val_r], dx
  3156 0000163E 49                      	dec	ecx
  3157 0000163F 7502                    	jnz	short lff11s2_2_4
  3158 00001641 31D2                    	xor	edx, edx ; 0
  3159                                  	;mov	[next_val_l], dx
  3160                                  	;mov	[next_val_r], dx
  3161                                  lff11s2_2_4:
  3162 00001643 8915[D71E0000]          	mov	[next_val_l], edx
  3163                                  
  3164 00001649 E808080000               	call	interpolating_4_16bit_stereo
  3165 0000164E E3A3                    	jecxz	lff11s2_3
  3166 00001650 EBAD                    	jmp	short lff11s2_1
  3167                                  
  3168                                  ;----------------------------------------------------------------------------
  3169                                  
  3170                                  load_44khz_mono_8_bit:
  3171 00001652 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3172                                  					; last of the file?
  3173 00001659 7402                    	jz	short lff44m_0		; no
  3174 0000165B F9                      	stc
  3175 0000165C C3                      	retn
  3176                                  
  3177                                  lff44m_0:
  3178                                  	; edi = audio buffer address
  3179                                  
  3180 0000165D BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3181                                  
  3182                                  	; load file into memory
  3183                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001662 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00001668 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000166A 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001670 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001675 CD40                <1>  int 40h
  3184 00001677 7250                    	jc	short lff44m_7 ; error !
  3185                                  
  3186 00001679 A3[EC810000]            	mov	[count], eax
  3187                                  
  3188 0000167E 21C0                    	and	eax, eax
  3189 00001680 7505                    	jnz	short lff44m_8
  3190 00001682 E9AEF1FFFF              	jmp	lff44_eof
  3191                                  
  3192                                  lff44m_8:
  3193 00001687 89C1                    	mov	ecx, eax	; byte count
  3194                                  lff44m_9:
  3195 00001689 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3196 0000168E C605[DB1E0000]02        	mov	byte [faz], 2  ; 2 steps/phases
  3197                                  lff44m_1:
  3198                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3199                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3200 00001695 AC                      	lodsb
  3201 00001696 8A16                    	mov	dl, [esi]
  3202 00001698 49                      	dec	ecx
  3203 00001699 7502                    	jnz	short lff44m_2_1
  3204 0000169B B280                    	mov	dl, 80h
  3205                                  lff44m_2_1:
  3206                                  	; al = [previous_val]
  3207                                  	; dl = [next_val]
  3208 0000169D E871030000              	call	interpolating_2_8bit_mono
  3209 000016A2 E320                    	jecxz	lff44m_3
  3210                                  lff44m_2_2:
  3211 000016A4 AC                      	lodsb
  3212 000016A5 2C80                    	sub	al, 80h
  3213 000016A7 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3214 000016AB 66AB                    	stosw		; (L)
  3215 000016AD 66AB                    	stosw		; (R)
  3216                                  
  3217 000016AF 49                      	dec	ecx
  3218 000016B0 7412                    	jz	short lff44m_3
  3219 000016B2 4D                      	dec	ebp
  3220 000016B3 75EF                    	jnz	short lff44m_2_2
  3221                                  	
  3222 000016B5 FE0D[DB1E0000]          	dec	byte [faz]
  3223 000016BB 74CC                    	jz	short lff44m_9
  3224 000016BD BD0B000000              	mov	ebp, 11
  3225 000016C2 EBD1                    	jmp	short lff44m_1
  3226                                  
  3227                                  lff44m_3:
  3228                                  lff44s_3:
  3229 000016C4 E952F1FFFF              	jmp	lff44_3	; padfill
  3230                                  		; (put zeros in the remain words of the buffer)
  3231                                  lff44m_7:
  3232                                  lff44s_7:
  3233 000016C9 E967F1FFFF              	jmp	lff44_5  ; error
  3234                                  
  3235                                  ;----------------------------------------------------------------------------
  3236                                  
  3237                                  load_44khz_stereo_8_bit:
  3238 000016CE F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3239                                  					; last of the file?
  3240 000016D5 7402                    	jz	short lff44s_0		; no
  3241 000016D7 F9                      	stc
  3242 000016D8 C3                      	retn
  3243                                  
  3244                                  lff44s_0:
  3245                                  	; edi = audio buffer address
  3246                                  
  3247 000016D9 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3248                                  
  3249                                  	; load file into memory
  3250                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000016DE 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000016E4 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000016E6 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000016EC B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000016F1 CD40                <1>  int 40h
  3251 000016F3 72D4                    	jc	short lff44s_7 ; error !
  3252                                  
  3253 000016F5 A3[EC810000]            	mov	[count], eax
  3254                                  
  3255 000016FA D1E8                    	shr	eax, 1
  3256 000016FC 7505                    	jnz	short lff44s_8
  3257 000016FE E932F1FFFF              	jmp	lff44_eof
  3258                                  
  3259                                  lff44s_8:
  3260 00001703 89C1                    	mov	ecx, eax	; word count
  3261                                  lff44s_9:
  3262 00001705 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3263 0000170A C605[DB1E0000]02        	mov	byte [faz], 2  ; 2 steps/phase
  3264                                  lff44s_1:
  3265                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3266                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3267 00001711 66AD                    	lodsw
  3268 00001713 668B16                  	mov	dx, [esi]
  3269 00001716 49                      	dec	ecx
  3270 00001717 7504                    	jnz	short lff44s_2_1
  3271 00001719 66BA8080                	mov	dx, 8080h
  3272                                  lff44s_2_1:	
  3273                                  	; al = [previous_val_l]
  3274                                  	; ah = [previous_val_r]
  3275                                  	; dl = [next_val_l]
  3276                                  	; dh = [next_val_r]
  3277 0000171D E80E030000              	call	interpolating_2_8bit_stereo
  3278 00001722 E3A0                    	jecxz	lff44s_3
  3279                                  lff44s_2_2:
  3280 00001724 AC                      	lodsb
  3281 00001725 2C80                    	sub	al, 80h
  3282 00001727 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3283 0000172B 66AB                    	stosw		; (L)
  3284 0000172D AC                      	lodsb
  3285 0000172E 2C80                    	sub	al, 80h
  3286 00001730 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3287 00001734 66AB                    	stosw		; (R)
  3288                                  
  3289 00001736 49                      	dec	ecx
  3290 00001737 748B                    	jz	short lff44s_3
  3291 00001739 4D                      	dec	ebp
  3292 0000173A 75E8                    	jnz	short lff44s_2_2
  3293                                  	
  3294 0000173C FE0D[DB1E0000]          	dec	byte [faz]
  3295 00001742 74C1                    	jz	short lff44s_9
  3296 00001744 BD0B000000              	mov	ebp, 11
  3297 00001749 EBC6                    	jmp	short lff44s_1
  3298                                  
  3299                                  ;----------------------------------------------------------------------------
  3300                                  
  3301                                  load_44khz_mono_16_bit:
  3302 0000174B F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3303                                  					; last of the file?
  3304 00001752 7402                    	jz	short lff44m2_0		; no
  3305 00001754 F9                      	stc
  3306 00001755 C3                      	retn
  3307                                  
  3308                                  lff44m2_0:
  3309                                  	; edi = audio buffer address
  3310                                  
  3311 00001756 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3312                                  
  3313                                  	; load file into memory
  3314                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000175B 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00001761 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00001763 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001769 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 0000176E CD40                <1>  int 40h
  3315 00001770 724D                    	jc	short lff44m2_7 ; error !
  3316                                  
  3317 00001772 A3[EC810000]            	mov	[count], eax
  3318                                  
  3319 00001777 D1E8                    	shr	eax, 1
  3320 00001779 7505                    	jnz	short lff44m2_8
  3321 0000177B E9B5F0FFFF              	jmp	lff44_eof
  3322                                  
  3323                                  lff44m2_8:
  3324 00001780 89C1                    	mov	ecx, eax	; word count
  3325                                  lff44m2_9:
  3326 00001782 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3327 00001787 C605[DB1E0000]02        	mov	byte [faz], 2  ; 2 steps/phases
  3328                                  lff44m2_1:
  3329                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3330                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3331 0000178E 66AD                    	lodsw
  3332 00001790 668B16                  	mov	dx, [esi]
  3333 00001793 49                      	dec	ecx
  3334 00001794 7502                    	jnz	short lff44m2_2_1
  3335 00001796 31D2                    	xor	edx, edx
  3336                                  lff44m2_2_1:	
  3337                                  	; ax = [previous_val]
  3338                                  	; dx = [next_val]
  3339 00001798 E857030000              	call	interpolating_2_16bit_mono
  3340 0000179D E31B                    	jecxz	lff44m2_3
  3341                                  lff44m2_2_2:
  3342 0000179F 66AD                    	lodsw
  3343 000017A1 66AB                    	stosw		; (L)eft Channel
  3344 000017A3 66AB                    	stosw		; (R)ight Channel
  3345                                  
  3346 000017A5 49                      	dec	ecx
  3347 000017A6 7412                    	jz	short lff44m2_3	
  3348 000017A8 4D                      	dec	ebp
  3349 000017A9 75F4                    	jnz	short lff44m2_2_2
  3350                                  
  3351 000017AB FE0D[DB1E0000]          	dec	byte [faz]
  3352 000017B1 74CF                    	jz	short lff44m2_9 
  3353 000017B3 BD0B000000              	mov	ebp, 11
  3354 000017B8 EBD4                    	jmp	short lff44m2_1
  3355                                  
  3356                                  lff44m2_3:
  3357                                  lff44s2_3:
  3358 000017BA E95CF0FFFF              	jmp	lff44_3	; padfill
  3359                                  		; (put zeros in the remain words of the buffer)
  3360                                  lff44m2_7:
  3361                                  lff44s2_7:
  3362 000017BF E971F0FFFF              	jmp	lff44_5  ; error
  3363                                  
  3364                                  ;----------------------------------------------------------------------------
  3365                                  
  3366                                  load_44khz_stereo_16_bit:
  3367 000017C4 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3368                                  					; last of the file?
  3369 000017CB 7402                    	jz	short lff44s2_0		; no
  3370 000017CD F9                      	stc
  3371 000017CE C3                      	retn
  3372                                  
  3373                                  lff44s2_0:
  3374                                  	; edi = audio buffer address
  3375                                  
  3376 000017CF BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3377                                  
  3378                                  	; load file into memory
  3379                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000017D4 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000017DA 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000017DC 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000017E2 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000017E7 CD40                <1>  int 40h
  3380 000017E9 72D4                    	jc	short lff44s2_7 ; error !
  3381                                  
  3382 000017EB A3[EC810000]            	mov	[count], eax
  3383                                  
  3384 000017F0 C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3385 000017F3 7505                    	jnz	short lff44s2_8
  3386 000017F5 E93BF0FFFF              	jmp	lff44_eof
  3387                                  
  3388                                  lff44s2_8:
  3389 000017FA 89C1                    	mov	ecx, eax	; dword count
  3390                                  lff44s2_9:
  3391 000017FC BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3392 00001801 C605[DB1E0000]02        	mov	byte [faz], 2  ; 2 steps/phase
  3393                                  lff44s2_1:
  3394                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3395                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3396 00001808 66AD                    	lodsw
  3397 0000180A 89C3                    	mov	ebx, eax
  3398 0000180C 66AD                    	lodsw
  3399                                  	;mov	dx, [esi]
  3400                                  	;mov	[next_val_l], dx
  3401                                  	;mov	dx, [esi+2]
  3402 0000180E 8B16                    	mov	edx, [esi]
  3403 00001810 668915[D71E0000]        	mov	[next_val_l], dx
  3404 00001817 C1EA10                  	shr	edx, 16
  3405 0000181A 49                      	dec	ecx
  3406 0000181B 7509                    	jnz	short lff44s2_2_1
  3407 0000181D 31D2                    	xor	edx, edx ; 0
  3408 0000181F 668915[D71E0000]        	mov	[next_val_l], dx
  3409                                  lff44s2_2_1:
  3410                                  	; bx = [previous_val_l]
  3411                                  	; ax = [previous_val_r]
  3412                                  	; [next_val_l]
  3413                                  	; dx = [next_val_r]
  3414 00001826 E8E1020000              	call	interpolating_2_16bit_stereo
  3415 0000182B E38D                    	jecxz	lff44s2_3
  3416                                  lff44s2_2_2:
  3417                                  	;movsw		; (L)eft Channel
  3418                                  	;movsw		; (R)ight Channel
  3419 0000182D A5                      	movsd
  3420                                  
  3421 0000182E 49                      	dec	ecx
  3422 0000182F 7489                    	jz	short lff44s2_3	
  3423 00001831 4D                      	dec	ebp
  3424 00001832 75F9                    	jnz	short lff44s2_2_2
  3425                                  	
  3426 00001834 FE0D[DB1E0000]          	dec	byte [faz]
  3427 0000183A 74C0                    	jz	short lff44s2_9 
  3428 0000183C BD0B000000              	mov	ebp, 11
  3429 00001841 EBC5                    	jmp	short lff44s2_1
  3430                                  
  3431                                  ;----------------------------------------------------------------------------
  3432                                  
  3433                                  load_12khz_mono_8_bit:
  3434 00001843 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3435                                  					; last of the file?
  3436 0000184A 7402                    	jz	short lff12m_0		; no
  3437 0000184C F9                      	stc
  3438 0000184D C3                      	retn
  3439                                  
  3440                                  lff12m_0:
  3441                                  	; edi = audio buffer address
  3442                                  
  3443 0000184E BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3444                                  
  3445                                  	; load file into memory
  3446                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001853 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00001859 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000185B 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001861 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001866 CD40                <1>  int 40h
  3447 00001868 7256                    	jc	short lff12m_7 ; error !
  3448                                  
  3449 0000186A A3[EC810000]            	mov	[count], eax
  3450                                  
  3451 0000186F 21C0                    	and	eax, eax
  3452 00001871 7505                    	jnz	short lff12m_8
  3453 00001873 E9BDEFFFFF              	jmp	lff12_eof
  3454                                  
  3455                                  lff12m_8:
  3456 00001878 89C1                    	mov	ecx, eax	; byte count
  3457                                  lff12m_1:
  3458                                  	; original-interpolated-interpolated-interpolated
  3459 0000187A AC                      	lodsb
  3460 0000187B 8A16                    	mov	dl, [esi]
  3461 0000187D 49                      	dec	ecx
  3462 0000187E 7502                    	jnz	short lff12m_2
  3463 00001880 B280                    	mov	dl, 80h
  3464                                  lff12m_2:	
  3465                                  	; al = [previous_val]
  3466                                  	; dl = [next_val]
  3467 00001882 E8C0030000               	call	interpolating_4_8bit_mono
  3468 00001887 E353                    	jecxz	lff12m_3
  3469 00001889 EBEF                    	jmp	short lff12m_1
  3470                                  
  3471                                  ;----------------------------------------------------------------------------
  3472                                  
  3473                                  load_12khz_stereo_8_bit:
  3474 0000188B F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3475                                  					; last of the file?
  3476 00001892 7402                    	jz	short lff12s_0		; no
  3477 00001894 F9                      	stc
  3478 00001895 C3                      	retn
  3479                                  
  3480                                  lff12s_0:
  3481                                  	; edi = audio buffer address
  3482                                  
  3483 00001896 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3484                                  
  3485                                  	; load file into memory
  3486                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000189B 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000018A1 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000018A3 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000018A9 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000018AE CD40                <1>  int 40h
  3487 000018B0 720E                    	jc	short lff12s_7 ; error !
  3488                                  
  3489 000018B2 A3[EC810000]            	mov	[count], eax
  3490                                  	
  3491 000018B7 D1E8                    	shr	eax, 1
  3492 000018B9 750A                    	jnz	short lff12s_8
  3493 000018BB E975EFFFFF              	jmp	lff12_eof
  3494                                  
  3495                                  lff12m_7:
  3496                                  lff12s_7:
  3497 000018C0 E970EFFFFF              	jmp	lff12_5  ; error
  3498                                  
  3499                                  lff12s_8:
  3500 000018C5 89C1                    	mov	ecx, eax	; word count
  3501                                  lff12s_1:
  3502                                  	; original-interpolated-interpolated-interpolated
  3503 000018C7 66AD                    	lodsw
  3504 000018C9 668B16                  	mov	dx, [esi]
  3505 000018CC 49                      	dec	ecx
  3506 000018CD 7504                    	jnz	short lff12s_2
  3507 000018CF 66BA8080                	mov	dx, 8080h
  3508                                  lff12s_2:	
  3509                                  	; al = [previous_val_l]
  3510                                  	; ah = [previous_val_r]
  3511                                  	; dl = [next_val_l]
  3512                                  	; dh = [next_val_r]
  3513 000018D3 E8AE030000              	call	interpolating_4_8bit_stereo
  3514 000018D8 E302                    	jecxz	lff12s_3
  3515 000018DA EBEB                    	jmp	short lff12s_1
  3516                                  
  3517                                  lff12m_3:
  3518                                  lff12s_3:
  3519 000018DC E93AEFFFFF              	jmp	lff12_3	; padfill
  3520                                  		; (put zeros in the remain words of the buffer)
  3521                                  
  3522                                  ;----------------------------------------------------------------------------
  3523                                  
  3524                                  load_12khz_mono_16_bit:
  3525 000018E1 F605[CD770000]01        	test    byte [flags], ENDOFFILE	; have we already read the
  3526                                  					; last of the file?
  3527 000018E8 7402                    	jz	short lff12m2_0		; no
  3528 000018EA F9                      	stc
  3529 000018EB C3                      	retn
  3530                                  
  3531                                  lff12m2_0:
  3532                                  	; edi = audio buffer address
  3533                                  
  3534 000018EC BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3535                                  
  3536                                  	; load file into memory
  3537                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000018F1 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000018F7 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000018F9 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000018FF B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001904 CD40                <1>  int 40h
  3538 00001906 7223                    	jc	short lff12m2_7 ; error !
  3539                                  
  3540 00001908 A3[EC810000]            	mov	[count], eax
  3541                                  
  3542 0000190D D1E8                    	shr	eax, 1
  3543 0000190F 7505                    	jnz	short lff12m2_8
  3544 00001911 E91FEFFFFF              	jmp	lff12_eof
  3545                                  
  3546                                  lff12m2_8:
  3547 00001916 89C1                    	mov	ecx, eax	; word count
  3548                                  lff12m2_1:
  3549                                  	; original-interpolated-interpolated-interpolated
  3550 00001918 66AD                    	lodsw
  3551 0000191A 668B16                  	mov	dx, [esi]
  3552 0000191D 49                      	dec	ecx
  3553 0000191E 7502                    	jnz	short lff12m2_2
  3554 00001920 31D2                    	xor	edx, edx
  3555                                  lff12m2_2:	
  3556                                  	; ax = [previous_val]
  3557                                  	; dx = [next_val]
  3558 00001922 E8F6040000               	call	interpolating_4_16bit_mono
  3559 00001927 E3B3                    	jecxz	lff12m_3
  3560 00001929 EBED                    	jmp	short lff12m2_1
  3561                                  
  3562                                  lff12m2_7:
  3563                                  lff12s2_7:
  3564 0000192B E905EFFFFF              	jmp	lff12_5  ; error
  3565                                  
  3566                                  ;----------------------------------------------------------------------------
  3567                                  
  3568                                  load_12khz_stereo_16_bit:
  3569 00001930 F605[CD770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3570                                  					; last of the file?
  3571 00001937 7402                    	jz	short lff12s2_0		; no
  3572 00001939 F9                      	stc
  3573 0000193A C3                      	retn
  3574                                  
  3575                                  lff12s2_0:
  3576                                  	; edi = audio buffer address
  3577                                  
  3578 0000193B BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3579                                  
  3580                                  	; load file into memory
  3581                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001940 8B1D[EF730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00001946 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00001948 8B15[E4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000194E B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001953 CD40                <1>  int 40h
  3582 00001955 72D4                    	jc	short lff12s2_7 ; error !
  3583                                  
  3584 00001957 A3[EC810000]            	mov	[count], eax
  3585                                  
  3586 0000195C C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3587 0000195F 750A                    	jnz	short lff12s2_8
  3588 00001961 E9CFEEFFFF              	jmp	lff12_eof
  3589                                  
  3590                                  lff12m2_3:
  3591                                  lff12s2_3:
  3592 00001966 E9B0EEFFFF              	jmp	lff12_3	; padfill
  3593                                  		; (put zeros in the remain words of the buffer)
  3594                                  
  3595                                  lff12s2_8:
  3596 0000196B 89C1                    	mov	ecx, eax	; dword count
  3597                                  lff12s2_1:
  3598                                  	; original-interpolated-interpolated-interpolated
  3599 0000196D 66AD                    	lodsw
  3600 0000196F 89C3                    	mov	ebx, eax
  3601 00001971 66AD                    	lodsw
  3602 00001973 8B16                    	mov	edx, [esi]
  3603 00001975 49                      	dec	ecx
  3604 00001976 7502                    	jnz	short lff12s2_2
  3605 00001978 31D2                    	xor	edx, edx ; 0
  3606                                  lff12s2_2:
  3607 0000197A 8915[D71E0000]          	mov	[next_val_l], edx
  3608                                  
  3609                                  	; bx = [previous_val_l]
  3610                                  	; ax = [previous_val_r]
  3611                                  	; [next_val_l]
  3612                                  	; [next_val_r]
  3613 00001980 E8D1040000              	call	interpolating_4_16bit_stereo
  3614 00001985 E3DF                    	jecxz	lff12s2_3
  3615 00001987 EBE4                    	jmp	short lff12s2_1
  3616                                  
  3617                                  ;-----------------------------------------------------------------------------
  3618                                  ;-----------------------------------------------------------------------------
  3619                                  
  3620                                  	; 09/02/2025
  3621                                  
  3622                                  interpolating_3_8bit_mono:
  3623                                  	; al = [previous_val]
  3624                                  	; dl = [next_val]
  3625                                  	; original-interpolated-interpolated
  3626                                  
  3627 00001989 88C3                    	mov	bl, al
  3628 0000198B 2C80                    	sub	al, 80h
  3629 0000198D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3630 00001991 66AB                    	stosw		; original sample (L)
  3631 00001993 66AB                    	stosw		; original sample (R)
  3632 00001995 88D8                    	mov	al, bl
  3633 00001997 00D0                    	add	al, dl
  3634 00001999 D0D8                    	rcr	al, 1
  3635 0000199B 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3636 0000199D 00D8                    	add	al, bl
  3637 0000199F D0D8                    	rcr	al, 1
  3638 000019A1 2C80                    	sub	al, 80h
  3639 000019A3 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3640 000019A7 66AB                    	stosw		; interpolated sample 1 (L)
  3641 000019A9 66AB                    	stosw		; interpolated sample 1 (R)
  3642 000019AB 88F8                    	mov	al, bh
  3643 000019AD 00D0                    	add	al, dl	; [next_val]
  3644 000019AF D0D8                    	rcr	al, 1
  3645 000019B1 2C80                    	sub	al, 80h
  3646 000019B3 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3647 000019B7 66AB                    	stosw		; interpolated sample 2 (L)
  3648 000019B9 66AB                    	stosw		; interpolated sample 2 (R)
  3649 000019BB C3                      	retn
  3650                                  
  3651                                  ;-----------------------------------------------------------------------------
  3652                                  
  3653                                  interpolating_3_8bit_stereo:
  3654                                  	; al = [previous_val_l]
  3655                                  	; ah = [previous_val_r]
  3656                                  	; dl = [next_val_l]
  3657                                  	; dh = [next_val_r]	
  3658                                  	; original-interpolated-interpolated
  3659                                  
  3660 000019BC 89C3                    	mov	ebx, eax
  3661 000019BE 2C80                    	sub	al, 80h
  3662 000019C0 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3663 000019C4 66AB                    	stosw		; original sample (L)
  3664 000019C6 88F8                    	mov	al, bh
  3665 000019C8 2C80                    	sub	al, 80h
  3666 000019CA 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3667 000019CE 66AB                    	stosw		; original sample (R)
  3668 000019D0 88D8                    	mov	al, bl
  3669 000019D2 00D0                    	add	al, dl	; [next_val_l]
  3670 000019D4 D0D8                    	rcr	al, 1
  3671 000019D6 50                      	push	eax ; *	; al = interpolated middle (L) (temporary)
  3672 000019D7 00D8                    	add	al, bl	; [previous_val_l]
  3673 000019D9 D0D8                    	rcr	al, 1
  3674 000019DB 2C80                    	sub	al, 80h
  3675 000019DD 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3676 000019E1 66AB                    	stosw		; interpolated sample 1 (L)
  3677 000019E3 88F8                    	mov	al, bh
  3678 000019E5 00F0                    	add	al, dh	; [next_val_r]
  3679 000019E7 D0D8                    	rcr	al, 1
  3680 000019E9 50                      	push	eax ; ** ; al = interpolated middle (R) (temporary)
  3681 000019EA 00F8                    	add	al, bh	; [previous_val_r]
  3682 000019EC D0D8                    	rcr	al, 1
  3683 000019EE 2C80                    	sub	al, 80h
  3684 000019F0 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3685 000019F4 66AB                    	stosw		; interpolated sample 1 (R)
  3686 000019F6 5B                      	pop	ebx ; **
  3687 000019F7 58                      	pop	eax ; *
  3688 000019F8 00D0                    	add	al, dl	; [next_val_l]
  3689 000019FA D0D8                    	rcr	al, 1
  3690 000019FC 2C80                    	sub	al, 80h
  3691 000019FE 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3692 00001A02 66AB                    	stosw		; interpolated sample 2 (L)
  3693 00001A04 88D8                    	mov	al, bl
  3694 00001A06 00F0                    	add	al, dh	; [next_val_r]
  3695 00001A08 D0D8                    	rcr	al, 1
  3696 00001A0A 2C80                    	sub	al, 80h
  3697 00001A0C 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3698 00001A10 66AB                    	stosw		; interpolated sample 2 (R)
  3699 00001A12 C3                      	retn
  3700                                  
  3701                                  ;-----------------------------------------------------------------------------
  3702                                  
  3703                                  interpolating_2_8bit_mono:
  3704                                  	; al = [previous_val]
  3705                                  	; dl = [next_val]
  3706                                  	; original-interpolated
  3707                                  
  3708 00001A13 88C3                    	mov	bl, al
  3709 00001A15 2C80                    	sub	al, 80h
  3710 00001A17 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3711 00001A1B 66AB                    	stosw		; original sample (L)
  3712 00001A1D 66AB                    	stosw		; original sample (R)
  3713 00001A1F 88D8                    	mov	al, bl
  3714 00001A21 00D0                    	add	al, dl
  3715 00001A23 D0D8                    	rcr	al, 1
  3716 00001A25 2C80                    	sub	al, 80h
  3717 00001A27 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3718 00001A2B 66AB                    	stosw		; interpolated sample (L)
  3719 00001A2D 66AB                    	stosw		; interpolated sample (R)
  3720 00001A2F C3                      	retn
  3721                                  
  3722                                  ;-----------------------------------------------------------------------------
  3723                                  
  3724                                  interpolating_2_8bit_stereo:
  3725                                  	; al = [previous_val_l]
  3726                                  	; ah = [previous_val_r]
  3727                                  	; dl = [next_val_l]
  3728                                  	; dh = [next_val_r]
  3729                                  	; original-interpolated
  3730                                  
  3731 00001A30 89C3                    	mov	ebx, eax
  3732 00001A32 2C80                    	sub	al, 80h
  3733 00001A34 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3734 00001A38 66AB                    	stosw		; original sample (L)
  3735 00001A3A 88F8                    	mov	al, bh
  3736 00001A3C 2C80                    	sub	al, 80h
  3737 00001A3E 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3738 00001A42 66AB                    	stosw		; original sample (R)
  3739 00001A44 88D8                    	mov	al, bl	; [previous_val_l]
  3740 00001A46 00D0                    	add	al, dl	; [next_val_l]
  3741 00001A48 D0D8                    	rcr	al, 1
  3742 00001A4A 2C80                    	sub	al, 80h
  3743 00001A4C 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3744 00001A50 66AB                    	stosw		; interpolated sample (L)
  3745 00001A52 88F8                    	mov	al, bh
  3746 00001A54 00F0                    	add	al, dh	; [next_val_r]
  3747 00001A56 D0D8                    	rcr	al, 1
  3748 00001A58 2C80                    	sub	al, 80h
  3749 00001A5A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3750 00001A5E 66AB                    	stosw		; interpolated sample (R)
  3751 00001A60 C3                      	retn
  3752                                  
  3753                                  ;-----------------------------------------------------------------------------
  3754                                  
  3755                                  interpolating_3_16bit_mono:
  3756                                  	; ax = [previous_val]
  3757                                  	; dx = [next_val]
  3758                                  	; original-interpolated-interpolated
  3759                                  
  3760 00001A61 66AB                    	stosw		; original sample (L)
  3761 00001A63 66AB                    	stosw		; original sample (R)
  3762 00001A65 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3763 00001A68 50                      	push	eax ; *	; [previous_val]
  3764 00001A69 80C680                  	add	dh, 80h
  3765 00001A6C 6601D0                  	add	ax, dx
  3766 00001A6F 66D1D8                  	rcr	ax, 1
  3767 00001A72 5B                      	pop	ebx ; *
  3768 00001A73 93                      	xchg	ebx, eax ; bx  = interpolated middle (temporary)
  3769 00001A74 6601D8                  	add	ax, bx	; [previous_val] + interpolated middle
  3770 00001A77 66D1D8                  	rcr	ax, 1
  3771 00001A7A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3772 00001A7D 66AB                    	stosw 		; interpolated sample 1 (L)
  3773 00001A7F 66AB                    	stosw		; interpolated sample 1 (R)
  3774 00001A81 89D8                    	mov	eax, ebx
  3775 00001A83 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  3776 00001A86 66D1D8                  	rcr	ax, 1
  3777 00001A89 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3778 00001A8C 66AB                    	stosw		; interpolated sample 2 (L)
  3779 00001A8E 66AB                    	stosw		; interpolated sample 2 (R)
  3780 00001A90 C3                      	retn
  3781                                  
  3782                                  ;-----------------------------------------------------------------------------
  3783                                  
  3784                                  interpolating_3_16bit_stereo:
  3785                                  	; bx = [previous_val_l]
  3786                                  	; ax = [previous_val_r]
  3787                                  	; [next_val_l]
  3788                                  	; dx = [next_val_r]
  3789                                  	; original-interpolated-interpolated
  3790                                  
  3791 00001A91 93                      	xchg	eax, ebx
  3792 00001A92 66AB                    	stosw		; original sample (L)
  3793 00001A94 93                      	xchg	eax, ebx
  3794 00001A95 66AB                    	stosw		; original sample (R)
  3795 00001A97 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3796 00001A9A 50                      	push	eax ; *	; [previous_val_r]
  3797 00001A9B 80C780                  	add	bh, 80h
  3798 00001A9E 8005[D81E0000]80        	add	byte [next_val_l+1], 80h
  3799 00001AA5 66A1[D71E0000]          	mov	ax, [next_val_l]
  3800 00001AAB 6601D8                  	add	ax, bx	; [previous_val_l]
  3801 00001AAE 66D1D8                  	rcr	ax, 1
  3802 00001AB1 93                      	xchg	eax, ebx ; ax = [previous_val_l]
  3803 00001AB2 6601D8                  	add	ax, bx	; bx = interpolated middle (L)
  3804 00001AB5 66D1D8                  	rcr	ax, 1
  3805 00001AB8 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3806 00001ABB 66AB                    	stosw 		; interpolated sample 1 (L)
  3807 00001ABD 58                      	pop	eax  ; *
  3808 00001ABE 80C680                  	add	dh, 80h ; convert sound level 0 to 65535 format
  3809 00001AC1 52                      	push	edx  ; * ; [next_val_r]
  3810 00001AC2 92                      	xchg	eax, edx
  3811 00001AC3 6601D0                  	add	ax, dx	; [next_val_r] + [previous_val_r]
  3812 00001AC6 66D1D8                  	rcr	ax, 1	; / 2
  3813 00001AC9 50                      	push	eax ; ** ; interpolated middle (R)
  3814 00001ACA 6601D0                  	add	ax, dx	; + [previous_val_r]
  3815 00001ACD 66D1D8                  	rcr	ax, 1
  3816 00001AD0 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3817 00001AD3 66AB                    	stosw 		; interpolated sample 1 (R)
  3818 00001AD5 66A1[D71E0000]          	mov	ax, [next_val_l]
  3819 00001ADB 6601D8                  	add	ax, bx	; + interpolated middle (L)
  3820 00001ADE 66D1D8                  	rcr	ax, 1
  3821 00001AE1 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3822 00001AE4 66AB                    	stosw 		; interpolated sample 2 (L)
  3823 00001AE6 58                      	pop	eax ; **
  3824 00001AE7 5A                      	pop	edx ; *
  3825 00001AE8 6601D0                  	add	ax, dx	; interpolated middle + [next_val_r]
  3826 00001AEB 66D1D8                  	rcr	ax, 1	; / 2
  3827 00001AEE 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3828 00001AF1 66AB                    	stosw 		; interpolated sample 2 (L)
  3829 00001AF3 C3                      	retn
  3830                                  
  3831                                  ;-----------------------------------------------------------------------------
  3832                                  
  3833                                  interpolating_2_16bit_mono:
  3834                                  	; ax = [previous_val]
  3835                                  	; dx = [next_val]
  3836                                  	; original-interpolated
  3837                                  
  3838 00001AF4 66AB                    	stosw		; original sample (L)
  3839 00001AF6 66AB                    	stosw		; original sample (R)
  3840 00001AF8 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3841 00001AFB 80C680                  	add	dh, 80h
  3842 00001AFE 6601D0                  	add	ax, dx
  3843 00001B01 66D1D8                  	rcr	ax, 1
  3844 00001B04 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3845 00001B07 66AB                    	stosw		; interpolated sample (L)
  3846 00001B09 66AB                    	stosw		; interpolated sample (R)
  3847 00001B0B C3                      	retn
  3848                                  
  3849                                  ;-----------------------------------------------------------------------------
  3850                                  
  3851                                  interpolating_2_16bit_stereo:
  3852                                  	; bx = [previous_val_l]
  3853                                  	; ax = [previous_val_r]
  3854                                  	; [next_val_l]
  3855                                  	; dx = [next_val_r]
  3856                                  	; original-interpolated
  3857                                  
  3858 00001B0C 93                      	xchg	eax, ebx
  3859 00001B0D 66AB                    	stosw		; original sample (L)
  3860 00001B0F 93                      	xchg	eax, ebx
  3861 00001B10 66AB                    	stosw		; original sample (R)
  3862 00001B12 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3863 00001B15 80C680                  	add	dh, 80h
  3864 00001B18 6601D0                  	add	ax, dx	; [previous_val_r] + [next_val_r]
  3865 00001B1B 66D1D8                  	rcr	ax, 1	; / 2
  3866 00001B1E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3867                                  	;push	eax ; *	; interpolated sample (R)
  3868 00001B21 C1E010                  	shl	eax, 16
  3869 00001B24 66A1[D71E0000]          	mov	ax, [next_val_l]
  3870 00001B2A 80C480                  	add	ah, 80h
  3871 00001B2D 80C780                  	add	bh, 80h
  3872 00001B30 6601D8                  	add	ax, bx	; [next_val_l] + [previous_val_l]
  3873 00001B33 66D1D8                  	rcr	ax, 1	; / 2
  3874 00001B36 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3875                                  	;stosw 		; interpolated sample (L)
  3876                                  	;pop	eax ; *
  3877                                  	;sub	ah, 80h	; -32768 to +32767 format again
  3878                                  	;stosw 		; interpolated sample (R)
  3879 00001B39 AB                      	stosd
  3880 00001B3A C3                      	retn
  3881                                  
  3882                                  ;-----------------------------------------------------------------------------
  3883                                  
  3884                                  interpolating_5_8bit_mono:
  3885                                  	; al = [previous_val]
  3886                                  	; dl = [next_val]
  3887                                  	; original-interpltd-interpltd-interpltd-interpltd
  3888                                  
  3889 00001B3B 88C3                    	mov	bl, al
  3890 00001B3D 2C80                    	sub	al, 80h
  3891 00001B3F 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3892 00001B43 66AB                    	stosw		; original sample (L)
  3893 00001B45 66AB                    	stosw		; original sample (R)
  3894 00001B47 88D8                    	mov	al, bl
  3895 00001B49 00D0                    	add	al, dl
  3896 00001B4B D0D8                    	rcr	al, 1
  3897 00001B4D 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3898 00001B4F 00D8                    	add	al, bl  ; [previous_val]
  3899 00001B51 D0D8                    	rcr	al, 1
  3900 00001B53 88C6                    	mov	dh, al	; interpolated 1st quarter (temporary)
  3901 00001B55 00D8                    	add	al, bl
  3902 00001B57 D0D8                    	rcr	al, 1
  3903 00001B59 2C80                    	sub	al, 80h
  3904 00001B5B 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3905 00001B5F 66AB                    	stosw		; interpolated sample 1 (L)
  3906 00001B61 66AB                    	stosw		; interpolated sample 1 (R)
  3907 00001B63 88F8                    	mov	al, bh
  3908 00001B65 00F0                    	add	al, dh
  3909 00001B67 D0D8                    	rcr	al, 1
  3910 00001B69 2C80                    	sub	al, 80h
  3911 00001B6B 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3912 00001B6F 66AB                    	stosw		; interpolated sample 2 (L)
  3913 00001B71 66AB                    	stosw		; interpolated sample 2 (R)
  3914 00001B73 88F8                    	mov	al, bh
  3915 00001B75 00D0                    	add	al, dl	; [next_val]
  3916 00001B77 D0D8                    	rcr	al, 1
  3917 00001B79 88C6                    	mov	dh, al	; interpolated 3rd quarter (temporary)
  3918 00001B7B 00F8                    	add	al, bh
  3919 00001B7D D0D8                    	rcr	al, 1
  3920 00001B7F 2C80                    	sub	al, 80h
  3921 00001B81 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3922 00001B85 66AB                    	stosw		; interpolated sample 3 (L)
  3923 00001B87 66AB                    	stosw		; interpolated sample 3 (R)
  3924 00001B89 88F0                    	mov	al, dh
  3925 00001B8B 00D0                    	add	al, dl
  3926 00001B8D D0D8                    	rcr	al, 1
  3927 00001B8F 2C80                    	sub	al, 80h
  3928 00001B91 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3929 00001B95 66AB                    	stosw		; interpolated sample 4 (L)
  3930 00001B97 66AB                    	stosw		; interpolated sample 4 (R)
  3931 00001B99 C3                      	retn
  3932                                  
  3933                                  ;-----------------------------------------------------------------------------
  3934                                  
  3935                                  interpolating_5_8bit_stereo:
  3936                                  	; al = [previous_val_l]
  3937                                  	; ah = [previous_val_r]
  3938                                  	; dl = [next_val_l]
  3939                                  	; dh = [next_val_r]
  3940                                  	; original-interpltd-interpltd-interpltd-interpltd
  3941                                  
  3942 00001B9A 89C3                    	mov	ebx, eax
  3943 00001B9C 2C80                    	sub	al, 80h
  3944 00001B9E 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3945 00001BA2 66AB                    	stosw		; original sample (L)
  3946 00001BA4 88F8                    	mov	al, bh
  3947 00001BA6 2C80                    	sub	al, 80h
  3948 00001BA8 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3949 00001BAC 66AB                    	stosw		; original sample (R)
  3950 00001BAE 52                      	push	edx ; *
  3951 00001BAF 88D8                    	mov	al, bl
  3952 00001BB1 00D0                    	add	al, dl	; [next_val_l]
  3953 00001BB3 D0D8                    	rcr	al, 1
  3954 00001BB5 50                      	push	eax ; ** ; al = interpolated middle (L) (temporary)
  3955 00001BB6 00D8                    	add	al, bl	; [previous_val_l]
  3956 00001BB8 D0D8                    	rcr	al, 1
  3957 00001BBA 86D8                    	xchg	al, bl
  3958 00001BBC 00D8                    	add	al, bl	; bl = interpolated 1st quarter (L) (temp)
  3959 00001BBE D0D8                    	rcr	al, 1
  3960 00001BC0 2C80                    	sub	al, 80h
  3961 00001BC2 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3962 00001BC6 66AB                    	stosw		; interpolated sample 1 (L)
  3963 00001BC8 88F8                    	mov	al, bh
  3964 00001BCA 00F0                    	add	al, dh	; [next_val_r]
  3965 00001BCC D0D8                    	rcr	al, 1
  3966 00001BCE 50                      	push	eax ; *** ; al = interpolated middle (R) (temporary)
  3967 00001BCF 00F8                    	add	al, bh	; [previous_val_r]
  3968 00001BD1 D0D8                    	rcr	al, 1
  3969 00001BD3 86F8                    	xchg	al, bh
  3970 00001BD5 00F8                    	add	al, bh	; bh = interpolated 1st quarter (R) (temp)
  3971 00001BD7 D0D8                    	rcr	al, 1
  3972 00001BD9 2C80                    	sub	al, 80h
  3973 00001BDB 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3974 00001BDF 66AB                    	stosw		; interpolated sample 1 (R)
  3975 00001BE1 5A                      	pop	edx ; ***
  3976 00001BE2 58                      	pop	eax ; ** ; al = interpolated middle (L) (temporary)
  3977 00001BE3 86D8                    	xchg	al, bl	; al = interpolated 1st quarter (L) (temp)
  3978 00001BE5 00D8                    	add	al, bl	; bl = interpolated middle (L) (temporary)
  3979 00001BE7 D0D8                    	rcr	al, 1
  3980 00001BE9 2C80                    	sub	al, 80h
  3981 00001BEB 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3982 00001BEF 66AB                    	stosw		; interpolated sample 2 (L)
  3983 00001BF1 88D0                    	mov	al, dl 	; interpolated middle (R) (temporary)
  3984 00001BF3 86F8                    	xchg	al, bh	; al = interpolated 1st quarter (R) (temp)
  3985 00001BF5 00F8                    	add	al, bh	; bh = interpolated middle (R) (temporary)
  3986 00001BF7 D0D8                    	rcr	al, 1
  3987 00001BF9 2C80                    	sub	al, 80h
  3988 00001BFB 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3989 00001BFF 66AB                    	stosw		; interpolated sample 2 (R)
  3990 00001C01 5A                      	pop	edx ; *
  3991 00001C02 88D8                    	mov	al, bl	; interpolated middle (L) (temporary)
  3992 00001C04 00D0                    	add	al, dl	; [next_val_l]
  3993 00001C06 D0D8                    	rcr	al, 1
  3994 00001C08 86D8                    	xchg	al, bl	; al = interpolated middle (R) (temporary)
  3995 00001C0A 00D8                    	add	al, bl	; bl = interpolated 3rd quarter (L) (temp)
  3996 00001C0C D0D8                    	rcr	al, 1
  3997 00001C0E 2C80                    	sub	al, 80h
  3998 00001C10 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3999 00001C14 66AB                    	stosw		; interpolated sample 3 (L)
  4000 00001C16 88F8                    	mov	al, bh
  4001 00001C18 00F0                    	add	al, dh	; interpolated middle (R) + [next_val_r]
  4002 00001C1A D0D8                    	rcr	al, 1
  4003 00001C1C 86F8                    	xchg	al, bh	; al = interpolated middle (R)
  4004 00001C1E 00F8                    	add	al, bh	; bh = interpolated 3rd quarter (R) (temp)
  4005 00001C20 D0D8                    	rcr	al, 1
  4006 00001C22 2C80                    	sub	al, 80h
  4007 00001C24 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4008 00001C28 66AB                    	stosw		; interpolated sample 3 (R)
  4009 00001C2A 88D8                    	mov	al, bl
  4010 00001C2C 00D0                    	add	al, dl	; [next_val_l]
  4011 00001C2E D0D8                    	rcr	al, 1
  4012 00001C30 2C80                    	sub	al, 80h
  4013 00001C32 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4014 00001C36 66AB                    	stosw		; interpolated sample 4 (L)
  4015 00001C38 88F8                    	mov	al, bh
  4016 00001C3A 00F0                    	add	al, dh	; [next_val_r]
  4017 00001C3C D0D8                    	rcr	al, 1
  4018 00001C3E 2C80                    	sub	al, 80h
  4019 00001C40 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4020 00001C44 66AB                    	stosw		; interpolated sample 4 (R)
  4021 00001C46 C3                      	retn
  4022                                  
  4023                                  ;-----------------------------------------------------------------------------
  4024                                  
  4025                                  interpolating_4_8bit_mono:
  4026                                  	; al = [previous_val]
  4027                                  	; dl = [next_val]
  4028                                  	; original-interpolated-interpolated-interpolated
  4029 00001C47 88C3                    	mov	bl, al
  4030 00001C49 2C80                    	sub	al, 80h
  4031 00001C4B 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4032 00001C4F 66AB                    	stosw		; original sample (L)
  4033 00001C51 66AB                    	stosw		; original sample (R)
  4034 00001C53 88D8                    	mov	al, bl
  4035 00001C55 00D0                    	add	al, dl
  4036 00001C57 D0D8                    	rcr	al, 1
  4037 00001C59 86D8                    	xchg	al, bl  ; al = [previous_val]
  4038 00001C5B 00D8                    	add	al, bl	; bl = interpolated middle (sample 2)
  4039 00001C5D D0D8                    	rcr	al, 1
  4040 00001C5F 2C80                    	sub	al, 80h
  4041 00001C61 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4042 00001C65 66AB                    	stosw		; interpolated sample 1 (L)
  4043 00001C67 66AB                    	stosw		; interpolated sample 1 (R)
  4044 00001C69 88D8                    	mov	al, bl	; interpolated middle (sample 2)
  4045 00001C6B 2C80                    	sub	al, 80h
  4046 00001C6D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4047 00001C71 66AB                    	stosw		; interpolated sample 2 (L)
  4048 00001C73 66AB                    	stosw		; interpolated sample 2 (R)
  4049 00001C75 88D8                    	mov	al, bl
  4050 00001C77 00D0                    	add	al, dl	; [next_val]
  4051 00001C79 D0D8                    	rcr	al, 1
  4052 00001C7B 2C80                    	sub	al, 80h
  4053 00001C7D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4054 00001C81 66AB                    	stosw		; interpolated sample 3 (L)
  4055 00001C83 66AB                    	stosw		; interpolated sample 3 (R)
  4056 00001C85 C3                      	retn
  4057                                  
  4058                                  ;-----------------------------------------------------------------------------
  4059                                  
  4060                                  interpolating_4_8bit_stereo:
  4061                                  	; al = [previous_val_l]
  4062                                  	; ah = [previous_val_r]
  4063                                  	; dl = [next_val_l]
  4064                                  	; dh = [next_val_r]
  4065                                  	; original-interpolated-interpolated-interpolated
  4066                                  
  4067 00001C86 89C3                    	mov	ebx, eax
  4068 00001C88 2C80                    	sub	al, 80h
  4069 00001C8A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4070 00001C8E 66AB                    	stosw		; original sample (L)
  4071 00001C90 88F8                    	mov	al, bh
  4072 00001C92 2C80                    	sub	al, 80h
  4073 00001C94 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4074 00001C98 66AB                    	stosw		; original sample (R)
  4075 00001C9A 88D8                    	mov	al, bl
  4076 00001C9C 00D0                    	add	al, dl	; [next_val_l]
  4077 00001C9E D0D8                    	rcr	al, 1
  4078 00001CA0 86D8                    	xchg	al, bl	; al = [previous_val_l]
  4079 00001CA2 00D8                    	add	al, bl	; bl = interpolated middle (L) (sample 2)
  4080 00001CA4 D0D8                    	rcr	al, 1
  4081 00001CA6 2C80                    	sub	al, 80h
  4082 00001CA8 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4083 00001CAC 66AB                    	stosw		; interpolated sample 1 (L)
  4084 00001CAE 88F8                    	mov	al, bh
  4085 00001CB0 00F0                    	add	al, dh	; [next_val_r]
  4086 00001CB2 D0D8                    	rcr	al, 1
  4087 00001CB4 86F8                    	xchg	al, bh	; al = [previous_val_h]
  4088 00001CB6 00F8                    	add	al, bh	; bh = interpolated middle (R) (sample 2)
  4089 00001CB8 D0D8                    	rcr	al, 1
  4090 00001CBA 2C80                    	sub	al, 80h
  4091 00001CBC 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4092 00001CC0 66AB                    	stosw		; interpolated sample 1 (R)
  4093 00001CC2 88D8                    	mov	al, bl	; interpolated middle (L) (sample 2)
  4094 00001CC4 2C80                    	sub	al, 80h
  4095 00001CC6 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4096 00001CCA 66AB                    	stosw		; interpolated sample 2 (L)
  4097 00001CCC 88F8                    	mov	al, bh	; interpolated middle (L) (sample 2)
  4098 00001CCE 2C80                    	sub	al, 80h
  4099 00001CD0 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4100 00001CD4 66AB                    	stosw		; interpolated sample 2 (L)
  4101 00001CD6 88D8                    	mov	al, bl
  4102 00001CD8 00D0                    	add	al, dl	; [next_val_l]
  4103 00001CDA D0D8                    	rcr	al, 1
  4104 00001CDC 2C80                    	sub	al, 80h
  4105 00001CDE 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4106 00001CE2 66AB                    	stosw		; interpolated sample 3 (L)
  4107 00001CE4 88F8                    	mov	al, bh
  4108 00001CE6 00F0                    	add	al, dh	; [next_val_r]
  4109 00001CE8 D0D8                    	rcr	al, 1
  4110 00001CEA 2C80                    	sub	al, 80h
  4111 00001CEC 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4112 00001CF0 66AB                    	stosw		; interpolated sample 3 (R)
  4113 00001CF2 C3                      	retn
  4114                                  
  4115                                  ;-----------------------------------------------------------------------------
  4116                                  
  4117                                  interpolating_5_16bit_mono:
  4118                                  	; ax = [previous_val]
  4119                                  	; dx = [next_val]
  4120                                  	; original-interpltd-interpltd-interpltd-interpltd
  4121                                  
  4122 00001CF3 66AB                    	stosw		; original sample (L)
  4123 00001CF5 66AB                    	stosw		; original sample (R)
  4124 00001CF7 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4125 00001CFA 89C3                    	mov	ebx, eax ; [previous_val]
  4126 00001CFC 80C680                  	add	dh, 80h
  4127 00001CFF 6601D0                  	add	ax, dx
  4128 00001D02 66D1D8                  	rcr	ax, 1
  4129 00001D05 50                      	push	eax ; *	; interpolated middle (temporary)
  4130 00001D06 6601D8                  	add	ax, bx	; interpolated middle + [previous_val]
  4131 00001D09 66D1D8                  	rcr	ax, 1
  4132 00001D0C 50                      	push	eax ; **	; interpolated 1st quarter (temporary)
  4133 00001D0D 6601D8                  	add	ax, bx	; 1st quarter + [previous_val]
  4134 00001D10 66D1D8                  	rcr	ax, 1	
  4135 00001D13 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4136 00001D16 66AB                    	stosw 		; interpolated sample 1 (L)
  4137 00001D18 66AB                    	stosw		; interpolated sample 1 (R)
  4138 00001D1A 58                      	pop	eax ; **
  4139 00001D1B 5B                      	pop	ebx ; *
  4140 00001D1C 6601D8                  	add	ax, bx	; 1st quarter + middle
  4141 00001D1F 66D1D8                  	rcr	ax, 1	; / 2
  4142 00001D22 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4143 00001D25 66AB                    	stosw		; interpolated sample 2 (L)
  4144 00001D27 66AB                    	stosw		; interpolated sample 2 (R)
  4145 00001D29 89D8                    	mov	eax, ebx
  4146 00001D2B 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  4147 00001D2E 66D1D8                  	rcr	ax, 1
  4148 00001D31 50                      	push	eax ; *	; interpolated 3rd quarter (temporary)
  4149 00001D32 6601D8                  	add	ax, bx	; + interpolated middle
  4150 00001D35 66D1D8                  	rcr	ax, 1
  4151 00001D38 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4152 00001D3B 66AB                    	stosw		; interpolated sample 3 (L)
  4153 00001D3D 66AB                    	stosw		; interpolated sample 3 (R)
  4154 00001D3F 58                      	pop	eax ; *
  4155 00001D40 6601D0                  	add	ax, dx	; 3rd quarter + [next_val]
  4156 00001D43 66D1D8                  	rcr	ax, 1	; / 2
  4157 00001D46 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4158 00001D49 66AB                    	stosw		; interpolated sample 4 (L)
  4159 00001D4B 66AB                    	stosw		; interpolated sample 4 (R)
  4160 00001D4D C3                      	retn
  4161                                  
  4162                                  ;-----------------------------------------------------------------------------
  4163                                  
  4164                                  interpolating_5_16bit_stereo:
  4165                                  	; bx = [previous_val_l]
  4166                                  	; ax = [previous_val_r]
  4167                                  	; [next_val_l]
  4168                                  	; [next_val_r]
  4169                                  	; original-interpltd-interpltd-interpltd-interpltd
  4170                                  
  4171 00001D4E 51                      	push	ecx ; !
  4172 00001D4F 93                      	xchg	eax, ebx
  4173 00001D50 66AB                    	stosw		; original sample (L)
  4174 00001D52 93                      	xchg	eax, ebx
  4175 00001D53 66AB                    	stosw		; original sample (R)
  4176 00001D55 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4177 00001D58 50                      	push	eax ; *	; [previous_val_r]
  4178 00001D59 80C780                  	add	bh, 80h
  4179 00001D5C 8005[D81E0000]80        	add	byte [next_val_l+1], 80h
  4180 00001D63 66A1[D71E0000]          	mov	ax, [next_val_l]
  4181 00001D69 6601D8                  	add	ax, bx	; [previous_val_l]
  4182 00001D6C 66D1D8                  	rcr	ax, 1
  4183 00001D6F 89C1                    	mov	ecx, eax ; interpolated middle (L)
  4184 00001D71 6601D8                  	add	ax, bx
  4185 00001D74 66D1D8                  	rcr	ax, 1
  4186 00001D77 89C2                    	mov	edx, eax ; interpolated 1st quarter (L)
  4187 00001D79 6601D8                  	add	ax, bx	; [previous_val_l]
  4188 00001D7C 66D1D8                  	rcr	ax, 1
  4189 00001D7F 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4190 00001D82 66AB                    	stosw 		; interpolated sample 1 (L)
  4191 00001D84 89C8                    	mov	eax, ecx
  4192 00001D86 6601D0                  	add	ax, dx	; middle (L) + 1st quarter (L)
  4193 00001D89 66D1D8                  	rcr	ax, 1	; / 2
  4194 00001D8C 89C3                    	mov	ebx, eax  ; interpolated sample 2 (L)
  4195 00001D8E 5A                      	pop	edx ; *	; [previous_val_r]
  4196 00001D8F 89D0                    	mov	eax, edx
  4197 00001D91 8005[DA1E0000]80        	add	byte [next_val_r+1], 80h
  4198 00001D98 660305[D91E0000]        	add	ax, [next_val_r]
  4199 00001D9F 66D1D8                  	rcr	ax, 1
  4200 00001DA2 50                      	push	eax ; *	; interpolated middle (R)
  4201 00001DA3 6601D0                  	add	ax, dx
  4202 00001DA6 66D1D8                  	rcr	ax, 1
  4203 00001DA9 50                      	push	eax ; ** ; interpolated 1st quarter (R)
  4204 00001DAA 6601D0                  	add	ax, dx	; [previous_val_r]
  4205 00001DAD 66D1D8                  	rcr	ax, 1
  4206 00001DB0 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4207 00001DB3 66AB                    	stosw 		; interpolated sample 1 (R)
  4208 00001DB5 89D8                    	mov	eax, ebx
  4209 00001DB7 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4210 00001DBA 66AB                    	stosw 		; interpolated sample 2 (L)
  4211 00001DBC 58                      	pop	eax ; **
  4212 00001DBD 5A                      	pop	edx ; *
  4213 00001DBE 6601D0                  	add	ax, dx	; 1st quarter (R) + middle (R)
  4214 00001DC1 66D1D8                  	rcr	ax, 1	; / 2
  4215 00001DC4 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4216 00001DC7 66AB                    	stosw 		; interpolated sample 2 (R)
  4217 00001DC9 89C8                    	mov	eax, ecx
  4218 00001DCB 660305[D71E0000]        	add	ax, [next_val_l]
  4219 00001DD2 66D1D8                  	rcr	ax, 1
  4220 00001DD5 50                      	push	eax ; * ; interpolated 3rd quarter (L)
  4221 00001DD6 6601C8                  	add	ax, cx	; interpolated middle (L)
  4222 00001DD9 66D1D8                  	rcr	ax, 1
  4223 00001DDC 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4224 00001DDF 66AB                    	stosw 		; interpolated sample 3 (L)
  4225 00001DE1 89D0                    	mov	eax, edx
  4226 00001DE3 660305[D91E0000]        	add	ax, [next_val_r]
  4227 00001DEA 66D1D8                  	rcr	ax, 1
  4228 00001DED 50                      	push	eax ; ** ; interpolated 3rd quarter (R)
  4229 00001DEE 6601D0                  	add	ax, dx	; interpolated middle (R)
  4230 00001DF1 66D1D8                  	rcr	ax, 1
  4231 00001DF4 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4232 00001DF7 66AB                    	stosw 		; interpolated sample 3 (R)
  4233 00001DF9 5B                      	pop	ebx ; **
  4234 00001DFA 58                      	pop	eax ; *
  4235 00001DFB 660305[D71E0000]        	add	ax, [next_val_l]
  4236 00001E02 66D1D8                  	rcr	ax, 1
  4237 00001E05 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4238 00001E08 66AB                    	stosw 		; interpolated sample 4 (L)
  4239 00001E0A 89D8                    	mov	eax, ebx	
  4240 00001E0C 660305[D91E0000]        	add	ax, [next_val_r]
  4241 00001E13 66D1D8                  	rcr	ax, 1
  4242 00001E16 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4243 00001E19 66AB                    	stosw 		; interpolated sample 4 (R)
  4244 00001E1B 59                      	pop	ecx ; !
  4245 00001E1C C3                      	retn
  4246                                  
  4247                                  ;-----------------------------------------------------------------------------
  4248                                  
  4249                                  interpolating_4_16bit_mono:
  4250                                  	; ax = [previous_val]
  4251                                  	; dx = [next_val]
  4252                                  	; 02/02/2025
  4253                                  	; original-interpolated-interpolated-interpolated
  4254                                  
  4255 00001E1D 66AB                    	stosw		; original sample (L)
  4256 00001E1F 66AB                    	stosw		; original sample (R)
  4257 00001E21 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4258 00001E24 89C3                    	mov	ebx, eax ; [previous_val]
  4259 00001E26 80C680                  	add	dh, 80h
  4260 00001E29 6601D0                  	add	ax, dx	; [previous_val] + [next_val]
  4261 00001E2C 66D1D8                  	rcr	ax, 1
  4262 00001E2F 93                      	xchg	eax, ebx
  4263 00001E30 6601D8                  	add	ax, bx	; [previous_val] + interpolated middle
  4264 00001E33 66D1D8                  	rcr	ax, 1
  4265 00001E36 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4266 00001E39 66AB                    	stosw 		; interpolated sample 1 (L)
  4267 00001E3B 66AB                    	stosw		; interpolated sample 1 (R)
  4268 00001E3D 89D8                    	mov	eax, ebx ; interpolated middle
  4269 00001E3F 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4270 00001E42 66AB                    	stosw 		; interpolated sample 2 (L)
  4271 00001E44 66AB                    	stosw		; interpolated sample 2 (R)
  4272 00001E46 89D8                    	mov	eax, ebx
  4273 00001E48 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  4274 00001E4B 66D1D8                  	rcr	ax, 1
  4275 00001E4E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4276 00001E51 66AB                    	stosw		; interpolated sample 3 (L)
  4277 00001E53 66AB                    	stosw		; interpolated sample 3 (R)
  4278 00001E55 C3                      	retn
  4279                                  
  4280                                  ;-----------------------------------------------------------------------------
  4281                                  
  4282                                  interpolating_4_16bit_stereo:
  4283                                  	; bx = [previous_val_l]
  4284                                  	; ax = [previous_val_r]
  4285                                  	; [next_val_l]
  4286                                  	; [next_val_r]
  4287                                  	; original-interpolated-interpolated-interpolated
  4288                                  
  4289 00001E56 93                      	xchg	eax, ebx
  4290 00001E57 66AB                    	stosw		; original sample (L)
  4291 00001E59 93                      	xchg	eax, ebx
  4292 00001E5A 66AB                    	stosw		; original sample (R)
  4293 00001E5C 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4294 00001E5F 89C2                    	mov	edx, eax ; [previous_val_r]
  4295 00001E61 80C780                  	add	bh, 80h
  4296 00001E64 8005[D81E0000]80        	add	byte [next_val_l+1], 80h
  4297 00001E6B 66A1[D71E0000]          	mov	ax, [next_val_l]
  4298 00001E71 6601D8                  	add	ax, bx	; [previous_val_l]
  4299 00001E74 66D1D8                  	rcr	ax, 1
  4300 00001E77 93                      	xchg	eax, ebx
  4301 00001E78 6601D8                  	add	ax, bx	; bx = interpolated middle (L)
  4302 00001E7B 66D1D8                  	rcr	ax, 1
  4303 00001E7E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4304 00001E81 66AB                    	stosw 		; interpolated sample 1 (L)
  4305 00001E83 8005[DA1E0000]80        	add	byte [next_val_r+1], 80h
  4306 00001E8A 89D0                    	mov	eax, edx ; [previous_val_r]
  4307 00001E8C 660305[D91E0000]        	add	ax, [next_val_r]
  4308 00001E93 66D1D8                  	rcr	ax, 1
  4309 00001E96 92                      	xchg	eax, edx
  4310 00001E97 6601D0                  	add	ax, dx	; dx = interpolated middle (R)
  4311 00001E9A 66D1D8                  	rcr	ax, 1
  4312 00001E9D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4313 00001EA0 66AB                    	stosw 		; interpolated sample 1 (R)
  4314 00001EA2 89D8                    	mov	eax, ebx
  4315 00001EA4 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4316 00001EA7 66AB                    	stosw 		; interpolated sample 2 (L)
  4317 00001EA9 89D0                    	mov	eax, edx
  4318 00001EAB 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4319 00001EAE 66AB                    	stosw 		; interpolated sample 2 (R)
  4320 00001EB0 89D8                    	mov	eax, ebx
  4321 00001EB2 660305[D71E0000]        	add	ax, [next_val_l]
  4322 00001EB9 66D1D8                  	rcr	ax, 1
  4323 00001EBC 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4324 00001EBF 66AB                    	stosw 		; interpolated sample 3 (L)
  4325 00001EC1 89D0                    	mov	eax, edx
  4326 00001EC3 660305[D91E0000]        	add	ax, [next_val_r]
  4327 00001ECA 66D1D8                  	rcr	ax, 1
  4328 00001ECD 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4329 00001ED0 66AB                    	stosw 		; interpolated sample 3 (R)
  4330 00001ED2 C3                      	retn
  4331                                  
  4332                                  ;-----------------------------------------------------------------------------
  4333                                  
  4334                                  previous_val:
  4335 00001ED3 0000                    previous_val_l: dw 0
  4336 00001ED5 0000                    previous_val_r: dw 0
  4337                                  next_val:
  4338 00001ED7 0000                    next_val_l: dw 0
  4339 00001ED9 0000                    next_val_r: dw 0
  4340                                  
  4341 00001EDB 00                      faz:	db 0
  4342                                  
  4343                                  ;=============================================================================
  4344                                  ;	Write AC'97 Hadrware Information
  4345                                  ;=============================================================================
  4346                                  	
  4347                                  	; 09/02/2025
  4348                                  
  4349                                  write_audio_dev_info:
  4350 00001EDC 31DB                    	xor	ebx, ebx
  4351 00001EDE 803D[DA770000]01        	cmp	byte [audio_hardware], 1
  4352 00001EE5 7557                    	jne	short write_ac97_pci_dev_info
  4353                                  
  4354                                  ;-----------------------------------------------------------------------------
  4355                                  	
  4356                                  	; 09/02/2025
  4357                                  	; 05/02/2025 - sb16play.s
  4358                                  
  4359                                  write_sb16_dev_info:
  4360 00001EE7 A1[D6770000]            	mov	eax, [audio_io_base]
  4361                                  	;xor	ebx, ebx
  4362 00001EEC 88C3                    	mov	bl, al
  4363 00001EEE 88DA                    	mov	dl, bl
  4364 00001EF0 80E30F                  	and	bl, 0Fh
  4365 00001EF3 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4366 00001EF9 A2[F3760000]            	mov	[msgBasePort+2], al
  4367 00001EFE 88D3                    	mov	bl, dl
  4368 00001F00 C0EB04                  	shr	bl, 4
  4369 00001F03 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4370 00001F09 A2[F2760000]            	mov	[msgBasePort+1], al
  4371 00001F0E 88E3                    	mov	bl, ah
  4372                                  	;and	bl, 0Fh
  4373 00001F10 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4374 00001F16 A2[F1760000]            	mov	[msgBasePort], al
  4375                                  
  4376                                  	;xor	eax, eax
  4377 00001F1B A0[CA770000]            	mov	al, [audio_intr]
  4378 00001F20 0430                    	add	al, 30h
  4379 00001F22 A2[08770000]            	mov	[msgSB16IRQ], al
  4380                                  
  4381                                  	sys	_msg, msgSB16Info, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001F27 BB[BB760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00001F2C B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00001F31 BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001F36 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00001F3B CD40                <1>  int 40h
  4382                                  
  4383 00001F3D C3                      	retn
  4384                                  
  4385                                  ;-----------------------------------------------------------------------------
  4386                                  
  4387                                  	; 09/02/2025
  4388                                  	; 05/02/2025 - ac97play.s
  4389                                  	
  4390                                  write_ac97_pci_dev_info:
  4391                                  	; BUS/DEV/FN
  4392                                  	;	00000000BBBBBBBBDDDDDFFF00000000
  4393                                  	; DEV/VENDOR
  4394                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
  4395                                  
  4396 00001F3E A1[CE770000]            	mov	eax, [dev_vendor]
  4397                                  	; 07/12/2024
  4398 00001F43 31DB                    	xor	ebx, ebx
  4399 00001F45 88C3                    	mov	bl, al
  4400 00001F47 88DA                    	mov	dl, bl
  4401 00001F49 80E30F                  	and	bl, 0Fh
  4402 00001F4C 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4403 00001F52 A2[C5750000]            	mov	[msgVendorId+3], al
  4404 00001F57 88D3                    	mov	bl, dl
  4405 00001F59 C0EB04                  	shr	bl, 4
  4406 00001F5C 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4407 00001F62 A2[C4750000]            	mov	[msgVendorId+2], al
  4408 00001F67 88E3                    	mov	bl, ah
  4409 00001F69 88DA                    	mov	dl, bl
  4410 00001F6B 80E30F                  	and	bl, 0Fh
  4411 00001F6E 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4412 00001F74 A2[C3750000]            	mov	[msgVendorId+1], al
  4413 00001F79 88D3                    	mov	bl, dl
  4414 00001F7B C0EB04                  	shr	bl, 4
  4415 00001F7E 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4416 00001F84 A2[C2750000]            	mov	[msgVendorId], al
  4417 00001F89 C1E810                  	shr	eax, 16
  4418 00001F8C 88C3                    	mov	bl, al
  4419 00001F8E 88DA                    	mov	dl, bl
  4420 00001F90 80E30F                  	and	bl, 0Fh
  4421 00001F93 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4422 00001F99 A2[D6750000]            	mov	[msgDevId+3], al
  4423 00001F9E 88D3                    	mov	bl, dl
  4424 00001FA0 C0EB04                  	shr	bl, 4
  4425 00001FA3 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4426 00001FA9 A2[D5750000]            	mov	[msgDevId+2], al
  4427 00001FAE 88E3                    	mov	bl, ah
  4428 00001FB0 88DA                    	mov	dl, bl
  4429 00001FB2 80E30F                  	and	bl, 0Fh
  4430 00001FB5 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4431 00001FBB A2[D4750000]            	mov	[msgDevId+1], al
  4432 00001FC0 88D3                    	mov	bl, dl
  4433 00001FC2 C0EB04                  	shr	bl, 4
  4434 00001FC5 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4435 00001FCB A2[D3750000]            	mov	[msgDevId], al
  4436                                  
  4437 00001FD0 A1[D2770000]            	mov	eax, [bus_dev_fn]
  4438 00001FD5 C1E808                  	shr	eax, 8
  4439 00001FD8 88C3                    	mov	bl, al
  4440 00001FDA 88DA                    	mov	dl, bl
  4441 00001FDC 80E307                  	and	bl, 7 ; bit 0,1,2
  4442 00001FDF 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4443 00001FE5 A2[FA750000]            	mov	[msgFncNo+1], al
  4444 00001FEA 88D3                    	mov	bl, dl
  4445 00001FEC C0EB03                  	shr	bl, 3
  4446 00001FEF 88DA                    	mov	dl, bl
  4447 00001FF1 80E30F                  	and	bl, 0Fh
  4448 00001FF4 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4449 00001FFA A2[EC750000]            	mov	[msgDevNo+1], al
  4450 00001FFF 88D3                    	mov	bl, dl
  4451 00002001 C0EB04                  	shr	bl, 4
  4452 00002004 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4453 0000200A A2[EB750000]            	mov	[msgDevNo], al
  4454 0000200F 88E3                    	mov	bl, ah
  4455 00002011 88DA                    	mov	dl, bl
  4456 00002013 80E30F                  	and	bl, 0Fh
  4457 00002016 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4458 0000201C A2[E0750000]            	mov	[msgBusNo+1], al
  4459 00002021 88D3                    	mov	bl, dl
  4460 00002023 C0EB04                  	shr	bl, 4
  4461 00002026 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4462 0000202C A2[DF750000]            	mov	[msgBusNo], al
  4463                                  
  4464                                  	;mov	ax, [ac97_NamBar]
  4465 00002031 66A1[D6770000]          	mov	ax, [NAMBAR]
  4466 00002037 88C3                    	mov	bl, al
  4467 00002039 88DA                    	mov	dl, bl
  4468 0000203B 80E30F                  	and	bl, 0Fh
  4469 0000203E 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4470 00002044 A2[09760000]            	mov	[msgNamBar+3], al
  4471 00002049 88D3                    	mov	bl, dl
  4472 0000204B C0EB04                  	shr	bl, 4
  4473 0000204E 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4474 00002054 A2[08760000]            	mov	[msgNamBar+2], al
  4475 00002059 88E3                    	mov	bl, ah
  4476 0000205B 88DA                    	mov	dl, bl
  4477 0000205D 80E30F                  	and	bl, 0Fh
  4478 00002060 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4479 00002066 A2[07760000]            	mov	[msgNamBar+1], al
  4480 0000206B 88D3                    	mov	bl, dl
  4481 0000206D C0EB04                  	shr	bl, 4
  4482 00002070 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4483 00002076 A2[06760000]            	mov	[msgNamBar], al
  4484                                  
  4485                                  	;mov	ax, [ac97_NabmBar]
  4486 0000207B 66A1[D8770000]          	mov	ax, [NABMBAR]
  4487 00002081 88C3                    	mov	bl, al
  4488 00002083 88DA                    	mov	dl, bl
  4489 00002085 80E30F                  	and	bl, 0Fh
  4490 00002088 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4491 0000208E A2[19760000]            	mov	[msgNabmBar+3], al
  4492 00002093 88D3                    	mov	bl, dl
  4493 00002095 C0EB04                  	shr	bl, 4
  4494 00002098 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4495 0000209E A2[18760000]            	mov	[msgNabmBar+2], al
  4496 000020A3 88E3                    	mov	bl, ah
  4497 000020A5 88DA                    	mov	dl, bl
  4498 000020A7 80E30F                  	and	bl, 0Fh
  4499 000020AA 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4500 000020B0 A2[17760000]            	mov	[msgNabmBar+1], al
  4501 000020B5 88D3                    	mov	bl, dl
  4502 000020B7 C0EB04                  	shr	bl, 4
  4503 000020BA 8A83[80750000]          	mov	al, [ebx+hex_chars]
  4504 000020C0 A2[16760000]            	mov	[msgNabmBar], al
  4505                                  
  4506 000020C5 31C0                    	xor	eax, eax
  4507 000020C7 A0[CA770000]            	mov	al, [ac97_int_ln_reg]
  4508 000020CC B10A                    	mov	cl, 10
  4509 000020CE F6F1                    	div	cl
  4510                                  	;add	[msgIRQ], ax
  4511 000020D0 66053030                	add	ax, 3030h
  4512 000020D4 66A3[22760000]          	mov	[msgIRQ], ax
  4513                                  	;and	al, al
  4514 000020DA 3C30                    	cmp	al, 30h
  4515 000020DC 750D                    	jne	short _w_ac97imsg_
  4516 000020DE A0[23760000]            	mov	al, [msgIRQ+1]
  4517 000020E3 B420                    	mov	ah, ' '
  4518 000020E5 66A3[22760000]          	mov	[msgIRQ], ax
  4519                                  _w_ac97imsg_:
  4520                                  	sys	_msg, msgAC97Info, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000020EB BB[91750000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000020F0 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000020F5 BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000020FA B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000020FF CD40                <1>  int 40h
  4521                                  
  4522                                          ;retn
  4523                                  
  4524                                  ;-----------------------------------------------------------------------------
  4525                                  
  4526                                  write_VRA_info:
  4527                                  	sys	_msg, msgVRAheader, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002101 BB[76760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002106 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000210B BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002110 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00002115 CD40                <1>  int 40h
  4528 00002117 803D[CB770000]00        	cmp	byte [VRA], 0
  4529 0000211E 7617                    	jna	short _w_VRAi_no
  4530                                  _w_VRAi_yes:
  4531                                  	sys	_msg, msgVRAyes, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002120 BB[84760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002125 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000212A BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000212F B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00002134 CD40                <1>  int 40h
  4532 00002136 C3                      	retn
  4533                                  _w_VRAi_no:
  4534                                  	sys	_msg, msgVRAno, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002137 BB[8A760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000213C B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00002141 BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002146 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 0000214B CD40                <1>  int 40h
  4535 0000214D C3                      	retn
  4536                                  
  4537                                  ;=============================================================================
  4538                                  ;	Write WAV File Information
  4539                                  ;=============================================================================
  4540                                  
  4541                                  	; 09/02/2025
  4542                                  	; 05/02/2025 - twavply2.s
  4543                                  
  4544                                  write_wav_file_info:
  4545                                  	sys	_msg, msgWavFileName, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000214E BB[27760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002153 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00002158 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000215D B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00002162 CD40                <1>  int 40h
  4546                                  	sys	_msg, wav_file_name, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002164 BB[78770000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002169 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000216E BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002173 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00002178 CD40                <1>  int 40h
  4547                                  
  4548                                  write_sample_rate:
  4549 0000217A 66A1[64770000]          	mov	ax, [WAVE_SampleRate]
  4550                                  	; ax = sample rate (hertz)
  4551 00002180 31D2                    	xor	edx, edx
  4552 00002182 66B90A00                	mov	cx, 10
  4553 00002186 66F7F1                  	div	cx
  4554 00002189 0015[4C760000]          	add	[msgHertz+4], dl
  4555 0000218F 29D2                    	sub	edx, edx
  4556 00002191 66F7F1                  	div	cx
  4557 00002194 0015[4B760000]          	add	[msgHertz+3], dl
  4558 0000219A 29D2                    	sub	edx, edx
  4559 0000219C 66F7F1                  	div	cx
  4560 0000219F 0015[4A760000]          	add	[msgHertz+2], dl
  4561 000021A5 29D2                    	sub	edx, edx
  4562 000021A7 66F7F1                  	div	cx
  4563 000021AA 0015[49760000]          	add	[msgHertz+1], dl
  4564 000021B0 0005[48760000]          	add	[msgHertz], al
  4565                                  	
  4566                                  	sys	_msg, msgSampleRate, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000021B6 BB[39760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000021BB B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000021C0 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000021C5 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000021CA CD40                <1>  int 40h
  4567                                  
  4568 000021CC BE[63760000]            	mov	esi, msg16Bits
  4569 000021D1 803D[6E770000]10        	cmp	byte [WAVE_BitsPerSample], 16
  4570 000021D8 7405                    	je	short wsr_1
  4571 000021DA BE[53760000]            	mov	esi, msg8Bits
  4572                                  wsr_1:
  4573                                  	sys	_msg, esi, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000021DF 89F3                <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000021E1 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000021E6 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000021EB B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000021F0 CD40                <1>  int 40h
  4574                                  
  4575 000021F2 BE[5C760000]            	mov	esi, msgMono
  4576 000021F7 803D[6E770000]01        	cmp	byte [WAVE_BitsPerSample], 1
  4577 000021FE 7405                    	je	short wsr_2
  4578 00002200 BE[6D760000]            	mov	esi, msgStereo
  4579                                  wsr_2:
  4580                                  	sys	_msg, esi, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002205 89F3                <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002207 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000220C BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002211 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00002216 CD40                <1>  int 40h
  4581 00002218 C3                              retn
  4582                                  
  4583                                  ;=============================================================================
  4584                                  ;	Audio System Initialization
  4585                                  ;=============================================================================
  4586                                  	
  4587                                  	; 09/02/2025
  4588                                  
  4589                                  audio_system_init:
  4590 00002219 803D[DA770000]01        	cmp	byte [audio_hardware], 1
  4591 00002220 7421                    	je	short sb16_init
  4592                                  
  4593 00002222 E893020000              	call	ac97_init
  4594 00002227 7319                    	jnc	short init_ok
  4595                                  
  4596 00002229 BE[FC740000]            	mov	esi, ac97_init_err_msg
  4597                                  
  4598                                  init_error:
  4599                                  	sys	_msg, esi, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000222E 89F3                <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002230 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00002235 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000223A B823000000          <1>  mov eax, %1
    96                              <1> 
    97 0000223F CD40                <1>  int 40h
  4600 00002241 F9                      	stc
  4601                                  init_ok:
  4602 00002242 C3                      	retn
  4603                                  
  4604                                  ;=============================================================================
  4605                                  ;	Sound Blaster 16 Initialization
  4606                                  ;=============================================================================
  4607                                  
  4608                                  	; 09/02/2025
  4609                                  	; 20/10/2017 - playwav.s
  4610                                  
  4611                                  sb16_init:
  4612                                  	; 09/02/2025
  4613                                  	; Ref: TRDOS 386 Kernel v2.0.9, audio.s (06/06/2024)
  4614                                  	;      SbInit_play procedure (06/08/2022, v2.0.5)
  4615                                  
  4616 00002243 8B1D[00820000]          	mov	ebx, [DMA_phy_buff] ; physical address of DMA buffer
  4617                                  
  4618 00002249 8B0D[E8810000]          	mov	ecx, [buffersize] ; = [loadsize] for SB16
  4619 0000224F D1E1                    	shl	ecx, 1	; 2*[buffersize] = dma buffer size
  4620                                  
  4621 00002251 803D[6E770000]10        	cmp	byte [WAVE_BitsPerSample], 16
  4622 00002258 7543                    	jne	short sbInit_0	; set 8 bit DMA buffer
  4623                                  
  4624                                  	; convert byte count to word count
  4625 0000225A D1E9                    	shr	ecx, 1
  4626 0000225C 49                      	dec	ecx	; word count - 1
  4627                                  
  4628                                  	; convert byte offset to word offset
  4629 0000225D D1EB                    	shr	ebx, 1
  4630                                  
  4631                                  	; 16 bit DMA buffer setting (DMA channel 5)
  4632 0000225F B005                    	mov	al, 05h  ; set mask bit for channel 5 (4+1)
  4633                                  	;out	0D4h, al
  4634 00002261 66BAD400                	mov	dx, 0D4h ; DMA mask register
  4635 00002265 B401                    	mov	ah, 1  ;outb
  4636 00002267 CD34                    	int	34h
  4637                                  	
  4638 00002269 30C0                    	xor	al, al   ; stops all DMA processes on selected channel
  4639                                  	;out	0D8h, al
  4640 0000226B B2D8                    	mov	dl, 0D8h ; clear selected channel register
  4641                                  	;mov	ah, 1  ;outb
  4642 0000226D CD34                    	int	34h
  4643                                  
  4644 0000226F 88D8                    	mov	al, bl	 ; byte 0 of DMA buffer offset in words (physical)
  4645                                  	;out	0C4, al
  4646 00002271 B2C4                    	mov	dl, 0C4h ; DMA channel 5 port number
  4647                                  	;mov	ah, 1  ;outb
  4648 00002273 CD34                    	int	34h
  4649                                  
  4650 00002275 88F8                    	mov	al, bh   ; byte 1 of DMA buffer offset in words (physical)
  4651                                  	;out	0C4h, al
  4652                                  	;mov	dl, 0C4h ; DMA channel 5 port number
  4653                                  	;mov	ah, 1  ;outb
  4654 00002277 CD34                    	int	34h
  4655                                  	
  4656 00002279 C1EB0F                  	shr	ebx, 15	 ; complete 16 bit shift
  4657 0000227C 80E3FE                  	and	bl, 0FEh ; clear bit 0 (not necessary, it will be ignored)
  4658                                  
  4659 0000227F 88D8                    	mov	al, bl   ; byte 2 of DMA buffer address (physical)
  4660                                  	;out	8Bh, al
  4661 00002281 B28B                    	mov	dl, 8Bh	 ; page register port addr for channel 5
  4662                                  	;mov	ah, 1  ;outb
  4663 00002283 CD34                    	int	34h
  4664                                  
  4665 00002285 88C8                    	mov	al, cl   ; low byte of DMA count - 1
  4666                                  	;out	0C6h, al
  4667 00002287 B2C6                    	mov	dl, 0C6h ; count register port addr for channel 1
  4668                                  	;mov	ah, 1  ;outb
  4669 00002289 CD34                    	int	34h
  4670                                  
  4671 0000228B 88E8                    	mov	al, ch   ; high byte of DMA count - 1
  4672                                  	;out	0C6h, al
  4673                                  	;mov	dl, 0C6h ; count register port addr for channel 1
  4674                                  	;mov	ah, 1  ;outb
  4675 0000228D CD34                    	int	34h
  4676                                  
  4677                                  	; channel 5, read, autoinitialized, single mode
  4678 0000228F B059                    	mov	al, 59h
  4679                                  	;out	0D6h, al
  4680 00002291 B2D6                    	mov	dl, 0D6h ; DMA mode register port address
  4681                                  	;mov	ah, 1  ;outb
  4682 00002293 CD34                    	int	34h
  4683                                  
  4684 00002295 B001                    	mov	al, 01h  ; clear mask bit for channel 5
  4685                                  	;out	0D4h, al
  4686 00002297 B2D4                    	mov	dl, 0D4h ; DMA mask register port address
  4687                                  	;mov	ah, 1  ;outb
  4688 00002299 CD34                    	int	34h
  4689                                  
  4690 0000229B EB3A                    	jmp	short ResetDsp
  4691                                  
  4692                                  sbInit_0:
  4693 0000229D 49                      	dec	ecx	; byte count - 1
  4694                                  
  4695                                  	; 8 bit DMA buffer setting (DMA channel 1)
  4696 0000229E B005                    	mov	al, 05h ; set mask bit for channel 1 (4+1)
  4697                                  	;out	0Ah, al
  4698 000022A0 66BA0A00                	mov	dx, 0Ah ; DMA mask register
  4699 000022A4 B401                    	mov	ah, 1  ;outb
  4700 000022A6 CD34                    	int	34h
  4701                                  
  4702 000022A8 30C0                    	xor	al, al  ; stops all DMA processes on selected channel
  4703                                  	;out	0Ch, al
  4704 000022AA B20C                    	mov	dl, 0Ch ; clear selected channel register
  4705                                  	;mov	ah, 1  ;outb
  4706 000022AC CD34                    	int	34h
  4707                                  
  4708 000022AE 88D8                    	mov	al, bl	; byte 0 of DMA buffer address (physical)
  4709                                  	;out	02h, al
  4710 000022B0 B202                    	mov	dl, 02h	; DMA channel 1 port number
  4711                                  	;mov	ah, 1  ;outb
  4712 000022B2 CD34                    	int	34h
  4713                                  
  4714 000022B4 88F8                    	mov	al, bh  ; byte 1 of DMA buffer address (physical)
  4715                                  	;out	02h, al
  4716                                  	;mov	dl, 02h ; DMA channel 1 port number
  4717                                  	;mov	ah, 1  ;outb
  4718 000022B6 CD34                    	int	34h
  4719                                  
  4720 000022B8 C1EB10                  	shr	ebx, 16
  4721                                  
  4722 000022BB 88D8                    	mov	al, bl  ; byte 2 of DMA buffer address (physical)
  4723                                  	;out	83h, al
  4724 000022BD B283                    	mov	dl, 83h ; page register port addr for channel 1
  4725                                  	;mov	ah, 1  ;outb
  4726 000022BF CD34                    	int	34h
  4727                                  
  4728 000022C1 88C8                    	mov	al, cl  ; low byte of DMA count - 1
  4729                                  	;out	03h, al
  4730 000022C3 B203                    	mov	dl, 03h ; count register port addr for channel 1
  4731                                  	;mov	ah, 1  ;outb
  4732 000022C5 CD34                    	int	34h
  4733                                  
  4734 000022C7 88E8                    	mov	al, ch  ; high byte of DMA count - 1
  4735                                  	;out	03h, al
  4736                                  	;mov	dl, 03h ; count register port addr for channel 1
  4737                                  	;mov	ah, 1  ;outb
  4738 000022C9 CD34                    	int	34h
  4739                                  
  4740                                  	; channel 1, read, autoinitialized, single mode
  4741 000022CB B059                    	mov	al, 59h
  4742                                  	;out	0Bh, al
  4743 000022CD B20B                    	mov	dl, 0Bh ; DMA mode register port address
  4744                                  	;mov	ah, 1  ;outb
  4745 000022CF CD34                    	int	34h
  4746                                  
  4747 000022D1 B001                    	mov	al, 01h ; clear mask bit for channel 1
  4748                                  	;out	0Ah, al
  4749 000022D3 B20A                    	mov	dl, 0Ah ; DMA mask register port address
  4750                                  	;mov	ah, 1  ;outb
  4751 000022D5 CD34                    	int	34h
  4752                                  
  4753                                  ResetDsp:
  4754 000022D7 668B15[D6770000]        	mov	dx, [audio_io_base]
  4755                                  	;add	dx, 06h
  4756 000022DE 80C206                  	add	dl, 06h
  4757 000022E1 B001                    	mov	al, 1
  4758                                  	;out	dx, al
  4759 000022E3 B401                    	mov	ah, 1  ;outb
  4760 000022E5 CD34                    	int	34h
  4761                                  
  4762                                  	;in	al, dx
  4763                                  	;in	al, dx
  4764                                  	;in	al, dx
  4765                                  	;in	al, dx
  4766                                  
  4767 000022E7 31C0                    	xor	eax, eax
  4768                                  	;mov	ah, 0  ;inb
  4769 000022E9 CD34                    	int	34h
  4770                                  	;mov	ah, 0
  4771 000022EB CD34                    	int	34h
  4772                                  
  4773                                  	;out	dx, al
  4774 000022ED FEC4                    	inc	ah ; ah = 1 ;outb
  4775 000022EF CD34                    	int	34h
  4776                                  
  4777                                  	;mov	ecx, 100
  4778 000022F1 66B96400                	mov	cx, 100
  4779 000022F5 28E4                    	sub	ah, ah ; 0
  4780                                  WaitId:
  4781 000022F7 668B15[D6770000]        	mov	dx, [audio_io_base]
  4782 000022FE 80C20E                  	add	dl, 0Eh
  4783                                  	;in	al, dx
  4784                                  	;mov	ah, 0  ;inb
  4785 00002301 CD34                    	int	34h
  4786 00002303 08C0                    	or	al, al
  4787                                  	;js	short sb_GetId
  4788 00002305 7910                    	jns	short sb_next
  4789                                  	;loop	WaitId
  4790                                  	;jmp	sb_Exit
  4791                                  
  4792                                  sb_GetId:
  4793 00002307 668B15[D6770000]        	mov	dx, [audio_io_base]
  4794                                  	;add	dx, 0Ah
  4795 0000230E 80C20A                  	add	dl, 0Ah
  4796                                  	;in	al, dx
  4797                                  	;mov	ah, 0  ;inb
  4798 00002311 CD34                    	int	34h
  4799 00002313 3CAA                    	cmp	al, 0AAh
  4800 00002315 740C                    	je	short SbOk
  4801                                  sb_next:
  4802 00002317 E2DE                    	loop	WaitId
  4803                                  	;stc
  4804                                  
  4805 00002319 BE[D0740000]            	mov	esi, sb16_init_err_msg
  4806 0000231E E90BFFFFFF              	jmp	init_error
  4807                                  
  4808                                  SbOk:
  4809 00002323 C3                      	retn
  4810                                  
  4811                                  ;-----------------------------------------------------------------------------
  4812                                  ;-----------------------------------------------------------------------------
  4813                                  
  4814                                  	; 10/02/2025
  4815                                  	; 09/02/2025
  4816                                  	; 20/10/2017 - playwav.s
  4817                                  
  4818                                  sb16_init_play:
  4819 00002324 668B15[D6770000]        	mov	dx, [audio_io_base]
  4820                                  	;add	dx, 0Ch
  4821 0000232B 80C20C                  	add	dl, 0Ch
  4822                                  	SbOut	0D1h	; Turn on speaker
   106                              <1> %%Wait:
   107                              <1> 
   108 0000232E B400                <1>  mov ah, 0
   109 00002330 CD34                <1>  int 34h
   110 00002332 08C0                <1>  or al, al
   111 00002334 78F8                <1>  js short %%Wait
   112 00002336 B0D1                <1>  mov al, %1
   113                              <1> 
   114 00002338 B401                <1>  mov ah, 1
   115 0000233A CD34                <1>  int 34h
  4823                                  	SbOut	41h	; 8 bit or 16 bit transfer
   106                              <1> %%Wait:
   107                              <1> 
   108 0000233C B400                <1>  mov ah, 0
   109 0000233E CD34                <1>  int 34h
   110 00002340 08C0                <1>  or al, al
   111 00002342 78F8                <1>  js short %%Wait
   112 00002344 B041                <1>  mov al, %1
   113                              <1> 
   114 00002346 B401                <1>  mov ah, 1
   115 00002348 CD34                <1>  int 34h
  4824 0000234A 668B1D[64770000]        	mov	bx, [WAVE_SampleRate] ; sampling rate (Hz)
  4825                                  	SbOut	bh	; sampling rate high byte
   106                              <1> %%Wait:
   107                              <1> 
   108 00002351 B400                <1>  mov ah, 0
   109 00002353 CD34                <1>  int 34h
   110 00002355 08C0                <1>  or al, al
   111 00002357 78F8                <1>  js short %%Wait
   112 00002359 88F8                <1>  mov al, %1
   113                              <1> 
   114 0000235B B401                <1>  mov ah, 1
   115 0000235D CD34                <1>  int 34h
  4826                                  	SbOut	bl	; sampling rate low byte
   106                              <1> %%Wait:
   107                              <1> 
   108 0000235F B400                <1>  mov ah, 0
   109 00002361 CD34                <1>  int 34h
   110 00002363 08C0                <1>  or al, al
   111 00002365 78F8                <1>  js short %%Wait
   112 00002367 88D8                <1>  mov al, %1
   113                              <1> 
   114 00002369 B401                <1>  mov ah, 1
   115 0000236B CD34                <1>  int 34h
  4827                                  
  4828                                  StartDMA:
  4829                                  	; autoinitialized mode
  4830 0000236D 803D[6E770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit samples
  4831 00002374 7411                    	je	short sb_play_1
  4832                                  	; 8 bit samples
  4833 00002376 66BBC600                	mov	bx, 0C6h ; 8 bit output (0C6h)
  4834 0000237A 803D[62770000]02        	cmp	byte [WAVE_NumChannels], 2 ; 1 = mono, 2 = stereo
  4835 00002381 7214                    	jb	short sb_play_2
  4836 00002383 B720                    	mov	bh, 20h	; 8 bit stereo (20h)
  4837 00002385 EB10                    	jmp	short sb_play_2
  4838                                  sb_play_1:
  4839                                  	; 16 bit samples
  4840 00002387 66BBB610                	mov	bx, 10B6h ; 16 bit output (0B6h)
  4841 0000238B 803D[62770000]02        	cmp	byte [WAVE_NumChannels], 2 ; 1 = mono, 2 = stereo
  4842 00002392 7203                    	jb	short sb_play_2
  4843 00002394 80C720                  	add	bh, 20h	; 16 bit stereo (30h)
  4844                                  sb_play_2:
  4845                                  	; PCM output (8/16 bit mono autoinitialized transfer)
  4846                                  	SbOut   bl	; bCommand
   106                              <1> %%Wait:
   107                              <1> 
   108 00002397 B400                <1>  mov ah, 0
   109 00002399 CD34                <1>  int 34h
   110 0000239B 08C0                <1>  or al, al
   111 0000239D 78F8                <1>  js short %%Wait
   112 0000239F 88D8                <1>  mov al, %1
   113                              <1> 
   114 000023A1 B401                <1>  mov ah, 1
   115 000023A3 CD34                <1>  int 34h
  4847                                  	SbOut	bh	; bMode
   106                              <1> %%Wait:
   107                              <1> 
   108 000023A5 B400                <1>  mov ah, 0
   109 000023A7 CD34                <1>  int 34h
   110 000023A9 08C0                <1>  or al, al
   111 000023AB 78F8                <1>  js short %%Wait
   112 000023AD 88F8                <1>  mov al, %1
   113                              <1> 
   114 000023AF B401                <1>  mov ah, 1
   115 000023B1 CD34                <1>  int 34h
  4848                                  
  4849 000023B3 8B1D[E8810000]          	mov	ebx, [buffersize] ; = [loadsize] for SB16
  4850                                  			; half buffer size
  4851 000023B9 803D[6E770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit DMA
  4852 000023C0 7502                    	jne	short sb_play_3
  4853 000023C2 D1EB                    	shr	ebx, 1	; byte count to word count (samples)
  4854                                  sb_play_3:
  4855 000023C4 4B                      	dec	ebx ; wBlkSize is one less than the actual size
  4856                                  	SbOut   bl
   106                              <1> %%Wait:
   107                              <1> 
   108 000023C5 B400                <1>  mov ah, 0
   109 000023C7 CD34                <1>  int 34h
   110 000023C9 08C0                <1>  or al, al
   111 000023CB 78F8                <1>  js short %%Wait
   112 000023CD 88D8                <1>  mov al, %1
   113                              <1> 
   114 000023CF B401                <1>  mov ah, 1
   115 000023D1 CD34                <1>  int 34h
  4857                                  	SbOut   bh
   106                              <1> %%Wait:
   107                              <1> 
   108 000023D3 B400                <1>  mov ah, 0
   109 000023D5 CD34                <1>  int 34h
   110 000023D7 08C0                <1>  or al, al
   111 000023D9 78F8                <1>  js short %%Wait
   112 000023DB 88F8                <1>  mov al, %1
   113                              <1> 
   114 000023DD B401                <1>  mov ah, 1
   115 000023DF CD34                <1>  int 34h
  4858                                  
  4859 000023E1 C605[DC770000]0D        	mov	byte [volume], 13 ; max = 15, min = 0
  4860                                  
  4861 000023E8 E8A1E1FFFF              	call	SetPCMOutVolume
  4862                                  
  4863 000023ED C3                      	retn
  4864                                  
  4865                                  ;-----------------------------------------------------------------------------
  4866                                  
  4867                                  	; 10/02/2025
  4868                                  	; 09/02/2025
  4869                                  	; 20/10/2017 - playwav.s
  4870                                  
  4871                                  sb16_stop:
  4872                                  	; 09/02/2025
  4873                                  	; Ref: TRDOS 386 Kernel v2.0.9 audio.s (06/06/2024)
  4874                                  	;      sb16_stop procedure (06/08/2022, v2.0.5)
  4875                                  
  4876                                  	;mov	byte [stopped], 2
  4877                                  	;
  4878 000023EE 668B15[D6770000]        	mov	dx, [audio_io_base]
  4879                                  	;add	dx, 0Ch
  4880 000023F5 80C20C                  	add	dl, 0Ch
  4881                                  
  4882 000023F8 B3D9                    	mov	bl, 0D9h ; exit auto-initialize 16 bit transfer
  4883                                  	; stop  autoinitialized DMA transfer mode 
  4884 000023FA 803D[6E770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit samples
  4885 00002401 7402                    	je	short sb16_stop_1
  4886                                  	;mov	bl, 0DAh ; exit auto-initialize 8 bit transfer
  4887 00002403 FEC3                    	inc	bl
  4888                                  sb16_stop_1:
  4889                                  	SbOut	bl ; exit auto-initialize transfer command
   106                              <1> %%Wait:
   107                              <1> 
   108 00002405 B400                <1>  mov ah, 0
   109 00002407 CD34                <1>  int 34h
   110 00002409 08C0                <1>  or al, al
   111 0000240B 78F8                <1>  js short %%Wait
   112 0000240D 88D8                <1>  mov al, %1
   113                              <1> 
   114 0000240F B401                <1>  mov ah, 1
   115 00002411 CD34                <1>  int 34h
  4890                                  
  4891 00002413 30C0                    	xor	al, al ; stops all DMA processes on selected channel
  4892 00002415 B401                    	mov	ah, 1
  4893                                  
  4894 00002417 803D[6E770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit samples
  4895 0000241E 7408                    	je	short sb16_stop_2
  4896                                  
  4897                                  	;out	0Ch, al ; clear selected channel register
  4898 00002420 66BA0C00                	mov	dx, 0Ch
  4899                                  	;mov	ah, 1 ;outb
  4900 00002424 CD34                    	int	34h
  4901                                  
  4902 00002426 EB06                    	jmp	short sb16_stop_3
  4903                                  
  4904                                  sb16_stop_2:
  4905                                  	;out	0D8h, al ; clear selected channel register
  4906 00002428 66BAD800                	mov	dx, 0D8h
  4907                                  	;mov	ah, 1 ;outb
  4908 0000242C CD34                    	int	34h
  4909                                  
  4910                                  sb16_stop_3:
  4911 0000242E C605[DD770000]02        	mov	byte [stopped], 2 ; stop !
  4912                                  SbDone:
  4913                                  	; 10/02/2025
  4914 00002435 668B15[D6770000]        	mov	dx, [audio_io_base]
  4915 0000243C 80C20C                  	add	dl, 0Ch
  4916                                  	SbOut   0D0h
   106                              <1> %%Wait:
   107                              <1> 
   108 0000243F B400                <1>  mov ah, 0
   109 00002441 CD34                <1>  int 34h
   110 00002443 08C0                <1>  or al, al
   111 00002445 78F8                <1>  js short %%Wait
   112 00002447 B0D0                <1>  mov al, %1
   113                              <1> 
   114 00002449 B401                <1>  mov ah, 1
   115 0000244B CD34                <1>  int 34h
  4917                                  	SbOut   0D3h
   106                              <1> %%Wait:
   107                              <1> 
   108 0000244D B400                <1>  mov ah, 0
   109 0000244F CD34                <1>  int 34h
   110 00002451 08C0                <1>  or al, al
   111 00002453 78F8                <1>  js short %%Wait
   112 00002455 B0D3                <1>  mov al, %1
   113                              <1> 
   114 00002457 B401                <1>  mov ah, 1
   115 00002459 CD34                <1>  int 34h
  4918                                  sb16_stop_4:
  4919 0000245B C3                      	retn
  4920                                  
  4921                                  ;-----------------------------------------------------------------------------
  4922                                  
  4923                                  	; 09/02/2025
  4924                                  	
  4925                                  sb16_pause:
  4926                                  	; Ref: TRDOS 386 Kernel v2.0.9 audio.s (06/06/2024)
  4927                                  	;      sb16_pause procedure (06/08/2022, v2.0.5)
  4928                                  
  4929 0000245C C605[DD770000]01        	mov	byte [stopped], 1 ; paused
  4930                                  	;
  4931 00002463 668B15[D6770000]        	mov	dx, [audio_io_base]
  4932                                  	;add	dx, 0Ch ; Command & Data Port
  4933 0000246A 80C20C                  	add	dl, 0Ch
  4934 0000246D 803D[6E770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit samples
  4935 00002474 7404                    	je	short sb_pause_1
  4936                                  	; 8 bit samples
  4937 00002476 B3D0                    	mov	bl, 0D0h ; 8 bit DMA mode
  4938 00002478 EB02                    	jmp	short sb_pause_2
  4939                                  sb_pause_1:
  4940                                  	; 16 bit samples
  4941 0000247A B3D5                    	mov	bl, 0D5h ; 16 bit DMA mode
  4942                                  sb_pause_2:
  4943                                  	SbOut   bl ; bCommand
   106                              <1> %%Wait:
   107                              <1> 
   108 0000247C B400                <1>  mov ah, 0
   109 0000247E CD34                <1>  int 34h
   110 00002480 08C0                <1>  or al, al
   111 00002482 78F8                <1>  js short %%Wait
   112 00002484 88D8                <1>  mov al, %1
   113                              <1> 
   114 00002486 B401                <1>  mov ah, 1
   115 00002488 CD34                <1>  int 34h
  4944                                  sb_pause_3:
  4945 0000248A C3                      	retn
  4946                                  
  4947                                  ;-----------------------------------------------------------------------------
  4948                                  
  4949                                  	; 09/02/2025
  4950                                  
  4951                                  sb16_play:
  4952                                  sb16_continue:
  4953                                  	; Ref: TRDOS 386 Kernel v2.0.9 audio.s (06/06/2024)
  4954                                  	;      sb16_pause procedure (06/08/2022, v2.0.5)
  4955                                  
  4956                                  	; continue to play (after pause)
  4957 0000248B C605[DD770000]00        	mov	byte [stopped], 0
  4958                                  	;
  4959 00002492 668B15[D6770000]        	mov	dx, [audio_io_base]
  4960                                  	;add	dx, 0Ch ; Command & Data Port
  4961 00002499 80C20C                  	add	dl, 0Ch
  4962 0000249C 803D[6E770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit samples
  4963 000024A3 7404                    	je	short sb_cont_1
  4964                                  	; 8 bit samples
  4965 000024A5 B3D4                    	mov	bl, 0D4h ; 8 bit DMA mode
  4966 000024A7 EB02                    	jmp	short sb_cont_2
  4967                                  sb_cont_1:
  4968                                  	; 16 bit samples
  4969 000024A9 B3D6                    	mov	bl, 0D6h ; 16 bit DMA mode
  4970                                  sb_cont_2:     
  4971                                  	SbOut   bl ; bCommand
   106                              <1> %%Wait:
   107                              <1> 
   108 000024AB B400                <1>  mov ah, 0
   109 000024AD CD34                <1>  int 34h
   110 000024AF 08C0                <1>  or al, al
   111 000024B1 78F8                <1>  js short %%Wait
   112 000024B3 88D8                <1>  mov al, %1
   113                              <1> 
   114 000024B5 B401                <1>  mov ah, 1
   115 000024B7 CD34                <1>  int 34h
  4972                                  sb_cont_3:
  4973 000024B9 C3                      	retn
  4974                                  
  4975                                  ;=============================================================================
  4976                                  ;	AC'97 Audio System Initialization
  4977                                  ;============================================================================
  4978                                  
  4979                                  	; 09/02/2025
  4980                                  ac97_init:
  4981                                  	; 05/02/2025 - ac97play.s
  4982                                  codecConfig:
  4983                                  	;AC97_EA_VRA equ 1
  4984                                  	AC97_EA_VRA equ BIT0
  4985                                  
  4986                                  init_ac97_controller:
  4987 000024BA A1[D2770000]            	mov	eax, [bus_dev_fn]
  4988 000024BF B004                    	mov	al, PCI_CMD_REG
  4989 000024C1 E804080000              	call	pciRegRead16		; read PCI command register
  4990 000024C6 80CA05                  	or      dl, IO_ENA+BM_ENA	; enable IO and bus master
  4991 000024C9 E87E080000              	call	pciRegWrite16
  4992                                  
  4993                                  	;call	delay_100ms
  4994                                  
  4995                                  init_ac97_codec:
  4996 000024CE BD28000000              	mov	ebp, 40
  4997                                  	;mov	ebp, 1000
  4998                                  _initc_1:
  4999 000024D3 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  5000 000024D7 660315[D8770000]        	add	dx, [NABMBAR]
  5001                                  	;in	eax, dx
  5002 000024DE B404                    	mov	ah, 4	; read port, dword
  5003 000024E0 CD34                    	int	34h
  5004                                  
  5005 000024E2 E85B060000              	call	delay1_4ms
  5006                                  
  5007 000024E7 83F8FF                  	cmp	eax, 0FFFFFFFFh ; -1
  5008 000024EA 750A                    	jne	short _initc_3
  5009                                  _initc_2:
  5010 000024EC 4D                      	dec	ebp
  5011 000024ED 7425                    	jz	short _ac97_codec_ready
  5012                                  
  5013 000024EF E83F060000              	call	delay_100ms
  5014 000024F4 EBDD                    	jmp	short _initc_1
  5015                                  _initc_3:
  5016 000024F6 A900030010              	test	eax, CTRL_ST_CREADY
  5017 000024FB 7517                    	jnz	short _ac97_codec_ready
  5018                                  
  5019 000024FD 803D[3F740000]01        	cmp	byte [reset], 1
  5020 00002504 73E6                    	jnb	short _initc_2
  5021                                  
  5022 00002506 E899010000              	call	reset_ac97_codec
  5023                                  
  5024 0000250B C605[3F740000]01        	mov	byte [reset], 1
  5025                                  
  5026 00002512 EBD8                    	jmp	short _initc_2
  5027                                  
  5028                                  _ac97_codec_ready:
  5029 00002514 668B15[D6770000]        	mov	dx, [NAMBAR]
  5030                                  	;add	dx, 0 ; ac_reg_0 ; reset register
  5031                                  	;out	dx, ax
  5032 0000251B 89C3                    	mov	ebx, eax ; bx = data, word
  5033 0000251D B403                    	mov	ah, 3	; write port, word
  5034 0000251F CD34                    	int	34h
  5035                                  	
  5036 00002521 E80D060000              	call	delay_100ms
  5037                                  
  5038 00002526 09ED                    	or	ebp, ebp
  5039 00002528 7535                    	jnz	short _ac97_codec_init_ok
  5040                                  
  5041                                  	;xor	eax, eax ; 0
  5042 0000252A 668B15[D6770000]        	mov	dx, [NAMBAR]
  5043 00002531 6683C226                	add	dx, CODEC_REG_POWERDOWN
  5044                                  	;out	dx, ax
  5045                                  	;mov	ebx, eax
  5046 00002535 31DB                    	xor	ebx, ebx
  5047 00002537 B403                    	mov	ah, 3	; write port, word
  5048 00002539 CD34                    	int	34h
  5049                                  
  5050                                  	;call	delay1_4ms
  5051                                  
  5052                                  	; wait for 1 second
  5053 0000253B B9E8030000              	mov	ecx, 1000 ; 1000*4*0.25ms = 1s
  5054                                  	;mov	ecx, 40
  5055                                  _ac97_codec_rloop:
  5056                                  	;call	delay_100ms
  5057 00002540 E8FD050000              	call	delay1_4ms
  5058                                  
  5059 00002545 668B15[D6770000]        	mov	dx, [NAMBAR]
  5060 0000254C 6683C226                	add	dx, CODEC_REG_POWERDOWN
  5061                                  	;in	ax, dx
  5062 00002550 B402                    	mov	ah, 2	; read port, word
  5063 00002552 CD34                    	int	34h
  5064                                  
  5065                                  	;call	delay1_4ms
  5066                                  	
  5067 00002554 6683E00F                	and	ax, 0Fh
  5068 00002558 3C0F                    	cmp	al, 0Fh
  5069 0000255A 7403                    	je	short _ac97_codec_init_ok
  5070 0000255C E2E2                    	loop	_ac97_codec_rloop 
  5071                                  
  5072                                  init_ac97_codec_err1:
  5073                                  	;stc	; cf = 1
  5074                                  init_ac97_codec_err2:
  5075 0000255E C3                      	retn
  5076                                  
  5077                                  _ac97_codec_init_ok:
  5078 0000255F E8E1000000              	call 	reset_ac97_controller
  5079                                  
  5080                                  	;call	delay_100ms
  5081                                  
  5082                                  	;call	delay1_4ms
  5083                                  	;call	delay1_4ms
  5084                                  	;call	delay1_4ms
  5085 00002564 E8D9050000              	call	delay1_4ms
  5086                                  
  5087                                  setup_ac97_codec:
  5088 00002569 66813D[64770000]80-     	cmp	word [WAVE_SampleRate], 48000
  5088 00002571 BB                 
  5089 00002572 0F849A000000            	je	skip_rate
  5090                                  	
  5091                                  	;cmp	byte [VRA], 0
  5092                                  	;jna	short skip_rate
  5093                                  
  5094 00002578 668B15[D6770000]        	mov	dx, [NAMBAR]
  5095 0000257F 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG ; 2Ah
  5096                                  	;in	ax, dx
  5097 00002583 B402                    	mov	ah, 2 ; read port, word
  5098 00002585 CD34                    	int	34h
  5099                                  
  5100 00002587 E8B6050000              	call	delay1_4ms
  5101                                  	
  5102                                  	;and	al, NOT BIT1 ; Clear DRA
  5103                                  	;;;
  5104                                  	; (FASM)
  5105                                  	;and	al, NOT (BIT1+BIT0) ; Clear DRA+VRA
  5106                                  	; (NASM)
  5107 0000258C 24FC                    	and	al, ~(BIT1+BIT0) ; 0FCh
  5108                                  	;out	dx, ax
  5109 0000258E 89C3                    	mov	ebx, eax
  5110 00002590 668B15[D6770000]        	mov	dx, [NAMBAR]
  5111 00002597 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG ; 2Ah
  5112 0000259B B403                    	mov	ah, 3 ; write port, word
  5113 0000259D CD34                    	int	34h
  5114                                  
  5115 0000259F E8AC010000              	call	check_vra
  5116                                  
  5117 000025A4 803D[CB770000]00        	cmp	byte [VRA], 0
  5118 000025AB 7665                    	jna	short skip_rate
  5119                                  
  5120 000025AD 668B15[D6770000]        	mov	dx, [NAMBAR]
  5121 000025B4 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG ; 2Ah
  5122                                  	;in	ax, dx
  5123 000025B8 B402                    	mov	ah, 2 ; read port, word
  5124 000025BA CD34                    	int	34h
  5125                                  
  5126                                  	;and	al, ~BIT1 ; Clear DRA
  5127                                  	;;;
  5128                                  
  5129 000025BC 0C01                    	or	al, AC97_EA_VRA ; 1
  5130                                  
  5131 000025BE 668B15[D6770000]        	mov	dx, [NAMBAR]
  5132 000025C5 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG ; 2Ah
  5133                                  	;out	dx, ax		; Enable variable rate audio
  5134 000025C9 89C3                    	mov	ebx, eax
  5135 000025CB B403                    	mov	ah, 3 ; write port, word
  5136 000025CD CD34                    	int	34h
  5137                                  
  5138 000025CF B90A000000              	mov	ecx, 10
  5139                                  check_vra_loop:
  5140                                  	;call	delay_100ms
  5141 000025D4 E869050000              	call	delay1_4ms
  5142                                  
  5143 000025D9 668B15[D6770000]        	mov	dx, [NAMBAR]
  5144 000025E0 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG ; 2Ah
  5145                                  	;in	ax, dx
  5146 000025E4 B402                    	mov	ah, 2 ; read port, word
  5147 000025E6 CD34                    	int	34h
  5148                                  	
  5149 000025E8 A801                    	test	al, AC97_EA_VRA ; 1
  5150 000025EA 750B                    	jnz	short set_rate
  5151                                  
  5152 000025EC E2E6                    	loop	check_vra_loop
  5153                                  
  5154                                  ;vra_not_supported:
  5155 000025EE C605[CB770000]00        	mov	byte [VRA], 0
  5156 000025F5 EB1B                    	jmp	short skip_rate
  5157                                  
  5158                                  set_rate:
  5159                                  	;mov	ax, [WAVE_SampleRate]
  5160                                  
  5161 000025F7 668B15[D6770000]        	mov    	dx, [NAMBAR]               	
  5162 000025FE 6683C22C                	add    	dx, CODEC_PCM_FRONT_DACRATE_REG	; 2Ch
  5163                                  	;out	dx, ax 		; PCM Front/Center Output Sample Rate
  5164                                  	;mov	ebx, eax  ; bx = data, word
  5165 00002602 668B1D[64770000]        	mov	bx, [WAVE_SampleRate]
  5166 00002609 B403                    	mov	ah, 3 ; write port, word
  5167 0000260B CD34                    	int	34h
  5168                                  
  5169                                  	;call	delay_100ms
  5170 0000260D E830050000              	call	delay1_4ms
  5171                                  
  5172                                  skip_rate:
  5173                                  	;mov	ax, 0202h
  5174 00002612 668B15[D6770000]          	mov	dx, [NAMBAR]
  5175 00002619 6683C202                  	add	dx, CODEC_MASTER_VOL_REG ; 02h
  5176                                  	;out	dx, ax
  5177                                  	;mov	ebx, eax  ; bx = data, word
  5178 0000261D 66BB0202                	mov	bx, 0202h 
  5179 00002621 B403                    	mov	ah, 3 ; write port, word
  5180 00002623 CD34                    	int	34h
  5181                                  
  5182                                  	;call	delay1_4ms
  5183                                  	;call	delay1_4ms
  5184                                  	;call	delay1_4ms
  5185 00002625 E818050000              	call	delay1_4ms
  5186                                  
  5187                                  	;mov	ax, 0202h
  5188 0000262A 668B15[D6770000]          	mov	dx, [NAMBAR]
  5189 00002631 6683C218                  	add	dx, CODEC_PCM_OUT_REG ; 18h
  5190                                    	;out	dx, ax
  5191                                  	;mov	ebx, eax  ; bx = data, word
  5192 00002635 66BB0202                	mov	bx, 0202h
  5193 00002639 B403                    	mov	ah, 3 ; write port, word
  5194 0000263B CD34                    	int	34h
  5195                                  	
  5196                                  	;call	delay1_4ms
  5197                                  	;call	delay1_4ms
  5198                                  	;call	delay1_4ms
  5199                                  	;call	delay1_4ms
  5200                                  
  5201                                  	;clc
  5202                                  
  5203 0000263D C605[DC770000]1D        	mov	byte [volume], 29 ; max = 31, min = 0
  5204                                  
  5205 00002644 C3                              retn
  5206                                  
  5207                                  ;-----------------------------------------------------------------------------
  5208                                  
  5209                                  	; 09/02/2025
  5210                                  	; 05/02/2025 - ac97play.s
  5211                                  
  5212                                  reset_ac97_controller:
  5213                                  	; reset AC97 audio controller registers
  5214 00002645 31C0                    	xor	eax, eax
  5215 00002647 66BA0B00                        mov	dx, PI_CR_REG
  5216 0000264B 660315[D8770000]        	add	dx, [NABMBAR]
  5217                                  	;out	dx, al
  5218                                  	; al = data, byte
  5219 00002652 B401                    	mov	ah, 1 ; write port, byte
  5220 00002654 CD34                    	int	34h
  5221                                  
  5222                                  	;call	delay1_4ms
  5223                                  
  5224 00002656 66BA1B00                        mov     dx, PO_CR_REG
  5225 0000265A 660315[D8770000]        	add	dx, [NABMBAR]
  5226                                  	;out	dx, al
  5227                                  	; al = data, byte
  5228 00002661 B401                    	mov	ah, 1 ; write port, byte
  5229 00002663 CD34                    	int	34h
  5230                                  
  5231                                  	;call	delay1_4ms
  5232                                  
  5233 00002665 66BA2B00                        mov     dx, MC_CR_REG
  5234 00002669 660315[D8770000]        	add	dx, [NABMBAR]
  5235                                  	;out	dx, al
  5236 00002670 B401                    	mov	ah, 1 ; write port, byte
  5237 00002672 CD34                    	int	34h
  5238                                  
  5239                                  	;call	delay1_4ms
  5240                                  
  5241 00002674 B002                            mov	al, RR
  5242 00002676 66BA0B00                        mov	dx, PI_CR_REG
  5243 0000267A 660315[D8770000]        	add	dx, [NABMBAR]
  5244                                  	;out	dx, al
  5245 00002681 B401                    	mov	ah, 1 ; write port, byte
  5246 00002683 CD34                    	int	34h
  5247                                  
  5248                                  	;call	delay1_4ms
  5249                                  
  5250 00002685 66BA1B00                        mov	dx, PO_CR_REG
  5251 00002689 660315[D8770000]        	add	dx, [NABMBAR]
  5252                                  	;out	dx, al
  5253 00002690 B401                    	mov	ah, 1 ; write port, byte
  5254 00002692 CD34                    	int	34h
  5255                                  
  5256                                  	;call	delay1_4ms
  5257                                  
  5258 00002694 66BA2B00                        mov	dx, MC_CR_REG
  5259 00002698 660315[D8770000]        	add	dx, [NABMBAR]
  5260                                  	;out	dx, al
  5261 0000269F B401                    	mov	ah, 1 ; write port, byte
  5262 000026A1 CD34                    	int	34h
  5263                                  
  5264                                  	;call	delay1_4ms
  5265                                  
  5266 000026A3 C3                      	retn
  5267                                  
  5268                                  ;-----------------------------------------------------------------------------
  5269                                  
  5270                                  	; 09/02/2025
  5271                                  	; 05/02/2025 - ac97play.s
  5272                                  
  5273                                  reset_ac97_codec:
  5274 000026A4 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5275 000026A8 660315[D8770000]        	add	dx, [NABMBAR]
  5276                                  	;in	eax, dx
  5277 000026AF B404                    	mov	ah, 4 ; read port, dword
  5278 000026B1 CD34                    	int	34h
  5279                                  
  5280 000026B3 A802                    	test	al, 2
  5281 000026B5 7407                    	jz	short _r_ac97codec_cold
  5282                                  
  5283 000026B7 E80E000000              	call	warm_ac97codec_reset
  5284 000026BC 7308                    	jnc	short _r_ac97codec_ok
  5285                                  _r_ac97codec_cold:
  5286 000026BE E840000000                      call	cold_ac97codec_reset
  5287 000026C3 7301                            jnc	short _r_ac97codec_ok
  5288                                  	
  5289                                          ;xor	eax, eax ; timeout error
  5290                                         	;stc
  5291 000026C5 C3                      	retn
  5292                                  
  5293                                  _r_ac97codec_ok:
  5294 000026C6 31C0                            xor     eax, eax
  5295 000026C8 40                              inc	eax
  5296 000026C9 C3                      	retn
  5297                                  
  5298                                  ;-----------------------------------------------------------------------------
  5299                                  
  5300                                  	; 09/02/2025
  5301                                  	; 05/02/2025 - ac97play.s
  5302                                  
  5303                                  warm_ac97codec_reset:
  5304                                  	;mov	eax, 6
  5305 000026CA 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5306 000026CE 660315[D8770000]        	add	dx, [NABMBAR]
  5307                                  	;out	dx, eax
  5308                                  	;mov	ebx, eax  ; ebx = data, dword
  5309 000026D5 BB06000000              	mov	ebx, 6
  5310 000026DA B405                    	mov	ah, 5 ; write port, dword
  5311 000026DC CD34                    	int	34h
  5312                                  
  5313 000026DE B90A000000              	mov	ecx, 10	; total 1s
  5314                                  _warm_ac97c_rst_wait:
  5315 000026E3 E84B040000              	call	delay_100ms
  5316                                  
  5317 000026E8 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  5318 000026EC 660315[D8770000]        	add	dx, [NABMBAR]
  5319                                  	;in	eax, dx
  5320 000026F3 B404                    	mov	ah, 4 ; read port, dword
  5321 000026F5 CD34                    	int	34h
  5322                                  
  5323 000026F7 A900030010              	test	eax, CTRL_ST_CREADY
  5324 000026FC 7504                    	jnz	short _warm_ac97c_rst_ok
  5325                                  
  5326 000026FE 49                      	dec	ecx
  5327 000026FF 75E2                    	jnz	short _warm_ac97c_rst_wait
  5328                                  
  5329                                  _warm_ac97c_rst_fail:
  5330 00002701 F9                              stc
  5331                                  _warm_ac97c_rst_ok:
  5332 00002702 C3                      	retn
  5333                                  
  5334                                  ;-----------------------------------------------------------------------------
  5335                                  
  5336                                  	; 09/02/2025
  5337                                  	; 05/02/2025 - ac97play.s
  5338                                  
  5339                                  cold_ac97codec_reset:
  5340                                          ;mov	eax, 2
  5341 00002703 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5342 00002707 660315[D8770000]        	add	dx, [NABMBAR]
  5343                                  	;out	dx, eax
  5344                                  	;mov	ebx, eax  ; ebx = data, dword
  5345 0000270E BB02000000              	mov	ebx, 2
  5346 00002713 B405                    	mov	ah, 5 ; write port, dword
  5347 00002715 CD34                    	int	34h
  5348                                  
  5349 00002717 E817040000              	call	delay_100ms 	; wait 100 ms
  5350 0000271C E812040000              	call	delay_100ms 	; wait 100 ms
  5351 00002721 E80D040000              	call	delay_100ms 	; wait 100 ms
  5352 00002726 E808040000              	call	delay_100ms 	; wait 100 ms
  5353                                  
  5354 0000272B B910000000              	mov	ecx, 16	; total 20*100 ms = 2s
  5355                                  _cold_ac97c_rst_wait:
  5356 00002730 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  5357 00002734 660315[D8770000]        	add	dx, [NABMBAR]
  5358                                  	;in	eax, dx
  5359 0000273B B404                    	mov	ah, 4 ; read port, dword
  5360 0000273D CD34                    	int	34h
  5361                                  
  5362 0000273F A900030010              	test	eax, CTRL_ST_CREADY
  5363 00002744 7509                    	jnz	short _cold_ac97c_rst_ok
  5364                                  
  5365 00002746 E8E8030000              	call	delay_100ms
  5366                                  
  5367 0000274B 49                      	dec	ecx
  5368 0000274C 75E2                    	jnz	short _cold_ac97c_rst_wait
  5369                                  
  5370                                  _cold_ac97c_rst_fail:
  5371 0000274E F9                              stc
  5372                                  _cold_ac97c_rst_ok:
  5373 0000274F C3                      	retn
  5374                                  
  5375                                  ;-----------------------------------------------------------------------------
  5376                                  
  5377                                  	; 09/02/2025
  5378                                  	; 05/02/2025 - ac97play.s
  5379                                  
  5380                                  check_vra:
  5381 00002750 C605[CB770000]01        	mov	byte [VRA], 1
  5382                                  
  5383 00002757 668B15[D6770000]        	mov	dx, [NAMBAR]
  5384 0000275E 6683C228                	add	dx, CODEC_EXT_AUDIO_REG	; 28h
  5385                                  	;in	ax, dx
  5386 00002762 B402                    	mov	ah, 2 ; read port, word
  5387 00002764 CD34                    	int	34h
  5388                                  
  5389                                  	;call	delay1_4ms
  5390                                  
  5391 00002766 A801                    	test	al, BIT0 ; 1 ; Variable Rate Audio bit
  5392 00002768 7507                    	jnz	short check_vra_ok
  5393                                  
  5394                                  vra_not_supported:
  5395 0000276A C605[CB770000]00        	mov	byte [VRA], 0
  5396                                  check_vra_ok:
  5397 00002771 C3                      	retn
  5398                                  
  5399                                  ;-----------------------------------------------------------------------------
  5400                                  ;-----------------------------------------------------------------------------
  5401                                  
  5402                                  	; 10/02/2025
  5403                                  	; 08/02/2025 - twavplay.asm
  5404                                  	; !!!! 18.2 block/second buffer sizing for proper wave scopes !!!!
  5405                                  	; (wave graphics synchronization) 
  5406                                  
  5407                                  ac97_play_setup:
  5408 00002772 803D[CB770000]01        	cmp	byte [VRA], 1
  5409 00002779 720B                    	jb	short chk_sample_rate
  5410                                  
  5411                                  playwav_48_khz:
  5412 0000277B C705[E0810000]-         	mov	dword [loadfromwavfile], loadFromFile
  5412 00002781 [94060000]         
  5413 00002785 C3                      	retn
  5414                                  
  5415                                  chk_sample_rate:
  5416                                  	; set conversion parameters
  5417                                  	; (for 8, 11.025, 16, 22.050, 24, 32 kHZ)
  5418 00002786 66A1[64770000]          	mov	ax, [WAVE_SampleRate]
  5419 0000278C 663D80BB                	cmp	ax, 48000
  5420 00002790 74E9                    	je	short playwav_48_khz
  5421                                  chk_22khz:
  5422 00002792 663D2256                	cmp	ax, 22050
  5423 00002796 7545                    	jne	short chk_11khz
  5424 00002798 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5425 0000279F 7615                    	jna	short chk_22khz_1
  5426 000027A1 BB[A1130000]            	mov	ebx, load_22khz_stereo_16_bit
  5427 000027A6 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5428 000027AD 751A                    	jne	short chk_22khz_2
  5429 000027AF BB[14130000]            	mov	ebx, load_22khz_mono_16_bit
  5430 000027B4 EB13                    	jmp	short chk_22khz_2
  5431                                  chk_22khz_1:
  5432 000027B6 BB[8D120000]            	mov	ebx, load_22khz_stereo_8_bit
  5433 000027BB 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5434 000027C2 7505                    	jne	short chk_22khz_2
  5435 000027C4 BB[04120000]            	mov	ebx, load_22khz_mono_8_bit
  5436                                  chk_22khz_2:
  5437 000027C9 B8B7040000              	mov	eax, 1207  ; (71*17)		
  5438 000027CE BA25000000              	mov	edx, 37
  5439 000027D3 B911000000              	mov	ecx, 17
  5440 000027D8 E921020000              	jmp	set_sizes
  5441                                  chk_11khz:
  5442 000027DD 663D112B                	cmp	ax, 11025
  5443 000027E1 7545                    	jne	short chk_44khz
  5444 000027E3 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5445 000027EA 7615                    	jna	short chk_11khz_1
  5446 000027EC BB[BD150000]            	mov	ebx, load_11khz_stereo_16_bit
  5447 000027F1 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5448 000027F8 751A                    	jne	short chk_11khz_2
  5449 000027FA BB[44150000]            	mov	ebx, load_11khz_mono_16_bit
  5450 000027FF EB13                    	jmp	short chk_11khz_2
  5451                                  chk_11khz_1:
  5452 00002801 BB[CA140000]            	mov	ebx, load_11khz_stereo_8_bit
  5453 00002806 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5454 0000280D 7505                    	jne	short chk_11khz_2
  5455 0000280F BB[52140000]            	mov	ebx, load_11khz_mono_8_bit
  5456                                  chk_11khz_2:
  5457 00002814 B864020000              	mov	eax, 612  ; (36*17)	
  5458 00002819 BA4A000000              	mov	edx, 74
  5459 0000281E B911000000              	mov	ecx, 17
  5460 00002823 E9D6010000              	jmp	set_sizes
  5461                                  chk_44khz:
  5462 00002828 663D44AC                	cmp	ax, 44100
  5463 0000282C 7545                    	jne	short chk_16khz
  5464 0000282E 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5465 00002835 7615                    	jna	short chk_44khz_1
  5466 00002837 BB[C4170000]            	mov	ebx, load_44khz_stereo_16_bit
  5467 0000283C 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5468 00002843 751A                    	jne	short chk_44khz_2
  5469 00002845 BB[4B170000]            	mov	ebx, load_44khz_mono_16_bit
  5470 0000284A EB13                    	jmp	short chk_44khz_2
  5471                                  chk_44khz_1:
  5472 0000284C BB[CE160000]            	mov	ebx, load_44khz_stereo_8_bit
  5473 00002851 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5474 00002858 7505                    	jne	short chk_44khz_2
  5475 0000285A BB[52160000]            	mov	ebx, load_44khz_mono_8_bit
  5476                                  chk_44khz_2:
  5477 0000285F B886090000              	mov	eax, 2438  ; (106*23)
  5478 00002864 BA19000000              	mov	edx, 25
  5479 00002869 B917000000              	mov	ecx, 23
  5480 0000286E E98B010000              	jmp	set_sizes
  5481                                  chk_16khz:
  5482 00002873 663D803E                	cmp	ax, 16000
  5483 00002877 7545                    	jne	short chk_8khz
  5484 00002879 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5485 00002880 7615                    	jna	short chk_16khz_1
  5486 00002882 BB[430D0000]            	mov	ebx, load_16khz_stereo_16_bit
  5487 00002887 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5488 0000288E 751A                    	jne	short chk_16khz_2
  5489 00002890 BB[C20C0000]            	mov	ebx, load_16khz_mono_16_bit
  5490 00002895 EB13                    	jmp	short chk_16khz_2
  5491                                  chk_16khz_1:
  5492 00002897 BB[080C0000]            	mov	ebx, load_16khz_stereo_8_bit
  5493 0000289C 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5494 000028A3 7505                    	jne	short chk_16khz_2
  5495 000028A5 BB[890B0000]            	mov	ebx, load_16khz_mono_8_bit
  5496                                  chk_16khz_2:
  5497 000028AA B86F030000              	mov	eax, 879
  5498 000028AF BA03000000              	mov	edx, 3
  5499 000028B4 B901000000              	mov	ecx, 1
  5500 000028B9 E940010000              	jmp	set_sizes
  5501                                  chk_8khz:
  5502 000028BE 663D401F                	cmp	ax, 8000
  5503 000028C2 7545                    	jne	short chk_24khz
  5504 000028C4 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5505 000028CB 7615                    	jna	short chk_8khz_1
  5506 000028CD BB[3E0A0000]            	mov	ebx, load_8khz_stereo_16_bit
  5507 000028D2 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5508 000028D9 751A                    	jne	short chk_8khz_2
  5509 000028DB BB[6E090000]            	mov	ebx, load_8khz_mono_16_bit
  5510 000028E0 EB13                    	jmp	short chk_8khz_2
  5511                                  chk_8khz_1:
  5512 000028E2 BB[3E080000]            	mov	ebx, load_8khz_stereo_8_bit
  5513 000028E7 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5514 000028EE 7505                    	jne	short chk_8khz_2
  5515 000028F0 BB[61070000]            	mov	ebx, load_8khz_mono_8_bit
  5516                                  chk_8khz_2:
  5517 000028F5 B8B8010000              	mov	eax, 440
  5518 000028FA BA06000000              	mov	edx, 6
  5519 000028FF B901000000              	mov	ecx, 1
  5520 00002904 E9F5000000              	jmp	set_sizes
  5521                                  chk_24khz:
  5522 00002909 663DC05D                	cmp	ax, 24000
  5523 0000290D 7545                    	jne	short chk_32khz
  5524 0000290F 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5525 00002916 7615                    	jna	short chk_24khz_1
  5526 00002918 BB[700F0000]            	mov	ebx, load_24khz_stereo_16_bit
  5527 0000291D 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5528 00002924 751A                    	jne	short chk_24khz_2
  5529 00002926 BB[0A0F0000]            	mov	ebx, load_24khz_mono_16_bit
  5530 0000292B EB13                    	jmp	short chk_24khz_2
  5531                                  chk_24khz_1:
  5532 0000292D BB[800E0000]            	mov	ebx, load_24khz_stereo_8_bit
  5533 00002932 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5534 00002939 7505                    	jne	short chk_24khz_2
  5535 0000293B BB[190E0000]            	mov	ebx, load_24khz_mono_8_bit
  5536                                  chk_24khz_2:
  5537 00002940 B826050000              	mov	eax, 1318
  5538 00002945 BA02000000              	mov	edx, 2
  5539 0000294A B901000000              	mov	ecx, 1
  5540 0000294F E9AA000000              	jmp	set_sizes
  5541                                  
  5542                                  chk_32khz:
  5543 00002954 663D007D                	cmp	ax, 32000
  5544 00002958 755E                    	jne	short chk_12khz
  5545 0000295A 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5546 00002961 7615                    	jna	short chk_32khz_1
  5547 00002963 BB[74110000]            	mov	ebx, load_32khz_stereo_16_bit
  5548 00002968 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5549 0000296F 751A                    	jne	short chk_32khz_2
  5550 00002971 BB[07110000]            	mov	ebx, load_32khz_mono_16_bit
  5551 00002976 EB13                    	jmp	short chk_32khz_2
  5552                                  chk_32khz_1:
  5553 00002978 BB[6A100000]            	mov	ebx, load_32khz_stereo_8_bit
  5554 0000297D 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5555 00002984 7505                    	jne	short chk_32khz_2
  5556 00002986 BB[F70F0000]            	mov	ebx, load_32khz_mono_8_bit
  5557                                  chk_32khz_2:
  5558 0000298B B8DE060000              	mov	eax, 1758
  5559 00002990 BA03000000              	mov	edx, 3
  5560 00002995 B902000000              	mov	ecx, 2
  5561 0000299A EB62                    	jmp	short set_sizes
  5562                                  
  5563                                  vra_needed:
  5564 0000299C 58                      	pop	eax ; discard return address to the caller
  5565                                  vra_err:
  5566                                  	sys	_msg, msg_no_vra, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000299D BB[25750000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000029A2 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000029A7 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000029AC B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000029B1 CD40                <1>  int 40h
  5567 000029B3 E9FAD6FFFF              	jmp	Exit
  5568                                  
  5569                                  	;;;;
  5570                                  chk_12khz:
  5571 000029B8 663DE02E                	cmp	ax, 12000
  5572 000029BC 75DE                    	jne	short vra_needed
  5573 000029BE 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5574 000029C5 7615                    	jna	short chk_12khz_1
  5575 000029C7 BB[30190000]            	mov	ebx, load_12khz_stereo_16_bit
  5576 000029CC 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5577 000029D3 751A                    	jne	short chk_12khz_2
  5578 000029D5 BB[E1180000]            	mov	ebx, load_12khz_mono_16_bit
  5579 000029DA EB13                    	jmp	short chk_12khz_2
  5580                                  chk_12khz_1:
  5581 000029DC BB[8B180000]            	mov	ebx, load_12khz_stereo_8_bit
  5582 000029E1 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5583 000029E8 7505                    	jne	short chk_12khz_2
  5584 000029EA BB[43180000]            	mov	ebx, load_12khz_mono_8_bit
  5585                                  chk_12khz_2:
  5586 000029EF B893020000              	mov	eax, 659
  5587 000029F4 BA04000000              	mov	edx, 4
  5588 000029F9 B901000000              	mov	ecx, 1
  5589                                  	;jmp	short set_sizes
  5590                                  	;;;;
  5591                                  
  5592                                  ;-----------------------------------------------------------------------------
  5593                                  
  5594                                  set_sizes:
  5595 000029FE 803D[62770000]01        	cmp	byte [WAVE_NumChannels], 1
  5596 00002A05 7402                    	je	short ss_1
  5597 00002A07 D1E0                    	shl	eax, 1
  5598                                  ss_1:
  5599 00002A09 803D[6E770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5600 00002A10 7602                    	jna	short ss_2
  5601                                  	; 16 bit samples
  5602 00002A12 D1E0                    	shl	eax, 1
  5603                                  ss_2:
  5604 00002A14 A3[E4810000]            	mov	[loadsize], eax
  5605 00002A19 F7E2                    	mul	edx
  5606                                  
  5607 00002A1B 83F901                  	cmp	ecx, 1
  5608 00002A1E 7402                    	je	short ss_3
  5609                                  
  5610 00002A20 F7F1                    	div	ecx
  5611                                  ss_3:	
  5612                                  	;;;
  5613                                  	; eax = byte count of (to be) converted samples 
  5614                                  	;;;
  5615 00002A22 8A0D[CC770000]          	mov	cl, [fbs_shift]
  5616                                  
  5617 00002A28 D3E0                    	shl	eax, cl
  5618                                  		; *1 for 16 bit stereo
  5619                                  		; *2 for 16 bit mono or 8 bit stereo
  5620                                  		; *4 for for 8 bit mono
  5621                                  	;;;
  5622                                  
  5623                                  	; eax = 16 bit stereo byte count (target buffer size)
  5624                                  	
  5625 00002A2A D1E8                    	shr	eax, 1	; buffer size is 16 bit sample count
  5626 00002A2C A3[E8810000]            	mov	[buffersize], eax  ; **
  5627 00002A31 891D[E0810000]          	mov	[loadfromwavfile], ebx
  5628                                  
  5629 00002A37 C3                      	retn
  5630                                  
  5631                                  ;-----------------------------------------------------------------------------
  5632                                  ;-----------------------------------------------------------------------------
  5633                                  
  5634                                  	; 10/02/2025
  5635                                  	; 05/02/2025 - ac97play.s
  5636                                  
  5637                                  ac97_init_play:
  5638                                  
  5639                                  _PlayNow:
  5640                                  	; create Buffer Descriptor List
  5641                                  
  5642                                  	;  Generic Form of Buffer Descriptor
  5643                                  	;  ---------------------------------
  5644                                  	;  63   62    61-48    47-32   31-0
  5645                                  	;  ---  ---  --------  ------- -----
  5646                                  	;  IOC  BUP -reserved- Buffer  Buffer
  5647                                  	;		      Length   Pointer
  5648                                  	;		      [15:0]   [31:0]
  5649                                  
  5650 00002A38 8B1D[FC810000]          	mov	ebx, [_bdl_buffer] ; BDL_BUFFER physical address
  5651                                  
  5652 00002A3E 81C300100000            	add	ebx, 4096	; WAVBUFFER_1 physical address
  5653                                  
  5654 00002A44 BF[00900000]            	mov	edi, BDL_BUFFER
  5655 00002A49 B910000000              	mov	ecx, 16
  5656                                  _0:
  5657                                  	;mov	eax, WAV_BUFFER_1
  5658 00002A4E 89D8                    	mov	eax, ebx	; WAVBUFFER_1 physical address
  5659 00002A50 AB                      	stosd
  5660                                  
  5661 00002A51 A1[E8810000]            	mov	eax, [buffersize]
  5662                                  	;shr	eax, 1 ; buffer size in word
  5663 00002A56 0D00000040              	or	eax, BUP	; tuneloop (without interrupt)
  5664 00002A5B AB                      	stosd
  5665                                  
  5666                                  	;mov	eax, WAV_BUFFER_2
  5667 00002A5C 89D8                    	mov	eax, ebx
  5668 00002A5E 0500300000              	add	eax, 12288	; WAVBUFFER_2 physical address
  5669 00002A63 AB                      	stosd
  5670                                  
  5671 00002A64 A1[E8810000]            	mov	eax, [buffersize]
  5672                                  	; 02/12/2024
  5673                                  	;shr	eax, 1 ; buffer size in word
  5674 00002A69 0D00000040              	or	eax, BUP	; tuneloop (without interrupt)
  5675 00002A6E AB                      	stosd
  5676                                  
  5677 00002A6F E2DD                    	loop	_0
  5678                                  	
  5679                                  ac97_RePlayWav:
  5680 00002A71 BF[00A00000]                    mov     edi, WAV_BUFFER_1
  5681 00002A76 893D[F8810000]          	mov	[audio_buffer], edi
  5682 00002A7C FF15[E0810000]          	call	dword [loadfromwavfile]
  5683                                  
  5684 00002A82 A1[EC810000]            	mov	eax, [count]
  5685 00002A87 0105[F0810000]          	add	[LoadedDataBytes], eax
  5686                                  
  5687 00002A8D BF[00D00000]            	mov     edi, WAV_BUFFER_2
  5688 00002A92 893D[F8810000]          	mov	[audio_buffer], edi
  5689 00002A98 FF15[E0810000]          	call	dword [loadfromwavfile]
  5690                                  
  5691 00002A9E A1[EC810000]            	mov	eax, [count]
  5692 00002AA3 0105[F0810000]          	add	[LoadedDataBytes], eax
  5693                                  
  5694                                  	; write NABMBAR+10h with offset of buffer descriptor list
  5695                                  
  5696                                  	;mov	eax, [_bdl_buffer]
  5697 00002AA9 8B1D[FC810000]          	mov	ebx, [_bdl_buffer]	; BDL_BUFFER physical address
  5698                                  	
  5699 00002AAF 668B15[D8770000]        	mov	dx, [NABMBAR]
  5700 00002AB6 6683C210                	add	dx, PO_BDBAR_REG	; set pointer to BDL
  5701                                  	;out	dx, eax			; write to AC97 controller
  5702                                  	;mov	ebx, eax ; data, dword
  5703                                  	; ebx = [_bdl_buffer] ; data, dword
  5704 00002ABA B405                    	mov	ah, 5	; write port dword
  5705 00002ABC CD34                    	int	34h
  5706                                  
  5707                                  	;call	delay1_4ms
  5708                                  
  5709 00002ABE B01F                    	mov	al, 31
  5710 00002AC0 E8FC000000              	call	setLastValidIndex
  5711                                  
  5712                                  	;call	delay1_4ms
  5713                                  
  5714                                  	;mov	al, [volume]
  5715 00002AC5 E8C4DAFFFF              	call	SetPCMOutVolume
  5716                                  
  5717 00002ACA 668B15[D8770000]        	mov	dx, [NABMBAR]
  5718 00002AD1 6683C21B                        add	dx, PO_CR_REG		; PCM out Control Register
  5719                                  	;mov	al, IOCE + RPBM		; Enable 'Interrupt On Completion' + run
  5720                                  	;				; (LVBI interrupt will not be enabled)
  5721                                  	; (TUNELOOP version, without interrupt)
  5722 00002AD5 B001                    	mov	al, RPBM
  5723                                  	;out	dx, al			; Start bus master operation.
  5724                                  	; al = data, byte
  5725 00002AD7 B401                    	mov	ah, 1 ; write port, byte
  5726 00002AD9 CD34                    	int	34h
  5727                                  
  5728                                  	;call	delay1_4ms
  5729                                  
  5730 00002ADB C3                      	retn
  5731                                  
  5732                                  ;-----------------------------------------------------------------------------
  5733                                  ;-----------------------------------------------------------------------------
  5734                                  
  5735                                  	; 10/02/2025
  5736                                  	; 06/02/2025 - twavplay.asm
  5737                                  	; Ref: TRDOS 386 v2.0.9, audio.s, Erdogan Tan, 06/06/2024
  5738                                  
  5739                                  audio_stop:
  5740 00002ADC 803D[DA770000]01        	cmp	byte [audio_hardware], 1
  5741 00002AE3 7705                    	ja	short ac97_stop
  5742 00002AE5 E904F9FFFF              	jmp	sb16_stop
  5743                                  
  5744                                  ;-----------------------------------------------------------------------------
  5745                                  
  5746                                  ac97_stop:
  5747 00002AEA C605[DD770000]02        	mov	byte [stopped], 2
  5748                                  
  5749                                  ac97_po_cmd@:
  5750 00002AF1 30C0                    	xor	al, al ; 0
  5751                                  ac97_po_cmd:
  5752 00002AF3 668B15[D8770000]        	mov     dx, [NABMBAR]
  5753 00002AFA 6683C21B                        add     dx, PO_CR_REG	; PCM out control register
  5754                                  	;out	dx, al
  5755 00002AFE B401                    	mov	ah, 1 ; write port, byte
  5756 00002B00 CD34                    	int	34h
  5757 00002B02 C3                      	retn
  5758                                  
  5759                                  ;-----------------------------------------------------------------------------
  5760                                  ;-----------------------------------------------------------------------------
  5761                                  
  5762                                  	; 10/02/2025
  5763                                  audio_pause:
  5764 00002B03 803D[DA770000]01        	cmp	byte [audio_hardware], 1
  5765 00002B0A 7705                    	ja	short ac97_pause
  5766 00002B0C E94BF9FFFF              	jmp	sb16_pause
  5767                                  
  5768                                  ;-----------------------------------------------------------------------------
  5769                                  
  5770                                  ac97_pause:
  5771 00002B11 C605[DD770000]01        	mov	byte [stopped], 1 ; paused
  5772                                  	;mov	al, 0
  5773                                  	;jmp	short ac97_po_cmd
  5774 00002B18 EBD7                    	jmp	short ac97_po_cmd@
  5775                                  
  5776                                  ;-----------------------------------------------------------------------------
  5777                                  ;-----------------------------------------------------------------------------
  5778                                  
  5779                                  	; 10/02/2025
  5780                                  audio_play:
  5781 00002B1A 803D[DA770000]01        	cmp	byte [audio_hardware], 1
  5782 00002B21 7705                    	ja	short ac97_play
  5783 00002B23 E963F9FFFF              	jmp	sb16_play
  5784                                  
  5785                                  ;-----------------------------------------------------------------------------
  5786                                  
  5787                                  ac97_play: ; continue to play (after pause)
  5788 00002B28 C605[DD770000]00        	mov	byte [stopped], 0
  5789 00002B2F B001                    	mov	al, RPBM
  5790 00002B31 EBC0                    	jmp	short ac97_po_cmd
  5791                                  
  5792                                  ;-----------------------------------------------------------------------------
  5793                                  ;-----------------------------------------------------------------------------
  5794                                  
  5795                                  PORTB		EQU 061h
  5796                                  REFRESH_STATUS	EQU 010h	; Refresh signal status
  5797                                  
  5798                                  	; 10/02/2025
  5799                                  	; 05/02/2025 - ac97play.s
  5800                                  delay_100ms:
  5801 00002B33 51                      	push	ecx
  5802 00002B34 B990010000              	mov	ecx, 400  ; 400*0.25ms
  5803                                  _delay_x_ms:
  5804 00002B39 E804000000              	call	delay1_4ms
  5805 00002B3E E2F9                            loop	_delay_x_ms
  5806 00002B40 59                      	pop	ecx
  5807 00002B41 C3                      	retn
  5808                                  
  5809                                  ;-----------------------------------------------------------------------------
  5810                                  
  5811                                  	; 10/02/2025
  5812                                  delay1_4ms:
  5813 00002B42 50                              push    eax
  5814 00002B43 51                              push    ecx
  5815 00002B44 53                      	push	ebx
  5816 00002B45 52                      	push	edx
  5817 00002B46 B910000000                      mov     ecx, 16		; close enough.
  5818                                  	;in	al, PORTB
  5819 00002B4B 66BA6100                	mov	dx, PORTB
  5820 00002B4F B400                    	mov	ah, 0  ; read port, byte
  5821 00002B51 CD34                    	int	34h
  5822                                  
  5823 00002B53 2410                    	and	al, REFRESH_STATUS
  5824                                  	;mov	ah, al		; Start toggle state
  5825 00002B55 88C3                    	mov	bl, al
  5826 00002B57 09C9                    	or	ecx, ecx
  5827 00002B59 7401                    	jz	short _d4ms1
  5828 00002B5B 41                      	inc	ecx		; Throwaway first toggle
  5829                                  _d4ms1:	
  5830                                  	;in	al, PORTB	; Read system control port
  5831 00002B5C 66BA6100                	mov	dx, PORTB
  5832 00002B60 B400                    	mov	ah, 0  ; read port, byte
  5833 00002B62 CD34                    	int	34h
  5834                                  
  5835 00002B64 2410                    	and	al, REFRESH_STATUS ; Refresh toggles 15.085 microseconds
  5836                                  	;cmp	ah, al
  5837 00002B66 38C3                    	cmp	bl, al
  5838 00002B68 74F2                    	je	short _d4ms1	; Wait for state change
  5839                                  
  5840                                  	;mov	ah, al		; Update with new state
  5841 00002B6A 88C3                    	mov	bl, al
  5842 00002B6C 49                      	dec	ecx
  5843 00002B6D 75ED                    	jnz	short _d4ms1
  5844                                  
  5845 00002B6F 5A                      	pop	edx
  5846 00002B70 5B                              pop	ebx
  5847 00002B71 59                      	pop	ecx
  5848 00002B72 58                              pop	eax
  5849                                  
  5850 00002B73 C3                              retn
  5851                                  
  5852                                  ;-----------------------------------------------------------------------------
  5853                                  
  5854                                  	; 10/02/2025
  5855                                  	; 05/02/2025 - ac97play.s
  5856                                  
  5857                                  ; returns AL = current index value
  5858                                  getCurrentIndex:
  5859 00002B74 668B15[D8770000]        	mov	dx, [NABMBAR]
  5860 00002B7B 6683C214                	add	dx, PO_CIV_REG
  5861                                  	;in	al, dx
  5862 00002B7F B400                    	mov	ah, 0 ; read port, byte
  5863 00002B81 CD34                    	int	34h
  5864                                  uLVI2:
  5865 00002B83 C3                      	retn
  5866                                  
  5867                                  ;-----------------------------------------------------------------------------
  5868                                  
  5869                                  	; 10/02/2025
  5870                                  	; 05/02/2025 - ac97play.s
  5871                                  
  5872                                  updateLVI:
  5873 00002B84 668B15[D8770000]        	mov	dx, [NABMBAR]
  5874 00002B8B 6683C214                	add	dx, PO_CIV_REG
  5875                                  	; (Current Index Value and Last Valid Index value)
  5876                                  	;in	ax, dx
  5877 00002B8F B402                    	mov	ah, 2 ; read port, word
  5878 00002B91 CD34                    	int	34h
  5879                                  
  5880 00002B93 38E0                    	cmp	al, ah ; is current index = last index ?
  5881 00002B95 75EC                    	jne	short uLVI2
  5882                                  
  5883 00002B97 E8D8FFFFFF              	call	getCurrentIndex
  5884                                   
  5885 00002B9C F605[CD770000]01        	test	byte [flags], ENDOFFILE
  5886                                  	;jnz	short uLVI1
  5887 00002BA3 7418                    	jz	short uLVI0  ; 08/11/2023
  5888                                  
  5889 00002BA5 50                      	push	eax
  5890 00002BA6 668B15[D8770000]        	mov	dx, [NABMBAR]
  5891 00002BAD 6683C216                	add	dx, PO_SR_REG  ; PCM out status register
  5892                                  	;in	ax, dx
  5893 00002BB1 B402                    	mov	ah, 2 ; read port, word
  5894 00002BB3 CD34                    	int	34h
  5895                                  
  5896 00002BB5 A803                    	test	al, 3 ; bit 1 = Current Equals Last Valid (CELV)
  5897                                  		      ; (has been processed)
  5898                                  		      ; bit 0 = 1 -> DMA Controller Halted (DCH)
  5899 00002BB7 58                      	pop	eax
  5900 00002BB8 7407                    	jz	short uLVI1
  5901                                  uLVI3:
  5902 00002BBA 31C0                    	xor	eax, eax
  5903                                  	; zf = 1
  5904 00002BBC C3                      	retn
  5905                                  uLVI0:
  5906                                          ; not at the end of the file yet.
  5907 00002BBD FEC8                    	dec	al
  5908 00002BBF 241F                    	and	al, 1Fh
  5909                                  uLVI1:
  5910                                  	;call	setLastValidIndex
  5911                                  ;uLVI2:
  5912                                  	;retn
  5913                                  
  5914                                  ;-----------------------------------------------------------------------------
  5915                                  
  5916                                  	; 10/02/2025
  5917                                  	; 05/02/2025 - ac97play.s
  5918                                  
  5919                                  ;input AL = index # to stop on
  5920                                  setLastValidIndex:
  5921 00002BC1 668B15[D8770000]        	mov	dx, [NABMBAR]
  5922 00002BC8 6683C215                	add	dx, PO_LVI_REG
  5923                                          ;out	dx, al
  5924                                  	; al = data, byte
  5925 00002BCC B401                    	mov	ah, 1 ; write port, byte
  5926 00002BCE CD34                    	int	34h
  5927 00002BD0 C3                      	retn
  5928                                  
  5929                                  ;=============================================================================
  5930                                  ;	Detect (& Enable) Audio Device
  5931                                  ;=============================================================================
  5932                                  
  5933                                  	; 10/02/2025
  5934                                  
  5935                                  detect_audio_device:
  5936                                  
  5937                                  	; check for SB16 at first
  5938 00002BD1 E8EA010000              	call	DetectSB16
  5939 00002BD6 730D                    	jnc	short detected
  5940                                  	
  5941 00002BD8 E80F000000              	call	DetectAC97
  5942 00002BDD 720C                    	jc	short not_detected
  5943                                  
  5944 00002BDF FE05[DA770000]          	inc	byte [audio_hardware] ; 2 = AC'97
  5945                                  detected:
  5946 00002BE5 FE05[DA770000]          	inc	byte [audio_hardware] ; 1 = SB16
  5947                                  	
  5948                                  not_detected:			      ; 0 = none
  5949 00002BEB C3                      	retn
  5950                                  
  5951                                  ;=============================================================================
  5952                                  ;	Detect AC'97 Hardware
  5953                                  ;=============================================================================
  5954                                  
  5955                                  	; 10/02/2025
  5956                                  	; 05/02/2025 - ac97play.s
  5957                                  
  5958                                  DetectAC97:
  5959                                  DetectICH:
  5960 00002BEC BE[682D0000]            	mov	esi, valid_ids	; address of Valid ICH (AC97) Device IDs
  5961 00002BF1 B915000000              	mov	ecx, valid_id_count
  5962                                  pfd_1:
  5963 00002BF6 AD                      	lodsd
  5964 00002BF7 E840000000              	call	pciFindDevice
  5965 00002BFC 7303                    	jnc	short d_ac97_1
  5966 00002BFE E2F6                    	loop	pfd_1
  5967                                  
  5968                                  	;stc
  5969 00002C00 C3                      	retn
  5970                                  
  5971                                  d_ac97_1:
  5972                                  	; eax = BUS/DEV/FN
  5973                                  	;	00000000BBBBBBBBDDDDDFFF00000000
  5974                                  	; edx = DEV/VENDOR
  5975                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
  5976                                  
  5977 00002C01 A3[D2770000]            	mov	[bus_dev_fn], eax
  5978 00002C06 8915[CE770000]          	mov	[dev_vendor], edx
  5979                                  
  5980                                  	; get ICH base address regs for mixer and bus master
  5981                                  
  5982 00002C0C B010                            mov     al, NAMBAR_REG
  5983 00002C0E E8B7000000                      call    pciRegRead16		; read PCI registers 10-11
  5984                                          ;and    dx, IO_ADDR_MASK 	; mask off BIT0
  5985 00002C13 80E2FE                  	and	dl, 0FEh
  5986                                  
  5987 00002C16 668915[D6770000]                mov     [NAMBAR], dx		; save audio mixer base addr
  5988                                  
  5989 00002C1D B014                    	mov     al, NABMBAR_REG
  5990 00002C1F E8A6000000                      call    pciRegRead16
  5991                                          ;and    dx, IO_ADDR_MASK
  5992 00002C24 80E2C0                  	and	dl, 0C0h
  5993                                  
  5994 00002C27 668915[D8770000]                mov     [NABMBAR], dx		; save bus master base addr
  5995                                  
  5996 00002C2E B03C                    	mov	al, AC97_INT_LINE ; Interrupt line register (3Ch)
  5997 00002C30 E88E000000              	call	pciRegRead8
  5998                                  	
  5999 00002C35 8815[CA770000]          	mov	[ac97_int_ln_reg], dl
  6000                                  
  6001                                  	;clc
  6002                                  
  6003 00002C3B C3                      	retn
  6004                                  
  6005                                  ;-----------------------------------------------------------------------------
  6006                                  ;
  6007                                  ;-----------------------------------------------------------------------------
  6008                                  
  6009                                  	; 10/02/2025
  6010                                  	; 05/02/2025 - ac97play.s
  6011                                  
  6012                                  ; --------------------------------------------------------
  6013                                  ; Ref: 27/05/2024 - (TRDOS 386 Kernel) audio.s
  6014                                  ; --------------------------------------------------------
  6015                                  
  6016                                  NOT_PCI32_PCI16	EQU 03FFFFFFFh ; NOT BIT31+BIT30
  6017                                  NOT_BIT31 EQU 7FFFFFFFh
  6018                                  
  6019                                  pciFindDevice:
  6020                                  	; scan through PCI space looking for a device+vendor ID
  6021                                  	;
  6022                                  	; Entry: EAX=Device+Vendor ID
  6023                                  	;
  6024                                  	; Exit: EAX=PCI address if device found
  6025                                  	;	EDX=Device+Vendor ID
  6026                                  	;       CY clear if found, set if not found. EAX invalid if CY set.
  6027                                  	;
  6028                                  	; Destroys: ebx, edi
  6029                                  
  6030                                  
  6031 00002C3C 89C3                    	mov	ebx, eax
  6032 00002C3E BF00000080              	mov	edi, 80000000h
  6033                                  nextPCIdevice:
  6034 00002C43 89F8                    	mov 	eax, edi	; read PCI registers
  6035 00002C45 E88C000000              	call	pciRegRead32
  6036                                  
  6037 00002C4A 39DA                    	cmp	edx, ebx
  6038 00002C4C 7412                    	je	short PCIScanExit ; found
  6039                                  
  6040 00002C4E 81FF00F8FF80            	cmp	edi, 80FFF800h
  6041 00002C54 7308                    	jnb	short pfd_nf	; not found
  6042 00002C56 81C700010000            	add	edi, 100h
  6043 00002C5C EBE5                    	jmp	short nextPCIdevice
  6044                                  pfd_nf:
  6045 00002C5E F9                      	stc
  6046 00002C5F C3                      	retn
  6047                                  PCIScanExit:
  6048                                  	;pushf
  6049 00002C60 B8FFFFFF7F              	mov	eax, NOT_BIT31
  6050 00002C65 21F8                    	and	eax, edi	; return only bus/dev/fn #
  6051 00002C67 C3                      	retn
  6052                                  
  6053                                  ;-----------------------------------------------------------------------------
  6054                                  
  6055                                  	; 10/02/2025
  6056                                  pciRegRead:
  6057                                  	; 8/16/32bit PCI reader
  6058                                  	;
  6059                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  6060                                  	;           BIT30 set if 32 bit access requested
  6061                                  	;           BIT29 set if 16 bit access requested
  6062                                  	;           otherwise defaults to 8 bit read
  6063                                  	;
  6064                                  	; Exit:  DL,DX,EDX register data depending on requested read size
  6065                                  	;
  6066                                  	; Note1: this routine is meant to be called via pciRegRead8,
  6067                                  	;	 pciRegread16 or pciRegRead32, listed below.
  6068                                  	;
  6069                                  	; Note2: don't attempt to read 32 bits of data from a non dword
  6070                                  	;	 aligned reg number. Likewise, don't do 16 bit reads from
  6071                                  	;	 non word aligned reg #
  6072                                  	
  6073 00002C68 53                      	push	ebx
  6074 00002C69 51                      	push	ecx
  6075 00002C6A 89C3                    	mov	ebx, eax		; save eax, dh
  6076 00002C6C 88F1                    	mov     cl, dh
  6077                                  
  6078 00002C6E 25FFFFFF3F              	and     eax, NOT_PCI32_PCI16	; clear out data size request
  6079 00002C73 0D00000080              	or      eax, BIT31		; make a PCI access request
  6080                                  	; (FASM)
  6081                                  	;and	al, NOT 3 ; 0FCh
  6082                                  	; (NASM)
  6083 00002C78 24FC                    	and	al, ~3 ; 0FCh		; force index to be dword
  6084                                  
  6085 00002C7A 66BAF80C                        mov     dx, PCI_INDEX_PORT
  6086                                          ;out	dx, eax			; write PCI selector
  6087 00002C7E 53                      	push	ebx
  6088 00002C7F 89C3                    	mov	ebx, eax ; data, dword
  6089 00002C81 B405                    	mov	ah, 5 ; write port, dword
  6090                                  	; dx = port number
  6091 00002C83 CD34                    	int	34h
  6092 00002C85 5B                      	pop	ebx
  6093                                  	
  6094 00002C86 66BAFC0C                        mov     dx, PCI_DATA_PORT
  6095 00002C8A 88D8                            mov     al, bl
  6096 00002C8C 2403                            and     al, 3			; figure out which port to
  6097 00002C8E 00C2                            add     dl, al			; read to
  6098                                  
  6099 00002C90 F7C3000000C0            	test    ebx, PCI32+PCI16
  6100 00002C96 750A                            jnz     short _pregr0
  6101                                  
  6102                                  	;in	al, dx			; return 8 bits of data
  6103 00002C98 B400                    	mov	ah, 0 ; read port, byte
  6104                                  	; dx = port number
  6105 00002C9A CD34                    	int	34h
  6106                                          
  6107 00002C9C 88C2                    	mov	dl, al
  6108 00002C9E 88CE                    	mov     dh, cl			; restore dh for 8 bit read
  6109 00002CA0 EB17                    	jmp	short _pregr2
  6110                                  _pregr0:	
  6111 00002CA2 F7C300000080            	test    ebx, PCI32
  6112 00002CA8 7509                            jnz	short _pregr1
  6113                                  
  6114                                  	;in	ax, dx
  6115 00002CAA B402                    	mov	ah, 2 ; read port, word
  6116                                  	; dx = port number
  6117 00002CAC CD34                    	int	34h
  6118                                  
  6119 00002CAE 6689C2                  	mov     dx, ax			; return 16 bits of data
  6120 00002CB1 EB06                    	jmp	short _pregr2
  6121                                  _pregr1:
  6122                                  	;in	eax, dx			; return 32 bits of data
  6123 00002CB3 B404                    	mov	ah, 4 ; read port, dword
  6124                                  	; dx = port number
  6125 00002CB5 CD34                    	int	34h
  6126                                  
  6127 00002CB7 89C2                    	mov	edx, eax
  6128                                  _pregr2:
  6129 00002CB9 89D8                    	mov     eax, ebx		; restore eax
  6130 00002CBB 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  6131 00002CC0 59                      	pop	ecx
  6132 00002CC1 5B                      	pop	ebx
  6133 00002CC2 C3                      	retn
  6134                                  
  6135                                  pciRegRead8:
  6136 00002CC3 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 8 bit read size
  6137 00002CC8 EB9E                            jmp     short pciRegRead	; call generic PCI access
  6138                                  
  6139                                  pciRegRead16:
  6140 00002CCA 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 16 bit read size
  6141 00002CCF 0D00000040                      or      eax, PCI16		; call generic PCI access
  6142 00002CD4 EB92                            jmp     short pciRegRead
  6143                                  
  6144                                  pciRegRead32:
  6145 00002CD6 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 32 bit read size
  6146 00002CDB 0D00000080                      or      eax, PCI32		; call generic PCI access
  6147 00002CE0 EB86                            jmp     pciRegRead
  6148                                  
  6149                                  ;-----------------------------------------------------------------------------
  6150                                  
  6151                                  	; 10/02/2025
  6152                                  pciRegWrite:
  6153                                  	; 8/16/32bit PCI writer
  6154                                  	;
  6155                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  6156                                  	;           BIT31 set if 32 bit access requested
  6157                                  	;           BIT30 set if 16 bit access requested
  6158                                  	;           otherwise defaults to 8bit read
  6159                                  	;        DL/DX/EDX data to write depending on size
  6160                                  	;
  6161                                  	; Note1: this routine is meant to be called via pciRegWrite8,
  6162                                  	;	 pciRegWrite16 or pciRegWrite32 as detailed below.
  6163                                  	;
  6164                                  	; Note2: don't attempt to write 32bits of data from a non dword
  6165                                  	;	 aligned reg number. Likewise, don't do 16 bit writes from
  6166                                  	;	 non word aligned reg #
  6167                                  
  6168 00002CE2 53                      	push	ebx
  6169 00002CE3 51                      	push	ecx
  6170 00002CE4 89C3                            mov     ebx, eax		; save eax, edx
  6171 00002CE6 89D1                            mov     ecx, edx
  6172 00002CE8 25FFFFFF3F              	and     eax, NOT_PCI32_PCI16	; clear out data size request
  6173 00002CED 0D00000080                      or      eax, BIT31		; make a PCI access request
  6174                                  	; (FASM)
  6175                                  	;and	al, NOT 3 ; 0FCh
  6176                                  	; (NASM)
  6177 00002CF2 24FC                    	and	al, ~3 ; 0FCh		; force index to be dword
  6178                                  
  6179 00002CF4 66BAF80C                        mov     dx, PCI_INDEX_PORT
  6180                                  	;out	dx, eax			; write PCI selector
  6181 00002CF8 53                      	push	ebx
  6182 00002CF9 89C3                    	mov	ebx, eax ; data, dword
  6183 00002CFB B405                    	mov	ah, 5 ; write port, dword
  6184                                  	; dx = port number
  6185 00002CFD CD34                    	int	34h
  6186 00002CFF 5B                      	pop	ebx
  6187                                  	
  6188 00002D00 66BAFC0C                        mov     dx, PCI_DATA_PORT
  6189 00002D04 88D8                            mov     al, bl
  6190 00002D06 2403                            and     al, 3			; figure out which port to
  6191 00002D08 00C2                            add     dl, al			; write to
  6192                                  
  6193 00002D0A F7C3000000C0            	test    ebx, PCI32+PCI16
  6194 00002D10 7508                            jnz     short _pregw0
  6195 00002D12 88C8                    	mov	al, cl 			; put data into al
  6196                                  	;out	dx, al
  6197                                  	; al = data, byte
  6198 00002D14 B401                    	mov	ah, 1 ; write port, byte
  6199                                  	; dx = port number
  6200 00002D16 CD34                    	int	34h
  6201                                  
  6202 00002D18 EB1F                    	jmp	short _pregw2
  6203                                  _pregw0:
  6204 00002D1A F7C300000080            	test    ebx, PCI32
  6205 00002D20 750D                            jnz     short _pregw1
  6206 00002D22 6689C8                  	mov	ax, cx			; put data into ax
  6207                                  	;out	dx, ax
  6208 00002D25 53                      	push	ebx
  6209 00002D26 89C3                    	mov	ebx, eax ; data, word
  6210 00002D28 B403                    	mov	ah, 3 ; write port, word
  6211                                  	; dx = port number
  6212 00002D2A CD34                    	int	34h
  6213 00002D2C 5B                      	pop	ebx
  6214                                  
  6215 00002D2D EB0A                    	jmp	short _pregw2
  6216                                  _pregw1:
  6217 00002D2F 89C8                    	mov	eax, ecx		; put data into eax
  6218                                  	;out	dx, eax
  6219 00002D31 53                      	push	ebx
  6220 00002D32 89C3                    	mov	ebx, eax ; data, dword
  6221 00002D34 B405                    	mov	ah, 5 ; write port, dword
  6222                                  	; dx = port number
  6223 00002D36 CD34                    	int	34h
  6224 00002D38 5B                      	pop	ebx
  6225                                  _pregw2:
  6226 00002D39 89D8                            mov     eax, ebx		; restore eax
  6227 00002D3B 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  6228 00002D40 89CA                            mov     edx, ecx		; restore dx
  6229 00002D42 59                      	pop	ecx
  6230 00002D43 5B                      	pop	ebx
  6231 00002D44 C3                      	retn
  6232                                  
  6233                                  pciRegWrite8:
  6234 00002D45 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 8 bit write size
  6235 00002D4A EB96                            jmp	short pciRegWrite	; call generic PCI access
  6236                                  
  6237                                  pciRegWrite16:
  6238 00002D4C 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 16 bit write size
  6239 00002D51 0D00000040                      or      eax, PCI16		; call generic PCI access
  6240 00002D56 EB8A                            jmp	short pciRegWrite
  6241                                  
  6242                                  pciRegWrite32:
  6243 00002D58 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 32 bit write size
  6244 00002D5D 0D00000080                      or      eax, PCI32		; call generic PCI access
  6245 00002D62 E97BFFFFFF                      jmp	pciRegWrite
  6246                                  
  6247                                  ;-----------------------------------------------------------------------------
  6248                                  ; ac97.inc (11/11/2023)
  6249                                  ;-----------------------------------------------------------------------------
  6250                                  
  6251                                  ; 10/02/2025
  6252                                  ; 07/02/2025 - twavplay.asm
  6253                                  ; 05/02/2025 - cgaplay.s
  6254                                  
  6255                                  ; special characters
  6256                                  LF      EQU 10
  6257                                  CR      EQU 13
  6258                                  
  6259                                  ; PCI stuff
  6260                                  
  6261                                  BIT0  EQU 1
  6262                                  BIT1  EQU 2
  6263                                  BIT2  EQU 4
  6264                                  BIT8  EQU 100h
  6265                                  BIT9  EQU 200h
  6266                                  BIT28 EQU 10000000h
  6267                                  BIT30 EQU 40000000h
  6268                                  BIT31 EQU 80000000h
  6269                                  
  6270                                  BUP		equ	BIT30		; Buffer Underrun Policy.
  6271                                  					; if this buffer is the last buffer
  6272                                  					; in a playback, fill the remaining
  6273                                  					; samples with 0 (silence) or not.
  6274                                  					; It's a good idea to set this to 1
  6275                                  					; for the last buffer in playback,
  6276                                  					; otherwise you're likely to get a lot
  6277                                  					; of noise at the end of the sound.
  6278                                  
  6279                                  RR		equ	BIT1		; reset registers. Nukes all regs
  6280                                                                          ; except bits 4:2 of this register.
  6281                                                                          ; Only set this bit if BIT 0 is 0
  6282                                  RPBM		equ	BIT0		; Run/Pause
  6283                                  					; set this bit to start the codec!
  6284                                  IO_ENA		EQU	BIT0		; i/o decode enable
  6285                                  BM_ENA		EQU	BIT2		; bus master enable
  6286                                  
  6287                                  PCI_INDEX_PORT  EQU     0CF8h
  6288                                  PCI_DATA_PORT   EQU     0CFCh
  6289                                  PCI32           EQU     BIT31           ; bitflag to signal 32bit access
  6290                                  PCI16           EQU     BIT30           ; bitflag for 16bit access
  6291                                  
  6292                                  AC97_INT_LINE	equ	3Ch		; AC97 Interrupt Line register offset
  6293                                  
  6294                                  ; Intel ICH2 equates. It is assumed that ICH0 and plain ole ICH are compatible.
  6295                                  
  6296                                  INTEL_VID       equ     8086h           ; Intel's PCI vendor ID
  6297                                  ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
  6298                                  SIS_VID		equ	1039h
  6299                                  NVIDIA_VID	equ	10DEh	 ; Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source c.
  6300                                  AMD_VID		equ	1022h
  6301                                  
  6302                                  ICH_DID         equ     2415h           ; ICH device ID
  6303                                  ICH0_DID        equ     2425h           ; ICH0
  6304                                  ICH2_DID        equ     2445h           ; ICH2 I think there are more ICHes.
  6305                                                                          ; they all should be compatible.
  6306                                  
  6307                                  ; 17/02/2017 (Erdogan Tan, ref: ALSA Device IDs, ALSA project)
  6308                                  ICH3_DID	equ     2485h           ; ICH3
  6309                                  ICH4_DID        equ     24C5h           ; ICH4
  6310                                  ICH5_DID	equ     24D5h           ; ICH5
  6311                                  ICH6_DID	equ     266Eh           ; ICH6
  6312                                  ESB6300_DID	equ     25A6h           ; 6300ESB
  6313                                  ESB631X_DID	equ     2698h           ; 631XESB
  6314                                  ICH7_DID	equ	27DEh		; ICH7
  6315                                  ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
  6316                                  MX82440_DID	equ	7195h
  6317                                  SI7012_DID	equ	7012h
  6318                                  NFORCE_DID	equ	01B1h
  6319                                  NFORCE2_DID	equ	006Ah
  6320                                  AMD8111_DID	equ	746Dh
  6321                                  AMD768_DID	equ	7445h
  6322                                  ; 03/11/2023 - Erdogan Tan - Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source code
  6323                                  CK804_DID	equ	0059h
  6324                                  MCP04_DID	equ	003Ah
  6325                                  CK8_DID		equ	008Ah
  6326                                  NFORCE3_DID	equ	00DAh
  6327                                  CK8S_DID	equ	00EAh
  6328                                  
  6329                                  NAMBAR_REG	equ	10h		; native audio mixer BAR
  6330                                  NABMBAR_REG	equ	14h		; native audio bus mastering BAR
  6331                                  
  6332                                  CODEC_MASTER_VOL_REG	equ	02h	; master volume
  6333                                  CODEC_MASTER_TONE_REG	equ	08h	; master tone (R+L)
  6334                                  CODEC_PCM_OUT_REG 	equ	18h     ; PCM output volume
  6335                                  CODEC_EXT_AUDIO_REG	equ	28h	; extended audio
  6336                                  CODEC_EXT_AUDIO_CTRL_REG equ	2Ah	; extended audio control
  6337                                  CODEC_PCM_FRONT_DACRATE_REG equ	2Ch	; PCM out sample rate
  6338                                  
  6339                                  ; ICH supports 3 different types of register sets for three types of things
  6340                                  ; it can do, thus:
  6341                                  ;
  6342                                  ; PCM in (for recording) aka PI
  6343                                  ; PCM out (for playback) aka PO
  6344                                  ; MIC in (for recording) aka MC
  6345                                  
  6346                                  PI_BDBAR_REG	equ	0		; PCM in buffer descriptor BAR
  6347                                  PO_BDBAR_REG	equ	10h		; PCM out buffer descriptor BAR
  6348                                  
  6349                                  GLOB_CNT_REG	equ	2Ch		; Global control register
  6350                                  GLOB_STS_REG 	equ	30h		; Global Status register (RO)
  6351                                  
  6352                                  PI_CR_REG 	equ	0Bh		; PCM in Control Register
  6353                                  PO_CR_REG	equ	1Bh		; PCM out Control Register
  6354                                  MC_CR_REG	equ	2Bh		; MIC in Control Register
  6355                                  
  6356                                  PCI_CMD_REG	EQU	04h		; reg 04h, command register
  6357                                  
  6358                                  CTRL_ST_CREADY		equ	BIT8+BIT9+BIT28 ; Primary Codec Ready
  6359                                  CODEC_REG_POWERDOWN	equ	26h
  6360                                  
  6361                                  PO_CIV_REG	equ	14h		; PCM out current Index value (RO)
  6362                                  PO_LVI_REG	equ	15h		; PCM out Last Valid Index
  6363                                  PO_SR_REG	equ	16h		; PCM out Status register
  6364                                  
  6365                                  BDL_SIZE	equ	32*8		; Buffer Descriptor List size
  6366                                  
  6367                                  ; 07/02/2025 - twavplay.asm
  6368                                  PO_PICB_REG	equ 18h	; PCM Out Position In Current Buffer Register
  6369                                  
  6370                                  ;-----------------------------------------------------------------------------
  6371                                  
  6372                                  ; 06/05/2025
  6373                                  
  6374                                  ; 22/12/2024
  6375 00002D67 90                      align 4
  6376                                  
  6377                                  ; 29/05/2024 (TRDOS 386)
  6378                                  ; 17/02/2017
  6379                                  ; Valid ICH device IDs
  6380                                  
  6381                                  valid_ids:
  6382                                  	;dd (ICH_DID shl 16) + INTEL_VID	; 8086h:2415h
  6383 00002D68 86801524                	dd (ICH_DID << 16) + INTEL_VID		; 8086h:2415h
  6384 00002D6C 86802524                	dd (ICH0_DID << 16) + INTEL_VID		; 8086h:2425h
  6385 00002D70 86804524                	dd (ICH2_DID << 16) + INTEL_VID		; 8086h:2445h
  6386 00002D74 86808524                	dd (ICH3_DID << 16) + INTEL_VID		; 8086h:2485h
  6387 00002D78 8680C524                	dd (ICH4_DID << 16) + INTEL_VID		; 8086h:24C5h
  6388 00002D7C 8680D524                	dd (ICH5_DID << 16) + INTEL_VID		; 8086h:24D5h
  6389 00002D80 86806E26                	dd (ICH6_DID << 16) + INTEL_VID		; 8086h:266Eh
  6390 00002D84 8680A625                	dd (ESB6300_DID << 16) + INTEL_VID	; 8086h:25A6h
  6391 00002D88 86809826                	dd (ESB631X_DID << 16) + INTEL_VID	; 8086h:2698h
  6392 00002D8C 8680DE27                	dd (ICH7_DID << 16) + INTEL_VID		; 8086h:27DEh
  6393                                  	; 03/11/2023 - Erdogan Tan
  6394 00002D90 86809571                	dd (MX82440_DID << 16) + INTEL_VID	; 8086h:7195h
  6395 00002D94 39101270                	dd (SI7012_DID << 16)  + SIS_VID	; 1039h:7012h
  6396 00002D98 DE10B101                	dd (NFORCE_DID << 16)  + NVIDIA_VID	; 10DEh:01B1h
  6397 00002D9C DE106A00                	dd (NFORCE2_DID << 16) + NVIDIA_VID	; 10DEh:006Ah
  6398 00002DA0 22106D74                	dd (AMD8111_DID << 16) + AMD_VID	; 1022h:746Dh
  6399 00002DA4 22104574                	dd (AMD768_DID << 16)  + AMD_VID	; 1022h:7445h
  6400 00002DA8 DE105900                	dd (CK804_DID << 16) + NVIDIA_VID	; 10DEh:0059h
  6401 00002DAC DE103A00                	dd (MCP04_DID << 16) + NVIDIA_VID	; 10DEh:003Ah
  6402 00002DB0 DE108A00                	dd (CK8_DID << 16) + NVIDIA_VID		; 1022h:008Ah
  6403 00002DB4 DE10DA00                	dd (NFORCE3_DID << 16) + NVIDIA_VID	; 10DEh:00DAh
  6404 00002DB8 DE10EA00                	dd (CK8S_DID << 16) + NVIDIA_VID	; 10DEh:00EAh
  6405                                  
  6406                                  valid_id_count equ (($ - valid_ids)>>2)	; 05/11/2023
  6407                                  
  6408 00002DBC 00000000                	dd 0
  6409                                  
  6410                                  ;=============================================================================
  6411                                  ;	Detect Sound Blaster 16 sound card (or compatible hardware)
  6412                                  ;=============================================================================
  6413                                  
  6414                                  	; 10/02/2025
  6415                                  	; 09/02/2025 - twavplay.asm
  6416                                  	; 20/10/2017 - playwav.s
  6417                                  
  6418                                  DetectSB16:
  6419                                  	; Ref: TRDOS 386 Kernel v2.0.9 audio.s (06/06/2024)
  6420                                  	;      DetectSB procedure (06/08/2022, v2.0.5)
  6421                                  ScanPort:
  6422 00002DC0 66BB1002                	mov	bx, 0210h	; start scanning ports
  6423                                  				; 210h, 220h, .. 260h
  6424                                  ResetDSP:
  6425 00002DC4 6689DA                  	mov	dx, bx		; try to reset the DSP.
  6426 00002DC7 80C206                  	add	dl, 06h
  6427                                  
  6428 00002DCA B001                    	mov	al, 1
  6429                                  	;out	dx, al
  6430 00002DCC B401                    	mov	ah, 1 ; outb
  6431 00002DCE CD34                    	int	34h
  6432                                  
  6433                                  	;in	al, dx
  6434                                  	;in	al, dx
  6435                                  	;in	al, dx
  6436                                  	;in	al, dx
  6437                                  
  6438 00002DD0 B400                    	mov	ah, 0 ; inb
  6439 00002DD2 CD34                    	int	34h
  6440                                  	;mov	ah, 0 ; inb
  6441 00002DD4 CD34                    	int	34h
  6442                                  
  6443 00002DD6 30C0                    	xor     al, al
  6444                                  	;out	dx, al
  6445 00002DD8 B401                    	mov	ah, 1 ; outb
  6446 00002DDA CD34                    	int	34h
  6447                                  
  6448                                  	;add     dx, 08h
  6449                                  	; 10/02/2025
  6450 00002DDC 80C208                  	add	dl, 08h
  6451                                  	;mov	cx, 100
  6452 00002DDF 66B92000                	mov	cx, 32
  6453 00002DE3 28E4                    	sub	ah, ah ; 0
  6454                                  WaitID:
  6455                                  	;in	al, dx
  6456 00002DE5 CD34                    	int	34h  ;ah = 0 ; inb
  6457 00002DE7 08C0                    	or      al, al
  6458 00002DE9 7804                    	js      short GetID
  6459 00002DEB E2F8                    	loop    WaitID
  6460 00002DED EB0E                    	jmp     short NextPort
  6461                                  GetID:
  6462                                  	;sub	dx, 04h
  6463                                  	; 10/02/2025
  6464 00002DEF 80EA04                  	sub	dl, 04h
  6465                                  	;in	al, dx
  6466 00002DF2 CD34                    	int	34h  ;ah = 0 ; inb
  6467 00002DF4 3CAA                    	cmp     al, 0AAh
  6468 00002DF6 740F                    	je      short Found
  6469                                  	;add	dx, 04h
  6470                                  	; 10/02/2025
  6471 00002DF8 80C204                  	add	dl, 04h	
  6472 00002DFB E2E8                    	loop    WaitID
  6473                                  NextPort:
  6474                                  	;add	bx, 10h		; if not response,
  6475 00002DFD 80C310                  	add	bl, 10h
  6476                                  	;cmp	bx, 260h	; try the next port.
  6477 00002E00 80FB60                  	cmp	bl, 60h
  6478 00002E03 76BF                    	jbe     short ResetDSP
  6479 00002E05 F9                      	stc
  6480 00002E06 C3                      	retn
  6481                                  Found:
  6482 00002E07 66891D[D6770000]        	mov     [audio_io_base], bx ; SB Port Address Found!
  6483                                  ScanIRQ:
  6484                                  SetIrqs:
  6485 00002E0E 28C0                    	sub 	al, al ; 0
  6486 00002E10 A2[DB770000]            	mov 	[IRQnum], al ; reset
  6487                                  	;mov	[audio_intr], al
  6488                                  
  6489                                  	; ah > 0 -> set IRQ vector
  6490                                  	; al = IRQ number
  6491 00002E15 66B80501                	mov	ax, 105h ; IRQ 5
  6492 00002E19 BA[DF2E0000]            	mov	edx, IRQ5_srb
  6493 00002E1E E872000000              	call	set_hardware_int_vector
  6494                                  
  6495 00002E23 66B80701                	mov	ax, 107h ; IRQ 7
  6496 00002E27 BA[E02E0000]            	mov	edx, IRQ7_srb
  6497 00002E2C E864000000              	call	set_hardware_int_vector
  6498                                  
  6499 00002E31 668B15[D6770000]        	mov     dx, [audio_io_base] ; tells to the SB to
  6500                                  	;add	dx, 0Ch		    ; generate a IRQ!
  6501 00002E38 80C20C                  	add	dl, 0Ch
  6502                                  WaitSb:
  6503                                  	;in	al, dx
  6504 00002E3B B400                    	mov	ah, 0 ; inb
  6505 00002E3D CD34                    	int	34h
  6506 00002E3F 08C0                    	or      al, al
  6507 00002E41 78F8                    	js      short WaitSb
  6508 00002E43 B0F2                    	mov     al, 0F2h
  6509                                  	;out	dx, al
  6510 00002E45 B401                    	mov	ah,1  ; outb
  6511 00002E47 CD34                    	int	34h	
  6512                                  
  6513 00002E49 31C9                    	xor	ecx, ecx	; wait until IRQ level
  6514                                  	;mov	ecx, 65536
  6515                                  WaitIRQ: 
  6516                                  	; 10/02/2025
  6517                                  	;mov	al, [IRQnum]
  6518                                  	;cmp    al, 0 ; is changed or timeout.
  6519                                  	;ja	short IrqOk
  6520 00002E4B A0[DF2E0000]            	mov	al, [IRQ5_srb]
  6521 00002E50 3C05                    	cmp	al, 5
  6522 00002E52 740F                    	je	short IrqOk
  6523 00002E54 A0[E02E0000]            	mov	al, [IRQ7_srb]
  6524 00002E59 3C07                    	cmp	al, 7
  6525 00002E5B 7406                    	je	short IrqOk	
  6526 00002E5D 6649                    	dec	cx
  6527                                  	;dec	ecx
  6528 00002E5F 75EA                    	jnz	short WaitIRQ
  6529 00002E61 EB18                    	jmp	short RestoreIrqs
  6530                                  IrqOk:
  6531                                  	;;;
  6532                                  	; 10/02/2025
  6533 00002E63 A2[DB770000]            	mov	[IRQnum], al
  6534 00002E68 A2[CA770000]            	mov	[audio_intr], al
  6535 00002E6D 668B15[D6770000]        	mov 	dx, [audio_io_base]
  6536                                  	;add	dx, 0Eh
  6537 00002E74 80C20E                  	add	dl, 0Eh ; 8bit DMA-mode int ack
  6538                                  	;in	al, dx
  6539 00002E77 B400                    	mov	ah, 0 ; inb
  6540 00002E79 CD34                    	int	34h
  6541                                  
  6542                                  	; 10/02/2025
  6543                                  	; 16bit DMA mode intr ack is
  6544                                  	; not necessary for initial IRQ scan
  6545                                  %if 0
  6546                                  	inc	edx ; 0Fh ; 16bit DMA-mode int ack
  6547                                  	;in	al, dx	; SB 16 acknowledge.
  6548                                  	;mov	ah, 0 ; inb
  6549                                  	int	34h
  6550                                  %endif
  6551                                  	;;;
  6552                                  	;mov	al, 20h
  6553                                  	;out	20h, al	; Hardware acknowledge.
  6554                                  RestoreIrqs:
  6555                                  	; ah = 0 -> reset IRQ vector
  6556                                  	; al = IRQ number
  6557 00002E7B 66B80500                	mov	ax, 5 ; IRQ 5
  6558 00002E7F E811000000              	call	set_hardware_int_vector
  6559 00002E84 66B80700                	mov	ax, 7 ; IRQ 7
  6560 00002E88 E808000000              	call	set_hardware_int_vector
  6561                                  
  6562 00002E8D 803D[DB770000]01        	cmp     byte [IRQnum], 1 ; IRQ level was changed?
  6563                                  	
  6564 00002E94 C3                      	retn
  6565                                  
  6566                                  ;-----------------------------------------------------------------------------
  6567                                  ;
  6568                                  ;-----------------------------------------------------------------------------
  6569                                  
  6570                                  	; 10/02/2025
  6571                                  	; 20/10/2027 - playwav.s
  6572                                  
  6573                                  	; syscalbac:
  6574                                  	; ----------
  6575                                  	; Link or unlink IRQ callback service to/from user (ring 3)
  6576                                  
  6577                                  	; sycalbac Input: 
  6578                                  	; 	bl = IRQ number
  6579                                  	;	bh = 0 -> reset/unlink
  6580                                  	;	bh = 1 -> set/link
  6581                                  	;	cl = signal response/return byte value (to user)
  6582                                  	;	bh = 3 -> counter (start value is cl+1)
  6583                                  	; 	edx = signal response (return) byte address
  6584                                  	;	      or callback service address
  6585                                  
  6586                                  set_hardware_int_vector:
  6587 00002E95 08E4                    	or	ah, ah
  6588 00002E97 751E                    	jnz	short shintv_1 ; set user's audio interrupt handler
  6589                                  
  6590                                  rhintv_1:		
  6591 00002E99 3C05                    	cmp	al, 5
  6592 00002E9B 750D                    	jne	short rhintv_2
  6593                                  
  6594                                  	; Signal Response Byte 
  6595                                  	sys	_calbac, 5	; unlink IRQ 5
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002E9D BB05000000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002EA2 B82C000000          <1>  mov eax, %1
    96                              <1> 
    97 00002EA7 CD40                <1>  int 40h
  6596                                  
  6597 00002EA9 C3                      	retn
  6598                                  
  6599                                  rhintv_2:
  6600                                  	; al = 7
  6601                                  
  6602                                  	; Signal Response Byte
  6603                                  	sys	_calbac, 7	; unlink IRQ 7
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002EAA BB07000000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002EAF B82C000000          <1>  mov eax, %1
    96                              <1> 
    97 00002EB4 CD40                <1>  int 40h
  6604                                  
  6605 00002EB6 C3                      	retn
  6606                                  
  6607                                  shintv_1:
  6608 00002EB7 3C05                    	cmp	al, 5
  6609 00002EB9 7512                    	jne	short shintv_2
  6610                                  
  6611                                  	; LINK SIGNAL RESPONSE/RETURN BYTE TO REQUESTED IRQ
  6612                                  
  6613                                  	; edx = srb address (IRQnum or IRQ5_srb)
  6614                                  
  6615                                  	sys	_calbac, 105h, 5 ; IRQ 5
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002EBB BB05010000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002EC0 B905000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002EC5 B82C000000          <1>  mov eax, %1
    96                              <1> 
    97 00002ECA CD40                <1>  int 40h
  6616                                  
  6617 00002ECC C3                      	retn
  6618                                  
  6619                                  shintv_2:	
  6620                                  	; al = 7
  6621                                  
  6622                                  	; LINK SIGNAL RESPONSE/RETURN BYTE TO REQUESTED IRQ
  6623                                  
  6624                                  	; edx = srb address (IRQnum or IRQ7_srb)
  6625                                  
  6626                                  	sys	_calbac, 107h, 7 ; IRQ 7
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002ECD BB07010000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002ED2 B907000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002ED7 B82C000000          <1>  mov eax, %1
    96                              <1> 
    97 00002EDC CD40                <1>  int 40h
  6627                                  
  6628 00002EDE C3                      	retn
  6629                                  
  6630                                  ;-----------------------------------------------------------------------------
  6631                                  
  6632                                  	; 10/02/2025
  6633 00002EDF 00                      IRQ5_srb: db 0
  6634 00002EE0 00                      IRQ7_srb: db 0
  6635                                  
  6636                                  ;=============================================================================
  6637                                  ; settextmode - restore the VGA 80x25x16 text mode
  6638                                  ;=============================================================================
  6639                                  	
  6640                                  	; 10/02/2025
  6641                                  settextmode:
  6642 00002EE1 66B80300                	mov	ax, 0003h
  6643                                  	;int	10h
  6644 00002EE5 CD31                    	int	31h ; TRDOS 386 - Video interrupt
  6645 00002EE7 C3                      	retn
  6646                                  	
  6647                                  ;=============================================================================
  6648                                  ; drawscopes - draw wave/voice sample scopes
  6649                                  ;=============================================================================
  6650                                  	
  6651                                  	; 10/02/2025 - twavply3.s
  6652                                  	; 09/02/2025 - twavplay.asm (16bit)
  6653                                  	; 05/02/2025 - twavplay2.s
  6654                                  drawscopes:
  6655 00002EE8 E8C5000000              	call	get_current_sound_data
  6656 00002EED BE[10820000]            	mov	esi, g_buffer
  6657                                  
  6658 00002EF2 31C9                    	xor     ecx, ecx
  6659 00002EF4 31D2                    	xor     edx, edx
  6660 00002EF6 31FF                    	xor	edi, edi
  6661                                  drawscope0:
  6662 00002EF8 66AD                    	lodsw
  6663 00002EFA 80F480                  	xor	ah, 80h
  6664 00002EFD 0FB6DC                  	movzx	ebx, ah	; Left Channel
  6665 00002F00 D1E3                    	shl	ebx, 1
  6666 00002F02 668B83[E0770000]        	mov	ax, [RowOfs+ebx]
  6667 00002F09 668987[E0790000]        	mov	[NewScope_L+edi], ax
  6668 00002F10 30FF                    	xor	bh, bh
  6669 00002F12 66AD                    	lodsw
  6670 00002F14 80F480                  	xor	ah, 80h
  6671 00002F17 88E3                    	mov	bl, ah	; Right Channel
  6672 00002F19 D1E3                    	shl	ebx, 1
  6673 00002F1B 668B83[E0770000]        	mov	ax, [RowOfs+ebx]
  6674 00002F22 668987[E07B0000]        	mov	[NewScope_R+edi], ax
  6675 00002F29 6683C702                	add	di, 2
  6676 00002F2D FEC1                    	inc	cl
  6677 00002F2F 75C7                    	jnz	short drawscope0
  6678                                  
  6679 00002F31 66BAC403                	mov	dx, 3C4h
  6680                                  	;mov	ax, 0802h
  6681                                          ;out	dx, ax
  6682 00002F35 66BB0208                        mov	bx, 0802h
  6683 00002F39 B403                    	mov	ah, 3 ; outw
  6684 00002F3B CD34                    	int	34h
  6685                                  
  6686                                  	;mov	dx, 3CEh
  6687 00002F3D B2CE                    	mov	dl, 0CEh
  6688 00002F3F B008                    	mov	al, 08h
  6689                                         ;out	dx, al
  6690 00002F41 B401                            mov	ah, 1 ; outb
  6691 00002F43 CD34                    	int	34h
  6692                                  
  6693 00002F45 42                      	inc	edx
  6694                                  
  6695 00002F46 31F6                    	xor	esi, esi
  6696 00002F48 BB45060A00              	mov	ebx, 0A0645h
  6697                                  drawscopel4:
  6698 00002F4D B080                    	mov     al, 80h
  6699                                  drawscopel2:
  6700 00002F4F 50                      	push	eax ; **
  6701 00002F50 52                      	push	edx ; *
  6702                                  	;out	dx, al
  6703 00002F51 B401                    	mov	ah, 1 ; outb
  6704 00002F53 CD34                    	int	34h
  6705                                  
  6706                                  	;mov	ecx, 32
  6707 00002F55 B120                    	mov	cl, 32
  6708 00002F57 66B800FF                	mov	ax, 0FF00h
  6709                                  drawscopel3:
  6710 00002F5B 668BBE[E07D0000]                mov	di, [OldScope_L+esi]
  6711 00002F62 668B96[E0790000]        	mov	dx, [NewScope_L+esi]
  6712 00002F69 39D7                            cmp	edi, edx
  6713 00002F6B 740D                            je	short drawscopef3
  6714 00002F6D 88043B                  	mov	[ebx+edi], al ; L
  6715 00002F70 882413                  	mov	[ebx+edx], ah ; L
  6716 00002F73 668996[E07D0000]                mov     [OldScope_L+esi], dx
  6717                                  drawscopef3:
  6718 00002F7A 668BBE[E07F0000]        	mov	di, [OldScope_R+esi]
  6719 00002F81 668B96[E07B0000]        	mov	dx, [NewScope_R+esi]
  6720 00002F88 39D7                    	cmp	edi, edx
  6721 00002F8A 740F                    	je	short drawscopef4
  6722 00002F8C 88443B26                	mov	[ebx+edi+38], al ; R
  6723 00002F90 88641326                	mov	[ebx+edx+38], ah ; R
  6724 00002F94 668996[E07F0000]        	mov     [OldScope_R+esi], dx
  6725                                  drawscopef4:
  6726 00002F9B 83C610                  	add	esi, 2*8
  6727 00002F9E 43                      	inc	ebx
  6728 00002F9F E2BA                    	loop    drawscopel3
  6729                                  
  6730 00002FA1 5A                              pop     edx ; *
  6731 00002FA2 58                              pop     eax ; **
  6732 00002FA3 81EEFE010000            	sub	esi, 2*256-2
  6733 00002FA9 83EB20                  	sub	ebx, 32
  6734 00002FAC D0E8                            shr     al, 1
  6735 00002FAE 759F                            jnz	short drawscopel2
  6736 00002FB0 F8                      	clc
  6737 00002FB1 C3                              retn
  6738                                  
  6739                                  ;=============================================================================
  6740                                  ; Get Current Sound Data
  6741                                  ;=============================================================================
  6742                                  ; Reference: TRDOS 386 v2.0.9 Kernel - audio.s file (28/01/2025)
  6743                                  
  6744                                  	; 10/02/2025 - twavplay.s
  6745                                  	; 08/02/2025 - twavplay.asm (16bit)
  6746                                  
  6747                                  	; !!! 18.2 block/second buffer sizing for proper wave scopes !!!
  6748                                  	; (wave graphics synchronization) 
  6749                                  
  6750                                  get_current_sound_data:
  6751                                  	; get current sound (PCM out) data for graphics
  6752                                  
  6753 00002FB2 BF[10820000]            	mov	edi, g_buffer
  6754                                  
  6755 00002FB7 803D[DA770000]01        	cmp	byte [audio_hardware], 1
  6756 00002FBE 774A                    	ja	short ac97_current_sound_data
  6757                                  
  6758                                  ;-----------------------------------------------------------------------------
  6759                                  	
  6760                                  	; 10/02/2025
  6761                                  	; 08/02/2025 - twavplay.asm (16bit)
  6762                                  
  6763                                  sb16_current_sound_data:
  6764 00002FC0 8B0D[08820000]          	mov	ecx, [g_samples]
  6765                                  	
  6766 00002FC6 803D[6E770000]10        	cmp	byte [WAVE_BitsPerSample], 16
  6767 00002FCD 7512                    	jne	short sb16_gcd_1 ; 8 bit DMA channel
  6768                                  	;in	al, 0C6h ; DMA channel 5 count register
  6769 00002FCF 66BAC600                	mov	dx, 0C6h
  6770 00002FD3 B400                    	mov	ah, 0 ; inb
  6771 00002FD5 CD34                    	int	34h
  6772                                  	; AL = Low Byte of the word count
  6773                                  	;;mov	ah, al
  6774 00002FD7 C1E018                  	shl	eax, 24	; (*)
  6775                                  	;in	al, 0C6h
  6776                                  	;mov	dx, 0C6h
  6777                                  	;mov	ah, 0 ; inb
  6778 00002FDA CD34                    	int	34h
  6779                                  	; AL = High Byte of the word count
  6780                                  	;;xchg	ah, al
  6781                                  	;rol	eax, 8	; (*)
  6782                                  	;shl	ax, 1 ; word count -> byte count
  6783 00002FDC C1C009                  	rol	eax, 9
  6784 00002FDF EB10                    	jmp	short sb16_gcd_2
  6785                                  
  6786                                  sb16_gcd_1:
  6787                                  	;in	al, 03h ; DMA channel 1 count register
  6788 00002FE1 66BA0300                	mov	dx, 03h
  6789 00002FE5 B400                    	mov	ah, 0 ; inb
  6790 00002FE7 CD34                    	int	34h
  6791                                  	; AL = Low Byte of the byte count
  6792                                  	;;mov	ah, al
  6793 00002FE9 C1E018                  	shl	eax, 24	; (**)
  6794                                  	;in	al, 03h
  6795                                  	;mov	dx, 03h
  6796                                  	;mov	ah, 0 ; inb
  6797 00002FEC CD34                    	int	34h
  6798                                  	; AL = High Byte of the byte count
  6799                                  	;;xchg	ah, al
  6800 00002FEE C1C008                  	rol	eax, 8	; (**)
  6801                                  
  6802                                  sb16_gcd_2:
  6803                                  	; eax = remain count
  6804 00002FF1 8B1D[E8810000]          	mov	ebx, [buffersize] ; half buffer size
  6805 00002FF7 39D8                    	cmp	eax, ebx
  6806 00002FF9 7602                    	jna	short sb16_gcd_3 ; 2nd half
  6807 00002FFB 31DB                    	xor	ebx, ebx ; 1st half
  6808                                  sb16_gcd_3:
  6809 00002FFD 8DB3[00000200]          	lea	esi, [dma_buffer+ebx] ; start of 1st half or 2nd half
  6810                                  
  6811                                  	; esi = dma buffer offset
  6812                                  	; ecx = load (source) count
  6813                                  	; edi = g_buffer
  6814                                  
  6815 00003003 66FF25[04820000]        	jmp	word [sound_data_copy]
  6816                                  
  6817                                  ;-----------------------------------------------------------------------------
  6818                                  
  6819                                  	; 10/02/2025
  6820                                  	; 09/02/2025 - twavplay.asm (16bit)
  6821                                  
  6822                                  ac97_current_sound_data:
  6823                                  	;;mov	ecx, 1024 ; always 16bit stereo
  6824                                  	;mov	ecx, 512
  6825 0000300A B900010000              	mov	ecx, 256
  6826                                  
  6827 0000300F 66BA1400                	mov	dx, PO_CIV_REG ; Position In Current Buff Reg
  6828 00003013 660315[D8770000]        	add	dx, [NABMBAR]
  6829                                  	;in	al, dx	; current index value
  6830 0000301A B400                    	mov	ah, 0 ; inb ; read port, byte
  6831 0000301C CD34                    	int	34h
  6832                                  	;mov	ebx, WAV_BUFFER_1
  6833 0000301E BE[00A00000]            	mov	esi, WAV_BUFFER_1
  6834 00003023 A801                    	test	al, 1
  6835 00003025 7405                    	jz	short ac97_gcd_1
  6836                                  	;mov	ebx, WAV_BUFFER_2
  6837 00003027 BE[00D00000]            	mov	esi, WAV_BUFFER_2
  6838                                  ac97_gcd_1:
  6839                                  	;mov	dx, PO_PICB_REG ; Position In Current Buff Reg
  6840                                  	;add	dx, [NABMBAR]
  6841                                  	;;in	ax, dx	; remain words
  6842                                  	;mov	ah, 2 ; inw ; read port, word
  6843                                  	;int	34h
  6844                                  	;;shl	eax, 1	; remain bytes
  6845                                  ac97_gcd_2:
  6846                                  	;xor	esi, esi ; 1st half
  6847                                  ac97_gcd_3:
  6848                                  	;mov	esi, [buffersize] ; 16 bit sample count
  6849                                  	;sub	esi, eax
  6850                                  	;shl	esi, 1 ; byte offset
  6851                                  
  6852                                  	; esi = 0, start of the wave/pcm data (dma) buffer
  6853                                  	; (buffer size is adjusted for playing in 1/18.2 second) 
  6854                                  
  6855                                  	;add	esi, ebx
  6856                                  
  6857                                  	; ds:si = dma buffer offset
  6858                                  	; cx = load (source) count
  6859                                  	; es:di = g_buffer
  6860                                  
  6861                                  	; AC97 dma buffer contains 16bit stereo samples (only)
  6862                                  	; copy samples to g_buffer
  6863                                  
  6864                                  	;shr	ecx, 1
  6865                                  	;rep	movsw
  6866                                  
  6867                                  	;shr	ecx, 2
  6868 0000302C F3A5                    	rep	movsd
  6869                                  
  6870 0000302E C3                      	retn
  6871                                  
  6872                                  ;-----------------------------------------------------------------------------
  6873                                  
  6874                                  	; 10/02/2025
  6875                                  	; 09/02/2025 - twavplay.asm (16bit)
  6876                                  sdc_16bit_stereo:
  6877                                  	; esi = dma buffer offset
  6878                                  	; ecx = load (source) count = 1024
  6879                                  	; edi = g_buffer
  6880                                  	;shr	ecx, 1
  6881                                  	;rep	movsw
  6882 0000302F C1E902                  	shr	ecx, 2
  6883 00003032 F3A5                    	rep	movsd
  6884 00003034 C3                      	retn
  6885                                  
  6886                                  ;-----------------------------------------------------------------------------
  6887                                  
  6888                                  	; 10/02/2025
  6889                                  	; 09/02/2025 - twavplay.asm (16bit)
  6890                                  sdc_16bit_mono:
  6891                                  	; esi = dma buffer offset
  6892                                  	; ecx = load (source) count = 512
  6893                                  	; edi = g_buffer
  6894 00003035 D1E9                    	shr	ecx, 1
  6895                                  sdc_16bm_loop:
  6896 00003037 66AD                    	lodsw
  6897 00003039 66AB                    	stosw
  6898 0000303B 66AB                    	stosw
  6899 0000303D E2F8                    	loop	sdc_16bm_loop
  6900 0000303F C3                      	retn
  6901                                  
  6902                                  ;-----------------------------------------------------------------------------
  6903                                  
  6904                                  	; 10/02/2025
  6905                                  	; 09/02/2025 - twavplay.asm (16bit)
  6906                                  sdc_8bit_stereo:
  6907                                  	; esi = dma buffer offset
  6908                                  	; ecx = load (source) count = 512
  6909                                  	; edi = g_buffer
  6910                                  
  6911                                  	; convert to 16 bit sample
  6912                                  sdc_8bs_loop:
  6913 00003040 AC                      	lodsb
  6914 00003041 2C80                    	sub	al, 80h ; middle = 0, min = -128, max = 127
  6915 00003043 66C1E008                	shl	ax, 8
  6916 00003047 66AB                    	stosw
  6917 00003049 E2F5                    	loop	sdc_8bs_loop
  6918 0000304B C3                      	retn
  6919                                  
  6920                                  ;-----------------------------------------------------------------------------
  6921                                  
  6922                                  	; 10/02/2025
  6923                                  	; 09/02/2025 - twavplay.asm (16bit
  6924                                  sdc_8bit_mono:
  6925                                  	; si = dma buffer offset
  6926                                  	; cx = load (source) count = 256
  6927                                  	; di = g_buffer
  6928                                  
  6929                                  	; convert to 16 bit sample
  6930                                  sdc_8bm_loop:
  6931 0000304C AC                      	lodsb
  6932 0000304D 2C80                    	sub	al, 80h ; middle = 0, min = -128, max = 127
  6933 0000304F 66C1E008                	shl	ax, 8
  6934 00003053 66AB                    	stosw	; L
  6935                                  	; convert to stereo
  6936 00003055 66AB                    	stosw	; R
  6937 00003057 E2F3                    	loop	sdc_8bm_loop
  6938 00003059 C3                      	retn
  6939                                  
  6940                                  ;-----------------------------------------------------------------------------
  6941                                  
  6942                                  ;=============================================================================
  6943                                  ;	Load IFF/ILBM files for VGA 640x480x16 graphics mode
  6944                                  ;=============================================================================
  6945                                  
  6946                                  ; EX1B.ASM (21/6/1994, Carlos Hasan; MSDOS, 'RUNME.EXE', 'TNYPL211')
  6947                                  
  6948                                  ; 21/10/2017 (TRDOS 386, 'tmodplay.s', Erdogan Tan, NASM syntax)
  6949                                  
  6950                                  ;-----------------------------------------------------------------------------
  6951                                  ; EQUATES AND STRUCTURES
  6952                                  ;-----------------------------------------------------------------------------
  6953                                  
  6954                                  ID_FORM equ 4D524F46h		; IFF/ILBM chunk IDs
  6955                                  ID_ILBM equ 4D424C49h
  6956                                  ID_BMHD equ 44484D42h
  6957                                  ID_CMAP equ 50414D43h
  6958                                  ID_BODY equ 59444F42h
  6959                                  
  6960                                  struc Form			; IFF/ILBM header file format
  6961 00000000 ????????                  .ID:		resd 1
  6962 00000004 ????????                  .Length:	resd 1
  6963 00000008 ????????                  .Type:	resd 1
  6964                                    .size:
  6965                                  endstruc
  6966                                  
  6967                                  struc Chunk			; IFF/ILBM header chunk format
  6968 00000000 ????????                  .ID:		resd 1
  6969 00000004 ????????                  .Length:	resd 1
  6970                                    .size:
  6971                                  endstruc
  6972                                  
  6973                                  struc BMHD			; IFF/ILBM BMHD chunk format
  6974 00000000 ????                      .Width: 	resw 1
  6975 00000002 ????                      .Height:	resw 1
  6976 00000004 ????                      .PosX:	resw 1
  6977 00000006 ????                      .PosY:	resw 1
  6978 00000008 ??                        .Planes:	resb 1
  6979 00000009 ??                        .Masking:	resb 1
  6980 0000000A ??                        .Compression:	resb 1
  6981 0000000B ??                        .Pad:		resb 1
  6982 0000000C ????                      .Transparent:	resw 1
  6983 0000000E ??                        .AspectX	resb 1
  6984 0000000F ??                        .AspectY:	resb 1
  6985 00000010 ????                      .PageWidth:	resw 1
  6986 00000012 ????                      .PageHeight:	resw 1
  6987                                    .size:
  6988                                  endstruc
  6989                                  
  6990                                  struc CMAP			; IFF/ILBM CMAP chunk format
  6991 00000000 <res 300h>                .Colors:	resb 768
  6992                                    .size:
  6993                                  endstruc
  6994                                  
  6995                                  ;------------------------------------------------------------------------------
  6996                                  ; bswap - macro to reverse the byte order of a 32-bit register, converting
  6997                                  ;         a value in little/big endian form to big/little endian form.
  6998                                  ;------------------------------------------------------------------------------
  6999                                  
  7000                                  %macro	bswap   1
  7001                                  	xchg    al, ah
  7002                                  	rol     eax, 16
  7003                                  	xchg    al, ah
  7004                                  %endmacro
  7005                                  
  7006                                  ;------------------------------------------------------------------------------
  7007                                  ; putlbm - draw the IFF/ILBM picture on VGA 640x480x16 graphics mode
  7008                                  ; In:
  7009                                  ;  ESI = IFF/ILBM image file address
  7010                                  ;------------------------------------------------------------------------------
  7011                                  
  7012                                  	; 10/02/2025
  7013                                  	; 05/02/2025 - twavply2.s
  7014                                  
  7015                                  putlbm:
  7016 0000305A BE[56310000]            	mov	esi, LOGO_ADDRESS
  7017                                  	
  7018                                  	;pushad
  7019                                  
  7020                                  ; check if this is a valid IFF/ILBM Deluxe Paint file
  7021                                  
  7022                                  	;cmp	dword [esi+Form.ID], ID_FORM
  7023                                  	;jne	short putlbmd0
  7024                                  	;cmp	dword [esi+Form.Type], ID_ILBM
  7025                                  	;jne	short putlbmd0
  7026                                  
  7027                                  ; get the IFF/ILBM file length in bytes
  7028                                  
  7029 0000305F 8B4604                  	mov	eax, [esi+Form.Length]
  7030                                  	bswap	eax
  7001 00003062 86E0                <1>  xchg al, ah
  7002 00003064 C1C010              <1>  rol eax, 16
  7003 00003067 86E0                <1>  xchg al, ah
  7031 00003069 89C1                    	mov	ecx, eax
  7032                                  
  7033                                  ; decrease the file length and updates the file pointer
  7034                                  
  7035 0000306B 83E904                  	sub	ecx, 4
  7036 0000306E 83C60C                  	add	esi, Form.size
  7037                                  
  7038                                  ; IFF/ILBM main parser body loop
  7039                                  
  7040                                  putlbml0:
  7041 00003071 85C9                    	test	ecx, ecx
  7042 00003073 7E63                    	jle	short putlbmd1
  7043                                  
  7044                                  ; get the next chunk ID and length in bytes
  7045                                  
  7046 00003075 8B1E                    	mov	ebx, [esi+Chunk.ID]
  7047 00003077 8B4604                  	mov	eax, [esi+Chunk.Length]
  7048                                  	bswap	eax
  7001 0000307A 86E0                <1>  xchg al, ah
  7002 0000307C C1C010              <1>  rol eax, 16
  7003 0000307F 86E0                <1>  xchg al, ah
  7049 00003081 93                      	xchg	ebx, eax
  7050 00003082 83C608                  	add	esi, Chunk.size
  7051                                  
  7052                                  ; word align the chunk length and decrease the file length counter
  7053                                  
  7054 00003085 43                      	inc	ebx
  7055 00003086 80E3FE                  	and	bl, 0FEh ; ~1
  7056 00003089 83E908                  	sub	ecx, Chunk.size
  7057 0000308C 29D9                    	sub	ecx, ebx
  7058                                  
  7059                                  ; check for the BMHD/CMAP/BODY chunk headers
  7060                                  
  7061 0000308E 3D424D4844              	cmp	eax, ID_BMHD
  7062 00003093 7414                    	je	short putlbmf0
  7063 00003095 3D434D4150              	cmp	eax, ID_CMAP
  7064 0000309A 743E                    	je	short putlbmf1
  7065 0000309C 3D424F4459              	cmp	eax, ID_BODY
  7066 000030A1 7452                    	je	short putlbmf2
  7067                                  
  7068                                  ; advance to the next IFF/ILBM chunk structure
  7069                                  
  7070                                  putlbmc0:
  7071 000030A3 01DE                    	add	esi, ebx
  7072 000030A5 EBCA                    	jmp	short putlbml0
  7073                                  
  7074                                  putlbmd0:
  7075 000030A7 F9                      	stc
  7076                                  	;popad
  7077 000030A8 C3                      	retn
  7078                                  
  7079                                  ; process the BMHD bitmap header chunk
  7080                                  
  7081                                  putlbmf0:
  7082 000030A9 807E0804                	cmp	byte [esi+BMHD.Planes], 4
  7083 000030AD 75F8                    	jne	short putlbmd0
  7084 000030AF 807E0A01                	cmp	byte [esi+BMHD.Compression], 1
  7085 000030B3 75F2                    	jne	short putlbmd0
  7086 000030B5 807E0B00                	cmp	byte [esi+BMHD.Pad], 0
  7087 000030B9 75EC                    	jne	short putlbmd0
  7088 000030BB 0FB706                  	movzx	eax, word [esi+BMHD.Width]
  7089 000030BE 86E0                    	xchg	al, ah
  7090 000030C0 83C007                  	add	eax, 7
  7091 000030C3 C1E803                  	shr	eax, 3
  7092 000030C6 A3[44770000]            	mov	[picture.width], eax
  7093 000030CB 0FB74602                	movzx	eax, word [esi+BMHD.Height]
  7094 000030CF 86E0                    	xchg	al, ah
  7095 000030D1 A3[48770000]            	mov	[picture.height], eax
  7096 000030D6 EBCB                    	jmp	short putlbmc0
  7097                                  
  7098                                  putlbmd1:
  7099 000030D8 F8                      	clc
  7100                                  	;popad
  7101 000030D9 C3                      	retn
  7102                                  
  7103                                  ; process the CMAP colormap chunk
  7104                                  
  7105                                  putlbmf1:
  7106 000030DA 66BAC803                	mov	dx, 3C8h
  7107 000030DE 30C0                    	xor	al, al
  7108                                  	;out	dx, al
  7109 000030E0 B401                    	mov	ah, 1 ; outb
  7110 000030E2 CD34                    	int	34h
  7111                                  	;inc	dx
  7112 000030E4 42                      	inc	edx
  7113                                  putlbml1:
  7114 000030E5 8A06                    	mov	al, [esi]
  7115 000030E7 C0E802                  	shr	al, 2
  7116                                  	;out	dx, al
  7117                                  	;mov	ah, 1 ; outb
  7118 000030EA CD34                    	int	34h ; IOCTL interrupt (IN/OUT)
  7119 000030EC 46                      	inc	esi
  7120 000030ED 4B                      	dec	ebx
  7121 000030EE 7FF5                    	jg	short putlbml1
  7122 000030F0 E97CFFFFFF              	jmp	putlbml0
  7123                                  
  7124                                  ; process the BODY bitmap body chunk
  7125                                  
  7126                                  putlbmf2:
  7127 000030F5 60                      	pushad
  7128 000030F6 BF00000A00              	mov	edi, 0A0000h
  7129                                  	;cld
  7130 000030FB 66BACE03                	mov	dx, 3CEh
  7131                                  	;mov	ax, 0FF08h
  7132                                  	;out	dx, ax
  7133 000030FF 66BB08FF                	mov	bx, 0FF08h
  7134 00003103 B403                    	mov	ah, 3 ; outw
  7135 00003105 CD34                    	int	34h ; IOCTL interrupt (IN/OUT)
  7136                                  	;mov	dx, 3C4h
  7137 00003107 B2C4                    	mov	dl, 0C4h
  7138 00003109 B002                    	mov	al, 02h
  7139                                  	;out	dx, al
  7140 0000310B B401                    	mov	ah, 1 ; outb
  7141 0000310D CD34                    	int	34h ; IOCTL interrupt (IN/OUT)
  7142                                  	;inc	dx
  7143 0000310F 42                      	inc	edx
  7144 00003110 8B0D[48770000]          	mov	ecx, [picture.height]
  7145                                  putlbml2:
  7146 00003116 51                      	push	ecx
  7147 00003117 B011                    	mov	al, 11h
  7148                                  putlbml3:
  7149 00003119 50                      	push	eax
  7150 0000311A 57                      	push	edi
  7151                                  	;out	dx, al
  7152 0000311B B401                    	mov	ah, 1 ; outb
  7153 0000311D CD34                    	int	34h ; IOCTL interrupt (IN/OUT)
  7154 0000311F 8B1D[44770000]          	mov	ebx, [picture.width]
  7155                                  putlbml4:
  7156 00003125 AC                      	lodsb
  7157 00003126 31C9                    	xor	ecx, ecx
  7158 00003128 84C0                    	test	al, al
  7159 0000312A 7C09                    	jl	short putlbmf3
  7160                                  	;movzx	ecx, al
  7161 0000312C 88C1                    	mov	cl, al
  7162 0000312E 41                      	inc	ecx
  7163 0000312F 29CB                    	sub	ebx, ecx
  7164 00003131 F3A4                    	rep	movsb
  7165 00003133 EB0A                    	jmp	short putlbmc4
  7166                                  putlbmf3:
  7167 00003135 F6D8                    	neg	al
  7168                                  	;movzx	ecx, al
  7169 00003137 88C1                    	mov	cl, al
  7170 00003139 41                      	inc	ecx
  7171 0000313A 29CB                    	sub	ebx, ecx
  7172 0000313C AC                      	lodsb
  7173 0000313D F3AA                    	rep	stosb
  7174                                  putlbmc4:
  7175 0000313F 85DB                    	test	ebx, ebx
  7176 00003141 7FE2                    	jg	short putlbml4
  7177 00003143 5F                      	pop	edi
  7178 00003144 58                      	pop	eax
  7179 00003145 00C0                    	add	al, al
  7180 00003147 73D0                    	jnc	short putlbml3
  7181 00003149 83C750                  	add	edi, 80
  7182 0000314C 59                      	pop	ecx
  7183 0000314D E2C7                    	loop	putlbml2
  7184 0000314F 61                      	popad
  7185 00003150 E94EFFFFFF              	jmp	putlbmc0
  7186                                  
  7187                                  ;------------------------------------------------------------------------------
  7188                                  ;------------------------------------------------------------------------------
  7189                                  
  7190 00003155 90                      align 2
  7191                                  
  7192                                  ; 22/10/2017
  7193                                  LOGO_ADDRESS:
  7194                                  ; 27/10/2017
  7195 00003156 <bin 4298h>             incbin "TINYPLAY.LBM"
  7196                                  
  7197                                  ;=============================================================================
  7198                                  ;		preinitialized data
  7199                                  ;=============================================================================
  7200                                  	
  7201 000073EE 00                      		db 0
  7202 000073EF FFFFFFFF                FileHandle:	dd -1
  7203 000073F3 00                      		db 0
  7204                                  
  7205 000073F4 54696E792057415620-     Credits:	db 'Tiny WAV Player for TRDOS 386 by Erdogan Tan. '
  7205 000073FD 506C6179657220666F-
  7205 00007406 72205452444F532033-
  7205 0000740F 383620627920457264-
  7205 00007418 6F67616E2054616E2E-
  7205 00007421 20                 
  7206 00007422 466562727561727920-     		db 'February 2025.',10,13,0
  7206 0000742B 323032352E0A0D00   
  7207 00007433 30392F30322F323032-     		db '09/02/2025',10,13
  7207 0000743C 350A0D             
  7208 0000743F 00                      reset:		db 0
  7209                                  
  7210 00007440 0A0D                    msg_usage:	db 10,13
  7211 00007442 75736167653A207477-     		db 'usage: twavplay filename.wav',10,13,0
  7211 0000744B 6176706C6179206669-
  7211 00007454 6C656E616D652E7761-
  7211 0000745D 760A0D00           
  7212                                  
  7213 00007461 0A0D                    noDevMsg:	db 10,13
  7214 00007463 4572726F723A20556E-     		db 'Error: Unable to find a proper audio device !'
  7214 0000746C 61626C6520746F2066-
  7214 00007475 696E6420612070726F-
  7214 0000747E 70657220617564696F-
  7214 00007487 206465766963652021 
  7215 00007490 0A0D00                  		db 10,13,0
  7216                                  
  7217 00007493 0A0D                    noFileErrMsg:	db 10,13
  7218 00007495 4572726F723A206669-     		db 'Error: file not found.',10,13,0
  7218 0000749E 6C65206E6F7420666F-
  7218 000074A7 756E642E0A0D00     
  7219                                  
  7220 000074AE 0A0D                    not_valid_wavf:	db 10,13
  7221 000074B0 4E6F7420612070726F-     		db 'Not a proper/valid WAV file !',10,13,0
  7221 000074B9 7065722F76616C6964-
  7221 000074C2 205741562066696C65-
  7221 000074CB 20210A0D00         
  7222                                  
  7223                                  		; 08/02/2025
  7224                                  sb16_init_err_msg:
  7225 000074D0 0A0D                    		db 10,13
  7226 000074D2 536F756E6420426C61-     		db 'Sound Blaster 16 initialization error !',10,13,0
  7226 000074DB 737465722031362069-
  7226 000074E4 6E697469616C697A61-
  7226 000074ED 74696F6E206572726F-
  7226 000074F6 7220210A0D00       
  7227                                  ac97_init_err_msg:
  7228 000074FC 0A0D                    		db 10,13
  7229 000074FE 414339372068617264-     		db 'AC97 hardware initialization error !',10,13,0
  7229 00007507 7761726520696E6974-
  7229 00007510 69616C697A6174696F-
  7229 00007519 6E206572726F722021-
  7229 00007522 0A0D00             
  7230                                  		
  7231                                  ;init_err_msg:	;db 10,13
  7232                                  		;db 'Audio system initialization error !',10,13,0
  7233                                  
  7234 00007525 0A0D                    msg_no_vra:	db 10,13
  7235 00007527 4E6F20565241207375-     		db "No VRA support ! Only 48 kHZ sample rate supported !"
  7235 00007530 70706F72742021204F-
  7235 00007539 6E6C79203438206B48-
  7235 00007542 5A2073616D706C6520-
  7235 0000754B 726174652073757070-
  7235 00007554 6F727465642021     
  7236 0000755B 0A0D00                  		db 10,13,0
  7237                                  
  7238                                  trdos386_err_msg:
  7239 0000755E 0A0D                    		db 10,13
  7240 00007560 5452444F5320333836-     		db 'TRDOS 386 System call error !',10,13,0
  7240 00007569 2053797374656D2063-
  7240 00007572 616C6C206572726F72-
  7240 0000757B 20210A0D00         
  7241                                  
  7242 00007580 303132333435363738-     hex_chars:	db "0123456789ABCDEF", 0
  7242 00007589 3941424344454600   
  7243                                  
  7244 00007591 0D0A                    msgAC97Info:	db 0Dh, 0Ah
  7245 00007593 414339372041756469-     		db "AC97 Audio Controller & Codec Info", 0Dh, 0Ah
  7245 0000759C 6F20436F6E74726F6C-
  7245 000075A5 6C6572202620436F64-
  7245 000075AE 656320496E666F0D0A 
  7246 000075B7 56656E646F72204944-     		db "Vendor ID: "
  7246 000075C0 3A20               
  7247 000075C2 303030306820446576-     msgVendorId:	db "0000h Device ID: "
  7247 000075CB 6963652049443A20   
  7248 000075D3 30303030680D0A          msgDevId:	db "0000h", 0Dh, 0Ah
  7249 000075DA 4275733A20              		db "Bus: "
  7250 000075DF 303068204465766963-     msgBusNo:	db "00h Device: "
  7250 000075E8 653A20             
  7251 000075EB 3030682046756E6374-     msgDevNo:	db "00h Function: "
  7251 000075F4 696F6E3A20         
  7252 000075F9 303068                  msgFncNo:	db "00h"
  7253 000075FC 0D0A                    		db 0Dh, 0Ah
  7254                                  
  7255 000075FE 4E414D4241523A20        		db "NAMBAR: "
  7256 00007606 30303030682020          msgNamBar:	db "0000h  "
  7257 0000760D 4E41424D4241523A20      		db "NABMBAR: "
  7258 00007616 303030306820204952-     msgNabmBar:	db "0000h  IRQ: "
  7258 0000761F 513A20             
  7259 00007622 3030                    msgIRQ:		dw 3030h
  7260 00007624 0D0A00                  		db 0Dh, 0Ah, 0
  7261                                  
  7262 00007627 0D0A5741562046696C-     msgWavFileName:	db 0Dh, 0Ah, "WAV File Name: ",0
  7262 00007630 65204E616D653A2000 
  7263 00007639 0D0A53616D706C6520-     msgSampleRate:	db 0Dh, 0Ah, "Sample Rate: "
  7263 00007642 526174653A20       
  7264 00007648 303030303020487A2C-     msgHertz:	db "00000 Hz, ", 0 
  7264 00007651 2000               
  7265 00007653 3820626974732C2000      msg8Bits:	db "8 bits, ", 0 
  7266 0000765C 4D6F6E6F0D0A00          msgMono:	db "Mono", 0Dh, 0Ah, 0
  7267 00007663 313620626974732C20-     msg16Bits:	db "16 bits, ", 0
  7267 0000766C 00                 
  7268 0000766D 53746572656F            msgStereo:	db "Stereo"
  7269 00007673 0D0A00                  nextline:	db 0Dh, 0Ah, 0
  7270                                  
  7271 00007676 56524120737570706F-     msgVRAheader:	db "VRA support: "
  7271 0000767F 72743A20           
  7272 00007683 00                      		db 0	
  7273 00007684 5945530D0A00            msgVRAyes:	db "YES", 0Dh, 0Ah, 0
  7274 0000768A 4E4F200D0A              msgVRAno:	db "NO ", 0Dh, 0Ah
  7275 0000768F 28496E746572706F6C-     		db "(Interpolated sample rate playing method)"
  7275 00007698 617465642073616D70-
  7275 000076A1 6C6520726174652070-
  7275 000076AA 6C6179696E67206D65-
  7275 000076B3 74686F6429         
  7276 000076B8 0D0A00                  		db 0Dh, 0Ah, 0
  7277                                  
  7278 000076BB 0D0A                    msgSB16Info:	db 0Dh, 0Ah
  7279 000076BD 20417564696F204861-     		db " Audio Hardware: Sound Blaster 16", 0Dh, 0Ah
  7279 000076C6 7264776172653A2053-
  7279 000076CF 6F756E6420426C6173-
  7279 000076D8 7465722031360D0A   
  7280 000076E0 202020202020426173-     		db "      Base Port: "
  7280 000076E9 6520506F72743A20   
  7281                                  msgBasePort:
  7282 000076F1 303030680D0A            		db "000h", 0Dh, 0Ah
  7283 000076F7 202020202020202020-     		db "            IRQ: "
  7283 00007700 2020204952513A20   
  7284                                  msgSB16IRQ:
  7285 00007708 30                      		db 30h
  7286 00007709 0D0A00                  		db 0Dh, 0Ah, 0
  7287                                  
  7288                                  ; 07/02/2025
  7289 0000770C 0D0A                    msgPressAKey:	db 0Dh, 0Ah
  7290 0000770E 202E2E2E2070726573-     		db ' ... press a key to continue ... '
  7290 00007717 732061206B65792074-
  7290 00007720 6F20636F6E74696E75-
  7290 00007729 65202E2E2E20       
  7291 0000772F 0D0A00                  		db 0Dh, 0Ah, 0
  7292                                  
  7293                                  ; 07/02/2025
  7294 00007732 01                      half_buffer:	db 1
  7295                                  
  7296 00007733 2E2E20565241204F4B-     vra_ok:		db '.. VRA OK ..', 0Dh, 0Ah,0
  7296 0000773C 202E2E0D0A00       
  7297                                  
  7298                                  ;=============================================================================
  7299                                  ;		uninitialized data
  7300                                  ;=============================================================================
  7301                                  
  7302                                  ; 10/02/2025
  7303                                  ; 09/02/2025
  7304                                  
  7305                                  ; BSS
  7306                                  
  7307                                  bss_start:
  7308                                  
  7309                                  ABSOLUTE bss_start
  7310                                  
  7311 00007742 ????                    alignb 4
  7312                                  
  7313                                  ;------------------------------------------------------------------------------
  7314                                  ; IFF/ILBM DATA
  7315                                  ;------------------------------------------------------------------------------
  7316                                  
  7317 00007744 ????????                picture.width:	resd 1 	; current picture width and height
  7318 00007748 ????????                picture.height:	resd 1
  7319                                  
  7320                                  ;------------------------------------------------------------------------------
  7321                                  
  7322                                  ;;;;;;;
  7323                                  WAVFILEHEADERbuff:
  7324 0000774C ????????                RIFF_ChunkID:	resd 1	; Must be equal to "RIFF" - big-endian
  7325                                  			; 0x52494646
  7326 00007750 ????????                RIFF_ChunkSize: resd 1	; Represents total file size, not
  7327                                          		; including the first 2 fields
  7328                                  			; (Total_File_Size - 8), little-endian
  7329 00007754 ????????                RIFF_Format:	resd 1	; Must be equal to "WAVE" - big-endian
  7330                                  			; 0x57415645
  7331                                  
  7332                                  ;; WAVE header parameters ("Sub-chunk")
  7333                                  WAVE_SubchunkID:
  7334 00007758 ????????                		resd 1	; Must be equal to "fmt " - big-endian
  7335                                  			; 0x666d7420
  7336                                  WAVE_SubchunkSize:
  7337 0000775C ????????                		resd 1	; Represents total chunk size
  7338                                  WAVE_AudioFormat:
  7339 00007760 ????                    		resw 1	; PCM (Raw) - is 1, other - is a form
  7340                                  			; of compression, not supported.
  7341                                  WAVE_NumChannels:
  7342 00007762 ????                    		resw 1	; Number of channels, Mono-1, Stereo-2
  7343                                  WAVE_SampleRate:
  7344 00007764 ????????                		resd 1	; Frequency rate, in Hz (8000, 44100 ...)
  7345 00007768 ????????                WAVE_ByteRate:	resd 1	; SampleRate * NumChannels * BytesPerSample
  7346                                  WAVE_BlockAlign:
  7347 0000776C ????                    		resw 1	; NumChannels * BytesPerSample
  7348                                  			; Number of bytes for one sample.
  7349                                  WAVE_BitsPerSample:
  7350 0000776E ????                    		resw 1	; 8 = 8 bits, 16 = 16 bits, etc.
  7351                                  
  7352                                  ;; DATA header parameters
  7353                                  DATA_SubchunkID:
  7354 00007770 ????????                		resd 1	; Must be equal to "data" - big-endian
  7355                                          		; 0x64617461
  7356                                  DATA_SubchunkSize:
  7357 00007774 ????????                		resd 1	; NumSamples * NumChannels * BytesPerSample
  7358                                          		; Number of bytes in the data.
  7359                                  ;;;;;;;
  7360                                  
  7361                                  ;------------------------------------------------------------------------------
  7362                                  
  7363 00007778 <res 50h>               wav_file_name:	resb 80 ; wave file, path name (<= 80 bytes)
  7364                                  
  7365 000077C8 ????                    		resw 1
  7366                                  
  7367                                  ;------------------------------------------------------------------------------
  7368                                  
  7369                                  ac97_int_ln_reg:
  7370 000077CA ??                      audio_intr:	resb 1
  7371 000077CB ??                      VRA:		resb 1	; Variable Rate Audio Support Status
  7372 000077CC ??                      fbs_shift:	resb 1
  7373 000077CD ??                      flags:		resb 1
  7374                                  
  7375 000077CE ????????                dev_vendor:	resd 1
  7376 000077D2 ????????                bus_dev_fn:	resd 1
  7377                                  audio_io_base:		; Sound Blaster 16 base port address (220h)
  7378 000077D6 ????                    NAMBAR:		resw 1
  7379 000077D8 ????                    NABMBAR:	resw 1
  7380                                  
  7381 000077DA ??                      audio_hardware:	resb 1
  7382 000077DB ??                      IRQnum:		resb 1
  7383 000077DC ??                      volume:		resb 1
  7384 000077DD ??                      stopped:	resb 1
  7385                                  
  7386                                  ;------------------------------------------------------------------------------
  7387                                  
  7388 000077DE ????                    alignb 16
  7389                                  
  7390 000077E0 <res 200h>              RowOfs:		resw 256
  7391                                  
  7392 000079E0 <res 200h>              NewScope_L:	resw 256
  7393 00007BE0 <res 200h>              NewScope_R:	resw 256
  7394 00007DE0 <res 200h>              OldScope_L:	resw 256
  7395 00007FE0 <res 200h>              OldScope_R:	resw 256
  7396                                  
  7397                                  ;------------------------------------------------------------------------------
  7398                                  
  7399                                  loadfromwavfile:
  7400 000081E0 ????????                		resd 1	; 'loadfromfile' or load+conversion proc address
  7401 000081E4 ????????                loadsize:	resd 1	; (.wav file) read count (bytes) per one time
  7402 000081E8 ????????                buffersize:	resd 1	; 16 bit samples (not bytes)
  7403                                  
  7404 000081EC ????????                count:		resd 1	; byte count of one (wav file) read
  7405                                  LoadedDataBytes:
  7406 000081F0 ????????                		resd 1	; total read/load count
  7407                                  		
  7408 000081F4 ????????                timerticks:	resd 1	; (to eliminate excessive lookup of events in tuneloop)
  7409                                  			; (in order to get the emulator/qemu to run correctly)
  7410                                  
  7411 000081F8 ????????                audio_buffer:	resd 1	; temporary (saving) area for AC97 DMA buffer address
  7412                                  
  7413 000081FC ????????                _bdl_buffer:	resd 1	; physcal address of buffer descriptor list (AC97)	
  7414 00008200 ????????                DMA_phy_buff:	resd 1	; physical address of 'dma_buffer' (SB16)
  7415                                  
  7416                                  bss_end:
  7417                                  
  7418                                  ;------------------------------------------------------------------------------
  7419                                  
  7420                                  sound_data_copy:	; address pointer for g_buffer fast (conversion) copy
  7421 00008204 ????????                		resd 1
  7422 00008208 ????????                g_samples:	resd 1	; count of samples for g_buffer copy/transfer
  7423                                  
  7424 0000820C ????????                alignb 16
  7425                                  
  7426 00008210 <res 400h>              g_buffer:	resb 1024 ; 16 bit stereo samples for wave graphics display
  7427                                  
  7428                                  ;------------------------------------------------------------------------------
  7429                                  
  7430 00008610 <res 9F0h>              alignb 4096
  7431                                  
  7432                                  ; 256 byte buffer for descriptor list
  7433 00009000 <res 100h>              BDL_BUFFER:	resb 256
  7434 00009100 <res F00h>              		resb 4096-256
  7435                                  ; DMA buffers (AC97) - ((max. 10600 bytes will be used per buffer))
  7436 0000A000 <res 3000h>             WAV_BUFFER_1:	resb 12288 ; 3*4096 ; 1st wav/pcm data buffer
  7437 0000D000 <res C000h>             WAV_BUFFER_2:	resd 12288 ; 3*4096 ; segment of 2nd wav/pcm data buffer
  7438                                  
  7439                                  ;------------------------------------------------------------------------------
  7440                                  
  7441 00019000 <res 7000h>             alignb 65536
  7442                                  
  7443                                  temp_buffer:	
  7444                                  		; max. 10600 bytes (no-VRA AC97)
  7445                                  		; 10600: 44.1 kHZ stereo 2438 samples, 2650 (48kHZ) samples
  7446                                  		; 10656: 11.025 kHZ stereo 612 samples, 2664 (48kHZ) samples
  7447                                  		; 10508: 22.050 kHZ stereo 1207 samples, 2627 (48kHZ) samples
  7448                                  		; 10544: 24 kHZ stereo 1318 samples, 2636 (48kHZ) samples
  7449                                  		; 10548: 32 kHZ stereo 1758 samples, 2637 (48kHZ) samples
  7450                                  		; 10548: 16 kHZ stereo 879 samples, 2637 (48kHZ) samples
  7451                                  		; 10544: 12 kHZ stereo 659 samples, 2636 (48kHZ) samples
  7452                                  		; 10560: 8 kHZ stereo 440 samples, 2640 (48kHZ) samples
  7453                                  		
  7454                                  dma_buffer:	; max. 21120 bytes (SB16)
  7455 00020000 <res 2940h>             		resb 10560
  7456 00022940 <res 2940h>             		resb 10560
  7457 00025280 <res D80h>              		resb 3456 ; memory allocation = 6*4096 bytes
  7458                                  
  7459                                  ;------------------------------------------------------------------------------
