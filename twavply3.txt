     1                                  ; ****************************************************************************
     2                                  ; twavplay.asm (for TRDOS 386) -twavplay3.s-
     3                                  ; ----------------------------------------------------------------------------
     4                                  ; TWAVPLAY.PRG ! AC'97 & SB16 WAV PLAYER & VGA DEMO program by Erdogan TAN
     5                                  ;
     6                                  ; 09/02/2025
     7                                  ;
     8                                  ; [ Last Modification: 10/02/2025 ]
     9                                  ;
    10                                  ; Assembler: NASM 2.15
    11                                  ; ----------------------------------------------------------------------------
    12                                  ;	   nasm  twavplay.s -l twavplay.txt -o TWAVPLAY.PRG
    13                                  ; ****************************************************************************
    14                                  
    15                                  ; VGA Video Mode 12h, 640*480 16 colors, stereo wave scope/graphics
    16                                  
    17                                  ; ----------------------------------------------------------------------------
    18                                  ; TuneLoop method for AC97 - Interrupt/Callback (syscalbac) method for SB16
    19                                  ; ----------------------------------------------------------------------------
    20                                  
    21                                  ; 09/02/2025
    22                                  ; Code reference:
    23                                  ;	twavplay.asm (TWAVPLAY.COM, 09/02/2025)
    24                                  ;	ac97play.s (AC97PLAY.PRG, 05/02/2025
    25                                  
    26                                  ; ----------------------------------------------------------------------------
    27                                  
    28                                  ; 30/11/2024
    29                                  ; 20/08/2024 ; TRDOS 386 v2.0.9
    30                                  ; 29/04/2016
    31                                  _ver 	equ 0
    32                                  _exit 	equ 1
    33                                  _fork 	equ 2
    34                                  _read 	equ 3
    35                                  _write	equ 4
    36                                  _open	equ 5
    37                                  _close 	equ 6
    38                                  _wait 	equ 7
    39                                  _creat 	equ 8
    40                                  _link 	equ 9
    41                                  _unlink	equ 10
    42                                  _exec	equ 11
    43                                  _chdir	equ 12
    44                                  _time 	equ 13
    45                                  _mkdir 	equ 14
    46                                  _chmod	equ 15
    47                                  _chown	equ 16
    48                                  _break	equ 17
    49                                  _stat	equ 18
    50                                  _seek	equ 19
    51                                  _tell 	equ 20
    52                                  _mount	equ 21
    53                                  _umount	equ 22
    54                                  _setuid	equ 23
    55                                  _getuid	equ 24
    56                                  _stime	equ 25
    57                                  _quit	equ 26
    58                                  _intr	equ 27
    59                                  _fstat	equ 28
    60                                  _emt 	equ 29
    61                                  _mdate 	equ 30
    62                                  _video 	equ 31
    63                                  _audio	equ 32
    64                                  _timer	equ 33
    65                                  _sleep	equ 34
    66                                  _msg    equ 35
    67                                  _geterr	equ 36
    68                                  _fpsave	equ 37
    69                                  _pri	equ 38
    70                                  _rele	equ 39
    71                                  _fff	equ 40
    72                                  _fnf	equ 41
    73                                  _alloc	equ 42
    74                                  _dalloc equ 43
    75                                  _calbac equ 44
    76                                  _dma	equ 45
    77                                  _stdio  equ 46
    78                                  
    79                                  ; ----------------------------------------------------------------------------
    80                                  
    81                                  %macro sys 1-4
    82                                      ; 29/04/2016 - TRDOS 386 (TRDOS v2.0)
    83                                      ; 03/09/2015
    84                                      ; 13/04/2015
    85                                      ; Retro UNIX 386 v1 system call.
    86                                      %if %0 >= 2
    87                                          mov ebx, %2
    88                                          %if %0 >= 3
    89                                              mov ecx, %3
    90                                              %if %0 = 4
    91                                                 mov edx, %4
    92                                              %endif
    93                                          %endif
    94                                      %endif
    95                                      mov eax, %1
    96                                      ;int 30h
    97                                      int 40h ; TRDOS 386 (TRDOS v2.0)
    98                                  %endmacro
    99                                  
   100                                  ; Retro UNIX 386 v1 system call format:
   101                                  ; sys systemcall (eax) <arg1 (ebx)>, <arg2 (ecx)>, <arg3 (edx)>
   102                                  
   103                                  ; ----------------------------------------------------------------------------
   104                                  
   105                                  %macro	SbOut	1
   106                                  %%Wait:
   107                                  	;in	al, dx
   108                                  	mov	ah, 0
   109                                  	int	34h
   110                                  	or	al, al
   111                                  	js	short %%Wait
   112                                  	mov	al, %1
   113                                  	;out	dx, al
   114                                  	mov	ah, 1
   115                                  	int	34h
   116                                  %endmacro
   117                                  
   118                                  ; ----------------------------------------------------------------------------
   119                                  
   120                                  ;BUFFERSIZE equ 65520 ; AC97
   121                                  ; 07/02/2025
   122                                  ;BUFFERSIZE equ 33680 ; AC97
   123                                  ; 08/02/2025	
   124                                  ;BUFFERSIZE equ 10548 ; AC97 ; 48kHZ 16bit stereo audio block (18.2 block/s) 
   125                                  
   126                                  ENDOFFILE equ 1	; flag for knowing end of file
   127                                  
   128                                  ;LOADSIZE equ 16384 ; SB16
   129                                  ;dma_buffer_size equ 32768  ; SB16
   130                                  ; 08/02/2025
   131                                  ;LOADSIZE equ 10560 ; SB16 ; 48kHZ 16bit stereo audio block (18.2 block/s)
   132                                  
   133                                  ; ----------------------------------------------------------------------------
   134                                  ; Reference:
   135                                  ; ----------
   136                                  ; Tiny Player v2.11 by Carlos Hasan.
   137                                  ;	June, 1994.
   138                                  
   139                                  ;=============================================================================
   140                                  ;	code
   141                                  ;=============================================================================
   142                                  
   143                                  [BITS 32] ; 32-bit intructions
   144                                  
   145                                  [ORG 0]
   146                                  
   147                                  	; 09/02/2025
   148                                  Start:
   149                                  	; Prints the Credits Text.
   150                                  	sys	_msg, Credits, 255, 0Bh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000000 BB[F8730000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000005 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000000A BA0B000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000000F B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00000014 CD40                <1>  int 40h
   151                                  
   152                                  	; Clear BSS (uninitialized data) area
   153 00000016 B9B3020000              	mov	ecx, (bss_end - bss_start) / 4
   154 0000001B BF[46770000]            	mov	edi, bss_start
   155 00000020 31C0                    	xor	eax, eax
   156 00000022 F366AB                  	rep	stosw
   157                                  
   158                                  	; Detect (& Enable) AC'97 or SB16 Audio Device
   159 00000025 E8A92B0000              	call	detect_audio_device
   160 0000002A 7318                    	jnc     short GetFileName
   161                                  
   162                                  _dev_not_ready:
   163                                  	; couldn't find the audio device!
   164                                  	sys	_msg, noDevMsg, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000002C BB[65740000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000031 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000036 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000003B B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00000040 CD40                <1>  int 40h
   165 00000042 EB6E                            jmp     Exit
   166                                  
   167                                  ; ----------------------------------------------------------------------------
   168                                  
   169                                  GetFileName:
   170                                  	; (TRDOS 386 -Retro UNIX 386- argument transfer method)
   171                                  	; (stack: argc,argv0addr,argv1addr,argv2addr ..
   172                                  	;			.. argv0text, argv1text ..) 
   173                                  	; ---- argc, argv[] ----
   174 00000044 89E6                    	mov	esi, esp
   175 00000046 AD                      	lodsd
   176 00000047 83F802                  	cmp	eax, 2 ; two arguments 
   177 0000004A 7302                    	jnb	short _x
   178 0000004C EB4E                    	jmp	pmsg_usage
   179                                  
   180                                  _x:
   181 0000004E AD                      	lodsd	; skip program (PRG) file name
   182 0000004F 8B36                    	mov	esi, [esi] ; WAV file name 
   183                                  
   184 00000051 BF[7C770000]            	mov	edi, wav_file_name
   185 00000056 31C9                    	xor	ecx, ecx ; 0
   186                                  ScanName:       
   187 00000058 AC                      	lodsb
   188                                  
   189 00000059 3C0D                    	cmp	al, 0Dh	; CR
   190 0000005B 7633                    	jna	short a_4
   191                                  _y:
   192 0000005D 3C20                    	cmp	al, 20h
   193 0000005F 74F7                    	je	short ScanName	; scan start of name.
   194 00000061 AA                      	stosb
   195 00000062 B4FF                    	mov	ah, 0FFh
   196                                  a_0:	
   197 00000064 FEC4                    	inc	ah
   198                                  a_1:
   199 00000066 41                      	inc	ecx
   200 00000067 AC                      	lodsb
   201 00000068 AA                      	stosb
   202 00000069 3C2E                    	cmp	al, '.'
   203 0000006B 74F7                    	je	short a_0
   204 0000006D 3C20                    	cmp	al, 20h
   205 0000006F 7611                    	jna	short a_3
   206 00000071 20E4                    	and	ah, ah
   207 00000073 7406                    	jz	short a_2
   208                                  
   209 00000075 3C5C                    	cmp	al, '\'
   210 00000077 7502                    	jne	short a_2
   211 00000079 B400                    	mov	ah, 0
   212                                  a_2:
   213 0000007B 80F94B                  	cmp	cl, 75	; 64+8+'.'+3 -> offset 75 is the last chr
   214 0000007E 72E6                    	jb	short a_1
   215 00000080 EB0E                    	jmp	short a_4
   216                                  a_3:
   217 00000082 4F                      	dec	edi
   218 00000083 08E4                    	or	ah, ah		; if period NOT found,
   219 00000085 7509                    	jnz	short a_4 	; then add a .WAV extension.
   220                                  SetExt:
   221 00000087 C7072E574156            	mov	dword [edi], '.WAV' ; ! 64+12 is DOS limit
   222                                  				    ;   but writing +4 must not
   223                                  				    ;   destroy the following data
   224                                  				; so, 80 bytes path + 0 is possible here
   225 0000008D 83C704                  	add	edi, 4
   226                                  a_4:	
   227 00000090 C60700                  	mov	byte [edi], 0
   228                                  	
   229 00000093 803D[7C770000]20        	cmp	byte [wav_file_name], 20h
   230 0000009A 7721                    	ja	short open_wav_file
   231                                  
   232                                  ; ----------------------------------------------------------------------------
   233                                  
   234                                  pmsg_usage: 
   235                                  	sys	_msg, msg_usage, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000009C BB[44740000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000000A1 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000000A6 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000000AB B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000000B0 CD40                <1>  int 40h
   236                                  
   237                                  Exit:
   238 000000B2 31DB                    	xor	ebx, ebx ; exit code = 0 ; not necessary
   239                                  	sys	_exit
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87                              <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000000B4 B801000000          <1>  mov eax, %1
    96                              <1> 
    97 000000B9 CD40                <1>  int 40h
   240                                  halt:
   241 000000BB EBFE                    	jmp	short halt
   242                                  
   243                                  ; ----------------------------------------------------------------------------
   244                                  
   245                                  open_wav_file:
   246                                          ; open existing file
   247 000000BD BA[7C770000]            	mov	edx, wav_file_name
   248 000000C2 E8DC010000                      call    openFile ; no error? ok.
   249 000000C7 7330                            jnc     short _z
   250                                  
   251                                  	; file not found!
   252                                  	sys	_msg, noFileErrMsg, 255, 0Ch
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000000C9 BB[97740000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000000CE B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000000D3 BA0C000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000000D8 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000000DD CD40                <1>  int 40h
   253                                  
   254 000000DF EBD1                    	jmp	short Exit
   255                                  
   256                                  not_valid_wav:
   257                                  	; not a proper/valid wav file !
   258                                  	sys	_msg, not_valid_wavf, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000000E1 BB[B2740000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000000E6 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000000EB BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000000F0 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000000F5 CD40                <1>  int 40h
   259                                  
   260 000000F7 EBB9                    	jmp	short Exit
   261                                  
   262                                  _z:
   263 000000F9 E8C9010000                     	call    getWAVParameters
   264 000000FE 72E1                    	jc	short not_valid_wav
   265                                  
   266 00000100 B304                    	mov	bl, 4
   267 00000102 8A0D[70770000]          	mov	cl, [WAVE_BlockAlign]
   268 00000108 28CB                    	sub	bl, cl	; = 0 for 16 bit stereo
   269                                  			; = 2 for 8 bit stereo or 16 bit mono
   270                                  			; = 3 for 8 bit mono
   271                                  
   272 0000010A D0EB                    	shr	bl, 1	; 0 --> 0, 2 --> 1, 3 --> 1
   273 0000010C 80D300                  	adc	bl, 0	; 3 --> 1 --> 2
   274 0000010F 881D[D0770000]          	mov	[fbs_shift], bl	; = 2 mono and 8 bit
   275                                  				; = 0 stereo and 16 bit
   276                                  				; = 1 mono or 8 bit
   277 00000115 31C0                    	xor	eax, eax
   278                                  
   279 00000117 803D[DE770000]01        	cmp	byte [audio_hardware], 1 ; SB16 ?
   280 0000011E 750B                    	jne	short _r
   281                                  				; no, skip [g_samples] calculation
   282                                  
   283                                  	; count of audio samples for graphics data
   284 00000120 FEC4                    	inc	ah
   285                                  	; eax = 256
   286 00000122 D0E9                    	shr	cl, 1
   287                                  	; 0 = 8 bit mono, 1 = 16 bit mono or 8 bit stereo
   288                                  	; 2 = 16 bit stereo  
   289 00000124 D3E0                    	shl	eax, cl
   290 00000126 A3[18820000]            	mov	[g_samples], eax ; 256 .. 1024
   291                                  
   292                                  _r:
   293                                  	; calculate 18.2 block/s buffer size for proper wave scope
   294 0000012B 66A1[68770000]          	mov	ax, [WAVE_SampleRate]
   295 00000131 31D2                    	xor	edx, edx
   296 00000133 B228                    	mov	dl, 4*10
   297 00000135 F7E2                    	mul	edx
   298 00000137 31C9                    	xor	ecx, ecx
   299 00000139 B1B6                    	mov	cl, 182
   300 0000013B F7F1                    	div	ecx
   301 0000013D 88D9                    	mov	cl, bl	; 0 = stereo & 16bit
   302                                  			; 1 = mono 16bit or stereo 8bit
   303                                  			; 2 = mono & 8bit
   304 0000013F 24FC                    	and	al, ~3 ; NOT 3
   305 00000141 D3E8                    	shr	eax, cl
   306                                  		; AX = 
   307                                  		; 10548 bytes for 48kHZ 16bit stereo
   308                                  		; 9692 bytes for 44kHZ 16bit stereo
   309                                  		; 7032 bytes for 32kHZ 16bit stereo
   310                                  		; 5272 bytes for 24kHz 16bit stereo
   311                                  		; 4844 bytes for 22kHZ 16bit stereo 
   312                                  		; 3516 bytes for 16kHZ 16bit stereo
   313                                  		; 2636 bytes for 12kHZ 16bit stereo
   314                                  		; 2420 bytes for 11kHZ 16bit stereo
   315                                  		; 1756 bytes for 8kHZ 16bit stereo
   316                                  
   317 00000143 A3[F4810000]            	mov	[loadsize], eax
   318                                  	
   319 00000148 803D[DE770000]01        	cmp	byte [audio_hardware], 1 ; SB16 ?
   320 0000014F 7404                    	je	short _t		; yes	
   321                                  
   322                                  	; AC97 codec plays 16 bit stereo PCM data only
   323 00000151 D3E0                    	shl	eax, cl
   324                                  	; count of 16 bit samples
   325 00000153 D1E8                    	shr	eax, 1
   326                                  _t:
   327 00000155 A3[F8810000]            	mov	[buffersize], eax ; (if audio hardware supports vra)	
   328                                  		 
   329                                  ; ----------------------------------------------------------------------------
   330                                  
   331                                  	; 10/02/2025
   332                                  	; 20/10/2017 - playwav.s
   333                                  
   334                                  allocate_dma_buffer:
   335 0000015A 803D[DE770000]01        	cmp	byte [audio_hardware], 1
   336 00000161 751F                    	jne	short allocate_ac97_buffers
   337                                  
   338                                  	; SB16
   339                                  
   340                                  	dmabufsize equ 24576 ; rounded up to page border (21120 will be use)
   341                                  
   342                                  	; DIRECT MEMORY ACCESS (for Audio DMA)
   343                                  	; ebx = DMA buffer address (virtual, user)
   344                                  	; ecx = buffer size (in bytes)
   345                                  	; edx = upper limit = 16MB
   346                                  
   347                                  	_16MB	equ 1024*1024*16
   348                                  
   349                                  	sys	_alloc, dma_buffer, dmabufsize, _16MB 
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000163 BB[00000200]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000168 B900600000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000016D BA00000001          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000172 B82A000000          <1>  mov eax, %1
    96                              <1> 
    97 00000177 CD40                <1>  int 40h
   350 00000179 7230                    	jc	short syscall_err
   351                                  
   352 0000017B A3[10820000]            	mov	[DMA_phy_buff], eax	; physical address
   353                                  	     				; of the buffer
   354                                  					; (which is needed
   355                                  					; for DMA controller)
   356                                  
   357 00000180 EB1D                    	jmp	short audio_hardware_init
   358                                  
   359                                  ; ----------------------------------------------------------------------------
   360                                  
   361                                  	; 10/02/2025
   362                                  	; 05/02/2025 - ac97play.s
   363                                  
   364                                  allocate_ac97_buffers:
   365                                  
   366                                  	; AC97
   367                                  
   368                                  	sys	_alloc, BDL_BUFFER, 7*4096, 0	; no upper limit
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000182 BB[00900000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000187 B900700000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000018C BA00000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000191 B82A000000          <1>  mov eax, %1
    96                              <1> 
    97 00000196 CD40                <1>  int 40h
   369 00000198 7211                    	jc	short syscall_err
   370                                  
   371 0000019A A3[0C820000]            	mov	[_bdl_buffer], eax ; BDL_BUFFER physical address
   372                                  
   373                                  ; ----------------------------------------------------------------------------
   374                                  
   375                                  audio_hardware_init:
   376                                  
   377 0000019F E877200000              	call	audio_system_init
   378                                  	;jc	short Exit
   379 000001A4 7320                    	jnc	short write_info
   380 000001A6 E907FFFFFF              	jmp	Exit
   381                                  
   382                                  ; ----------------------------------------------------------------------------
   383                                  
   384                                  syscall_err:
   385                                  	sys	_msg, trdos386_err_msg, 255, 0Eh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000001AB BB[62750000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000001B0 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000001B5 BA0E000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000001BA B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000001BF CD40                <1>  int 40h
   386 000001C1 E9ECFEFFFF              	jmp	Exit
   387                                  
   388                                  ; ----------------------------------------------------------------------------
   389                                  
   390                                  write_info:
   391 000001C6 E8131D0000              	call	write_audio_dev_info
   392                                  
   393 000001CB E8801F0000              	call	write_wav_file_info
   394                                  
   395                                  	sys	_msg, msgPressAKey, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000001D0 BB[10770000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000001D5 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000001DA BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000001DF B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000001E4 CD40                <1>  int 40h
   396                                  
   397 000001E6 30E4                    	xor	ah, ah
   398 000001E8 CD32                    	int	32h	; TRDOS 386 keyboard interrupt
   399                                  			; getchar (wait for keystroke)
   400                                  
   401 000001EA 3C1B                    	cmp	al, 1Bh ; ESC
   402 000001EC 7505                    	jne	short _continue
   403 000001EE E9BFFEFFFF              	jmp	Exit
   404                                  
   405                                  _continue:
   406                                  	;call	audio_system_init
   407                                  	;jc	short Exit
   408                                  
   409                                  ; ----------------------------------------------------------------------------
   410                                  
   411                                  PlayNow: 
   412 000001F3 B900010000              	mov	ecx, 256
   413 000001F8 31DB                    	xor	ebx, ebx
   414 000001FA BF[F0770000]            	mov	edi, RowOfs
   415                                  MakeOfs:
   416 000001FF 89D8                    	mov	eax, ebx
   417 00000201 C1E007                  	shl	eax, 7 ; * 128
   418 00000204 B050                    	mov	al, 80
   419 00000206 F6E4                    	mul	ah
   420 00000208 66AB                    	stosw
   421 0000020A 43                      	inc	ebx
   422 0000020B E2F2                    	loop	MakeOfs
   423                                  
   424                                  ; ----------------------------------------------------------------------------
   425                                  
   426                                  	; DIRECT VGA MEMORY ACCESS
   427                                  	; bl = 0, bh = 5
   428                                  	; Direct access/map to VGA memory (0A0000h)
   429                                  
   430                                  	sys	_video, 0500h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000020D BB00050000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000212 B81F000000          <1>  mov eax, %1
    96                              <1> 
    97 00000217 CD40                <1>  int 40h
   431 00000219 3D00000A00              	cmp	eax, 0A0000h
   432 0000021E 758B                    	jne	short syscall_err
   433                                  
   434                                  ; ----------------------------------------------------------------------------
   435                                  
   436                                  	;;;;
   437                                  setgraphmode:
   438                                  	; set VGA 640x480x16 graphics mode
   439 00000220 66B81200                	mov	ax, 12h
   440 00000224 CD31                    	int	31h	; TRDOS 386 Video Interrupt
   441                                  			; Set video mode
   442 00000226 66BAC003                	mov	dx, 3C0h
   443 0000022A 30C0                    	xor	al, al
   444                                  setgraphmodel0:
   445                                  	;out	dx, al
   446 0000022C B401                    	mov	ah, 1	; outb
   447 0000022E CD34                    	int	34h	; TRDOS 386 IOCTL Interrupt
   448                                  	;out	dx, al
   449                                  	;mov	ah, 1	; outb
   450 00000230 CD34                    	int	34h
   451 00000232 FEC0                    	inc	al
   452 00000234 3C10                    	cmp	al, 10h
   453 00000236 72F4                    	jb	short setgraphmodel0
   454 00000238 B020                    	mov	al, 20h
   455                                  	;out	dx, al
   456                                  	;mov	ah, 1	; outb
   457 0000023A CD34                    	int	34h
   458                                  	;;;;
   459                                  
   460                                  ; ----------------------------------------------------------------------------
   461                                  	
   462                                  	;mov	esi, LOGO_ADDRESS
   463 0000023C E81D2E0000              	call	putlbm
   464                                  ;	jnc	short loadlbm_ok
   465                                  ;
   466                                  ;loadlbm_err:
   467                                  ;	call	settextmode
   468                                  ;	sys	_msg, LOGO_ERROR_MSG, 255, 0Ch
   469                                  ;	jmp	Exit
   470                                  ;
   471                                  ;LOGO_ERROR_MSG:
   472                                  ;	db "Error loading the IFF/ILBM logo picture !", 0Dh, 0Ah, 0
   473                                  ;
   474                                  ;loadlbm_ok:
   475                                  
   476                                  ; ----------------------------------------------------------------------------
   477                                  	
   478 00000241 803D[DE770000]01        	cmp	byte [audio_hardware], 1
   479 00000248 7530                    	jne	short skip_sdc
   480                                  	
   481                                  	; parepare g_buffer wave graphics parameters
   482                                  
   483 0000024A BB[33300000]            	mov	ebx, sdc_16bit_stereo
   484                                  
   485 0000024F A0[70770000]            	mov	al, [WAVE_BlockAlign]
   486 00000254 3C04                    	cmp	al, 4
   487 00000256 741C                    	je	short set_sdc_p_ok
   488 00000258 BB[50300000]            	mov	ebx, sdc_8bit_mono
   489 0000025D 3C01                    	cmp	al, 1
   490 0000025F 7413                    	je	short set_sdc_p_ok
   491 00000261 BB[44300000]            	mov	ebx, sdc_8bit_stereo
   492 00000266 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8
   493 0000026D 7405                    	je	short set_sdc_p_ok
   494 0000026F BB[39300000]            	mov	ebx, sdc_16bit_mono
   495                                  set_sdc_p_ok:
   496 00000274 891D[14820000]          	mov	[sound_data_copy], ebx
   497                                  
   498                                  skip_sdc:
   499                                  
   500                                  ; ----------------------------------------------------------------------------
   501                                  
   502                                  	; play the .wav file.
   503                                  
   504 0000027A E88A000000              	call	PlayWav
   505                                  
   506                                  ; ----------------------------------------------------------------------------
   507                                  
   508                                  	; close the .wav file and exit.
   509 0000027F E835000000              	call	closeFile
   510                                  
   511                                  ; ----------------------------------------------------------------------------
   512                                  
   513 00000284 803D[DE770000]01        	cmp	byte [audio_hardware], 1
   514 0000028B 750C                    	jne	short terminate
   515                                  
   516                                  	; Cancel syscalback service for Sound Blaster 16
   517                                  	
   518 0000028D A0[CE770000]            	mov	al, [audio_intr] ; 5 or 7
   519 00000292 30E4                    	xor	ah, ah ; reset
   520 00000294 E8002C0000              	call	set_hardware_int_vector
   521                                  
   522                                  ; ----------------------------------------------------------------------------
   523                                  
   524                                  terminate:
   525 00000299 E8472C0000              	call	settextmode
   526                                  	
   527 0000029E E90FFEFFFF              	jmp	Exit
   528                                  
   529                                  ; ----------------------------------------------------------------------------
   530                                  
   531                                  	; INPUT: edx = file name address
   532                                  	; OUTPUT: [FileHandle]
   533                                  openFile:
   534                                  	; open File for read
   535                                  	sys	_open, edx, 0
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000002A3 89D3                <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000002A5 B900000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000002AA B805000000          <1>  mov eax, %1
    96                              <1> 
    97 000002AF CD40                <1>  int 40h
   536 000002B1 7205                    	jc	short _of_err
   537                                  		; cf = 1 -> not found or access error
   538 000002B3 A3[F3730000]            	mov	[FileHandle], eax
   539                                  _of_err:
   540 000002B8 C3                      	retn
   541                                  
   542                                  ; ----------------------------------------------------------------------------
   543                                  
   544                                  	; INPUT: [FileHandle]
   545                                  	; OUTPUT: none
   546                                  closeFile:
   547                                  	sys	_close, [FileHandle]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000002B9 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000002BF B806000000          <1>  mov eax, %1
    96                              <1> 
    97 000002C4 CD40                <1>  int 40h
   548 000002C6 C3                      	retn
   549                                  
   550                                  ; ----------------------------------------------------------------------------
   551                                  
   552                                  getWAVParameters:
   553                                  	sys	_read, [FileHandle], WAVFILEHEADERbuff, 44
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000002C7 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000002CD B9[50770000]        <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000002D2 BA2C000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000002D7 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000002DC CD40                <1>  int 40h
   554 000002DE 7228                    	jc	short gwavp_retn
   555                                  
   556 000002E0 83F82C                  	cmp	eax, 44
   557 000002E3 7223                    	jb	short gwavp_retn
   558                                  
   559 000002E5 813D[58770000]5741-     	cmp	dword [RIFF_Format], 'WAVE'
   559 000002ED 5645               
   560 000002EF 7516                    	jne	short gwavp_stc_retn
   561                                  
   562 000002F1 66833D[64770000]01      	cmp	word [WAVE_AudioFormat], 1 ; Offset 20, must be 1 (= PCM)
   563 000002F9 750C                    	jne	short gwavp_stc_retn
   564                                  
   565                                  	; (OpenMPT creates wav files with a new type header,
   566                                  	;  this program can not use the new type
   567                                  	;  because of 'data' offset is not at DATA_SubchunkID.)
   568                                  	; ((GoldWave creates common type wav file.))
   569                                  
   570 000002FB 813D[74770000]6461-     	cmp	dword [DATA_SubchunkID], 'data'
   570 00000303 7461               
   571 00000305 7401                    	je	short gwavp_retn
   572                                  
   573                                  gwavp_stc_retn:
   574 00000307 F9                      	stc
   575                                  gwavp_retn:
   576 00000308 C3                      	retn
   577                                  
   578                                  ;=============================================================================
   579                                  ;
   580                                  ;=============================================================================
   581                                  
   582                                  	; 10/02/2025
   583                                  	; 09/02/2025
   584                                  PlayWav:
   585 00000309 803D[DE770000]01        	cmp	byte [audio_hardware], 1
   586 00000310 776B                    	ja	short playwav_ac97
   587                                  
   588                                  playwav_sb16:
   589 00000312 803D[E1770000]01        	cmp	byte [stopped], 1
   590 00000319 7210                    	jb	short playwav_sb16_@
   591                                  
   592                                  	; replay
   593 0000031B C605[E1770000]00        	mov	byte [stopped], 0
   594 00000322 C605[36770000]01        	mov	byte [half_buffer], 1
   595                                  
   596 00000329 EB11                    	jmp	short playwav_sb16_@@
   597                                  
   598                                  playwav_sb16_@:
   599                                  	; set audio interrupt vector (to user's handler)
   600                                  	; set syscallback service for Sound Blaster 16
   601 0000032B A0[DF770000]            	mov	al, [IRQnum]
   602 00000330 B401                    	mov	ah, 1 ; set
   603                                  	; 10/02/2025
   604 00000332 BA[DF770000]            	mov	edx, IRQnum
   605 00000337 E85D2B0000              	call	set_hardware_int_vector
   606                                  
   607                                  playwav_sb16_@@:
   608 0000033C BF[00000200]            	mov	edi, dma_buffer
   609 00000341 E8FE020000              	call	SB16_LoadFromFile
   610                                  
   611 00000346 A1[FC810000]            	mov	eax, [count]
   612 0000034B 0105[00820000]          	add	[LoadedDataBytes], eax
   613                                  
   614 00000351 BF[00000200]            	mov	edi, dma_buffer
   615 00000356 033D[F4810000]          	add	edi, [loadsize] ; = add edi, [buffersize]
   616 0000035C E8E3020000              	call	SB16_LoadFromFile
   617                                  
   618 00000361 A1[FC810000]            	mov	eax, [count]
   619 00000366 0105[00820000]          	add	[LoadedDataBytes], eax
   620                                  
   621 0000036C E8B51F0000              	call	sb16_init_play
   622                                  
   623 00000371 C605[DF770000]00        	mov	byte [IRQnum], 0
   624 00000378 E9C3000000              	jmp	SB16_TuneLoop
   625                                  
   626                                  playwav_ac97:
   627 0000037D 803D[E1770000]01        	cmp	byte [stopped], 1
   628 00000384 720E                    	jb	short playwav_ac97_@
   629                                  
   630 00000386 C605[E1770000]00        	mov	byte [stopped], 0
   631                                  
   632 0000038D E8E1260000              	call	ac97_RePlayWav
   633                                  
   634 00000392 EB0A                    	jmp	short AC97_TuneLoop
   635                                  
   636                                  playwav_ac97_@:
   637 00000394 E8DB230000              	call	ac97_play_setup
   638                                  
   639 00000399 E89C260000              	call	ac97_init_play
   640                                  
   641                                  	;jmp	short AC97_TuneLoop
   642                                  
   643                                  ; ----------------------------------------------------------------------------
   644                                  
   645                                  	; 09/02/2025
   646                                  AC97_TuneLoop:
   647                                  
   648                                  ;tuneLoop:
   649                                  tLWait:
   650 0000039E 803D[E1770000]00        	cmp	byte [stopped], 0
   651 000003A5 7612                    	jna	short tL1 
   652                                  tLWait@:
   653 000003A7 803D[E1770000]03        	cmp	byte [stopped], 3
   654 000003AE 7307                    	jnb	short tL0
   655                                  
   656 000003B0 E8F4000000              	call	checkUpdateEvents
   657 000003B5 73E7                    	jnc	short tLWait
   658                                  tL0:
   659 000003B7 EB33                    	jmp	_exitt_
   660                                  tL1:
   661 000003B9 E8C8270000              	call	updateLVI	; /set LVI != CIV/
   662 000003BE 74F7                    	jz	short tL0
   663                                  
   664 000003C0 E8E4000000              	call	checkUpdateEvents
   665 000003C5 72F0                    	jc	short tL0
   666                                  
   667 000003C7 803D[E1770000]00        	cmp	byte [stopped], 0
   668 000003CE 77D7                    	ja	short tLWait@
   669                                  
   670 000003D0 E8A1270000              	call	getCurrentIndex
   671 000003D5 A801                    	test	al, BIT0
   672 000003D7 74E0                    	jz	short tL1	; loop if buffer 2 is not playing
   673                                  
   674                                  	; load buffer 1
   675 000003D9 BF[00A00000]            	mov     edi, WAV_BUFFER_1
   676 000003DE 893D[08820000]          	mov	[audio_buffer], edi
   677 000003E4 FF15[F0810000]          	call	dword [loadfromwavfile]
   678 000003EA 7306                    	jnc	short tL2
   679                                  
   680                                  	; end of file
   681                                  _exitt_:
   682                                  	; Stop Playing
   683 000003EC E8FB260000              	call	ac97_stop
   684 000003F1 C3                      	retn
   685                                  tL2:
   686 000003F2 A1[FC810000]            	mov	eax, [count]
   687 000003F7 0105[00820000]          	add	[LoadedDataBytes], eax
   688                                  tL3:
   689 000003FD E884270000              	call    updateLVI
   690 00000402 74E8                    	jz	short _exitt_
   691                                  
   692 00000404 E8A0000000              	call	checkUpdateEvents
   693 00000409 72E1                    	jc	short _exitt_
   694                                  
   695 0000040B 803D[E1770000]00        	cmp	byte [stopped], 0
   696 00000412 7793                    	ja	short tLWait@
   697                                  
   698 00000414 E85D270000              	call    getCurrentIndex
   699 00000419 A801                    	test	al, BIT0
   700 0000041B 75E0                    	jnz	short tL3	; loop if buffer 1 is not playing
   701                                  
   702                                  	; load buffer 2
   703 0000041D BF[00D00000]            	mov     edi, WAV_BUFFER_2
   704 00000422 893D[08820000]          	mov	[audio_buffer], edi
   705 00000428 FF15[F0810000]          	call	dword [loadfromwavfile]
   706 0000042E 72BC                    	jc	short _exitt_
   707                                  
   708 00000430 A1[FC810000]            	mov	eax, [count]
   709 00000435 0105[00820000]          	add	[LoadedDataBytes], eax
   710                                  
   711 0000043B E95EFFFFFF              	jmp	tLWait
   712                                  
   713                                  ; ----------------------------------------------------------------------------
   714                                  
   715                                  	; 10/02/2025
   716                                  	; 09/02/2025
   717                                  SB16_TuneLoop:
   718                                  ;TuneLoop:
   719                                  .tLWait:
   720 00000440 803D[E1770000]00        	cmp	byte [stopped], 0
   721 00000447 760D                    	jna	short .tL2
   722                                  .tL1:
   723 00000449 E85B000000              	call	checkUpdateEvents
   724 0000044E 73F0                    	jnc	short .tLWait
   725                                  ._exit_:
   726 00000450 E89B1F0000              	call	sb16_stop
   727 00000455 C3                      	retn
   728                                  .tL2:
   729                                  	; Check SB 16 interrupt status
   730 00000456 803D[DF770000]00        	cmp	byte [IRQnum], 0
   731 0000045D 76EA                    	jna	short .tL1
   732                                  
   733                                  	;;;;
   734                                  	; 10/02/2025
   735 0000045F 668B15[DA770000]        	mov 	dx, [audio_io_base]
   736 00000466 80C20E                  	add	dl, 0Eh ; 8bit DMA-mode int ack
   737                                  	;in	al, dx
   738 00000469 B400                    	mov	ah, 0 ; inb
   739 0000046B CD34                    	int	34h
   740 0000046D 42                      	inc	edx ; 0Fh ; 16bit DMA-mode int ack
   741                                  	;in	al, dx	; SB 16 acknowledge.
   742 0000046E B400                    	mov	ah, 0 ; inb
   743 00000470 CD34                    	int	34h
   744                                  	;;;;
   745                                  
   746 00000472 8035[36770000]01        	xor	byte [half_buffer], 1
   747                                  
   748 00000479 C605[DF770000]00        	mov	byte [IRQnum], 0
   749                                  
   750                                  	; load buffer 1
   751 00000480 BF[00000200]            	mov	edi, dma_buffer  ; wav_buffer1
   752 00000485 803D[36770000]00        	cmp	byte [half_buffer], 0
   753 0000048C 7606                    	jna	short .tL3
   754                                  
   755                                  	; load buffer 2
   756 0000048E 033D[F4810000]          	add	edi, [loadsize]
   757                                  .tL3:
   758 00000494 E8AB010000              	call	SB16_LoadFromFile
   759 00000499 72B5                    	jc	short ._exit_	; end of file
   760                                  
   761 0000049B A1[FC810000]            	mov	eax, [count]
   762 000004A0 0105[00820000]          	add	[LoadedDataBytes], eax
   763                                  
   764 000004A6 EBA1                    	jmp	short .tL1
   765                                  
   766                                  ;=============================================================================
   767                                  ;
   768                                  ;=============================================================================
   769                                  
   770                                  c4ue_ok:
   771 000004A8 C3                      	retn
   772                                  
   773                                  	; 09/02/2025
   774                                  checkUpdateEvents:
   775 000004A9 E890000000              	call	check4keyboardstop
   776 000004AE 72F8                    	jc	short c4ue_ok
   777                                  
   778 000004B0 50                      	push	eax ; *
   779 000004B1 09C0                    	or	eax, eax
   780 000004B3 745A                    	jz	short c4ue_cpt
   781                                  
   782 000004B5 3C20                    	cmp	al, 20h ; SPACE (spacebar) ; pause/play
   783 000004B7 752E                    	jne	short c4ue_chk_s
   784 000004B9 803D[E1770000]00        	cmp	byte [stopped], 0
   785 000004C0 7707                    	ja	short c4ue_chk_ps
   786                                  
   787 000004C2 E83E260000              	call	audio_pause
   788                                  
   789 000004C7 EB46                    	jmp	short c4ue_cpt
   790                                  
   791                                  c4ue_chk_ps:
   792 000004C9 803D[E1770000]01        	cmp	byte [stopped], 1
   793 000004D0 7707                    	ja	short c4ue_replay
   794                                  
   795                                  	; continue to play (after a pause)
   796 000004D2 E845260000              	call	audio_play
   797                                  
   798 000004D7 EB36                    	jmp	short c4ue_cpt
   799                                  
   800                                  c4ue_replay:
   801 000004D9 6658                    	pop	ax ; *
   802 000004DB 6658                    	pop	ax ; return address
   803                                  
   804 000004DD E835010000              	call	move_to_beginning
   805                                  
   806                                  	;mov	byte [stopped], 0
   807                                  
   808 000004E2 E922FEFFFF              	jmp	PlayWav
   809                                  
   810                                  c4ue_chk_s:
   811 000004E7 3C53                    	cmp	al, 'S'	; stop
   812 000004E9 7510                    	jne	short c4ue_chk_fb
   813 000004EB 803D[E1770000]00        	cmp	byte [stopped], 0
   814 000004F2 771B                    	ja	c4ue_cpt ; Already stopped/paused
   815                                  
   816 000004F4 E8E5250000              	call	audio_stop
   817                                  
   818 000004F9 EB14                    	jmp	short c4ue_cpt
   819                                  
   820                                  c4ue_chk_fb:
   821 000004FB 3C46                    	cmp	al, 'F'
   822 000004FD 7507                    	jne	short c4ue_chk_b
   823 000004FF E8EB000000              	call 	move_forward
   824 00000504 EB09                    	jmp	short c4ue_cpt
   825                                  
   826                                  c4ue_chk_b:
   827 00000506 3C42                    	cmp	al, 'B'
   828 00000508 7505                    	jne	short c4ue_cpt
   829                                  
   830 0000050A E8E0000000              	call 	move_backward
   831                                  
   832                                  c4ue_cpt:
   833 0000050F 59                      	pop	ecx ; *
   834                                  
   835                                  	sys	_time, 4 ; get timer ticks (18.2 ticks/second)
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000510 BB04000000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000515 B80D000000          <1>  mov eax, %1
    96                              <1> 
    97 0000051A CD40                <1>  int 40h
   836                                  
   837 0000051C 3B05[04820000]          	cmp	eax, [timerticks]
   838 00000522 7407                    	je	short c4ue_skip_utt
   839                                  c4ue_utt:
   840 00000524 A3[04820000]            	mov	[timerticks], eax
   841 00000529 EB05                    	jmp	short c4ue_cpt_@
   842                                  
   843                                  c4ue_skip_utt:
   844 0000052B 21C9                    	and	ecx, ecx
   845 0000052D 7401                    	jz	short c4ue_cpt_@
   846                                  c4ue_vb_ok:
   847 0000052F C3                      	retn
   848                                  
   849                                  c4ue_cpt_@:
   850 00000530 803D[E1770000]00        	cmp	byte [stopped], 0
   851 00000537 77F6                    	ja	short c4ue_vb_ok
   852                                  
   853 00000539 E9AE290000              	jmp	drawscopes
   854                                  
   855                                  ;=============================================================================
   856                                  ;
   857                                  ;=============================================================================
   858                                  
   859                                  	; 09/02/2025
   860                                  check4keyboardstop:
   861 0000053E B401                    	mov	ah, 1	; check keyboard buffer
   862 00000540 CD32                    	int	32h	; TRDOS 386 Keyboard Interrupt
   863                                  	;clc
   864 00000542 742E                    	jz	short _cksr ; empty
   865                                  
   866 00000544 30E4                    	xor	ah, ah	; Getchar
   867 00000546 CD32                    	int	32h
   868                                  
   869                                  	;;;;
   870                                  	; 10/02/2025
   871                                  clear_keyb_buf:
   872 00000548 50                      	push	eax
   873 00000549 B401                    	mov	ah, 1	; Getchar
   874 0000054B CD32                    	int	32h
   875 0000054D 7407                    	jz	short p_0
   876 0000054F 28E4                    	sub	ah, ah
   877 00000551 CD32                    	int	32h
   878 00000553 5A                      	pop	edx
   879 00000554 EBF2                    	jmp	short clear_keyb_buf
   880                                  p_0:		
   881 00000556 58                      	pop	eax
   882                                  	;;;;
   883                                  
   884                                  	; (change PCM out volume)
   885 00000557 3C2B                    	cmp	al, '+'
   886 00000559 7508                    	jne	short p_1
   887                                  
   888 0000055B FE05[E0770000]          	inc	byte [volume]
   889 00000561 EB0A                    	jmp	short p_2
   890                                  p_1:
   891 00000563 3C2D                    	cmp	al, '-'
   892 00000565 750E                    	jne	short p_4
   893                                  
   894 00000567 FE0D[E0770000]          	dec	byte [volume]
   895                                  p_2:
   896 0000056D E81E000000              	call	SetPCMOutVolume
   897                                  _cksr:
   898 00000572 31C0                    	xor	eax, eax
   899                                  p_3:
   900 00000574 C3                      	retn
   901                                  p_4:
   902 00000575 80FC01                  	cmp	ah, 01h  ; ESC
   903 00000578 7414                        	je	short p_quit
   904 0000057A 3C03                    	cmp	al, 03h  ; CTRL+C
   905 0000057C 7410                    	je	short p_quit
   906                                  
   907 0000057E 3C20                    	cmp	al, 20h
   908 00000580 74F2                    	je	short p_3
   909                                  
   910 00000582 3C0D                    	cmp	al, 0Dh ; CR/ENTER
   911 00000584 74EE                    	je	short p_3
   912                                  
   913 00000586 24DF                    	and	al, 0DFh
   914                                  
   915 00000588 3C51                    	cmp	al, 'Q'
   916 0000058A 7402                    	je	short p_quit
   917                                  
   918 0000058C F8                      	clc
   919 0000058D C3                      	retn
   920                                  
   921                                  p_quit:
   922 0000058E F9                      	stc
   923 0000058F C3                      	retn
   924                                  
   925                                  ;-----------------------------------------------------------------------------
   926                                  ;
   927                                  ;-----------------------------------------------------------------------------
   928                                  
   929                                  	; 09/02/2025
   930                                  SetPCMOutVolume:
   931 00000590 803D[DE770000]01        	cmp	byte [audio_hardware], 1
   932 00000597 7428                    	je	short sb16_set_volume
   933                                  
   934                                  ;-----------------------------------------------------------------------------
   935                                  
   936                                  ac97_set_volume:
   937 00000599 A0[E0770000]            	mov	al, [volume]
   938 0000059E B41F                    	mov	ah, 31
   939 000005A0 38E0                    	cmp	al, ah ; 31
   940 000005A2 7607                    	jna	short _ac97sv_@
   941 000005A4 88E0                    	mov	al, ah
   942 000005A6 A2[E0770000]            	mov	[volume], al ; max = 31, min = 0
   943                                  _ac97sv_@:
   944                                  	; max = 0, min = 31
   945 000005AB 28C4                    	sub	ah, al
   946 000005AD 88E0                    	mov	al, ah
   947 000005AF 668B15[DA770000]        	mov	dx, [NAMBAR]
   948                                    	;add	dx, CODEC_MASTER_VOL_REG
   949 000005B6 6683C218                	add	dx, CODEC_PCM_OUT_REG
   950                                  	;out	dx, ax
   951 000005BA 89C3                    	mov	ebx, eax
   952 000005BC B403                    	mov	ah, 3	; write port, word
   953 000005BE CD34                    	int	34h	; TRDOS 386 IOCTL interrupt
   954 000005C0 C3                      	retn
   955                                  
   956                                  ;-----------------------------------------------------------------------------
   957                                  
   958                                  sb16_set_volume:
   959 000005C1 A0[E0770000]            	mov	al, [volume]
   960 000005C6 B40F                    	mov	ah, 15
   961 000005C8 38E0                    	cmp	al, ah ; 15
   962 000005CA 7607                    	jna	short _sb16sv_@
   963 000005CC 88E0                    	mov	al, ah
   964 000005CE A2[E0770000]            	mov	[volume], al ; max = 15, min = 0
   965                                  _sb16sv_@:
   966                                  	; al = sound volume (15 = max, 0 = min)
   967 000005D3 50                      	push	eax
   968                                  	; Tell the SB 16 card which register to write
   969 000005D4 668B15[DA770000]        	mov	dx, [audio_io_base]
   970                                  	;add	dx, 4 ; Mixer chip address port
   971 000005DB 80C204                  	add	dl, 4
   972 000005DE B022                    	mov	al, 22h
   973                                  	;out	dx, al
   974 000005E0 B401                    	mov	ah, 1	; write port, byte
   975 000005E2 CD34                    	int	34h	; TRDOS 386 IOCTL interrupt
   976                                  
   977 000005E4 58                      	pop	eax
   978                                  	;and	al, 0Fh
   979                                  	; Set the volume for both L and R
   980 000005E5 B311                    	mov	bl, 11h
   981 000005E7 F6E3                    	mul	bl
   982                                  	; Set new volume
   983                                  	;mov	dx, [audio_io_base]
   984                                  	;;add	dx, 5
   985                                  	;add	dl, 5
   986                                  	; 10/02/2025
   987 000005E9 42                      	inc	edx
   988                                  	;out	dx, al
   989 000005EA B401                    	mov	ah, 1	; outb
   990 000005EC CD34                    	int	34h
   991 000005EE C3                      	retn
   992                                  
   993                                  ;=============================================================================
   994                                  ; 09/02/2025 - change song (wave file) play position
   995                                  ;=============================================================================
   996                                  
   997                                  move_backward:
   998                                  move_forward:
   999                                  	;; In order to go backwards 5 seconds:
  1000                                  	;; Update file pointer to the beginning, skip headers
  1001 000005EF 88C1                    	mov	cl, al ; 'B' or 'F'
  1002                                  
  1003                                  move_backward_or_forward:
  1004                                  	; (Ref: player.asm, Matan Alfasi, 2017)
  1005                                    
  1006 000005F1 B805000000              	mov	eax, 5
  1007 000005F6 0FB71D[70770000]        	movzx	ebx, word [WAVE_BlockAlign]
  1008 000005FD F7E3                    	mul	ebx
  1009 000005FF 668B1D[68770000]        	mov	bx, [WAVE_SampleRate]
  1010 00000606 F7E3                    	mul	ebx
  1011                                  	; eax = transfer byte count for 5 seconds
  1012                                  
  1013 00000608 80F942                  	cmp	cl, 'B'
  1014 0000060B 8B0D[00820000]          	mov	ecx, [LoadedDataBytes]
  1015 00000611 7508                    	jne	short move_fw ; cl = 'F'
  1016                                  move_bw:
  1017 00000613 29C1                    	sub	ecx, eax
  1018 00000615 7314                    	jnc	short move_file_pointer
  1019                                  move_to_beginning:
  1020 00000617 31C9                    	xor	ecx, ecx ; 0
  1021 00000619 EB10                    	jmp	short move_file_pointer
  1022                                  move_fw: 
  1023 0000061B 01C1                    	add	ecx, eax
  1024 0000061D 720A                    	jc	short move_to_end
  1025 0000061F 8B1D[78770000]          	mov	ebx, [DATA_SubchunkSize]
  1026 00000625 39D9                    	cmp	ecx, ebx
  1027 00000627 7602                    	jna	short move_file_pointer
  1028                                  move_to_end:
  1029 00000629 89D9                    	mov	ecx, ebx
  1030                                  move_file_pointer:
  1031 0000062B 890D[00820000]          	mov	[LoadedDataBytes], ecx
  1032 00000631 83C12C                  	add	ecx, 44 ; + header
  1033                                  
  1034                                  	; seek
  1035 00000634 31D2                    	xor	edx, edx ; offset from beginning of the file
  1036                                  	; ecx = offset	
  1037                                  	; ebx = file handle
  1038                                  	; edx = 0
  1039                                  	sys	_seek, [FileHandle]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000636 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000063C B813000000          <1>  mov eax, %1
    96                              <1> 
    97 00000641 CD40                <1>  int 40h
  1040                                  
  1041 00000643 C3                      	retn
  1042                                  
  1043                                  ;=============================================================================
  1044                                  ; Wave Data Loading procedure for Sound Blaster 16 (there is not a conversion)
  1045                                  ;=============================================================================
  1046                                  
  1047                                  	; 09/02/2025
  1048                                  SB16_LoadFromFile:
  1049 00000644 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1050                                  					; last of the file?
  1051 0000064B 7402                    	jz	short sblff_0		; no
  1052 0000064D F9                      	stc
  1053 0000064E C3                      	retn
  1054                                  
  1055                                  sblff_0:
  1056                                  	; edi = audio buffer address
  1057                                  
  1058                                  	; load/read file
  1059                                  	; --------------
  1060                                  	; ebx = file handle
  1061                                  	; ecx = buffer
  1062                                  	; edx = read count
  1063                                  
  1064                                  	sys 	_read, [FileHandle], edi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000064F 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000655 89F9                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000657 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000065D B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000662 CD40                <1>  int 40h
  1065 00000664 721A                    	jc	short sblff_2 ; error !
  1066                                  
  1067 00000666 A3[FC810000]            	mov	[count], eax
  1068                                  
  1069 0000066B 39D0                    	cmp	eax, edx
  1070 0000066D 7410                    	je	short _endLFF
  1071                                  
  1072                                  	; edi = buffer address
  1073 0000066F 01C7                    	add	edi, eax
  1074                                  sblff_1:
  1075 00000671 89D1                    	mov	ecx, edx
  1076 00000673 E80C000000              	call    sb_padfill		; blank pad the remainder
  1077                                          ;clc				; don't exit with CY yet.
  1078 00000678 800D[D1770000]01                or	byte [flags], ENDOFFILE	; end of file flag
  1079                                  	; 07/02/2025
  1080                                  	;cmp	word [count], 1
  1081                                  _endLFF:
  1082 0000067F C3                              retn
  1083                                  
  1084                                  sblff_2:
  1085 00000680 31C0                    	xor	eax, eax
  1086 00000682 EBED                    	jmp	short sblff_1
  1087                                  
  1088                                  ;-----------------------------------------------------------------------------
  1089                                  
  1090                                  sb_padfill:
  1091                                  	; edi = offset (to be filled with ZEROs)
  1092                                  	; eax = number of bytes loaded
  1093                                  	; ecx = buffer size (> loaded bytes)
  1094 00000684 29C1                    	sub	ecx, eax
  1095 00000686 31C0                    	xor	eax, eax
  1096 00000688 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  1097 0000068F 7702                    	ja	short padfill@
  1098 00000691 B080                    	mov	al, 80h
  1099                                  padfill@:
  1100 00000693 F3AA                    	rep	stosb
  1101 00000695 C3                      	retn
  1102                                  
  1103                                  ;=============================================================================
  1104                                  ; AC97 procedures - load and convert sound data
  1105                                  ;=============================================================================
  1106                                  
  1107                                  	; 09/02/2025
  1108                                  
  1109                                  ;-----------------------------------------------------------------------------
  1110                                  ; /////
  1111                                  ;-----------------------------------------------------------------------------
  1112                                  
  1113                                  	; 05/02/2025 - ac97play.s
  1114                                  loadFromFile:
  1115 00000696 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1116                                  					; last of the file?
  1117 0000069D 7402                    	jz	short lff_0		; no
  1118 0000069F F9                      	stc
  1119 000006A0 C3                      	retn
  1120                                  
  1121                                  lff_0:
  1122                                  	; edi = audio buffer address
  1123                                  
  1124 000006A1 803D[D0770000]00        	cmp	byte [fbs_shift], 0
  1125 000006A8 7675                    	jna	short lff_1 ; stereo, 16 bit
  1126                                  
  1127                                  lff_2:
  1128                                  	;; fbs_shift =
  1129                                  	;;	2 for mono and 8 bit sample (multiplier = 4)
  1130                                  	;;	1 for mono or 8 bit sample (multiplier = 2)
  1131                                  	;;;;;;	0 for stereo and 16 bit sample (multiplier = 1)
  1132                                  	
  1133 000006AA BE[00000200]            	mov	esi, temp_buffer 
  1134                                  
  1135                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000006AF 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000006B5 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000006B7 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000006BD B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000006C2 CD40                <1>  int 40h
  1136 000006C4 0F8286000000            	jc	lff_4 ; error !
  1137                                  
  1138 000006CA A3[FC810000]            	mov	[count], eax
  1139                                  
  1140 000006CF 21C0                    	and	eax, eax
  1141 000006D1 747F                    	jz	lff_10
  1142                                  
  1143 000006D3 8A1D[D0770000]          	mov	bl, [fbs_shift]
  1144                                  
  1145 000006D9 89FA                    	mov	edx, edi ; audio buffer start address
  1146                                  
  1147 000006DB 89C1                    	mov	ecx, eax
  1148 000006DD 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8 ; bits per sample (8 or 16)
  1149 000006E4 751E                    	jne	short lff_7 ; 16 bit samples
  1150                                  	; 8 bit samples
  1151 000006E6 FECB                    	dec	bl  ; shift count, 1 = stereo, 2 = mono
  1152 000006E8 740E                    	jz	short lff_6 ; 8 bit, stereo
  1153                                  lff_5:
  1154                                  	; mono & 8 bit
  1155 000006EA AC                      	lodsb
  1156 000006EB 2C80                    	sub	al, 80h
  1157 000006ED C1E008                  	shl	eax, 8 ; convert 8 bit sample to 16 bit sample
  1158 000006F0 66AB                    	stosw	; left channel
  1159 000006F2 66AB                    	stosw	; right channel
  1160 000006F4 E2F4                    	loop	lff_5
  1161 000006F6 EB16                    	jmp	short lff_9	
  1162                                  lff_6:
  1163                                  	; stereo & 8 bit
  1164 000006F8 AC                      	lodsb
  1165 000006F9 2C80                    	sub	al, 80h
  1166 000006FB C1E008                  	shl	eax, 8 ; convert 8 bit sample to 16 bit sample
  1167 000006FE 66AB                    	stosw
  1168 00000700 E2F6                    	loop	lff_6			
  1169 00000702 EB0A                    	jmp	short lff_9
  1170                                  lff_7:
  1171 00000704 D1E9                    	shr	ecx, 1 ; word count
  1172                                  lff_8:
  1173 00000706 66AD                    	lodsw
  1174 00000708 66AB                    	stosw	; left channel
  1175 0000070A 66AB                    	stosw	; right channel
  1176 0000070C E2F8                    	loop	lff_8
  1177                                  lff_9:
  1178 0000070E 89F8                    	mov	eax, edi
  1179 00000710 8B0D[F8810000]          	mov	ecx, [buffersize] ; words
  1180 00000716 D1E1                    	shl	ecx, 1 ; bytes
  1181 00000718 01D1                    	add	ecx, edx ; + buffer start address
  1182 0000071A 39C8                    	cmp	eax, ecx
  1183 0000071C 7225                    	jb	short lff_3
  1184 0000071E C3                      	retn
  1185                                  
  1186                                  lff_1:  
  1187                                  	; edi = audio buffer address
  1188                                  
  1189                                  	; load/read file
  1190                                  	; --------------
  1191                                  	; ebx = file handle
  1192                                  	; ecx = buffer
  1193                                  	; edx = read count
  1194                                  
  1195                                  	sys 	_read, [FileHandle], edi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000071F 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000725 89F9                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000727 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000072D B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000732 CD40                <1>  int 40h
  1196 00000734 721A                    	jc	short lff_4 ; error !
  1197                                  
  1198 00000736 A3[FC810000]            	mov	[count], eax
  1199                                  
  1200 0000073B 39D0                    	cmp	eax, edx
  1201 0000073D 7410                    	je	short endLFF
  1202                                  
  1203 0000073F 01C7                    	add	edi, eax
  1204                                  
  1205 00000741 89D1                    	mov	ecx, edx
  1206                                  lff_3:
  1207 00000743 E814000000              	call    padfill			; blank pad the remainder
  1208                                          ;clc				; don't exit with CY yet.
  1209 00000748 800D[D1770000]01                or	byte [flags], ENDOFFILE	; end of file flag
  1210                                  endLFF:
  1211 0000074F C3                              retn
  1212                                  lff_4:
  1213 00000750 31C0                    	xor	eax, eax
  1214                                  lff_10:
  1215 00000752 8B0D[F8810000]          	mov	ecx, [buffersize] ; samples
  1216 00000758 D1E1                    	shl	ecx, 1	; bytes
  1217 0000075A EBE7                    	jmp	short lff_3
  1218                                  
  1219                                  ;-----------------------------------------------------------------------------
  1220                                  
  1221                                  padfill:
  1222                                  	; edi = offset (to be filled with ZEROs)
  1223                                  	; eax = di = number of bytes loaded
  1224                                  	; ecx = buffer size (> loaded bytes)	
  1225                                  
  1226 0000075C 29C1                    	sub	ecx, eax
  1227 0000075E 31C0                    	xor	eax, eax
  1228 00000760 F3AA                    	rep	stosb
  1229 00000762 C3                      	retn
  1230                                  
  1231                                  ;-----------------------------------------------------------------------------
  1232                                  ; interpolation procedures
  1233                                  ;-----------------------------------------------------------------------------
  1234                                  
  1235                                  ; 09/02/2025
  1236                                  ; 05/02/2025 - ac97play.s
  1237                                  ;----------------------------------------------------------------------------
  1238                                  
  1239                                  ;;Note:	At the end of every buffer load,
  1240                                  ;;	during buffer switch/swap, there will be discontinuity
  1241                                  ;;	between the last converted sample and the 1st sample
  1242                                  ;;	of the next buffer.
  1243                                  ;;	(like as a dot noises vaguely between normal sound samples)
  1244                                  ;;	-To avoid this defect, the 1st sample of
  1245                                  ;;	the next buffer may be read from the wav file but
  1246                                  ;;	the file pointer would need to be set to 1 sample back
  1247                                  ;;	again via seek system call. Time comsumption problem! -
  1248                                  ;;
  1249                                  ;;	Erdogan Tan - 15/11/2023
  1250                                  ;;
  1251                                  ;;	((If entire wav data would be loaded at once.. conversion
  1252                                  ;;	defect/noise would disappear.. but for DOS, to keep
  1253                                  ;;	64KB buffer limit is important also it is important
  1254                                  ;;	for running under 1MB barrier without HIMEM.SYS or DPMI.
  1255                                  ;;	I have tested this program by using 2-30MB wav files.))
  1256                                  ;;
  1257                                  ;;	Test Computer:	ASUS desktop/mainboard, M2N4-SLI, 2010.
  1258                                  ;;			AMD Athlon 64 X2 2200 MHZ CPU.
  1259                                  ;;		       	NFORCE4 (CK804) AC97 audio hardware.
  1260                                  ;;			Realtek ALC850 codec.
  1261                                  ;;		       	Retro DOS v4.2 (MSDOS 6.22) operating system.
  1262                                  
  1263                                  ;-----------------------------------------------------------------------------
  1264                                  ;-----------------------------------------------------------------------------
  1265                                  
  1266                                  load_8khz_mono_8_bit:
  1267 00000763 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1268                                  					; last of the file?
  1269 0000076A 7402                    	jz	short lff8m_0		; no
  1270 0000076C F9                      	stc
  1271 0000076D C3                      	retn
  1272                                  
  1273                                  lff8m_0:
  1274                                  	; edi = audio buffer address
  1275                                  
  1276 0000076E BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1277                                  
  1278                                  	; load file into memory
  1279                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000773 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000779 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000077B 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000781 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000786 CD40                <1>  int 40h
  1280 00000788 7305                    	jnc	short lff8m_6
  1281 0000078A E9A8000000              	jmp	lff8m_5  ; error !
  1282                                  
  1283                                  lff8m_6:
  1284 0000078F A3[FC810000]            	mov	[count], eax
  1285                                  
  1286 00000794 21C0                    	and	eax, eax
  1287 00000796 0F849B000000            	jz	lff8_eof
  1288                                  
  1289 0000079C 89C1                    	mov	ecx, eax	; byte count
  1290                                  lff8m_1:
  1291 0000079E AC                      	lodsb
  1292 0000079F A2[D51E0000]            	mov	[previous_val], al
  1293 000007A4 2C80                    	sub	al, 80h
  1294 000007A6 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1295 000007AA 66AB                    	stosw		; original sample (left channel)
  1296 000007AC 66AB                    	stosw		; original sample (right channel)
  1297                                  	;xor	eax, eax
  1298 000007AE 8A06                    	mov	al, [esi]
  1299 000007B0 49                      	dec	ecx
  1300 000007B1 7502                    	jnz	short lff8m_2
  1301 000007B3 B080                    	mov	al, 80h
  1302                                  lff8m_2:
  1303                                  	;mov	[next_val], ax
  1304 000007B5 88C7                    	mov	bh, al	; [next_val]
  1305 000007B7 8A25[D51E0000]          	mov	ah, [previous_val]
  1306 000007BD 00E0                    	add	al, ah	; [previous_val]
  1307 000007BF D0D8                    	rcr	al, 1
  1308 000007C1 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample
  1309 000007C3 00E0                    	add	al, ah	; [previous_val]
  1310 000007C5 D0D8                    	rcr	al, 1	
  1311 000007C7 88C3                    	mov	bl, al 	; this is temporary interpolation value
  1312 000007C9 00E0                    	add	al, ah	; [previous_val]
  1313 000007CB D0D8                    	rcr	al, 1
  1314 000007CD 2C80                    	sub	al, 80h
  1315 000007CF 66C1E008                	shl	ax, 8
  1316 000007D3 66AB                    	stosw		; this is 1st interpolated sample (L)
  1317 000007D5 66AB                    	stosw		; this is 1st interpolated sample (R)
  1318 000007D7 88D8                    	mov	al, bl
  1319 000007D9 00D0                    	add	al, dl
  1320 000007DB D0D8                    	rcr	al, 1
  1321 000007DD 2C80                    	sub	al, 80h
  1322 000007DF 66C1E008                	shl	ax, 8
  1323 000007E3 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1324 000007E5 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1325 000007E7 88D0                    	mov	al, dl
  1326 000007E9 2C80                    	sub	al, 80h
  1327 000007EB 66C1E008                	shl	ax, 8
  1328 000007EF 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1329 000007F1 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1330                                  	;mov	al, [next_val]
  1331 000007F3 88F8                    	mov	al, bh
  1332 000007F5 00D0                    	add	al, dl
  1333 000007F7 D0D8                    	rcr	al, 1
  1334 000007F9 88C3                    	mov	bl, al	; this is temporary interpolation value
  1335 000007FB 00D0                    	add	al, dl
  1336 000007FD D0D8                    	rcr	al, 1
  1337 000007FF 2C80                    	sub	al, 80h
  1338 00000801 66C1E008                	shl	ax, 8
  1339 00000805 66AB                    	stosw		; this is 4th interpolated sample (L)
  1340 00000807 66AB                    	stosw		; this is 4th interpolated sample (R)
  1341                                  	;mov	al, [next_val]
  1342 00000809 88F8                    	mov	al, bh
  1343 0000080B 00D8                    	add	al, bl
  1344 0000080D D0D8                    	rcr	al, 1
  1345 0000080F 2C80                    	sub	al, 80h
  1346 00000811 66C1E008                	shl	ax, 8
  1347 00000815 66AB                    	stosw		; this is 5th interpolated sample (L)
  1348 00000817 66AB                    	stosw		; this is 5th interpolated sample (R)
  1349                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1350 00000819 09C9                    	or	ecx, ecx
  1351 0000081B 7581                    	jnz	short lff8m_1
  1352                                  
  1353                                  	; --------------
  1354                                  
  1355                                  lff8s_3:
  1356                                  lff8m_3:
  1357                                  lff8s2_3:
  1358                                  lff8m2_3:
  1359                                  lff16s_3:
  1360                                  lff16m_3:
  1361                                  lff16s2_3:
  1362                                  lff16m2_3:
  1363                                  lff24_3:
  1364                                  lff32_3:
  1365                                  lff44_3:
  1366                                  lff22_3:
  1367                                  lff11_3:
  1368                                  lff12_3:
  1369 0000081D 8B0D[F8810000]          	mov	ecx, [buffersize] ; buffer size in words
  1370 00000823 D1E1                    	shl	ecx, 1 ; buffer size in bytes
  1371 00000825 030D[08820000]          	add	ecx, [audio_buffer]
  1372 0000082B 29F9                    	sub	ecx, edi
  1373 0000082D 7607                    	jna	short lff8m_4
  1374                                  	;inc	ecx
  1375 0000082F C1E902                  	shr	ecx, 2
  1376 00000832 31C0                    	xor	eax, eax ; fill (remain part of) buffer with zeros
  1377 00000834 F3AB                    	rep	stosd
  1378                                  lff8m_4:
  1379                                  	;clc
  1380 00000836 C3                      	retn
  1381                                  
  1382                                  lff8s_5:
  1383                                  lff8m_5:
  1384                                  lff8s2_5:
  1385                                  lff8m2_5:
  1386                                  lff16s_5:
  1387                                  lff16m_5:
  1388                                  lff16s2_5:
  1389                                  lff16m2_5:
  1390                                  lff24_5:
  1391                                  lff32_5:
  1392                                  lff44_5:
  1393                                  lff22_5:
  1394                                  lff11_5:
  1395                                  lff12_5:
  1396                                  
  1397                                  lff8_eof:
  1398                                  lff16_eof:
  1399                                  lff24_eof:
  1400                                  lff32_eof:
  1401                                  lff44_eof:
  1402                                  lff22_eof:
  1403                                  lff11_eof:
  1404                                  lff12_eof:
  1405 00000837 C605[D1770000]01        	mov	byte [flags], ENDOFFILE
  1406 0000083E EBDD                    	jmp	short lff8m_3
  1407                                  
  1408                                  ;----------------------------------------------------------------------------
  1409                                  
  1410                                  load_8khz_stereo_8_bit:
  1411 00000840 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1412                                  					; last of the file?
  1413 00000847 7402                    	jz	short lff8s_0		; no
  1414 00000849 F9                      	stc
  1415 0000084A C3                      	retn
  1416                                  
  1417                                  lff8s_0:
  1418                                  	; edi = audio buffer address
  1419                                  
  1420 0000084B BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1421                                  
  1422                                  	; load file into memory
  1423                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000850 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000856 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000858 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000085E B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000863 CD40                <1>  int 40h
  1424 00000865 72D0                    	jc	short lff8s_5 ; error !
  1425                                  
  1426 00000867 A3[FC810000]            	mov	[count], eax
  1427                                  
  1428 0000086C D1E8                    	shr	eax, 1
  1429 0000086E 74C7                    	jz	short lff8_eof
  1430                                  
  1431 00000870 89C1                    	mov	ecx, eax	; word count
  1432                                  lff8s_1:
  1433 00000872 AC                      	lodsb
  1434 00000873 A2[D51E0000]            	mov	[previous_val_l], al
  1435 00000878 2C80                    	sub	al, 80h
  1436 0000087A 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1437 0000087E 66AB                    	stosw		; original sample (L)
  1438 00000880 AC                      	lodsb
  1439 00000881 A2[D71E0000]            	mov	[previous_val_r], al
  1440 00000886 2C80                    	sub	al, 80h
  1441 00000888 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1442 0000088C 66AB                    	stosw		; original sample (R)
  1443                                  
  1444                                  	;xor	eax, eax
  1445 0000088E 668B06                  	mov	ax, [esi]
  1446 00000891 49                      	dec	ecx
  1447 00000892 7504                    	jnz	short lff8s_2
  1448                                  		; convert 8 bit sample to 16 bit sample
  1449 00000894 66B88080                	mov	ax, 8080h
  1450                                  lff8s_2:
  1451 00000898 A2[D91E0000]            	mov	[next_val_l], al
  1452 0000089D 8825[DB1E0000]          	mov	[next_val_r], ah
  1453 000008A3 8A25[D51E0000]          	mov	ah, [previous_val_l]
  1454 000008A9 00E0                    	add	al, ah
  1455 000008AB D0D8                    	rcr	al, 1
  1456 000008AD 88C2                    	mov	dl, al	; this is interpolated middle (3th) sample (L)
  1457 000008AF 00E0                    	add	al, ah
  1458 000008B1 D0D8                    	rcr	al, 1	
  1459 000008B3 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1460 000008B5 00E0                    	add	al, ah
  1461 000008B7 D0D8                    	rcr	al, 1
  1462 000008B9 2C80                    	sub	al, 80h
  1463 000008BB 66C1E008                	shl	ax, 8
  1464 000008BF 66AB                    	stosw		; this is 1st interpolated sample (L)
  1465 000008C1 A0[DB1E0000]            	mov	al, [next_val_r]
  1466 000008C6 8A25[D71E0000]          	mov	ah, [previous_val_r]
  1467 000008CC 00E0                    	add	al, ah
  1468 000008CE D0D8                    	rcr	al, 1
  1469 000008D0 88C6                    	mov	dh, al	; this is interpolated middle (3th) sample (R)
  1470 000008D2 00E0                    	add	al, ah
  1471 000008D4 D0D8                    	rcr	al, 1
  1472 000008D6 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1473 000008D8 00E0                    	add	al, ah
  1474 000008DA D0D8                    	rcr	al, 1
  1475 000008DC 2C80                    	sub	al, 80h
  1476 000008DE 66C1E008                	shl	ax, 8
  1477 000008E2 66AB                    	stosw		; this is 1st interpolated sample (R)
  1478 000008E4 88D8                    	mov	al, bl
  1479 000008E6 00D0                    	add	al, dl
  1480 000008E8 D0D8                    	rcr	al, 1
  1481 000008EA 2C80                    	sub	al, 80h
  1482 000008EC 66C1E008                	shl	ax, 8
  1483 000008F0 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1484 000008F2 88F8                    	mov	al, bh
  1485 000008F4 00F0                    	add	al, dh
  1486 000008F6 D0D8                    	rcr	al, 1
  1487 000008F8 2C80                    	sub	al, 80h
  1488 000008FA 66C1E008                	shl	ax, 8
  1489 000008FE 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1490 00000900 88D0                    	mov	al, dl
  1491 00000902 2C80                    	sub	al, 80h
  1492 00000904 66C1E008                	shl	ax, 8
  1493 00000908 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1494 0000090A 88F0                    	mov	al, dh
  1495 0000090C 2C80                    	sub	al, 80h
  1496 0000090E 66C1E008                	shl	ax, 8
  1497 00000912 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1498 00000914 A0[D91E0000]            	mov	al, [next_val_l]
  1499 00000919 00D0                    	add	al, dl
  1500 0000091B D0D8                    	rcr	al, 1
  1501 0000091D 88C3                    	mov	bl, al	; this is temporary interpolation value (L)
  1502 0000091F 00D0                    	add	al, dl
  1503 00000921 D0D8                    	rcr	al, 1
  1504 00000923 2C80                    	sub	al, 80h
  1505 00000925 66C1E008                	shl	ax, 8
  1506 00000929 66AB                    	stosw		; this is 4th interpolated sample (L)
  1507 0000092B A0[DB1E0000]            	mov	al, [next_val_r]
  1508 00000930 00F0                    	add	al, dh
  1509 00000932 D0D8                    	rcr	al, 1
  1510 00000934 88C7                    	mov	bh, al	; this is temporary interpolation value (R)
  1511 00000936 00F0                    	add	al, dh
  1512 00000938 D0D8                    	rcr	al, 1
  1513 0000093A 2C80                    	sub	al, 80h
  1514 0000093C 66C1E008                	shl	ax, 8
  1515 00000940 66AB                    	stosw		; this is 4th interpolated sample (R)
  1516 00000942 A0[D91E0000]            	mov	al, [next_val_l]
  1517 00000947 00D8                    	add	al, bl
  1518 00000949 D0D8                    	rcr	al, 1
  1519 0000094B 2C80                    	sub	al, 80h
  1520 0000094D 66C1E008                	shl	ax, 8
  1521 00000951 66AB                    	stosw		; this is 5th interpolated sample (L)
  1522 00000953 A0[DB1E0000]            	mov	al, [next_val_r]
  1523 00000958 00F8                    	add	al, bh
  1524 0000095A D0D8                    	rcr	al, 1
  1525 0000095C 2C80                    	sub	al, 80h
  1526 0000095E 66C1E008                	shl	ax, 8
  1527 00000962 66AB                    	stosw		; this is 5th interpolated sample (R)
  1528                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1529 00000964 E305                    	jecxz	lff8s_6
  1530 00000966 E907FFFFFF              	jmp	lff8s_1
  1531                                  lff8s_6:
  1532 0000096B E9ADFEFFFF              	jmp	lff8s_3
  1533                                  
  1534                                  ;----------------------------------------------------------------------------
  1535                                  
  1536                                  load_8khz_mono_16_bit:
  1537 00000970 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1538                                  					; last of the file?
  1539 00000977 7402                    	jz	short lff8m2_0		; no
  1540 00000979 F9                      	stc
  1541 0000097A C3                      	retn
  1542                                  
  1543                                  lff8m2_0:
  1544                                  	; edi = audio buffer address
  1545                                  
  1546 0000097B BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1547                                  
  1548                                  	; load file into memory
  1549                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000980 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000986 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000988 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000098E B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000993 CD40                <1>  int 40h
  1550 00000995 0F82A0000000            	jc	lff8m2_7 ; error !
  1551                                  
  1552 0000099B A3[FC810000]            	mov	[count], eax
  1553                                  
  1554 000009A0 D1E8                    	shr	eax, 1
  1555 000009A2 7505                    	jnz	short lff8m2_8
  1556 000009A4 E98EFEFFFF              	jmp	lff8_eof
  1557                                  
  1558                                  lff8m2_8:
  1559 000009A9 89C1                    	mov	ecx, eax	; word count
  1560                                  lff8m2_1:
  1561 000009AB 66AD                    	lodsw
  1562 000009AD 66AB                    	stosw		; original sample (left channel)
  1563 000009AF 66AB                    	stosw		; original sample (right channel)
  1564 000009B1 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1565 000009B4 66A3[D51E0000]          	mov	[previous_val], ax
  1566 000009BA 668B06                  	mov	ax, [esi]
  1567 000009BD 49                      	dec	ecx
  1568 000009BE 7502                    	jnz	short lff8m2_2
  1569 000009C0 31C0                    	xor	eax, eax
  1570                                  lff8m2_2:
  1571 000009C2 80C480                  	add	ah, 80h ; convert sound level to 0-65535 format
  1572 000009C5 89C5                    	mov	ebp, eax ; [next_val]
  1573 000009C7 660305[D51E0000]        	add	ax, [previous_val]
  1574 000009CE 66D1D8                  	rcr	ax, 1
  1575 000009D1 89C2                    	mov	edx, eax ; this is interpolated middle (3th) sample
  1576 000009D3 660305[D51E0000]        	add	ax, [previous_val]
  1577 000009DA 66D1D8                  	rcr	ax, 1	; this is temporary interpolation value
  1578 000009DD 89C3                    	mov	ebx, eax 		
  1579 000009DF 660305[D51E0000]        	add	ax, [previous_val]
  1580 000009E6 66D1D8                  	rcr	ax, 1
  1581 000009E9 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1582 000009EC 66AB                    	stosw		; this is 1st interpolated sample (L)
  1583 000009EE 66AB                    	stosw		; this is 1st interpolated sample (R)
  1584 000009F0 89D8                    	mov	eax, ebx
  1585 000009F2 6601D0                  	add	ax, dx
  1586 000009F5 66D1D8                  	rcr	ax, 1
  1587 000009F8 80EC80                  	sub	ah, 80h
  1588 000009FB 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1589 000009FD 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1590 000009FF 89D0                    	mov	eax, edx
  1591 00000A01 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1592 00000A04 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1593 00000A06 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1594 00000A08 89E8                    	mov	eax, ebp
  1595 00000A0A 6601D0                  	add	ax, dx
  1596 00000A0D 66D1D8                  	rcr	ax, 1
  1597 00000A10 89C3                    	mov	ebx, eax ; this is temporary interpolation value
  1598 00000A12 6601D0                  	add	ax, dx
  1599 00000A15 66D1D8                  	rcr	ax, 1
  1600 00000A18 80EC80                  	sub	ah, 80h
  1601 00000A1B 66AB                    	stosw		; this is 4th interpolated sample (L)
  1602 00000A1D 66AB                    	stosw		; this is 4th interpolated sample (R)
  1603 00000A1F 89E8                    	mov	eax, ebp
  1604 00000A21 6601D8                  	add	ax, bx
  1605 00000A24 66D1D8                  	rcr	ax, 1
  1606 00000A27 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1607 00000A2A 66AB                    	stosw		; this is 5th interpolated sample (L)
  1608 00000A2C 66AB                    	stosw		; this is 5th interpolated sample (R)
  1609                                  	; 8 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1610 00000A2E 09C9                    	or	ecx, ecx
  1611 00000A30 0F8575FFFFFF            	jnz	lff8m2_1
  1612 00000A36 E9E2FDFFFF              	jmp	lff8m2_3
  1613                                  
  1614                                  lff8m2_7:
  1615                                  lff8s2_7:
  1616 00000A3B E9F7FDFFFF              	jmp	lff8m2_5  ; error
  1617                                  
  1618                                  ;----------------------------------------------------------------------------
  1619                                  
  1620                                  load_8khz_stereo_16_bit:
  1621 00000A40 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1622                                  					; last of the file?
  1623 00000A47 7402                    	jz	short lff8s2_0		; no
  1624 00000A49 F9                      	stc
  1625 00000A4A C3                      	retn
  1626                                  
  1627                                  lff8s2_0:
  1628                                  	; edi = audio buffer address
  1629                                  
  1630 00000A4B BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1631                                  
  1632                                  	; load file into memory
  1633                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000A50 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000A56 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000A58 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000A5E B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000A63 CD40                <1>  int 40h
  1634 00000A65 72D4                    	jc	short lff8s2_7 ; error !
  1635                                  
  1636 00000A67 A3[FC810000]            	mov	[count], eax
  1637                                  	
  1638 00000A6C C1E802                  	shr	eax, 2
  1639 00000A6F 7505                    	jnz	short lff8s2_8
  1640 00000A71 E9C1FDFFFF              	jmp	lff8_eof
  1641                                  
  1642                                  lff8s2_8:
  1643 00000A76 89C1                    	mov	ecx, eax ; dword count
  1644                                  lff8s2_1:
  1645 00000A78 66AD                    	lodsw
  1646 00000A7A 66AB                    	stosw		; original sample (L)
  1647 00000A7C 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1648 00000A7F 66A3[D51E0000]          	mov	[previous_val_l], ax
  1649 00000A85 66AD                    	lodsw
  1650 00000A87 66AB                    	stosw		; original sample (R)
  1651 00000A89 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1652 00000A8C 66A3[D71E0000]          	mov	[previous_val_r], ax
  1653 00000A92 668B06                  	mov	ax, [esi]
  1654 00000A95 668B5602                	mov	dx, [esi+2]
  1655 00000A99 49                      	dec	ecx
  1656 00000A9A 7504                    	jnz	short lff8s2_2
  1657 00000A9C 31D2                    	xor	edx, edx
  1658 00000A9E 31C0                    	xor	eax, eax
  1659                                  lff8s2_2:
  1660 00000AA0 80C480                  	add	ah, 80h	; convert sound level to 0-65535 format
  1661 00000AA3 66A3[D91E0000]          	mov	[next_val_l], ax
  1662 00000AA9 80C680                  	add	dh, 80h	; convert sound level to 0-65535 format
  1663 00000AAC 668915[DB1E0000]        	mov	[next_val_r], dx
  1664 00000AB3 660305[D51E0000]        	add	ax, [previous_val_l]
  1665 00000ABA 66D1D8                  	rcr	ax, 1
  1666 00000ABD 89C2                    	mov	edx, eax ; this is interpolated middle (3th) sample (L)
  1667 00000ABF 660305[D51E0000]        	add	ax, [previous_val_l]
  1668 00000AC6 66D1D8                  	rcr	ax, 1	
  1669 00000AC9 89C3                    	mov	ebx, eax ; this is temporary interpolation value (L)
  1670 00000ACB 660305[D51E0000]        	add	ax, [previous_val_l]
  1671 00000AD2 66D1D8                  	rcr	ax, 1
  1672 00000AD5 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1673 00000AD8 66AB                    	stosw		; this is 1st interpolated sample (L)
  1674 00000ADA 66A1[DB1E0000]          	mov	ax, [next_val_r]
  1675 00000AE0 660305[D71E0000]        	add	ax, [previous_val_r]
  1676 00000AE7 66D1D8                  	rcr	ax, 1
  1677 00000AEA 89C5                    	mov	ebp, eax ; this is interpolated middle (3th) sample (R)
  1678 00000AEC 660305[D71E0000]        	add	ax, [previous_val_r]
  1679 00000AF3 66D1D8                  	rcr	ax, 1
  1680 00000AF6 50                      	push	eax ; *	; this is temporary interpolation value (R)
  1681 00000AF7 660305[D71E0000]        	add	ax, [previous_val_r]
  1682 00000AFE 66D1D8                  	rcr	ax, 1
  1683 00000B01 80EC80                  	sub	ah, 80h
  1684 00000B04 66AB                    	stosw		; this is 1st interpolated sample (R)
  1685 00000B06 89D8                    	mov	eax, ebx
  1686 00000B08 6601D0                  	add	ax, dx
  1687 00000B0B 66D1D8                  	rcr	ax, 1
  1688 00000B0E 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1689 00000B11 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1690 00000B13 58                      	pop	eax ; *
  1691 00000B14 6601E8                  	add	ax, bp
  1692 00000B17 66D1D8                  	rcr	ax, 1
  1693 00000B1A 80EC80                  	sub	ah, 80h
  1694 00000B1D 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1695 00000B1F 89D0                    	mov	eax, edx
  1696 00000B21 80EC80                  	sub	ah, 80h
  1697 00000B24 66AB                    	stosw		; this is middle (3th) interpolated sample (L)
  1698 00000B26 89E8                    	mov	eax, ebp
  1699 00000B28 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1700 00000B2B 66AB                    	stosw		; this is middle (3th) interpolated sample (R)
  1701 00000B2D 66A1[D91E0000]          	mov	ax, [next_val_l]
  1702 00000B33 6601D0                  	add	ax, dx
  1703 00000B36 66D1D8                  	rcr	ax, 1
  1704 00000B39 89C3                    	mov	ebx, eax ; this is temporary interpolation value (L)
  1705 00000B3B 6601D0                  	add	ax, dx
  1706 00000B3E 66D1D8                  	rcr	ax, 1
  1707 00000B41 80EC80                  	sub	ah, 80h
  1708 00000B44 66AB                    	stosw		; this is 4th interpolated sample (L)
  1709 00000B46 66A1[DB1E0000]          	mov	ax, [next_val_r]
  1710 00000B4C 6601E8                  	add	ax, bp
  1711 00000B4F 66D1D8                  	rcr	ax, 1
  1712 00000B52 50                      	push	eax ; ** ; this is temporary interpolation value (R)
  1713 00000B53 6601E8                  	add	ax, bp
  1714 00000B56 66D1D8                  	rcr	ax, 1
  1715 00000B59 80EC80                  	sub	ah, 80h
  1716 00000B5C 66AB                    	stosw		; this is 4th interpolated sample (R)
  1717 00000B5E 66A1[D91E0000]          	mov	ax, [next_val_l]
  1718 00000B64 6601D8                  	add	ax, bx
  1719 00000B67 66D1D8                  	rcr	ax, 1
  1720 00000B6A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1721 00000B6D 66AB                    	stosw		; this is 5th interpolated sample (L)
  1722 00000B6F 58                      	pop	eax ; **
  1723 00000B70 660305[DB1E0000]        	add	ax, [next_val_r]
  1724 00000B77 66D1D8                  	rcr	ax, 1
  1725 00000B7A 80EC80                  	sub	ah, 80h
  1726 00000B7D 66AB                    	stosw		; this is 5th interpolated sample (R)
  1727                                  	; 8 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1728 00000B7F E305                    	jecxz	lff8_s2_9
  1729 00000B81 E9F2FEFFFF              	jmp	lff8s2_1
  1730                                  lff8_s2_9:
  1731 00000B86 E992FCFFFF              	jmp	lff8s2_3
  1732                                  
  1733                                  ;----------------------------------------------------------------------------
  1734                                  
  1735                                  load_16khz_mono_8_bit:
  1736 00000B8B F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1737                                  					; last of the file?
  1738 00000B92 7402                    	jz	short lff16m_0		; no
  1739 00000B94 F9                      	stc
  1740 00000B95 C3                      	retn
  1741                                  
  1742                                  lff16m_0:
  1743                                  	; edi = audio buffer address
  1744                                  
  1745 00000B96 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1746                                  
  1747                                  	; load file into memory
  1748                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000B9B 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000BA1 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000BA3 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000BA9 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000BAE CD40                <1>  int 40h
  1749 00000BB0 7253                    	jc	short lff16m_7 ; error !
  1750                                  
  1751 00000BB2 A3[FC810000]            	mov	[count], eax
  1752                                  	
  1753 00000BB7 21C0                    	and	eax, eax
  1754 00000BB9 7505                    	jnz	short lff16m_8
  1755 00000BBB E977FCFFFF              	jmp	lff16_eof
  1756                                  
  1757                                  lff16m_8:
  1758 00000BC0 89C1                    	mov	ecx, eax		; byte count
  1759                                  lff16m_1:
  1760 00000BC2 AC                      	lodsb
  1761                                  	;mov	[previous_val], al
  1762 00000BC3 88C3                    	mov	bl, al
  1763 00000BC5 2C80                    	sub	al, 80h
  1764 00000BC7 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1765 00000BCB 66AB                    	stosw		; original sample (left channel)
  1766 00000BCD 66AB                    	stosw		; original sample (right channel)
  1767                                  	;xor	eax, eax
  1768 00000BCF 8A06                    	mov	al, [esi]
  1769 00000BD1 49                      	dec	ecx
  1770 00000BD2 7502                    	jnz	short lff16m_2
  1771 00000BD4 B080                    	mov	al, 80h
  1772                                  lff16m_2:
  1773                                  	;mov	[next_val], al
  1774 00000BD6 88C7                    	mov	bh, al
  1775                                  	;add	al, [previous_val]
  1776 00000BD8 00D8                    	add	al, bl
  1777 00000BDA D0D8                    	rcr	al, 1
  1778 00000BDC 88C2                    	mov	dl, al	; this is interpolated middle (temp) sample
  1779                                  	;add	al, [previous_val]
  1780 00000BDE 00D8                    	add	al, bl
  1781 00000BE0 D0D8                    	rcr	al, 1
  1782 00000BE2 2C80                    	sub	al, 80h
  1783 00000BE4 66C1E008                	shl	ax, 8
  1784 00000BE8 66AB                    	stosw		; this is 1st interpolated sample (L)
  1785 00000BEA 66AB                    	stosw		; this is 1st interpolated sample (R)
  1786                                  	;mov	al, [next_val]
  1787 00000BEC 88F8                    	mov	al, bh
  1788 00000BEE 00D0                    	add	al, dl
  1789 00000BF0 D0D8                    	rcr	al, 1
  1790 00000BF2 2C80                    	sub	al, 80h
  1791 00000BF4 66C1E008                	shl	ax, 8
  1792 00000BF8 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1793 00000BFA 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1794                                  	
  1795                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1796 00000BFC 09C9                    	or	ecx, ecx
  1797 00000BFE 75C2                    	jnz	short lff16m_1
  1798 00000C00 E918FCFFFF              	jmp	lff16m_3
  1799                                  
  1800                                  lff16m_7:
  1801                                  lff16s_7:
  1802 00000C05 E92DFCFFFF              	jmp	lff16m_5  ; error
  1803                                  
  1804                                  ;----------------------------------------------------------------------------
  1805                                  
  1806                                  load_16khz_stereo_8_bit:
  1807 00000C0A F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1808                                  					; last of the file?
  1809 00000C11 7402                    	jz	short lff16s_0		; no
  1810 00000C13 F9                      	stc
  1811 00000C14 C3                      	retn
  1812                                  
  1813                                  lff16s_0:
  1814                                  	; edi = audio buffer address
  1815                                  
  1816 00000C15 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1817                                  
  1818                                  	; load file into memory
  1819                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000C1A 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000C20 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000C22 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000C28 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000C2D CD40                <1>  int 40h
  1820 00000C2F 72D4                    	jc	short lff16s_7 ; error !
  1821                                  
  1822 00000C31 A3[FC810000]            	mov	[count], eax
  1823                                  
  1824 00000C36 D1E8                    	shr	eax, 1
  1825 00000C38 7505                    	jnz	short lff16s_8
  1826 00000C3A E9F8FBFFFF              	jmp	lff16_eof
  1827                                  
  1828                                  lff16s_8:
  1829 00000C3F 89C1                    	mov	ecx, eax	; word count
  1830                                  lff16s_1:
  1831 00000C41 AC                      	lodsb
  1832 00000C42 A2[D51E0000]            	mov	[previous_val_l], al
  1833 00000C47 2C80                    	sub	al, 80h
  1834 00000C49 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1835 00000C4D 66AB                    	stosw		; original sample (L)
  1836 00000C4F AC                      	lodsb
  1837 00000C50 A2[D71E0000]            	mov	[previous_val_r], al
  1838 00000C55 2C80                    	sub	al, 80h
  1839 00000C57 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  1840 00000C5B 66AB                    	stosw		; original sample (R)
  1841                                  
  1842                                  	;xor	eax, eax
  1843 00000C5D 668B06                  	mov	ax, [esi]
  1844 00000C60 49                      	dec	ecx
  1845 00000C61 7504                    	jnz	short lff16s_2
  1846                                  		; convert 8 bit sample to 16 bit sample
  1847 00000C63 66B88080                	mov	ax, 8080h
  1848                                  lff16s_2:
  1849                                  	;mov	[next_val_l], al
  1850                                  	;mov	[next_val_r], ah
  1851 00000C67 89C3                    	mov	ebx, eax
  1852 00000C69 0205[D51E0000]          	add	al, [previous_val_l]
  1853 00000C6F D0D8                    	rcr	al, 1
  1854 00000C71 88C2                    	mov	dl, al	; this is temporary interpolation value (L)
  1855 00000C73 0205[D51E0000]          	add	al, [previous_val_l]
  1856 00000C79 D0D8                    	rcr	al, 1
  1857 00000C7B 2C80                    	sub	al, 80h
  1858 00000C7D 66C1E008                	shl	ax, 8
  1859 00000C81 66AB                    	stosw		; this is 1st interpolated sample (L)
  1860 00000C83 88F8                    	mov	al, bh	; [next_val_r]
  1861 00000C85 0205[D71E0000]          	add	al, [previous_val_r]
  1862 00000C8B D0D8                    	rcr	al, 1
  1863 00000C8D 88C6                    	mov	dh, al	; this is temporary interpolation value (R)
  1864 00000C8F 0205[D71E0000]          	add	al, [previous_val_r]
  1865 00000C95 D0D8                    	rcr	al, 1
  1866 00000C97 2C80                    	sub	al, 80h
  1867 00000C99 66C1E008                	shl	ax, 8
  1868 00000C9D 66AB                    	stosw		; this is 1st interpolated sample (R)
  1869 00000C9F 88D0                    	mov	al, dl
  1870 00000CA1 00D8                    	add	al, bl	; [next_val_l]
  1871 00000CA3 D0D8                    	rcr	al, 1
  1872 00000CA5 2C80                    	sub	al, 80h
  1873 00000CA7 66C1E008                	shl	ax, 8
  1874 00000CAB 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1875 00000CAD 88F0                    	mov	al, dh
  1876 00000CAF 00F8                    	add	al, bh	; [next_val_r]
  1877 00000CB1 D0D8                    	rcr	al, 1
  1878 00000CB3 2C80                    	sub	al, 80h
  1879 00000CB5 66C1E008                	shl	ax, 8
  1880 00000CB9 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  1881                                  	
  1882                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  1883 00000CBB 09C9                    	or	ecx, ecx
  1884 00000CBD 7582                    	jnz	short lff16s_1
  1885 00000CBF E959FBFFFF              	jmp	lff16s_3
  1886                                  
  1887                                  ;----------------------------------------------------------------------------
  1888                                  
  1889                                  load_16khz_mono_16_bit:
  1890 00000CC4 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1891                                  					; last of the file?
  1892 00000CCB 7402                    	jz	short lff16m2_0		; no
  1893 00000CCD F9                      	stc
  1894 00000CCE C3                      	retn
  1895                                  
  1896                                  lff16m2_0:
  1897                                  	; edi = audio buffer address
  1898                                  
  1899 00000CCF BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1900                                  
  1901                                  	; load file into memory
  1902                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000CD4 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000CDA 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000CDC 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000CE2 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000CE7 CD40                <1>  int 40h
  1903 00000CE9 7255                    	jc	short lff16m2_7 ; error !
  1904                                  
  1905 00000CEB A3[FC810000]            	mov	[count], eax
  1906                                  	
  1907 00000CF0 D1E8                    	shr	eax, 1
  1908 00000CF2 7505                    	jnz	short lff16m2_8
  1909 00000CF4 E93EFBFFFF              	jmp	lff16_eof
  1910                                  
  1911                                  lff16m2_8:
  1912 00000CF9 89C1                    	mov	ecx, eax  ; word count
  1913                                  lff16m2_1:
  1914 00000CFB 66AD                    	lodsw
  1915 00000CFD 66AB                    	stosw		; original sample (left channel)
  1916 00000CFF 66AB                    	stosw		; original sample (right channel)
  1917 00000D01 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  1918                                  	;mov	[previous_val], ax
  1919 00000D04 89C3                    	mov	ebx, eax
  1920 00000D06 668B06                  	mov	ax, [esi]
  1921 00000D09 49                      	dec	ecx
  1922 00000D0A 7502                    	jnz	short lff16m2_2
  1923 00000D0C 31C0                    	xor	eax, eax
  1924                                  lff16m2_2:
  1925 00000D0E 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  1926 00000D11 89C5                    	mov	ebp, eax ; [next_val]
  1927                                  	;add	ax, [previous_val]
  1928 00000D13 6601D8                  	add	ax, bx
  1929 00000D16 66D1D8                  	rcr	ax, 1
  1930 00000D19 89C2                    	mov	edx, eax ; this is temporary interpolation value
  1931                                  	;add	ax, [previous_val]
  1932 00000D1B 6601D8                  	add	ax, bx
  1933 00000D1E 66D1D8                  	rcr	ax, 1
  1934 00000D21 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1935 00000D24 66AB                    	stosw		; this is 1st interpolated sample (L)
  1936 00000D26 66AB                    	stosw		; this is 1st interpolated sample (R)
  1937 00000D28 89E8                    	mov	eax, ebp 
  1938 00000D2A 6601D0                  	add	ax, dx
  1939 00000D2D 66D1D8                  	rcr	ax, 1
  1940 00000D30 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  1941 00000D33 66AB                    	stosw		; this is 2nd interpolated sample (L)
  1942 00000D35 66AB                    	stosw		; this is 2nd interpolated sample (R)
  1943                                  	; 16 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  1944 00000D37 09C9                    	or	ecx, ecx
  1945 00000D39 75C0                    	jnz	short lff16m2_1
  1946 00000D3B E9DDFAFFFF              	jmp	lff16m2_3
  1947                                  
  1948                                  lff16m2_7:
  1949                                  lff16s2_7:
  1950 00000D40 E9F2FAFFFF              	jmp	lff16m2_5  ; error
  1951                                  
  1952                                  ;----------------------------------------------------------------------------
  1953                                  
  1954                                  load_16khz_stereo_16_bit:
  1955 00000D45 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  1956                                  					; last of the file?
  1957 00000D4C 7402                    	jz	short lff16s2_0		; no
  1958 00000D4E F9                      	stc
  1959 00000D4F C3                      	retn
  1960                                  
  1961                                  lff16s2_0:
  1962                                  	; edi = audio buffer address
  1963                                  
  1964 00000D50 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  1965                                  
  1966                                  	; load file into memory
  1967                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000D55 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000D5B 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000D5D 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000D63 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000D68 CD40                <1>  int 40h
  1968 00000D6A 72D4                    	jc	short lff16s2_7 ; error !
  1969                                  
  1970 00000D6C A3[FC810000]            	mov	[count], eax
  1971                                  	
  1972 00000D71 C1E802                  	shr	eax, 2
  1973 00000D74 7505                    	jnz	short lff16s2_8
  1974 00000D76 E9BCFAFFFF              	jmp	lff16_eof
  1975                                  
  1976                                  lff16s2_8:
  1977 00000D7B 89C1                    	mov	ecx, eax  ; dword count
  1978                                  lff16s2_1:
  1979 00000D7D 66AD                    	lodsw
  1980 00000D7F 66AB                    	stosw		; original sample (L)
  1981 00000D81 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  1982 00000D84 66A3[D51E0000]          	mov	[previous_val_l], ax
  1983 00000D8A 66AD                    	lodsw
  1984 00000D8C 66AB                    	stosw		; original sample (R)
  1985 00000D8E 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  1986 00000D91 66A3[D71E0000]          	mov	[previous_val_r], ax
  1987 00000D97 668B06                  	mov	ax, [esi]
  1988 00000D9A 668B5602                	mov	dx, [esi+2]
  1989 00000D9E 49                      	dec	ecx
  1990 00000D9F 7504                    	jnz	short lff16s2_2
  1991 00000DA1 31D2                    	xor	edx, edx
  1992 00000DA3 31C0                    	xor	eax, eax
  1993                                  lff16s2_2:
  1994 00000DA5 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format 
  1995                                  	;mov	[next_val_l], ax
  1996 00000DA8 89C5                    	mov	ebp, eax
  1997 00000DAA 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format 
  1998 00000DAD 668915[DB1E0000]        	mov	[next_val_r], dx
  1999 00000DB4 660305[D51E0000]        	add	ax, [previous_val_l]
  2000 00000DBB 66D1D8                  	rcr	ax, 1
  2001 00000DBE 89C2                    	mov	edx, eax ; this is temporary interpolation value (L)
  2002 00000DC0 660305[D51E0000]        	add	ax, [previous_val_l]
  2003 00000DC7 66D1D8                  	rcr	ax, 1
  2004 00000DCA 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2005 00000DCD 66AB                    	stosw		; this is 1st interpolated sample (L)
  2006 00000DCF 66A1[DB1E0000]          	mov	ax, [next_val_r]
  2007 00000DD5 660305[D71E0000]        	add	ax, [previous_val_r]
  2008 00000DDC 66D1D8                  	rcr	ax, 1
  2009 00000DDF 89C3                    	mov	ebx, eax ; this is temporary interpolation value (R)
  2010 00000DE1 660305[D71E0000]        	add	ax, [previous_val_r]
  2011 00000DE8 66D1D8                  	rcr	ax, 1
  2012 00000DEB 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2013 00000DEE 66AB                    	stosw		; this is 1st interpolated sample (R)
  2014                                  	;mov	ax, [next_val_l]
  2015 00000DF0 89E8                    	mov	eax, ebp
  2016 00000DF2 6601D0                  	add	ax, dx
  2017 00000DF5 66D1D8                  	rcr	ax, 1
  2018 00000DF8 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2019 00000DFB 66AB                    	stosw		; this is 2nd interpolated sample (L)
  2020 00000DFD 66A1[DB1E0000]          	mov	ax, [next_val_r]
  2021 00000E03 6601D8                  	add	ax, bx
  2022 00000E06 66D1D8                  	rcr	ax, 1
  2023 00000E09 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2024 00000E0C 66AB                    	stosw 		; this is 2nd interpolated sample (R)
  2025                                  	
  2026                                  	; 16 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2027 00000E0E 09C9                    	or	ecx, ecx
  2028 00000E10 0F8567FFFFFF            	jnz	lff16s2_1
  2029 00000E16 E902FAFFFF              	jmp	lff16s2_3
  2030                                  
  2031                                  ;----------------------------------------------------------------------------
  2032                                  
  2033                                  load_24khz_mono_8_bit:
  2034 00000E1B F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2035                                  					; last of the file?
  2036 00000E22 7402                    	jz	short lff24m_0		; no
  2037 00000E24 F9                      	stc
  2038 00000E25 C3                      	retn
  2039                                  
  2040                                  lff24m_0:
  2041                                  	; edi = audio buffer address
  2042                                  
  2043 00000E26 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2044                                  
  2045                                  	; load file into memory
  2046                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000E2B 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000E31 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000E33 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000E39 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000E3E CD40                <1>  int 40h
  2047 00000E40 723B                    	jc	short lff24m_7 ; error !
  2048                                  
  2049 00000E42 A3[FC810000]            	mov	[count], eax
  2050                                  	
  2051 00000E47 21C0                    	and	eax, eax
  2052 00000E49 7505                    	jnz	short lff24m_8
  2053 00000E4B E9E7F9FFFF              	jmp	lff24_eof
  2054                                  
  2055                                  lff24m_8:
  2056 00000E50 89C1                    	mov	ecx, eax	; byte count
  2057                                  lff24m_1:
  2058 00000E52 AC                      	lodsb
  2059                                  	;mov	[previous_val], al
  2060 00000E53 88C3                    	mov	bl, al
  2061 00000E55 2C80                    	sub	al, 80h
  2062 00000E57 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2063 00000E5B 66AB                    	stosw		; original sample (left channel)
  2064 00000E5D 66AB                    	stosw		; original sample (right channel)
  2065                                  	;xor	eax, eax
  2066 00000E5F 8A06                    	mov	al, [esi]
  2067 00000E61 49                      	dec	ecx
  2068 00000E62 7502                    	jnz	short lff24m_2
  2069 00000E64 B080                    	mov	al, 80h
  2070                                  lff24m_2:
  2071                                  	;;mov	[next_val], al
  2072                                  	;mov	bh, al
  2073                                  	;add	al, [previous_val]
  2074 00000E66 00D8                    	add	al, bl
  2075 00000E68 D0D8                    	rcr	al, 1
  2076 00000E6A 2C80                    	sub	al, 80h
  2077 00000E6C 66C1E008                	shl	ax, 8
  2078 00000E70 66AB                    	stosw		; this is interpolated sample (L)
  2079 00000E72 66AB                    	stosw		; this is interpolated sample (R)
  2080                                  	
  2081                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2082 00000E74 09C9                    	or	ecx, ecx
  2083 00000E76 75DA                    	jnz	short lff24m_1
  2084 00000E78 E9A0F9FFFF              	jmp	lff24_3
  2085                                  
  2086                                  lff24m_7:
  2087                                  lff24s_7:
  2088 00000E7D E9B5F9FFFF              	jmp	lff24_5  ; error
  2089                                  
  2090                                  ;----------------------------------------------------------------------------
  2091                                  
  2092                                  load_24khz_stereo_8_bit:
  2093 00000E82 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2094                                  					; last of the file?
  2095 00000E89 7402                    	jz	short lff24s_0		; no
  2096 00000E8B F9                      	stc
  2097 00000E8C C3                      	retn
  2098                                  
  2099                                  lff24s_0:
  2100                                  	; edi = audio buffer address
  2101                                  
  2102 00000E8D BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2103                                  
  2104                                  	; load file into memory
  2105                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000E92 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000E98 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000E9A 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000EA0 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000EA5 CD40                <1>  int 40h
  2106 00000EA7 72D4                    	jc	short lff24s_7 ; error !
  2107                                  
  2108 00000EA9 A3[FC810000]            	mov	[count], eax
  2109                                  
  2110 00000EAE D1E8                    	shr	eax, 1
  2111 00000EB0 7505                    	jnz	short lff24s_8
  2112 00000EB2 E980F9FFFF              	jmp	lff24_eof
  2113                                  
  2114                                  lff24s_8:
  2115 00000EB7 89C1                    	mov	ecx, eax  ; word count
  2116                                  lff24s_1:
  2117 00000EB9 AC                      	lodsb
  2118 00000EBA A2[D51E0000]            	mov	[previous_val_l], al
  2119 00000EBF 2C80                    	sub	al, 80h
  2120 00000EC1 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2121 00000EC5 66AB                    	stosw		; original sample (L)
  2122 00000EC7 AC                      	lodsb
  2123 00000EC8 A2[D71E0000]            	mov	[previous_val_r], al
  2124 00000ECD 2C80                    	sub	al, 80h
  2125 00000ECF 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2126 00000ED3 66AB                    	stosw		; original sample (R)
  2127                                  
  2128                                  	;xor	eax, eax
  2129 00000ED5 668B06                  	mov	ax, [esi]
  2130 00000ED8 49                      	dec	ecx
  2131 00000ED9 7504                    	jnz	short lff24s_2
  2132                                  		; convert 8 bit sample to 16 bit sample
  2133 00000EDB 66B88080                	mov	ax, 8080h
  2134                                  lff24s_2:
  2135                                  	;;mov	[next_val_l], al
  2136                                  	;;mov	[next_val_r], ah
  2137                                  	;mov	bx, ax
  2138 00000EDF 88E7                    	mov	bh, ah
  2139 00000EE1 0205[D51E0000]          	add	al, [previous_val_l]
  2140 00000EE7 D0D8                    	rcr	al, 1
  2141                                  	;mov	dl, al
  2142 00000EE9 2C80                    	sub	al, 80h
  2143 00000EEB 66C1E008                	shl	ax, 8
  2144 00000EEF 66AB                    	stosw		; this is interpolated sample (L)
  2145 00000EF1 88F8                    	mov	al, bh	; [next_val_r]
  2146 00000EF3 0205[D71E0000]          	add	al, [previous_val_r]
  2147 00000EF9 D0D8                    	rcr	al, 1
  2148                                  	;mov	dh, al
  2149 00000EFB 2C80                    	sub	al, 80h
  2150 00000EFD 66C1E008                	shl	ax, 8
  2151 00000F01 66AB                    	stosw		; this is interpolated sample (R)
  2152                                  		
  2153                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2154 00000F03 09C9                    	or	ecx, ecx
  2155 00000F05 75B2                    	jnz	short lff24s_1
  2156 00000F07 E911F9FFFF              	jmp	lff24_3
  2157                                  
  2158                                  ;----------------------------------------------------------------------------
  2159                                  
  2160                                  load_24khz_mono_16_bit:
  2161 00000F0C F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2162                                  					; last of the file?
  2163 00000F13 7402                    	jz	short lff24m2_0		; no
  2164 00000F15 F9                      	stc
  2165 00000F16 C3                      	retn
  2166                                  
  2167                                  lff24m2_0:
  2168                                  	; edi = audio buffer address
  2169                                  
  2170 00000F17 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2171                                  
  2172                                  	; load file into memory
  2173                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000F1C 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000F22 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000F24 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000F2A B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000F2F CD40                <1>  int 40h
  2174 00000F31 723A                    	jc	short lff24m2_7 ; error !
  2175                                  
  2176 00000F33 A3[FC810000]            	mov	[count], eax
  2177                                  
  2178 00000F38 D1E8                    	shr	eax, 1
  2179 00000F3A 7505                    	jnz	short lff24m2_8
  2180 00000F3C E9F6F8FFFF              	jmp	lff24_eof
  2181                                  
  2182                                  lff24m2_8:
  2183 00000F41 89C1                    	mov	ecx, eax  ; word count
  2184                                  lff24m2_1:
  2185 00000F43 66AD                    	lodsw
  2186 00000F45 66AB                    	stosw		; original sample (left channel)
  2187 00000F47 66AB                    	stosw		; original sample (right channel)
  2188 00000F49 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2189                                  	;mov	[previous_val], ax
  2190                                  	;mov	ebx, eax
  2191 00000F4C 668B1E                  	mov	bx, [esi]
  2192 00000F4F 49                      	dec	ecx
  2193 00000F50 7502                    	jnz	short lff24m2_2
  2194                                  	;xor	eax, eax
  2195 00000F52 31DB                    	xor	ebx, ebx
  2196                                  lff24m2_2:
  2197 00000F54 80C780                  	add	bh, 80h ; convert sound level 0 to 65535 format
  2198                                  	;add	ah, 80h
  2199                                  	;mov	ebp, eax	; [next_val]
  2200                                  	;add	ax, [previous_val]
  2201                                  	; ax = [previous_val]
  2202                                  	; bx = [next_val]
  2203 00000F57 6601D8                  	add	ax, bx
  2204 00000F5A 66D1D8                  	rcr	ax, 1
  2205 00000F5D 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2206 00000F60 66AB                    	stosw		; this is interpolated sample (L)
  2207 00000F62 66AB                    	stosw		; this is interpolated sample (R)
  2208                                  	; 24 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2209 00000F64 09C9                    	or	ecx, ecx
  2210 00000F66 75DB                    	jnz	short lff24m2_1
  2211 00000F68 E9B0F8FFFF              	jmp	lff24_3
  2212                                  
  2213                                  lff24m2_7:
  2214                                  lff24s2_7:
  2215 00000F6D E9C5F8FFFF              	jmp	lff24_5  ; error
  2216                                  
  2217                                  ;----------------------------------------------------------------------------
  2218                                  
  2219                                  load_24khz_stereo_16_bit:
  2220 00000F72 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2221                                  					; last of the file?
  2222 00000F79 7402                    	jz	short lff24s2_0		; no
  2223 00000F7B F9                      	stc
  2224 00000F7C C3                      	retn
  2225                                  
  2226                                  lff24s2_0:
  2227                                  	; edi = audio buffer address
  2228                                  
  2229 00000F7D BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2230                                  
  2231                                  	; load file into memory
  2232                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00000F82 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00000F88 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00000F8A 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00000F90 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00000F95 CD40                <1>  int 40h
  2233 00000F97 72D4                    	jc	short lff24s2_7 ; error !
  2234                                  
  2235 00000F99 A3[FC810000]            	mov	[count], eax
  2236                                  
  2237 00000F9E C1E802                  	shr	eax, 2
  2238 00000FA1 7505                    	jnz	short lff24s2_8
  2239 00000FA3 E98FF8FFFF              	jmp	lff24_eof
  2240                                  
  2241                                  lff24s2_8:
  2242 00000FA8 89C1                    	mov	ecx, eax  ; dword count
  2243                                  lff24s2_1:
  2244 00000FAA 66AD                    	lodsw
  2245 00000FAC 66AB                    	stosw		; original sample (L)
  2246 00000FAE 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2247 00000FB1 66A3[D51E0000]          	mov	[previous_val_l], ax
  2248 00000FB7 66AD                    	lodsw
  2249 00000FB9 66AB                    	stosw		; original sample (R)
  2250 00000FBB 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2251                                  	;mov	[previous_val_r], ax
  2252 00000FBE 89C3                    	mov	ebx, eax
  2253 00000FC0 668B06                  	mov	ax, [esi]
  2254 00000FC3 668B5602                	mov	dx, [esi+2]
  2255 00000FC7 49                      	dec	ecx
  2256 00000FC8 7504                    	jnz	short lff24s2_2
  2257 00000FCA 31D2                    	xor	edx, edx
  2258 00000FCC 31C0                    	xor	eax, eax
  2259                                  lff24s2_2:
  2260 00000FCE 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2261                                  	;;mov	[next_val_l], ax
  2262                                  	;mov	ebp, eax
  2263 00000FD1 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format
  2264                                  	;mov	[next_val_r], dx
  2265 00000FD4 660305[D51E0000]        	add	ax, [previous_val_l]
  2266 00000FDB 66D1D8                  	rcr	ax, 1
  2267 00000FDE 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2268 00000FE1 66AB                    	stosw		; this is interpolated sample (L)
  2269                                  	;mov	ax, [next_val_r]
  2270 00000FE3 89D0                    	mov	eax, edx
  2271                                  	;add	ax, [previous_val_r]
  2272 00000FE5 6601D8                  	add	ax, bx
  2273 00000FE8 66D1D8                  	rcr	ax, 1
  2274 00000FEB 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2275 00000FEE 66AB                    	stosw		; this is interpolated sample (R)
  2276                                  
  2277                                  	; 24 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2278 00000FF0 09C9                    	or	ecx, ecx
  2279 00000FF2 75B6                    	jnz	short lff24s2_1
  2280 00000FF4 E924F8FFFF              	jmp	lff24_3
  2281                                  
  2282                                  ;----------------------------------------------------------------------------
  2283                                  
  2284                                  load_32khz_mono_8_bit:
  2285 00000FF9 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2286                                  					; last of the file?
  2287 00001000 7402                    	jz	short lff32m_0		; no
  2288 00001002 F9                      	stc
  2289 00001003 C3                      	retn
  2290                                  
  2291                                  lff32m_0:
  2292                                  	; edi = audio buffer address
  2293                                  
  2294 00001004 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2295                                  
  2296                                  	; load file into memory
  2297                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001009 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000100F 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00001011 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001017 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 0000101C CD40                <1>  int 40h
  2298 0000101E 7247                    	jc	short lff32m_7 ; error !
  2299                                  
  2300 00001020 A3[FC810000]            	mov	[count], eax
  2301                                  
  2302 00001025 21C0                    	and	eax, eax
  2303 00001027 7505                    	jnz	short lff32m_8
  2304 00001029 E909F8FFFF              	jmp	lff32_eof
  2305                                  
  2306                                  lff32m_8:
  2307 0000102E 89C1                    	mov	ecx, eax	; byte count
  2308                                  lff32m_1:
  2309 00001030 AC                      	lodsb
  2310                                  	;mov	[previous_val], al
  2311 00001031 88C3                    	mov	bl, al
  2312 00001033 2C80                    	sub	al, 80h
  2313 00001035 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2314 00001039 66AB                    	stosw		; original sample (left channel)
  2315 0000103B 66AB                    	stosw		; original sample (right channel)
  2316                                  	;xor	eax, eax
  2317 0000103D 8A06                    	mov	al, [esi]
  2318 0000103F 49                      	dec	ecx
  2319 00001040 7502                    	jnz	short lff32m_2
  2320 00001042 B080                    	mov	al, 80h
  2321                                  lff32m_2:
  2322                                  	;;mov	[next_val], al
  2323                                  	;mov	bh, al
  2324                                  	;add	al, [previous_val]
  2325 00001044 00D8                    	add	al, bl
  2326 00001046 D0D8                    	rcr	al, 1
  2327 00001048 2C80                    	sub	al, 80h
  2328 0000104A 66C1E008                	shl	ax, 8
  2329 0000104E 66AB                    	stosw		; this is interpolated sample (L)
  2330 00001050 66AB                    	stosw		; this is interpolated sample (R)
  2331                                  	
  2332                                  	; different than 8-16-24 kHZ !
  2333                                  	; 'original-interpolated-original' trio samples
  2334 00001052 E30E                    	jecxz	lff32m_3
  2335                                  
  2336 00001054 AC                      	lodsb
  2337 00001055 2C80                    	sub	al, 80h
  2338 00001057 66C1E008                	shl	ax, 8
  2339 0000105B 66AB                    	stosw		; original sample (left channel)
  2340 0000105D 66AB                    	stosw		; original sample (right channel)
  2341                                  
  2342                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2343 0000105F 49                      	dec	ecx
  2344 00001060 75CE                    	jnz	short lff32m_1
  2345                                  lff32m_3:
  2346 00001062 E9B6F7FFFF              	jmp	lff32_3
  2347                                  
  2348                                  lff32m_7:
  2349                                  lff32s_7:
  2350 00001067 E9CBF7FFFF              	jmp	lff32_5  ; error
  2351                                  
  2352                                  ;----------------------------------------------------------------------------
  2353                                  
  2354                                  load_32khz_stereo_8_bit:
  2355 0000106C F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2356                                  					; last of the file?
  2357 00001073 7402                    	jz	short lff32s_0		; no
  2358 00001075 F9                      	stc
  2359 00001076 C3                      	retn
  2360                                  
  2361                                  lff32s_0:
  2362                                  	; edi = audio buffer address
  2363                                  
  2364 00001077 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2365                                  
  2366                                  	; load file into memory
  2367                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000107C 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00001082 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00001084 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000108A B803000000          <1>  mov eax, %1
    96                              <1> 
    97 0000108F CD40                <1>  int 40h
  2368 00001091 72D4                    	jc	short lff32s_7 ; error !
  2369                                  
  2370 00001093 A3[FC810000]            	mov	[count], eax
  2371                                  
  2372 00001098 D1E8                    	shr	eax, 1
  2373 0000109A 7505                    	jnz	short lff32s_8
  2374 0000109C E996F7FFFF              	jmp	lff32_eof
  2375                                  
  2376                                  lff32s_8:
  2377 000010A1 89C1                    	mov	ecx, eax  ; word count
  2378                                  lff32s_1:
  2379 000010A3 AC                      	lodsb
  2380 000010A4 A2[D51E0000]            	mov	[previous_val_l], al
  2381 000010A9 2C80                    	sub	al, 80h
  2382 000010AB 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2383 000010AF 66AB                    	stosw		; original sample (L)
  2384 000010B1 AC                      	lodsb
  2385 000010B2 A2[D71E0000]            	mov	[previous_val_r], al
  2386 000010B7 2C80                    	sub	al, 80h
  2387 000010B9 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  2388 000010BD 66AB                    	stosw		; original sample (R)
  2389                                  
  2390                                  	;xor	eax, eax
  2391 000010BF 668B06                  	mov	ax, [esi]
  2392 000010C2 49                      	dec	ecx
  2393 000010C3 7504                    	jnz	short lff32s_2
  2394                                  		; convert 8 bit sample to 16 bit sample
  2395 000010C5 66B88080                	mov	ax, 8080h
  2396                                  lff32s_2:
  2397                                  	;;mov	[next_val_l], al
  2398                                  	;;mov	[next_val_r], ah
  2399                                  	;mov	bx, ax
  2400 000010C9 88E7                    	mov	bh, ah
  2401 000010CB 0205[D51E0000]          	add	al, [previous_val_l]
  2402 000010D1 D0D8                    	rcr	al, 1
  2403                                  	;mov	dl, al
  2404 000010D3 2C80                    	sub	al, 80h
  2405 000010D5 66C1E008                	shl	ax, 8
  2406 000010D9 66AB                    	stosw		; this is interpolated sample (L)
  2407 000010DB 88F8                    	mov	al, bh	; [next_val_r]
  2408 000010DD 0205[D71E0000]          	add	al, [previous_val_r]
  2409 000010E3 D0D8                    	rcr	al, 1
  2410                                  	;mov	dh, al
  2411 000010E5 2C80                    	sub	al, 80h
  2412 000010E7 66C1E008                	shl	ax, 8
  2413 000010EB 66AB                    	stosw		; this is interpolated sample (R)
  2414                                  
  2415                                  	; different than 8-16-24 kHZ !
  2416                                  	; 'original-interpolated-original' trio samples
  2417 000010ED E315                    	jecxz	lff32s_3
  2418                                  
  2419 000010EF AC                      	lodsb
  2420 000010F0 2C80                    	sub	al, 80h
  2421 000010F2 66C1E008                	shl	ax, 8
  2422 000010F6 66AB                    	stosw		; original sample (left channel)
  2423                                  
  2424 000010F8 AC                      	lodsb
  2425 000010F9 2C80                    	sub	al, 80h
  2426 000010FB 66C1E008                	shl	ax, 8
  2427 000010FF 66AB                    	stosw		; original sample (right channel)
  2428                                  
  2429                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2430 00001101 49                      	dec	ecx
  2431 00001102 759F                    	jnz	short lff32s_1
  2432                                  lff32s_3:
  2433 00001104 E914F7FFFF              	jmp	lff32_3
  2434                                  
  2435                                  ;----------------------------------------------------------------------------
  2436                                  
  2437                                  load_32khz_mono_16_bit:
  2438 00001109 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2439                                  					; last of the file?
  2440 00001110 7402                    	jz	short lff32m2_0		; no
  2441 00001112 F9                      	stc
  2442 00001113 C3                      	retn
  2443                                  
  2444                                  lff32m2_0:
  2445                                  	; edi = audio buffer address
  2446                                  
  2447 00001114 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2448                                  
  2449                                  	; load file into memory
  2450                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001119 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000111F 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00001121 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001127 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 0000112C CD40                <1>  int 40h
  2451 0000112E 7241                    	jc	short lff32m2_7 ; error !
  2452                                  
  2453 00001130 A3[FC810000]            	mov	[count], eax
  2454                                  
  2455 00001135 D1E8                    	shr	eax, 1
  2456 00001137 7505                    	jnz	short lff32m2_8
  2457 00001139 E9F9F6FFFF              	jmp	lff32_eof
  2458                                  
  2459                                  lff32m2_8:
  2460 0000113E 89C1                    	mov	ecx, eax  ; word count
  2461                                  lff32m2_1:
  2462 00001140 66AD                    	lodsw
  2463 00001142 66AB                    	stosw		; original sample (left channel)
  2464 00001144 66AB                    	stosw		; original sample (right channel)
  2465 00001146 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  2466                                  	;mov	[previous_val], ax
  2467                                  	;mov	ebx, eax
  2468                                  	;xor	eax, eax
  2469                                  	;mov	ax, [esi]
  2470 00001149 668B1E                  	mov	bx, [esi]
  2471 0000114C 49                      	dec	ecx
  2472 0000114D 7502                    	jnz	short lff32m2_2
  2473 0000114F 31DB                    	xor	ebx, ebx
  2474                                  lff32m2_2:
  2475 00001151 80C780                  	add	bh, 80h ; convert sound level 0 to 65535 format
  2476                                  	;add	ah, 80h
  2477                                  	;mov	ebp, eax ; [next_val]
  2478                                  	;add	ax, [previous_val]
  2479                                  	; ax = [previous_val]
  2480                                  	; bx = [next_val]
  2481 00001154 6601D8                  	add	ax, bx
  2482 00001157 66D1D8                  	rcr	ax, 1
  2483 0000115A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2484 0000115D 66AB                    	stosw		; this is interpolated sample (L)
  2485 0000115F 66AB                    	stosw		; this is interpolated sample (R)
  2486                                  
  2487                                  	; different than 8-16-24 kHZ !
  2488                                  	; 'original-interpolated-original' trio samples
  2489 00001161 E309                    	jecxz	lff32m2_3
  2490                                  
  2491 00001163 66AD                    	lodsw
  2492 00001165 66AB                    	stosw		; original sample (left channel)
  2493 00001167 66AB                    	stosw		; original sample (right channel)
  2494                                  
  2495                                  	; 32 kHZ mono to 48 kHZ stereo conversion of the sample is OK
  2496 00001169 49                      	dec	ecx
  2497 0000116A 75D4                    	jnz	short lff32m2_1
  2498                                  lff32m2_3:
  2499 0000116C E9ACF6FFFF              	jmp	lff32_3
  2500                                  
  2501                                  lff32m2_7:
  2502                                  lff32s2_7:
  2503 00001171 E9C1F6FFFF              	jmp	lff32_5  ; error
  2504                                  
  2505                                  ;----------------------------------------------------------------------------
  2506                                  
  2507                                  load_32khz_stereo_16_bit:
  2508 00001176 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2509                                  					; last of the file?
  2510 0000117D 7402                    	jz	short lff32s2_0		; no
  2511 0000117F F9                      	stc
  2512 00001180 C3                      	retn
  2513                                  
  2514                                  lff32s2_0:
  2515                                  	; edi = audio buffer address
  2516                                  
  2517 00001181 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2518                                  
  2519                                  	; load file into memory
  2520                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001186 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000118C 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000118E 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001194 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001199 CD40                <1>  int 40h
  2521 0000119B 72D4                    	jc	short lff32s2_7 ; error !
  2522                                  
  2523 0000119D A3[FC810000]            	mov	[count], eax
  2524                                  
  2525 000011A2 C1E802                  	shr	eax, 2
  2526 000011A5 7505                    	jnz	short lff32s2_8
  2527 000011A7 E98BF6FFFF              	jmp	lff32_eof
  2528                                  
  2529                                  lff32s2_8:
  2530 000011AC 89C1                    	mov	ecx, eax ; dword count
  2531                                  lff32s2_1:
  2532 000011AE 66AD                    	lodsw
  2533 000011B0 66AB                    	stosw		; original sample (L)
  2534 000011B2 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2535 000011B5 66A3[D51E0000]          	mov	[previous_val_l], ax
  2536 000011BB 66AD                    	lodsw
  2537 000011BD 66AB                    	stosw		; original sample (R)
  2538 000011BF 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2539                                  	;mov	[previous_val_r], ax
  2540 000011C2 89C3                    	mov	ebx, eax
  2541 000011C4 668B06                  	mov	ax, [esi]
  2542 000011C7 668B5602                	mov	dx, [esi+2]
  2543 000011CB 49                      	dec	ecx
  2544 000011CC 7504                    	jnz	short lff32s2_2
  2545 000011CE 31D2                    	xor	edx, edx
  2546 000011D0 31C0                    	xor	eax, eax
  2547                                  lff32s2_2:
  2548 000011D2 80C480                  	add	ah, 80h	; convert sound level 0 to 65535 format
  2549                                  	;;mov	[next_val_l], ax
  2550                                  	;mov	ebp, eax
  2551 000011D5 80C680                  	add	dh, 80h	; convert sound level 0 to 65535 format
  2552                                  	;mov	[next_val_r], dx
  2553 000011D8 660305[D51E0000]        	add	ax, [previous_val_l]
  2554 000011DF 66D1D8                  	rcr	ax, 1
  2555 000011E2 80EC80                  	sub	ah, 80h ; -32768 to +32767 format again
  2556 000011E5 66AB                    	stosw		; this is interpolated sample (L)
  2557                                  	;mov	ax, [next_val_r]
  2558 000011E7 89D0                    	mov	eax, edx
  2559                                  	;add	ax, [previous_val_r]
  2560 000011E9 6601D8                  	add	ax, bx
  2561 000011EC 66D1D8                  	rcr	ax, 1
  2562 000011EF 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  2563 000011F2 66AB                    	stosw		; this is interpolated sample (R)
  2564                                  
  2565                                  	; different than 8-16-24 kHZ !
  2566                                  	; 'original-interpolated-original' trio samples 
  2567 000011F4 E30B                    	jecxz	lff32s2_3
  2568                                  
  2569 000011F6 66AD                    	lodsw
  2570 000011F8 66AB                    	stosw	; original sample (L)
  2571 000011FA 66AD                    	lodsw
  2572 000011FC 66AB                    	stosw	; original sample (R)
  2573                                  
  2574                                  	; 32 kHZ stereo to 48 kHZ stereo conversion of the sample is OK
  2575 000011FE 49                      	dec	ecx
  2576 000011FF 75AD                    	jnz	short lff32s2_1
  2577                                  lff32s2_3:
  2578 00001201 E917F6FFFF              	jmp	lff32_3
  2579                                  
  2580                                  ;----------------------------------------------------------------------------
  2581                                  
  2582                                  load_22khz_mono_8_bit:
  2583 00001206 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2584                                  					; last of the file?
  2585 0000120D 7402                    	jz	short lff22m_0		; no
  2586 0000120F F9                      	stc
  2587 00001210 C3                      	retn
  2588                                  
  2589                                  lff22m_0:
  2590                                  	; edi = audio buffer address
  2591                                  
  2592 00001211 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2593                                  
  2594                                  	; load file into memory
  2595                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001216 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000121C 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000121E 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001224 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001229 CD40                <1>  int 40h
  2596 0000122B 725D                    	jc	short lff22m_7 ; error !
  2597                                  
  2598 0000122D A3[FC810000]            	mov	[count], eax
  2599                                  	
  2600 00001232 21C0                    	and	eax, eax
  2601 00001234 7505                    	jnz	short lff22m_8
  2602 00001236 E9FCF5FFFF              	jmp	lff22_eof
  2603                                  
  2604                                  lff22m_8:
  2605 0000123B 89C1                    	mov	ecx, eax	; byte count
  2606                                  lff22m_9:
  2607 0000123D BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2608 00001242 C605[DD1E0000]03        	mov	byte [faz], 3  ; 3 steps/phases
  2609                                  lff22m_1:
  2610                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2611 00001249 AC                      	lodsb
  2612 0000124A 8A16                    	mov	dl, [esi]
  2613 0000124C 49                      	dec	ecx
  2614 0000124D 7502                    	jnz	short lff22m_2_1
  2615 0000124F B280                    	mov	dl, 80h
  2616                                  lff22m_2_1:
  2617                                  	; al = [previous_val]
  2618                                  	; dl = [next_val]
  2619 00001251 E835070000              	call	interpolating_3_8bit_mono ; 1 of 17
  2620 00001256 E32D                    	jecxz	lff22m_3
  2621                                  lff22m_2_2:
  2622 00001258 AC                      	lodsb
  2623 00001259 8A16                    	mov	dl, [esi]
  2624 0000125B 49                      	dec	ecx
  2625 0000125C 7502                    	jnz	short lff22m_2_3
  2626 0000125E B280                    	mov	dl, 80h
  2627                                  lff22m_2_3:
  2628 00001260 E8B0070000               	call	interpolating_2_8bit_mono ; 2 of 17 .. 6 of 17
  2629 00001265 E31E                    	jecxz	lff22m_3
  2630 00001267 4D                      	dec	ebp
  2631 00001268 75EE                    	jnz	short lff22m_2_2
  2632                                  
  2633 0000126A A0[DD1E0000]            	mov	al, [faz]
  2634 0000126F FEC8                    	dec	al
  2635 00001271 74CA                    	jz	short lff22m_9
  2636 00001273 FE0D[DD1E0000]          	dec	byte [faz]
  2637 00001279 BD04000000              	mov	ebp, 4
  2638 0000127E FEC8                    	dec	al
  2639 00001280 75C7                    	jnz	short lff22m_1 ; 3:2:2:2:2 ; 7-11 of 17
  2640 00001282 45                      	inc	ebp ; 5
  2641 00001283 EBC4                    	jmp	short lff22m_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2642                                  
  2643                                  lff22m_3:
  2644                                  lff22s_3:
  2645 00001285 E993F5FFFF              	jmp	lff22_3	; padfill
  2646                                  		; (put zeros in the remain words of the buffer)
  2647                                  lff22m_7:
  2648                                  lff22s_7:
  2649 0000128A E9A8F5FFFF              	jmp	lff22_5  ; error
  2650                                  
  2651                                  ;----------------------------------------------------------------------------
  2652                                  
  2653                                  load_22khz_stereo_8_bit:
  2654 0000128F F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2655                                  					; last of the file?
  2656 00001296 7402                    	jz	short lff22s_0		; no
  2657 00001298 F9                      	stc
  2658 00001299 C3                      	retn
  2659                                  
  2660                                  lff22s_0:
  2661                                  	; edi = audio buffer address
  2662                                  
  2663 0000129A BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2664                                  
  2665                                  	; load file into memory
  2666                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000129F 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000012A5 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000012A7 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000012AD B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000012B2 CD40                <1>  int 40h
  2667 000012B4 72D4                    	jc	short lff22s_7 ; error !
  2668                                  
  2669 000012B6 A3[FC810000]            	mov	[count], eax
  2670                                  
  2671 000012BB D1E8                    	shr	eax, 1
  2672 000012BD 7505                    	jnz	short lff22s_8
  2673 000012BF E973F5FFFF              	jmp	lff22_eof
  2674                                  
  2675                                  lff22s_8:
  2676 000012C4 89C1                    	mov	ecx, eax	; word count
  2677                                  lff22s_9:
  2678 000012C6 BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2679 000012CB C605[DD1E0000]03        	mov	byte [faz], 3  ; 3 steps/phase
  2680                                  lff22s_1:
  2681                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2682 000012D2 66AD                    	lodsw
  2683 000012D4 668B16                  	mov	dx, [esi]
  2684 000012D7 49                      	dec	ecx
  2685 000012D8 7504                    	jnz	short lff22s_2_1
  2686 000012DA 66BA8080                	mov	dx, 8080h
  2687                                  lff22s_2_1:
  2688                                  	; al = [previous_val_l]
  2689                                  	; ah = [previous_val_r]
  2690                                  	; dl = [next_val_l]
  2691                                  	; dh = [next_val_r]
  2692 000012DE E8DB060000              	call	interpolating_3_8bit_stereo ; 1 of 17
  2693 000012E3 E3A0                    	jecxz	lff22s_3
  2694                                  lff22s_2_2:
  2695 000012E5 66AD                    	lodsw
  2696 000012E7 668B16                  	mov	dx, [esi]
  2697 000012EA 49                      	dec	ecx
  2698 000012EB 7504                    	jnz	short lff22s_2_3
  2699 000012ED 66BA8080                	mov	dx, 8080h
  2700                                  lff22s_2_3:
  2701 000012F1 E83C070000               	call	interpolating_2_8bit_stereo ; 2 of 17 .. 6 of 17
  2702 000012F6 E38D                    	jecxz	lff22s_3
  2703 000012F8 4D                      	dec	ebp
  2704 000012F9 75EA                    	jnz	short lff22s_2_2
  2705                                  
  2706 000012FB A0[DD1E0000]            	mov	al, [faz]
  2707 00001300 FEC8                    	dec	al
  2708 00001302 74C2                    	jz	short lff22s_9
  2709 00001304 FE0D[DD1E0000]          	dec	byte [faz]
  2710 0000130A BD04000000              	mov	ebp, 4
  2711 0000130F FEC8                    	dec	al
  2712 00001311 75BF                    	jnz	short lff22s_1 ; 3:2:2:2:2 ; 7-11 of 17
  2713 00001313 45                      	inc	ebp ; 5
  2714 00001314 EBBC                    	jmp	short lff22s_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2715                                  
  2716                                  ;----------------------------------------------------------------------------
  2717                                  
  2718                                  load_22khz_mono_16_bit:
  2719 00001316 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2720                                  					; last of the file?
  2721 0000131D 7402                    	jz	short lff22m2_0		; no
  2722 0000131F F9                      	stc
  2723 00001320 C3                      	retn
  2724                                  
  2725                                  lff22m2_0:
  2726                                  	; edi = audio buffer address
  2727                                  
  2728 00001321 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2729                                  
  2730                                  	; load file into memory
  2731                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001326 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000132C 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000132E 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001334 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001339 CD40                <1>  int 40h
  2732 0000133B 7261                    	jc	short lff22m2_7 ; error !
  2733                                  
  2734 0000133D A3[FC810000]            	mov	[count], eax
  2735                                  
  2736 00001342 D1E8                    	shr	eax, 1
  2737 00001344 7505                    	jnz	short lff22m2_8
  2738 00001346 E9ECF4FFFF              	jmp	lff22_eof
  2739                                  
  2740                                  lff22m2_8:
  2741 0000134B 89C1                    	mov	ecx, eax	; word count
  2742                                  lff22m2_9:
  2743 0000134D BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2744 00001352 C605[DD1E0000]03        	mov	byte [faz], 3  ; 3 steps/phases
  2745                                  lff22m2_1:
  2746                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2747 00001359 66AD                    	lodsw
  2748 0000135B 668B16                  	mov	dx, [esi]
  2749 0000135E 49                      	dec	ecx
  2750 0000135F 7502                    	jnz	short lff22m2_2_1
  2751 00001361 31D2                    	xor	edx, edx
  2752                                  lff22m2_2_1:	
  2753                                  	; ax = [previous_val]
  2754                                  	; dx = [next_val]
  2755 00001363 E8FB060000              	call	interpolating_3_16bit_mono ; 1 of 17
  2756 00001368 E32F                    	jecxz	lff22m2_3
  2757                                  lff22m2_2_2:
  2758 0000136A 66AD                    	lodsw
  2759 0000136C 668B16                  	mov	dx, [esi]
  2760 0000136F 49                      	dec	ecx
  2761 00001370 7502                    	jnz	short lff22m2_2_3
  2762 00001372 31D2                    	xor	edx, edx
  2763                                  lff22m2_2_3:
  2764 00001374 E87D070000               	call	interpolating_2_16bit_mono ; 2 of 17 .. 6 of 17
  2765 00001379 E31E                    	jecxz	lff22m2_3
  2766 0000137B 4D                      	dec	ebp
  2767 0000137C 75EC                    	jnz	short lff22m2_2_2
  2768                                  
  2769 0000137E A0[DD1E0000]            	mov	al, [faz]
  2770 00001383 FEC8                    	dec	al
  2771 00001385 74C6                    	jz	short lff22m2_9
  2772 00001387 FE0D[DD1E0000]          	dec	byte [faz]
  2773 0000138D BD04000000              	mov	ebp, 4
  2774 00001392 FEC8                    	dec	al
  2775 00001394 75C3                    	jnz	short lff22m2_1 ; 3:2:2:2:2 ; 7-11 of 17
  2776 00001396 45                      	inc	ebp ; 5
  2777 00001397 EBC0                    	jmp	short lff22m2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2778                                  
  2779                                  lff22m2_3:
  2780                                  lff22s2_3:
  2781 00001399 E97FF4FFFF              	jmp	lff22_3	; padfill
  2782                                  		; (put zeros in the remain words of the buffer)
  2783                                  lff22m2_7:
  2784                                  lff22s2_7:
  2785 0000139E E994F4FFFF              	jmp	lff22_5  ; error
  2786                                  
  2787                                  ;----------------------------------------------------------------------------
  2788                                  
  2789                                  load_22khz_stereo_16_bit:
  2790 000013A3 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2791                                  					; last of the file?
  2792 000013AA 7402                    	jz	short lff22s2_0		; no
  2793 000013AC F9                      	stc
  2794 000013AD C3                      	retn
  2795                                  
  2796                                  lff22s2_0:
  2797                                  	; edi = audio buffer address
  2798                                  
  2799 000013AE BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2800                                  
  2801                                  	; load file into memory
  2802                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000013B3 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000013B9 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000013BB 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000013C1 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000013C6 CD40                <1>  int 40h
  2803 000013C8 72D4                    	jc	short lff22s2_7 ; error !
  2804                                  
  2805 000013CA A3[FC810000]            	mov	[count], eax
  2806                                  
  2807 000013CF C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  2808 000013D2 7505                    	jnz	short lff22s2_8
  2809 000013D4 E95EF4FFFF              	jmp	lff22_eof
  2810                                  
  2811                                  lff22s2_8:
  2812 000013D9 89C1                    	mov	ecx, eax	; dword count
  2813                                  lff22s2_9:
  2814 000013DB BD05000000              	mov	ebp, 5 ; interpolation (one step) loop count
  2815 000013E0 C605[DD1E0000]03        	mov	byte [faz], 3  ; 3 steps/phase
  2816                                  lff22s2_1:
  2817                                  	; 3:2:2:2:2:2::3:2:2:2:2::3:2:2:2:2:2  ; 37/17
  2818 000013E7 66AD                    	lodsw
  2819 000013E9 89C3                    	mov	ebx, eax
  2820 000013EB 66AD                    	lodsw
  2821 000013ED 8B16                    	mov	edx, [esi]
  2822 000013EF 668915[D91E0000]        	mov	[next_val_l], dx
  2823 000013F6 C1EA10                  	shr	edx, 16
  2824 000013F9 49                      	dec	ecx
  2825 000013FA 7509                    	jnz	short lff22s2_2_1
  2826 000013FC 31D2                    	xor	edx, edx ; 0
  2827 000013FE 668915[D91E0000]        	mov	[next_val_l], dx
  2828                                  lff22s2_2_1:
  2829                                  	; bx = [previous_val_l]
  2830                                  	; ax = [previous_val_r]
  2831                                  	; [next_val_l]
  2832                                  	; dx = [next_val_r]
  2833 00001405 E889060000              	call	interpolating_3_16bit_stereo ; 1 of 17 
  2834 0000140A E38D                    	jecxz	lff22s2_3
  2835                                  lff22s2_2_2:
  2836 0000140C 66AD                    	lodsw
  2837 0000140E 89C3                    	mov	ebx, eax
  2838 00001410 66AD                    	lodsw
  2839 00001412 8B16                    	mov	edx, [esi]
  2840 00001414 668915[D91E0000]        	mov	[next_val_l], dx
  2841 0000141B C1EA10                  	shr	edx, 16
  2842 0000141E 49                      	dec	ecx
  2843 0000141F 7509                    	jnz	short lff22s2_2_3
  2844 00001421 31D2                    	xor	edx, edx ; 0
  2845 00001423 668915[D91E0000]        	mov	[next_val_l], dx
  2846                                  lff22s2_2_3:
  2847 0000142A E8DF060000               	call	interpolating_2_16bit_stereo ; 2 of 17 .. 6 of 17
  2848 0000142F E31E                    	jecxz	lff22s2_2_4
  2849                                  
  2850 00001431 4D                      	dec	ebp
  2851 00001432 75D8                    	jnz	short lff22s2_2_2
  2852                                  
  2853 00001434 A0[DD1E0000]            	mov	al, [faz]
  2854 00001439 FEC8                    	dec	al
  2855 0000143B 749E                    	jz	short lff22s2_9
  2856 0000143D FE0D[DD1E0000]          	dec	byte [faz]
  2857 00001443 BD04000000              	mov	ebp, 4
  2858 00001448 FEC8                    	dec	al
  2859 0000144A 759B                    	jnz	short lff22s2_1 ; 3:2:2:2:2 ; 7-11 of 17
  2860 0000144C 45                      	inc	ebp ; 5
  2861 0000144D EB98                    	jmp	short lff22s2_1 ; 3:2:2:2:2:2 ; 12-17 of 17
  2862                                  
  2863                                  lff22s2_2_4:
  2864 0000144F E9C9F3FFFF              	jmp	lff22_3	; padfill
  2865                                  
  2866                                  ;----------------------------------------------------------------------------
  2867                                  
  2868                                  load_11khz_mono_8_bit:
  2869 00001454 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2870                                  					; last of the file?
  2871 0000145B 7402                    	jz	short lff11m_0		; no
  2872 0000145D F9                      	stc
  2873 0000145E C3                      	retn
  2874                                  
  2875                                  lff11m_0:
  2876                                  	; edi = audio buffer address
  2877                                  
  2878 0000145F BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2879                                  
  2880                                  	; load file into memory
  2881                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001464 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000146A 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000146C 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001472 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001477 CD40                <1>  int 40h
  2882 00001479 7247                    	jc	short lff11m_7 ; error !
  2883                                  
  2884 0000147B A3[FC810000]            	mov	[count], eax
  2885                                  
  2886 00001480 21C0                    	and	eax, eax
  2887 00001482 7505                    	jnz	short lff11m_8
  2888 00001484 E9AEF3FFFF              	jmp	lff11_eof
  2889                                  
  2890                                  lff11m_8:
  2891 00001489 89C1                    	mov	ecx, eax	; byte count
  2892                                  lff11m_9:
  2893 0000148B BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  2894                                  lff11m_1:
  2895                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  2896 00001490 AC                      	lodsb
  2897 00001491 8A16                    	mov	dl, [esi]
  2898 00001493 49                      	dec	ecx
  2899 00001494 7502                    	jnz	short lff11m_2_1
  2900 00001496 B280                    	mov	dl, 80h
  2901                                  lff11m_2_1:	
  2902                                  	; al = [previous_val]
  2903                                  	; dl = [next_val]
  2904 00001498 E8A0060000              	call	interpolating_5_8bit_mono
  2905 0000149D E328                    	jecxz	lff11m_3
  2906                                  lff11m_2_2:
  2907 0000149F AC                      	lodsb
  2908 000014A0 8A16                    	mov	dl, [esi]
  2909 000014A2 49                      	dec	ecx
  2910 000014A3 7502                    	jnz	short lff11m_2_3
  2911 000014A5 B280                    	mov	dl, 80h
  2912                                  lff11m_2_3:
  2913 000014A7 E89D070000               	call	interpolating_4_8bit_mono
  2914 000014AC E319                    	jecxz	lff11m_3
  2915                                  
  2916 000014AE 4D                      	dec	ebp
  2917 000014AF 74DA                    	jz	short lff11m_9
  2918                                  
  2919 000014B1 AC                      	lodsb
  2920 000014B2 8A16                    	mov	dl, [esi]
  2921 000014B4 49                      	dec	ecx
  2922 000014B5 7502                    	jnz	short lff11m_2_4
  2923 000014B7 B280                    	mov	dl, 80h
  2924                                  lff11m_2_4:
  2925 000014B9 E88B070000              	call	interpolating_4_8bit_mono
  2926 000014BE E307                    	jecxz	lff11m_3
  2927 000014C0 EBCE                    	jmp	short lff11m_1
  2928                                  
  2929                                  lff11m_7:
  2930                                  lff11s_7:
  2931 000014C2 E970F3FFFF              	jmp	lff11_5  ; error
  2932                                  
  2933                                  lff11m_3:
  2934                                  lff11s_3:
  2935 000014C7 E951F3FFFF              	jmp	lff11_3	; padfill
  2936                                  		; (put zeros in the remain words of the buffer)
  2937                                  
  2938                                  ;----------------------------------------------------------------------------
  2939                                  
  2940                                  load_11khz_stereo_8_bit:
  2941 000014CC F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  2942                                  					; last of the file?
  2943 000014D3 7402                    	jz	short lff11s_0		; no
  2944 000014D5 F9                      	stc
  2945 000014D6 C3                      	retn
  2946                                  
  2947                                  lff11s_0:
  2948                                  	; edi = audio buffer address
  2949                                  
  2950 000014D7 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  2951                                  
  2952                                  	; load file into memory
  2953                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000014DC 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000014E2 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000014E4 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000014EA B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000014EF CD40                <1>  int 40h
  2954 000014F1 72CF                    	jc	short lff11s_7 ; error !
  2955                                  
  2956 000014F3 A3[FC810000]            	mov	[count], eax
  2957                                  
  2958 000014F8 D1E8                    	shr	eax, 1
  2959 000014FA 7505                    	jnz	short lff11s_8
  2960 000014FC E936F3FFFF              	jmp	lff11_eof
  2961                                  
  2962                                  lff11s_8:
  2963 00001501 89C1                    	mov	ecx, eax	; word count
  2964                                  lff11s_9:
  2965 00001503 BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  2966                                  lff11s_1:
  2967                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  2968 00001508 66AD                    	lodsw
  2969 0000150A 668B16                  	mov	dx, [esi]
  2970 0000150D 49                      	dec	ecx
  2971 0000150E 7504                    	jnz	short lff11s_2_1
  2972 00001510 66BA8080                	mov	dx, 8080h
  2973                                  lff11s_2_1:
  2974                                  	; al = [previous_val_l]
  2975                                  	; ah = [previous_val_r]
  2976                                  	; dl = [next_val_l]
  2977                                  	; dh = [next_val_r]
  2978 00001514 E883060000              	call	interpolating_5_8bit_stereo
  2979 00001519 E3AC                    	jecxz	lff11s_3
  2980                                  lff11s_2_2:
  2981 0000151B 66AD                    	lodsw
  2982 0000151D 668B16                  	mov	dx, [esi]
  2983 00001520 49                      	dec	ecx
  2984 00001521 7504                    	jnz	short lff11s_2_3
  2985 00001523 66BA8080                	mov	dx, 8080h
  2986                                  lff11s_2_3:
  2987 00001527 E85C070000               	call	interpolating_4_8bit_stereo
  2988 0000152C E399                    	jecxz	lff11s_3
  2989                                  	
  2990 0000152E 4D                      	dec	ebp
  2991 0000152F 74D2                    	jz	short lff11s_9
  2992                                  
  2993 00001531 66AD                    	lodsw
  2994 00001533 668B16                  	mov	dx, [esi]
  2995 00001536 49                      	dec	ecx
  2996 00001537 7504                    	jnz	short lff11s_2_4
  2997 00001539 66BA8080                	mov	dx, 8080h
  2998                                  lff11s_2_4:
  2999 0000153D E846070000              	call	interpolating_4_8bit_stereo
  3000 00001542 E383                    	jecxz	lff11s_3
  3001 00001544 EBC2                    	jmp	short lff11s_1
  3002                                  
  3003                                  ;----------------------------------------------------------------------------
  3004                                  
  3005                                  load_11khz_mono_16_bit:
  3006 00001546 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3007                                  					; last of the file?
  3008 0000154D 7402                    	jz	short lff11m2_0		; no
  3009 0000154F F9                      	stc
  3010 00001550 C3                      	retn
  3011                                  
  3012                                  lff11m2_0:
  3013                                  	; edi = audio buffer address
  3014                                  
  3015 00001551 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3016                                  
  3017                                  	; load file into memory
  3018                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001556 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000155C 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000155E 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001564 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001569 CD40                <1>  int 40h
  3019 0000156B 724D                    	jc	short lff11m2_7 ; error !
  3020                                  
  3021 0000156D A3[FC810000]            	mov	[count], eax
  3022                                  	
  3023 00001572 D1E8                    	shr	eax, 1
  3024 00001574 7505                    	jnz	short lff11m2_8
  3025 00001576 E9BCF2FFFF              	jmp	lff11_eof
  3026                                  
  3027                                  lff11m2_8:
  3028 0000157B 89C1                    	mov	ecx, eax	; word count
  3029                                  lff11m2_9:
  3030 0000157D BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3031                                  lff11m2_1:
  3032                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3033 00001582 66AD                    	lodsw
  3034 00001584 668B16                  	mov	dx, [esi]
  3035 00001587 49                      	dec	ecx
  3036 00001588 7502                    	jnz	short lff11m2_2_1
  3037 0000158A 31D2                    	xor	edx, edx
  3038                                  lff11m2_2_1:	
  3039                                  	; ax = [previous_val]
  3040                                  	; dx = [next_val]
  3041 0000158C E864070000              	call	interpolating_5_16bit_mono
  3042 00001591 E362                    	jecxz	lff11m2_3
  3043                                  lff11m2_2_2:
  3044 00001593 66AD                    	lodsw
  3045 00001595 668B16                  	mov	dx, [esi]
  3046 00001598 49                      	dec	ecx
  3047 00001599 7502                    	jnz	short lff11m2_2_3
  3048 0000159B 31D2                    	xor	edx, edx
  3049                                  lff11m2_2_3:
  3050 0000159D E87D080000               	call	interpolating_4_16bit_mono
  3051 000015A2 E351                    	jecxz	lff11m2_3
  3052                                  
  3053 000015A4 4D                      	dec	ebp
  3054 000015A5 74D6                    	jz	short lff11m2_9
  3055                                  
  3056 000015A7 66AD                    	lodsw
  3057 000015A9 668B16                  	mov	dx, [esi]
  3058 000015AC 49                      	dec	ecx
  3059 000015AD 7502                    	jnz	short lff11m2_2_4
  3060 000015AF 31D2                    	xor	edx, edx
  3061                                  lff11m2_2_4:
  3062 000015B1 E869080000               	call	interpolating_4_16bit_mono
  3063 000015B6 E33D                    	jecxz	lff11m2_3
  3064 000015B8 EBC8                    	jmp	short lff11m2_1
  3065                                  
  3066                                  lff11m2_7:
  3067                                  lff11s2_7:
  3068 000015BA E978F2FFFF              	jmp	lff11_5  ; error
  3069                                  
  3070                                  ;----------------------------------------------------------------------------
  3071                                  
  3072                                  load_11khz_stereo_16_bit:
  3073 000015BF F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3074                                  					; last of the file?
  3075 000015C6 7402                    	jz	short lff11s2_0		; no
  3076 000015C8 F9                      	stc
  3077 000015C9 C3                      	retn
  3078                                  
  3079                                  lff11s2_0:
  3080                                  	; edi = audio buffer address
  3081                                  
  3082 000015CA BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3083                                  
  3084                                  	; load file into memory
  3085                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000015CF 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000015D5 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000015D7 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000015DD B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000015E2 CD40                <1>  int 40h
  3086 000015E4 72D4                    	jc	short lff11s2_7 ; error !
  3087                                  
  3088 000015E6 A3[FC810000]            	mov	[count], eax
  3089                                  	
  3090 000015EB C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3091 000015EE 750A                    	jnz	short lff11s2_8
  3092 000015F0 E942F2FFFF              	jmp	lff11_eof
  3093                                  
  3094                                  lff11m2_3:
  3095                                  lff11s2_3:
  3096 000015F5 E923F2FFFF              	jmp	lff11_3	; padfill
  3097                                  		; (put zeros in the remain words of the buffer)
  3098                                  
  3099                                  lff11s2_8:
  3100 000015FA 89C1                    	mov	ecx, eax	; dword count
  3101                                  lff11s2_9:
  3102 000015FC BD06000000              	mov	ebp, 6 ; interpolation (one step) loop count
  3103                                  lff11s2_1:
  3104                                  	; 5:4:4::5:4:4::5:4:4::5:4:4::5:4:4::5:4  ; 74/17
  3105 00001601 66AD                    	lodsw
  3106 00001603 89C3                    	mov	ebx, eax
  3107 00001605 66AD                    	lodsw
  3108 00001607 8B16                    	mov	edx, [esi]
  3109                                  	;mov	[next_val_l], edx
  3110                                  	;shr	edx, 16
  3111                                  	;mov	[next_val_r], dx
  3112 00001609 49                      	dec	ecx
  3113 0000160A 7502                    	jnz	short lff11s2_2_1
  3114 0000160C 31D2                    	xor	edx, edx ; 0
  3115                                  	;mov	[next_val_l], dx
  3116                                  	;mov	[next_val_r], dx
  3117                                  lff11s2_2_1:
  3118                                  	; bx = [previous_val_l]
  3119                                  	; ax = [previous_val_r]
  3120                                  	; [next_val_l]
  3121                                  	; dx = [next_val_r]
  3122 0000160E 8915[D91E0000]          	mov	[next_val_l], edx
  3123                                  
  3124 00001614 E837070000              	call	interpolating_5_16bit_stereo
  3125 00001619 E3DA                    	jecxz	lff11s2_3
  3126                                  lff11s2_2_2:
  3127 0000161B 66AD                    	lodsw
  3128 0000161D 89C3                    	mov	ebx, eax
  3129 0000161F 66AD                    	lodsw
  3130 00001621 8B16                    	mov	edx, [esi]
  3131                                  	;mov	[next_val_l], dx
  3132                                  	;shr	edx, 16
  3133                                  	;mov	[next_val_r], dx
  3134 00001623 49                      	dec	ecx
  3135 00001624 7502                    	jnz	short lff11s2_2_3
  3136 00001626 31D2                    	xor	edx, edx ; 0
  3137                                  	;mov	[next_val_l], dx
  3138                                  	;mov	[next_val_r], dx
  3139                                  lff11s2_2_3:
  3140 00001628 8915[D91E0000]          	mov	[next_val_l], edx
  3141                                  
  3142 0000162E E825080000              	call	interpolating_4_16bit_stereo
  3143 00001633 E3C0                    	jecxz	lff11s2_3
  3144                                  	
  3145 00001635 4D                      	dec	ebp
  3146 00001636 74C4                    	jz	short lff11s2_9
  3147                                  
  3148 00001638 66AD                    	lodsw
  3149 0000163A 89C3                    	mov	ebx, eax
  3150 0000163C 66AD                    	lodsw
  3151 0000163E 8B16                    	mov	edx, [esi]
  3152                                  	;mov	[next_val_l], dx
  3153                                  	;shr	edx, 16
  3154                                  	;mov	[next_val_r], dx
  3155 00001640 49                      	dec	ecx
  3156 00001641 7502                    	jnz	short lff11s2_2_4
  3157 00001643 31D2                    	xor	edx, edx ; 0
  3158                                  	;mov	[next_val_l], dx
  3159                                  	;mov	[next_val_r], dx
  3160                                  lff11s2_2_4:
  3161 00001645 8915[D91E0000]          	mov	[next_val_l], edx
  3162                                  
  3163 0000164B E808080000               	call	interpolating_4_16bit_stereo
  3164 00001650 E3A3                    	jecxz	lff11s2_3
  3165 00001652 EBAD                    	jmp	short lff11s2_1
  3166                                  
  3167                                  ;----------------------------------------------------------------------------
  3168                                  
  3169                                  load_44khz_mono_8_bit:
  3170 00001654 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3171                                  					; last of the file?
  3172 0000165B 7402                    	jz	short lff44m_0		; no
  3173 0000165D F9                      	stc
  3174 0000165E C3                      	retn
  3175                                  
  3176                                  lff44m_0:
  3177                                  	; edi = audio buffer address
  3178                                  
  3179 0000165F BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3180                                  
  3181                                  	; load file into memory
  3182                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001664 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000166A 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000166C 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001672 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001677 CD40                <1>  int 40h
  3183 00001679 7250                    	jc	short lff44m_7 ; error !
  3184                                  
  3185 0000167B A3[FC810000]            	mov	[count], eax
  3186                                  
  3187 00001680 21C0                    	and	eax, eax
  3188 00001682 7505                    	jnz	short lff44m_8
  3189 00001684 E9AEF1FFFF              	jmp	lff44_eof
  3190                                  
  3191                                  lff44m_8:
  3192 00001689 89C1                    	mov	ecx, eax	; byte count
  3193                                  lff44m_9:
  3194 0000168B BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3195 00001690 C605[DD1E0000]02        	mov	byte [faz], 2  ; 2 steps/phases
  3196                                  lff44m_1:
  3197                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3198                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3199 00001697 AC                      	lodsb
  3200 00001698 8A16                    	mov	dl, [esi]
  3201 0000169A 49                      	dec	ecx
  3202 0000169B 7502                    	jnz	short lff44m_2_1
  3203 0000169D B280                    	mov	dl, 80h
  3204                                  lff44m_2_1:
  3205                                  	; al = [previous_val]
  3206                                  	; dl = [next_val]
  3207 0000169F E871030000              	call	interpolating_2_8bit_mono
  3208 000016A4 E320                    	jecxz	lff44m_3
  3209                                  lff44m_2_2:
  3210 000016A6 AC                      	lodsb
  3211 000016A7 2C80                    	sub	al, 80h
  3212 000016A9 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3213 000016AD 66AB                    	stosw		; (L)
  3214 000016AF 66AB                    	stosw		; (R)
  3215                                  
  3216 000016B1 49                      	dec	ecx
  3217 000016B2 7412                    	jz	short lff44m_3
  3218 000016B4 4D                      	dec	ebp
  3219 000016B5 75EF                    	jnz	short lff44m_2_2
  3220                                  	
  3221 000016B7 FE0D[DD1E0000]          	dec	byte [faz]
  3222 000016BD 74CC                    	jz	short lff44m_9
  3223 000016BF BD0B000000              	mov	ebp, 11
  3224 000016C4 EBD1                    	jmp	short lff44m_1
  3225                                  
  3226                                  lff44m_3:
  3227                                  lff44s_3:
  3228 000016C6 E952F1FFFF              	jmp	lff44_3	; padfill
  3229                                  		; (put zeros in the remain words of the buffer)
  3230                                  lff44m_7:
  3231                                  lff44s_7:
  3232 000016CB E967F1FFFF              	jmp	lff44_5  ; error
  3233                                  
  3234                                  ;----------------------------------------------------------------------------
  3235                                  
  3236                                  load_44khz_stereo_8_bit:
  3237 000016D0 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3238                                  					; last of the file?
  3239 000016D7 7402                    	jz	short lff44s_0		; no
  3240 000016D9 F9                      	stc
  3241 000016DA C3                      	retn
  3242                                  
  3243                                  lff44s_0:
  3244                                  	; edi = audio buffer address
  3245                                  
  3246 000016DB BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3247                                  
  3248                                  	; load file into memory
  3249                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000016E0 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000016E6 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000016E8 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000016EE B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000016F3 CD40                <1>  int 40h
  3250 000016F5 72D4                    	jc	short lff44s_7 ; error !
  3251                                  
  3252 000016F7 A3[FC810000]            	mov	[count], eax
  3253                                  
  3254 000016FC D1E8                    	shr	eax, 1
  3255 000016FE 7505                    	jnz	short lff44s_8
  3256 00001700 E932F1FFFF              	jmp	lff44_eof
  3257                                  
  3258                                  lff44s_8:
  3259 00001705 89C1                    	mov	ecx, eax	; word count
  3260                                  lff44s_9:
  3261 00001707 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3262 0000170C C605[DD1E0000]02        	mov	byte [faz], 2  ; 2 steps/phase
  3263                                  lff44s_1:
  3264                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3265                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3266 00001713 66AD                    	lodsw
  3267 00001715 668B16                  	mov	dx, [esi]
  3268 00001718 49                      	dec	ecx
  3269 00001719 7504                    	jnz	short lff44s_2_1
  3270 0000171B 66BA8080                	mov	dx, 8080h
  3271                                  lff44s_2_1:	
  3272                                  	; al = [previous_val_l]
  3273                                  	; ah = [previous_val_r]
  3274                                  	; dl = [next_val_l]
  3275                                  	; dh = [next_val_r]
  3276 0000171F E80E030000              	call	interpolating_2_8bit_stereo
  3277 00001724 E3A0                    	jecxz	lff44s_3
  3278                                  lff44s_2_2:
  3279 00001726 AC                      	lodsb
  3280 00001727 2C80                    	sub	al, 80h
  3281 00001729 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3282 0000172D 66AB                    	stosw		; (L)
  3283 0000172F AC                      	lodsb
  3284 00001730 2C80                    	sub	al, 80h
  3285 00001732 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3286 00001736 66AB                    	stosw		; (R)
  3287                                  
  3288 00001738 49                      	dec	ecx
  3289 00001739 748B                    	jz	short lff44s_3
  3290 0000173B 4D                      	dec	ebp
  3291 0000173C 75E8                    	jnz	short lff44s_2_2
  3292                                  	
  3293 0000173E FE0D[DD1E0000]          	dec	byte [faz]
  3294 00001744 74C1                    	jz	short lff44s_9
  3295 00001746 BD0B000000              	mov	ebp, 11
  3296 0000174B EBC6                    	jmp	short lff44s_1
  3297                                  
  3298                                  ;----------------------------------------------------------------------------
  3299                                  
  3300                                  load_44khz_mono_16_bit:
  3301 0000174D F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3302                                  					; last of the file?
  3303 00001754 7402                    	jz	short lff44m2_0		; no
  3304 00001756 F9                      	stc
  3305 00001757 C3                      	retn
  3306                                  
  3307                                  lff44m2_0:
  3308                                  	; edi = audio buffer address
  3309                                  
  3310 00001758 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3311                                  
  3312                                  	; load file into memory
  3313                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000175D 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00001763 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00001765 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000176B B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001770 CD40                <1>  int 40h
  3314 00001772 724D                    	jc	short lff44m2_7 ; error !
  3315                                  
  3316 00001774 A3[FC810000]            	mov	[count], eax
  3317                                  
  3318 00001779 D1E8                    	shr	eax, 1
  3319 0000177B 7505                    	jnz	short lff44m2_8
  3320 0000177D E9B5F0FFFF              	jmp	lff44_eof
  3321                                  
  3322                                  lff44m2_8:
  3323 00001782 89C1                    	mov	ecx, eax	; word count
  3324                                  lff44m2_9:
  3325 00001784 BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3326 00001789 C605[DD1E0000]02        	mov	byte [faz], 2  ; 2 steps/phases
  3327                                  lff44m2_1:
  3328                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3329                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3330 00001790 66AD                    	lodsw
  3331 00001792 668B16                  	mov	dx, [esi]
  3332 00001795 49                      	dec	ecx
  3333 00001796 7502                    	jnz	short lff44m2_2_1
  3334 00001798 31D2                    	xor	edx, edx
  3335                                  lff44m2_2_1:	
  3336                                  	; ax = [previous_val]
  3337                                  	; dx = [next_val]
  3338 0000179A E857030000              	call	interpolating_2_16bit_mono
  3339 0000179F E31B                    	jecxz	lff44m2_3
  3340                                  lff44m2_2_2:
  3341 000017A1 66AD                    	lodsw
  3342 000017A3 66AB                    	stosw		; (L)eft Channel
  3343 000017A5 66AB                    	stosw		; (R)ight Channel
  3344                                  
  3345 000017A7 49                      	dec	ecx
  3346 000017A8 7412                    	jz	short lff44m2_3	
  3347 000017AA 4D                      	dec	ebp
  3348 000017AB 75F4                    	jnz	short lff44m2_2_2
  3349                                  
  3350 000017AD FE0D[DD1E0000]          	dec	byte [faz]
  3351 000017B3 74CF                    	jz	short lff44m2_9 
  3352 000017B5 BD0B000000              	mov	ebp, 11
  3353 000017BA EBD4                    	jmp	short lff44m2_1
  3354                                  
  3355                                  lff44m2_3:
  3356                                  lff44s2_3:
  3357 000017BC E95CF0FFFF              	jmp	lff44_3	; padfill
  3358                                  		; (put zeros in the remain words of the buffer)
  3359                                  lff44m2_7:
  3360                                  lff44s2_7:
  3361 000017C1 E971F0FFFF              	jmp	lff44_5  ; error
  3362                                  
  3363                                  ;----------------------------------------------------------------------------
  3364                                  
  3365                                  load_44khz_stereo_16_bit:
  3366 000017C6 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3367                                  					; last of the file?
  3368 000017CD 7402                    	jz	short lff44s2_0		; no
  3369 000017CF F9                      	stc
  3370 000017D0 C3                      	retn
  3371                                  
  3372                                  lff44s2_0:
  3373                                  	; edi = audio buffer address
  3374                                  
  3375 000017D1 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3376                                  
  3377                                  	; load file into memory
  3378                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000017D6 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000017DC 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000017DE 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000017E4 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000017E9 CD40                <1>  int 40h
  3379 000017EB 72D4                    	jc	short lff44s2_7 ; error !
  3380                                  
  3381 000017ED A3[FC810000]            	mov	[count], eax
  3382                                  
  3383 000017F2 C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3384 000017F5 7505                    	jnz	short lff44s2_8
  3385 000017F7 E93BF0FFFF              	jmp	lff44_eof
  3386                                  
  3387                                  lff44s2_8:
  3388 000017FC 89C1                    	mov	ecx, eax	; dword count
  3389                                  lff44s2_9:
  3390 000017FE BD0A000000              	mov	ebp, 10 ; interpolation (one step) loop count
  3391 00001803 C605[DD1E0000]02        	mov	byte [faz], 2  ; 2 steps/phase
  3392                                  lff44s2_1:
  3393                                  	; 2:1:1:1:1:1:1:1:1:1:1::	; 25/23
  3394                                  	; 2:1:1:1:1:1:1:1:1:1:1:1
  3395 0000180A 66AD                    	lodsw
  3396 0000180C 89C3                    	mov	ebx, eax
  3397 0000180E 66AD                    	lodsw
  3398                                  	;mov	dx, [esi]
  3399                                  	;mov	[next_val_l], dx
  3400                                  	;mov	dx, [esi+2]
  3401 00001810 8B16                    	mov	edx, [esi]
  3402 00001812 668915[D91E0000]        	mov	[next_val_l], dx
  3403 00001819 C1EA10                  	shr	edx, 16
  3404 0000181C 49                      	dec	ecx
  3405 0000181D 7509                    	jnz	short lff44s2_2_1
  3406 0000181F 31D2                    	xor	edx, edx ; 0
  3407 00001821 668915[D91E0000]        	mov	[next_val_l], dx
  3408                                  lff44s2_2_1:
  3409                                  	; bx = [previous_val_l]
  3410                                  	; ax = [previous_val_r]
  3411                                  	; [next_val_l]
  3412                                  	; dx = [next_val_r]
  3413 00001828 E8E1020000              	call	interpolating_2_16bit_stereo
  3414 0000182D E38D                    	jecxz	lff44s2_3
  3415                                  lff44s2_2_2:
  3416                                  	;movsw		; (L)eft Channel
  3417                                  	;movsw		; (R)ight Channel
  3418 0000182F A5                      	movsd
  3419                                  
  3420 00001830 49                      	dec	ecx
  3421 00001831 7489                    	jz	short lff44s2_3	
  3422 00001833 4D                      	dec	ebp
  3423 00001834 75F9                    	jnz	short lff44s2_2_2
  3424                                  	
  3425 00001836 FE0D[DD1E0000]          	dec	byte [faz]
  3426 0000183C 74C0                    	jz	short lff44s2_9 
  3427 0000183E BD0B000000              	mov	ebp, 11
  3428 00001843 EBC5                    	jmp	short lff44s2_1
  3429                                  
  3430                                  ;----------------------------------------------------------------------------
  3431                                  
  3432                                  load_12khz_mono_8_bit:
  3433 00001845 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3434                                  					; last of the file?
  3435 0000184C 7402                    	jz	short lff12m_0		; no
  3436 0000184E F9                      	stc
  3437 0000184F C3                      	retn
  3438                                  
  3439                                  lff12m_0:
  3440                                  	; edi = audio buffer address
  3441                                  
  3442 00001850 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3443                                  
  3444                                  	; load file into memory
  3445                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001855 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000185B 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000185D 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001863 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001868 CD40                <1>  int 40h
  3446 0000186A 7256                    	jc	short lff12m_7 ; error !
  3447                                  
  3448 0000186C A3[FC810000]            	mov	[count], eax
  3449                                  
  3450 00001871 21C0                    	and	eax, eax
  3451 00001873 7505                    	jnz	short lff12m_8
  3452 00001875 E9BDEFFFFF              	jmp	lff12_eof
  3453                                  
  3454                                  lff12m_8:
  3455 0000187A 89C1                    	mov	ecx, eax	; byte count
  3456                                  lff12m_1:
  3457                                  	; original-interpolated-interpolated-interpolated
  3458 0000187C AC                      	lodsb
  3459 0000187D 8A16                    	mov	dl, [esi]
  3460 0000187F 49                      	dec	ecx
  3461 00001880 7502                    	jnz	short lff12m_2
  3462 00001882 B280                    	mov	dl, 80h
  3463                                  lff12m_2:	
  3464                                  	; al = [previous_val]
  3465                                  	; dl = [next_val]
  3466 00001884 E8C0030000               	call	interpolating_4_8bit_mono
  3467 00001889 E353                    	jecxz	lff12m_3
  3468 0000188B EBEF                    	jmp	short lff12m_1
  3469                                  
  3470                                  ;----------------------------------------------------------------------------
  3471                                  
  3472                                  load_12khz_stereo_8_bit:
  3473 0000188D F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3474                                  					; last of the file?
  3475 00001894 7402                    	jz	short lff12s_0		; no
  3476 00001896 F9                      	stc
  3477 00001897 C3                      	retn
  3478                                  
  3479                                  lff12s_0:
  3480                                  	; edi = audio buffer address
  3481                                  
  3482 00001898 BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3483                                  
  3484                                  	; load file into memory
  3485                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000189D 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000018A3 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000018A5 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000018AB B803000000          <1>  mov eax, %1
    96                              <1> 
    97 000018B0 CD40                <1>  int 40h
  3486 000018B2 720E                    	jc	short lff12s_7 ; error !
  3487                                  
  3488 000018B4 A3[FC810000]            	mov	[count], eax
  3489                                  	
  3490 000018B9 D1E8                    	shr	eax, 1
  3491 000018BB 750A                    	jnz	short lff12s_8
  3492 000018BD E975EFFFFF              	jmp	lff12_eof
  3493                                  
  3494                                  lff12m_7:
  3495                                  lff12s_7:
  3496 000018C2 E970EFFFFF              	jmp	lff12_5  ; error
  3497                                  
  3498                                  lff12s_8:
  3499 000018C7 89C1                    	mov	ecx, eax	; word count
  3500                                  lff12s_1:
  3501                                  	; original-interpolated-interpolated-interpolated
  3502 000018C9 66AD                    	lodsw
  3503 000018CB 668B16                  	mov	dx, [esi]
  3504 000018CE 49                      	dec	ecx
  3505 000018CF 7504                    	jnz	short lff12s_2
  3506 000018D1 66BA8080                	mov	dx, 8080h
  3507                                  lff12s_2:	
  3508                                  	; al = [previous_val_l]
  3509                                  	; ah = [previous_val_r]
  3510                                  	; dl = [next_val_l]
  3511                                  	; dh = [next_val_r]
  3512 000018D5 E8AE030000              	call	interpolating_4_8bit_stereo
  3513 000018DA E302                    	jecxz	lff12s_3
  3514 000018DC EBEB                    	jmp	short lff12s_1
  3515                                  
  3516                                  lff12m_3:
  3517                                  lff12s_3:
  3518 000018DE E93AEFFFFF              	jmp	lff12_3	; padfill
  3519                                  		; (put zeros in the remain words of the buffer)
  3520                                  
  3521                                  ;----------------------------------------------------------------------------
  3522                                  
  3523                                  load_12khz_mono_16_bit:
  3524 000018E3 F605[D1770000]01        	test    byte [flags], ENDOFFILE	; have we already read the
  3525                                  					; last of the file?
  3526 000018EA 7402                    	jz	short lff12m2_0		; no
  3527 000018EC F9                      	stc
  3528 000018ED C3                      	retn
  3529                                  
  3530                                  lff12m2_0:
  3531                                  	; edi = audio buffer address
  3532                                  
  3533 000018EE BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3534                                  
  3535                                  	; load file into memory
  3536                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000018F3 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000018F9 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000018FB 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001901 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001906 CD40                <1>  int 40h
  3537 00001908 7223                    	jc	short lff12m2_7 ; error !
  3538                                  
  3539 0000190A A3[FC810000]            	mov	[count], eax
  3540                                  
  3541 0000190F D1E8                    	shr	eax, 1
  3542 00001911 7505                    	jnz	short lff12m2_8
  3543 00001913 E91FEFFFFF              	jmp	lff12_eof
  3544                                  
  3545                                  lff12m2_8:
  3546 00001918 89C1                    	mov	ecx, eax	; word count
  3547                                  lff12m2_1:
  3548                                  	; original-interpolated-interpolated-interpolated
  3549 0000191A 66AD                    	lodsw
  3550 0000191C 668B16                  	mov	dx, [esi]
  3551 0000191F 49                      	dec	ecx
  3552 00001920 7502                    	jnz	short lff12m2_2
  3553 00001922 31D2                    	xor	edx, edx
  3554                                  lff12m2_2:	
  3555                                  	; ax = [previous_val]
  3556                                  	; dx = [next_val]
  3557 00001924 E8F6040000               	call	interpolating_4_16bit_mono
  3558 00001929 E3B3                    	jecxz	lff12m_3
  3559 0000192B EBED                    	jmp	short lff12m2_1
  3560                                  
  3561                                  lff12m2_7:
  3562                                  lff12s2_7:
  3563 0000192D E905EFFFFF              	jmp	lff12_5  ; error
  3564                                  
  3565                                  ;----------------------------------------------------------------------------
  3566                                  
  3567                                  load_12khz_stereo_16_bit:
  3568 00001932 F605[D1770000]01                test    byte [flags], ENDOFFILE	; have we already read the
  3569                                  					; last of the file?
  3570 00001939 7402                    	jz	short lff12s2_0		; no
  3571 0000193B F9                      	stc
  3572 0000193C C3                      	retn
  3573                                  
  3574                                  lff12s2_0:
  3575                                  	; edi = audio buffer address
  3576                                  
  3577 0000193D BE[00000200]            	mov	esi, temp_buffer ; temporary buffer for wav data
  3578                                  
  3579                                  	; load file into memory
  3580                                  	sys 	_read, [FileHandle], esi, [loadsize]
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001942 8B1D[F3730000]      <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00001948 89F1                <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000194A 8B15[F4810000]      <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001950 B803000000          <1>  mov eax, %1
    96                              <1> 
    97 00001955 CD40                <1>  int 40h
  3581 00001957 72D4                    	jc	short lff12s2_7 ; error !
  3582                                  
  3583 00001959 A3[FC810000]            	mov	[count], eax
  3584                                  
  3585 0000195E C1E802                  	shr	eax, 2	; dword (left chan word + right chan word)
  3586 00001961 750A                    	jnz	short lff12s2_8
  3587 00001963 E9CFEEFFFF              	jmp	lff12_eof
  3588                                  
  3589                                  lff12m2_3:
  3590                                  lff12s2_3:
  3591 00001968 E9B0EEFFFF              	jmp	lff12_3	; padfill
  3592                                  		; (put zeros in the remain words of the buffer)
  3593                                  
  3594                                  lff12s2_8:
  3595 0000196D 89C1                    	mov	ecx, eax	; dword count
  3596                                  lff12s2_1:
  3597                                  	; original-interpolated-interpolated-interpolated
  3598 0000196F 66AD                    	lodsw
  3599 00001971 89C3                    	mov	ebx, eax
  3600 00001973 66AD                    	lodsw
  3601 00001975 8B16                    	mov	edx, [esi]
  3602 00001977 49                      	dec	ecx
  3603 00001978 7502                    	jnz	short lff12s2_2
  3604 0000197A 31D2                    	xor	edx, edx ; 0
  3605                                  lff12s2_2:
  3606 0000197C 8915[D91E0000]          	mov	[next_val_l], edx
  3607                                  
  3608                                  	; bx = [previous_val_l]
  3609                                  	; ax = [previous_val_r]
  3610                                  	; [next_val_l]
  3611                                  	; [next_val_r]
  3612 00001982 E8D1040000              	call	interpolating_4_16bit_stereo
  3613 00001987 E3DF                    	jecxz	lff12s2_3
  3614 00001989 EBE4                    	jmp	short lff12s2_1
  3615                                  
  3616                                  ;-----------------------------------------------------------------------------
  3617                                  ;-----------------------------------------------------------------------------
  3618                                  
  3619                                  	; 09/02/2025
  3620                                  
  3621                                  interpolating_3_8bit_mono:
  3622                                  	; al = [previous_val]
  3623                                  	; dl = [next_val]
  3624                                  	; original-interpolated-interpolated
  3625                                  
  3626 0000198B 88C3                    	mov	bl, al
  3627 0000198D 2C80                    	sub	al, 80h
  3628 0000198F 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3629 00001993 66AB                    	stosw		; original sample (L)
  3630 00001995 66AB                    	stosw		; original sample (R)
  3631 00001997 88D8                    	mov	al, bl
  3632 00001999 00D0                    	add	al, dl
  3633 0000199B D0D8                    	rcr	al, 1
  3634 0000199D 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3635 0000199F 00D8                    	add	al, bl
  3636 000019A1 D0D8                    	rcr	al, 1
  3637 000019A3 2C80                    	sub	al, 80h
  3638 000019A5 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3639 000019A9 66AB                    	stosw		; interpolated sample 1 (L)
  3640 000019AB 66AB                    	stosw		; interpolated sample 1 (R)
  3641 000019AD 88F8                    	mov	al, bh
  3642 000019AF 00D0                    	add	al, dl	; [next_val]
  3643 000019B1 D0D8                    	rcr	al, 1
  3644 000019B3 2C80                    	sub	al, 80h
  3645 000019B5 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3646 000019B9 66AB                    	stosw		; interpolated sample 2 (L)
  3647 000019BB 66AB                    	stosw		; interpolated sample 2 (R)
  3648 000019BD C3                      	retn
  3649                                  
  3650                                  ;-----------------------------------------------------------------------------
  3651                                  
  3652                                  interpolating_3_8bit_stereo:
  3653                                  	; al = [previous_val_l]
  3654                                  	; ah = [previous_val_r]
  3655                                  	; dl = [next_val_l]
  3656                                  	; dh = [next_val_r]	
  3657                                  	; original-interpolated-interpolated
  3658                                  
  3659 000019BE 89C3                    	mov	ebx, eax
  3660 000019C0 2C80                    	sub	al, 80h
  3661 000019C2 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3662 000019C6 66AB                    	stosw		; original sample (L)
  3663 000019C8 88F8                    	mov	al, bh
  3664 000019CA 2C80                    	sub	al, 80h
  3665 000019CC 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3666 000019D0 66AB                    	stosw		; original sample (R)
  3667 000019D2 88D8                    	mov	al, bl
  3668 000019D4 00D0                    	add	al, dl	; [next_val_l]
  3669 000019D6 D0D8                    	rcr	al, 1
  3670 000019D8 50                      	push	eax ; *	; al = interpolated middle (L) (temporary)
  3671 000019D9 00D8                    	add	al, bl	; [previous_val_l]
  3672 000019DB D0D8                    	rcr	al, 1
  3673 000019DD 2C80                    	sub	al, 80h
  3674 000019DF 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3675 000019E3 66AB                    	stosw		; interpolated sample 1 (L)
  3676 000019E5 88F8                    	mov	al, bh
  3677 000019E7 00F0                    	add	al, dh	; [next_val_r]
  3678 000019E9 D0D8                    	rcr	al, 1
  3679 000019EB 50                      	push	eax ; ** ; al = interpolated middle (R) (temporary)
  3680 000019EC 00F8                    	add	al, bh	; [previous_val_r]
  3681 000019EE D0D8                    	rcr	al, 1
  3682 000019F0 2C80                    	sub	al, 80h
  3683 000019F2 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3684 000019F6 66AB                    	stosw		; interpolated sample 1 (R)
  3685 000019F8 5B                      	pop	ebx ; **
  3686 000019F9 58                      	pop	eax ; *
  3687 000019FA 00D0                    	add	al, dl	; [next_val_l]
  3688 000019FC D0D8                    	rcr	al, 1
  3689 000019FE 2C80                    	sub	al, 80h
  3690 00001A00 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3691 00001A04 66AB                    	stosw		; interpolated sample 2 (L)
  3692 00001A06 88D8                    	mov	al, bl
  3693 00001A08 00F0                    	add	al, dh	; [next_val_r]
  3694 00001A0A D0D8                    	rcr	al, 1
  3695 00001A0C 2C80                    	sub	al, 80h
  3696 00001A0E 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3697 00001A12 66AB                    	stosw		; interpolated sample 2 (R)
  3698 00001A14 C3                      	retn
  3699                                  
  3700                                  ;-----------------------------------------------------------------------------
  3701                                  
  3702                                  interpolating_2_8bit_mono:
  3703                                  	; al = [previous_val]
  3704                                  	; dl = [next_val]
  3705                                  	; original-interpolated
  3706                                  
  3707 00001A15 88C3                    	mov	bl, al
  3708 00001A17 2C80                    	sub	al, 80h
  3709 00001A19 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3710 00001A1D 66AB                    	stosw		; original sample (L)
  3711 00001A1F 66AB                    	stosw		; original sample (R)
  3712 00001A21 88D8                    	mov	al, bl
  3713 00001A23 00D0                    	add	al, dl
  3714 00001A25 D0D8                    	rcr	al, 1
  3715 00001A27 2C80                    	sub	al, 80h
  3716 00001A29 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3717 00001A2D 66AB                    	stosw		; interpolated sample (L)
  3718 00001A2F 66AB                    	stosw		; interpolated sample (R)
  3719 00001A31 C3                      	retn
  3720                                  
  3721                                  ;-----------------------------------------------------------------------------
  3722                                  
  3723                                  interpolating_2_8bit_stereo:
  3724                                  	; al = [previous_val_l]
  3725                                  	; ah = [previous_val_r]
  3726                                  	; dl = [next_val_l]
  3727                                  	; dh = [next_val_r]
  3728                                  	; original-interpolated
  3729                                  
  3730 00001A32 89C3                    	mov	ebx, eax
  3731 00001A34 2C80                    	sub	al, 80h
  3732 00001A36 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3733 00001A3A 66AB                    	stosw		; original sample (L)
  3734 00001A3C 88F8                    	mov	al, bh
  3735 00001A3E 2C80                    	sub	al, 80h
  3736 00001A40 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3737 00001A44 66AB                    	stosw		; original sample (R)
  3738 00001A46 88D8                    	mov	al, bl	; [previous_val_l]
  3739 00001A48 00D0                    	add	al, dl	; [next_val_l]
  3740 00001A4A D0D8                    	rcr	al, 1
  3741 00001A4C 2C80                    	sub	al, 80h
  3742 00001A4E 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3743 00001A52 66AB                    	stosw		; interpolated sample (L)
  3744 00001A54 88F8                    	mov	al, bh
  3745 00001A56 00F0                    	add	al, dh	; [next_val_r]
  3746 00001A58 D0D8                    	rcr	al, 1
  3747 00001A5A 2C80                    	sub	al, 80h
  3748 00001A5C 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3749 00001A60 66AB                    	stosw		; interpolated sample (R)
  3750 00001A62 C3                      	retn
  3751                                  
  3752                                  ;-----------------------------------------------------------------------------
  3753                                  
  3754                                  interpolating_3_16bit_mono:
  3755                                  	; ax = [previous_val]
  3756                                  	; dx = [next_val]
  3757                                  	; original-interpolated-interpolated
  3758                                  
  3759 00001A63 66AB                    	stosw		; original sample (L)
  3760 00001A65 66AB                    	stosw		; original sample (R)
  3761 00001A67 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3762 00001A6A 50                      	push	eax ; *	; [previous_val]
  3763 00001A6B 80C680                  	add	dh, 80h
  3764 00001A6E 6601D0                  	add	ax, dx
  3765 00001A71 66D1D8                  	rcr	ax, 1
  3766 00001A74 5B                      	pop	ebx ; *
  3767 00001A75 93                      	xchg	ebx, eax ; bx  = interpolated middle (temporary)
  3768 00001A76 6601D8                  	add	ax, bx	; [previous_val] + interpolated middle
  3769 00001A79 66D1D8                  	rcr	ax, 1
  3770 00001A7C 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3771 00001A7F 66AB                    	stosw 		; interpolated sample 1 (L)
  3772 00001A81 66AB                    	stosw		; interpolated sample 1 (R)
  3773 00001A83 89D8                    	mov	eax, ebx
  3774 00001A85 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  3775 00001A88 66D1D8                  	rcr	ax, 1
  3776 00001A8B 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3777 00001A8E 66AB                    	stosw		; interpolated sample 2 (L)
  3778 00001A90 66AB                    	stosw		; interpolated sample 2 (R)
  3779 00001A92 C3                      	retn
  3780                                  
  3781                                  ;-----------------------------------------------------------------------------
  3782                                  
  3783                                  interpolating_3_16bit_stereo:
  3784                                  	; bx = [previous_val_l]
  3785                                  	; ax = [previous_val_r]
  3786                                  	; [next_val_l]
  3787                                  	; dx = [next_val_r]
  3788                                  	; original-interpolated-interpolated
  3789                                  
  3790 00001A93 93                      	xchg	eax, ebx
  3791 00001A94 66AB                    	stosw		; original sample (L)
  3792 00001A96 93                      	xchg	eax, ebx
  3793 00001A97 66AB                    	stosw		; original sample (R)
  3794 00001A99 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3795 00001A9C 50                      	push	eax ; *	; [previous_val_r]
  3796 00001A9D 80C780                  	add	bh, 80h
  3797 00001AA0 8005[DA1E0000]80        	add	byte [next_val_l+1], 80h
  3798 00001AA7 66A1[D91E0000]          	mov	ax, [next_val_l]
  3799 00001AAD 6601D8                  	add	ax, bx	; [previous_val_l]
  3800 00001AB0 66D1D8                  	rcr	ax, 1
  3801 00001AB3 93                      	xchg	eax, ebx ; ax = [previous_val_l]
  3802 00001AB4 6601D8                  	add	ax, bx	; bx = interpolated middle (L)
  3803 00001AB7 66D1D8                  	rcr	ax, 1
  3804 00001ABA 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3805 00001ABD 66AB                    	stosw 		; interpolated sample 1 (L)
  3806 00001ABF 58                      	pop	eax  ; *
  3807 00001AC0 80C680                  	add	dh, 80h ; convert sound level 0 to 65535 format
  3808 00001AC3 52                      	push	edx  ; * ; [next_val_r]
  3809 00001AC4 92                      	xchg	eax, edx
  3810 00001AC5 6601D0                  	add	ax, dx	; [next_val_r] + [previous_val_r]
  3811 00001AC8 66D1D8                  	rcr	ax, 1	; / 2
  3812 00001ACB 50                      	push	eax ; ** ; interpolated middle (R)
  3813 00001ACC 6601D0                  	add	ax, dx	; + [previous_val_r]
  3814 00001ACF 66D1D8                  	rcr	ax, 1
  3815 00001AD2 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3816 00001AD5 66AB                    	stosw 		; interpolated sample 1 (R)
  3817 00001AD7 66A1[D91E0000]          	mov	ax, [next_val_l]
  3818 00001ADD 6601D8                  	add	ax, bx	; + interpolated middle (L)
  3819 00001AE0 66D1D8                  	rcr	ax, 1
  3820 00001AE3 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3821 00001AE6 66AB                    	stosw 		; interpolated sample 2 (L)
  3822 00001AE8 58                      	pop	eax ; **
  3823 00001AE9 5A                      	pop	edx ; *
  3824 00001AEA 6601D0                  	add	ax, dx	; interpolated middle + [next_val_r]
  3825 00001AED 66D1D8                  	rcr	ax, 1	; / 2
  3826 00001AF0 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3827 00001AF3 66AB                    	stosw 		; interpolated sample 2 (L)
  3828 00001AF5 C3                      	retn
  3829                                  
  3830                                  ;-----------------------------------------------------------------------------
  3831                                  
  3832                                  interpolating_2_16bit_mono:
  3833                                  	; ax = [previous_val]
  3834                                  	; dx = [next_val]
  3835                                  	; original-interpolated
  3836                                  
  3837 00001AF6 66AB                    	stosw		; original sample (L)
  3838 00001AF8 66AB                    	stosw		; original sample (R)
  3839 00001AFA 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3840 00001AFD 80C680                  	add	dh, 80h
  3841 00001B00 6601D0                  	add	ax, dx
  3842 00001B03 66D1D8                  	rcr	ax, 1
  3843 00001B06 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3844 00001B09 66AB                    	stosw		; interpolated sample (L)
  3845 00001B0B 66AB                    	stosw		; interpolated sample (R)
  3846 00001B0D C3                      	retn
  3847                                  
  3848                                  ;-----------------------------------------------------------------------------
  3849                                  
  3850                                  interpolating_2_16bit_stereo:
  3851                                  	; bx = [previous_val_l]
  3852                                  	; ax = [previous_val_r]
  3853                                  	; [next_val_l]
  3854                                  	; dx = [next_val_r]
  3855                                  	; original-interpolated
  3856                                  
  3857 00001B0E 93                      	xchg	eax, ebx
  3858 00001B0F 66AB                    	stosw		; original sample (L)
  3859 00001B11 93                      	xchg	eax, ebx
  3860 00001B12 66AB                    	stosw		; original sample (R)
  3861 00001B14 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  3862 00001B17 80C680                  	add	dh, 80h
  3863 00001B1A 6601D0                  	add	ax, dx	; [previous_val_r] + [next_val_r]
  3864 00001B1D 66D1D8                  	rcr	ax, 1	; / 2
  3865 00001B20 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3866                                  	;push	eax ; *	; interpolated sample (R)
  3867 00001B23 C1E010                  	shl	eax, 16
  3868 00001B26 66A1[D91E0000]          	mov	ax, [next_val_l]
  3869 00001B2C 80C480                  	add	ah, 80h
  3870 00001B2F 80C780                  	add	bh, 80h
  3871 00001B32 6601D8                  	add	ax, bx	; [next_val_l] + [previous_val_l]
  3872 00001B35 66D1D8                  	rcr	ax, 1	; / 2
  3873 00001B38 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  3874                                  	;stosw 		; interpolated sample (L)
  3875                                  	;pop	eax ; *
  3876                                  	;sub	ah, 80h	; -32768 to +32767 format again
  3877                                  	;stosw 		; interpolated sample (R)
  3878 00001B3B AB                      	stosd
  3879 00001B3C C3                      	retn
  3880                                  
  3881                                  ;-----------------------------------------------------------------------------
  3882                                  
  3883                                  interpolating_5_8bit_mono:
  3884                                  	; al = [previous_val]
  3885                                  	; dl = [next_val]
  3886                                  	; original-interpltd-interpltd-interpltd-interpltd
  3887                                  
  3888 00001B3D 88C3                    	mov	bl, al
  3889 00001B3F 2C80                    	sub	al, 80h
  3890 00001B41 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3891 00001B45 66AB                    	stosw		; original sample (L)
  3892 00001B47 66AB                    	stosw		; original sample (R)
  3893 00001B49 88D8                    	mov	al, bl
  3894 00001B4B 00D0                    	add	al, dl
  3895 00001B4D D0D8                    	rcr	al, 1
  3896 00001B4F 88C7                    	mov	bh, al	; interpolated middle (temporary)
  3897 00001B51 00D8                    	add	al, bl  ; [previous_val]
  3898 00001B53 D0D8                    	rcr	al, 1
  3899 00001B55 88C6                    	mov	dh, al	; interpolated 1st quarter (temporary)
  3900 00001B57 00D8                    	add	al, bl
  3901 00001B59 D0D8                    	rcr	al, 1
  3902 00001B5B 2C80                    	sub	al, 80h
  3903 00001B5D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3904 00001B61 66AB                    	stosw		; interpolated sample 1 (L)
  3905 00001B63 66AB                    	stosw		; interpolated sample 1 (R)
  3906 00001B65 88F8                    	mov	al, bh
  3907 00001B67 00F0                    	add	al, dh
  3908 00001B69 D0D8                    	rcr	al, 1
  3909 00001B6B 2C80                    	sub	al, 80h
  3910 00001B6D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3911 00001B71 66AB                    	stosw		; interpolated sample 2 (L)
  3912 00001B73 66AB                    	stosw		; interpolated sample 2 (R)
  3913 00001B75 88F8                    	mov	al, bh
  3914 00001B77 00D0                    	add	al, dl	; [next_val]
  3915 00001B79 D0D8                    	rcr	al, 1
  3916 00001B7B 88C6                    	mov	dh, al	; interpolated 3rd quarter (temporary)
  3917 00001B7D 00F8                    	add	al, bh
  3918 00001B7F D0D8                    	rcr	al, 1
  3919 00001B81 2C80                    	sub	al, 80h
  3920 00001B83 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3921 00001B87 66AB                    	stosw		; interpolated sample 3 (L)
  3922 00001B89 66AB                    	stosw		; interpolated sample 3 (R)
  3923 00001B8B 88F0                    	mov	al, dh
  3924 00001B8D 00D0                    	add	al, dl
  3925 00001B8F D0D8                    	rcr	al, 1
  3926 00001B91 2C80                    	sub	al, 80h
  3927 00001B93 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3928 00001B97 66AB                    	stosw		; interpolated sample 4 (L)
  3929 00001B99 66AB                    	stosw		; interpolated sample 4 (R)
  3930 00001B9B C3                      	retn
  3931                                  
  3932                                  ;-----------------------------------------------------------------------------
  3933                                  
  3934                                  interpolating_5_8bit_stereo:
  3935                                  	; al = [previous_val_l]
  3936                                  	; ah = [previous_val_r]
  3937                                  	; dl = [next_val_l]
  3938                                  	; dh = [next_val_r]
  3939                                  	; original-interpltd-interpltd-interpltd-interpltd
  3940                                  
  3941 00001B9C 89C3                    	mov	ebx, eax
  3942 00001B9E 2C80                    	sub	al, 80h
  3943 00001BA0 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3944 00001BA4 66AB                    	stosw		; original sample (L)
  3945 00001BA6 88F8                    	mov	al, bh
  3946 00001BA8 2C80                    	sub	al, 80h
  3947 00001BAA 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3948 00001BAE 66AB                    	stosw		; original sample (R)
  3949 00001BB0 52                      	push	edx ; *
  3950 00001BB1 88D8                    	mov	al, bl
  3951 00001BB3 00D0                    	add	al, dl	; [next_val_l]
  3952 00001BB5 D0D8                    	rcr	al, 1
  3953 00001BB7 50                      	push	eax ; ** ; al = interpolated middle (L) (temporary)
  3954 00001BB8 00D8                    	add	al, bl	; [previous_val_l]
  3955 00001BBA D0D8                    	rcr	al, 1
  3956 00001BBC 86D8                    	xchg	al, bl
  3957 00001BBE 00D8                    	add	al, bl	; bl = interpolated 1st quarter (L) (temp)
  3958 00001BC0 D0D8                    	rcr	al, 1
  3959 00001BC2 2C80                    	sub	al, 80h
  3960 00001BC4 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3961 00001BC8 66AB                    	stosw		; interpolated sample 1 (L)
  3962 00001BCA 88F8                    	mov	al, bh
  3963 00001BCC 00F0                    	add	al, dh	; [next_val_r]
  3964 00001BCE D0D8                    	rcr	al, 1
  3965 00001BD0 50                      	push	eax ; *** ; al = interpolated middle (R) (temporary)
  3966 00001BD1 00F8                    	add	al, bh	; [previous_val_r]
  3967 00001BD3 D0D8                    	rcr	al, 1
  3968 00001BD5 86F8                    	xchg	al, bh
  3969 00001BD7 00F8                    	add	al, bh	; bh = interpolated 1st quarter (R) (temp)
  3970 00001BD9 D0D8                    	rcr	al, 1
  3971 00001BDB 2C80                    	sub	al, 80h
  3972 00001BDD 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3973 00001BE1 66AB                    	stosw		; interpolated sample 1 (R)
  3974 00001BE3 5A                      	pop	edx ; ***
  3975 00001BE4 58                      	pop	eax ; ** ; al = interpolated middle (L) (temporary)
  3976 00001BE5 86D8                    	xchg	al, bl	; al = interpolated 1st quarter (L) (temp)
  3977 00001BE7 00D8                    	add	al, bl	; bl = interpolated middle (L) (temporary)
  3978 00001BE9 D0D8                    	rcr	al, 1
  3979 00001BEB 2C80                    	sub	al, 80h
  3980 00001BED 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3981 00001BF1 66AB                    	stosw		; interpolated sample 2 (L)
  3982 00001BF3 88D0                    	mov	al, dl 	; interpolated middle (R) (temporary)
  3983 00001BF5 86F8                    	xchg	al, bh	; al = interpolated 1st quarter (R) (temp)
  3984 00001BF7 00F8                    	add	al, bh	; bh = interpolated middle (R) (temporary)
  3985 00001BF9 D0D8                    	rcr	al, 1
  3986 00001BFB 2C80                    	sub	al, 80h
  3987 00001BFD 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3988 00001C01 66AB                    	stosw		; interpolated sample 2 (R)
  3989 00001C03 5A                      	pop	edx ; *
  3990 00001C04 88D8                    	mov	al, bl	; interpolated middle (L) (temporary)
  3991 00001C06 00D0                    	add	al, dl	; [next_val_l]
  3992 00001C08 D0D8                    	rcr	al, 1
  3993 00001C0A 86D8                    	xchg	al, bl	; al = interpolated middle (R) (temporary)
  3994 00001C0C 00D8                    	add	al, bl	; bl = interpolated 3rd quarter (L) (temp)
  3995 00001C0E D0D8                    	rcr	al, 1
  3996 00001C10 2C80                    	sub	al, 80h
  3997 00001C12 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  3998 00001C16 66AB                    	stosw		; interpolated sample 3 (L)
  3999 00001C18 88F8                    	mov	al, bh
  4000 00001C1A 00F0                    	add	al, dh	; interpolated middle (R) + [next_val_r]
  4001 00001C1C D0D8                    	rcr	al, 1
  4002 00001C1E 86F8                    	xchg	al, bh	; al = interpolated middle (R)
  4003 00001C20 00F8                    	add	al, bh	; bh = interpolated 3rd quarter (R) (temp)
  4004 00001C22 D0D8                    	rcr	al, 1
  4005 00001C24 2C80                    	sub	al, 80h
  4006 00001C26 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4007 00001C2A 66AB                    	stosw		; interpolated sample 3 (R)
  4008 00001C2C 88D8                    	mov	al, bl
  4009 00001C2E 00D0                    	add	al, dl	; [next_val_l]
  4010 00001C30 D0D8                    	rcr	al, 1
  4011 00001C32 2C80                    	sub	al, 80h
  4012 00001C34 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4013 00001C38 66AB                    	stosw		; interpolated sample 4 (L)
  4014 00001C3A 88F8                    	mov	al, bh
  4015 00001C3C 00F0                    	add	al, dh	; [next_val_r]
  4016 00001C3E D0D8                    	rcr	al, 1
  4017 00001C40 2C80                    	sub	al, 80h
  4018 00001C42 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4019 00001C46 66AB                    	stosw		; interpolated sample 4 (R)
  4020 00001C48 C3                      	retn
  4021                                  
  4022                                  ;-----------------------------------------------------------------------------
  4023                                  
  4024                                  interpolating_4_8bit_mono:
  4025                                  	; al = [previous_val]
  4026                                  	; dl = [next_val]
  4027                                  	; original-interpolated-interpolated-interpolated
  4028 00001C49 88C3                    	mov	bl, al
  4029 00001C4B 2C80                    	sub	al, 80h
  4030 00001C4D 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4031 00001C51 66AB                    	stosw		; original sample (L)
  4032 00001C53 66AB                    	stosw		; original sample (R)
  4033 00001C55 88D8                    	mov	al, bl
  4034 00001C57 00D0                    	add	al, dl
  4035 00001C59 D0D8                    	rcr	al, 1
  4036 00001C5B 86D8                    	xchg	al, bl  ; al = [previous_val]
  4037 00001C5D 00D8                    	add	al, bl	; bl = interpolated middle (sample 2)
  4038 00001C5F D0D8                    	rcr	al, 1
  4039 00001C61 2C80                    	sub	al, 80h
  4040 00001C63 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4041 00001C67 66AB                    	stosw		; interpolated sample 1 (L)
  4042 00001C69 66AB                    	stosw		; interpolated sample 1 (R)
  4043 00001C6B 88D8                    	mov	al, bl	; interpolated middle (sample 2)
  4044 00001C6D 2C80                    	sub	al, 80h
  4045 00001C6F 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4046 00001C73 66AB                    	stosw		; interpolated sample 2 (L)
  4047 00001C75 66AB                    	stosw		; interpolated sample 2 (R)
  4048 00001C77 88D8                    	mov	al, bl
  4049 00001C79 00D0                    	add	al, dl	; [next_val]
  4050 00001C7B D0D8                    	rcr	al, 1
  4051 00001C7D 2C80                    	sub	al, 80h
  4052 00001C7F 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4053 00001C83 66AB                    	stosw		; interpolated sample 3 (L)
  4054 00001C85 66AB                    	stosw		; interpolated sample 3 (R)
  4055 00001C87 C3                      	retn
  4056                                  
  4057                                  ;-----------------------------------------------------------------------------
  4058                                  
  4059                                  interpolating_4_8bit_stereo:
  4060                                  	; al = [previous_val_l]
  4061                                  	; ah = [previous_val_r]
  4062                                  	; dl = [next_val_l]
  4063                                  	; dh = [next_val_r]
  4064                                  	; original-interpolated-interpolated-interpolated
  4065                                  
  4066 00001C88 89C3                    	mov	ebx, eax
  4067 00001C8A 2C80                    	sub	al, 80h
  4068 00001C8C 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4069 00001C90 66AB                    	stosw		; original sample (L)
  4070 00001C92 88F8                    	mov	al, bh
  4071 00001C94 2C80                    	sub	al, 80h
  4072 00001C96 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4073 00001C9A 66AB                    	stosw		; original sample (R)
  4074 00001C9C 88D8                    	mov	al, bl
  4075 00001C9E 00D0                    	add	al, dl	; [next_val_l]
  4076 00001CA0 D0D8                    	rcr	al, 1
  4077 00001CA2 86D8                    	xchg	al, bl	; al = [previous_val_l]
  4078 00001CA4 00D8                    	add	al, bl	; bl = interpolated middle (L) (sample 2)
  4079 00001CA6 D0D8                    	rcr	al, 1
  4080 00001CA8 2C80                    	sub	al, 80h
  4081 00001CAA 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4082 00001CAE 66AB                    	stosw		; interpolated sample 1 (L)
  4083 00001CB0 88F8                    	mov	al, bh
  4084 00001CB2 00F0                    	add	al, dh	; [next_val_r]
  4085 00001CB4 D0D8                    	rcr	al, 1
  4086 00001CB6 86F8                    	xchg	al, bh	; al = [previous_val_h]
  4087 00001CB8 00F8                    	add	al, bh	; bh = interpolated middle (R) (sample 2)
  4088 00001CBA D0D8                    	rcr	al, 1
  4089 00001CBC 2C80                    	sub	al, 80h
  4090 00001CBE 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4091 00001CC2 66AB                    	stosw		; interpolated sample 1 (R)
  4092 00001CC4 88D8                    	mov	al, bl	; interpolated middle (L) (sample 2)
  4093 00001CC6 2C80                    	sub	al, 80h
  4094 00001CC8 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4095 00001CCC 66AB                    	stosw		; interpolated sample 2 (L)
  4096 00001CCE 88F8                    	mov	al, bh	; interpolated middle (L) (sample 2)
  4097 00001CD0 2C80                    	sub	al, 80h
  4098 00001CD2 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4099 00001CD6 66AB                    	stosw		; interpolated sample 2 (L)
  4100 00001CD8 88D8                    	mov	al, bl
  4101 00001CDA 00D0                    	add	al, dl	; [next_val_l]
  4102 00001CDC D0D8                    	rcr	al, 1
  4103 00001CDE 2C80                    	sub	al, 80h
  4104 00001CE0 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4105 00001CE4 66AB                    	stosw		; interpolated sample 3 (L)
  4106 00001CE6 88F8                    	mov	al, bh
  4107 00001CE8 00F0                    	add	al, dh	; [next_val_r]
  4108 00001CEA D0D8                    	rcr	al, 1
  4109 00001CEC 2C80                    	sub	al, 80h
  4110 00001CEE 66C1E008                	shl	ax, 8	; convert 8 bit sample to 16 bit sample
  4111 00001CF2 66AB                    	stosw		; interpolated sample 3 (R)
  4112 00001CF4 C3                      	retn
  4113                                  
  4114                                  ;-----------------------------------------------------------------------------
  4115                                  
  4116                                  interpolating_5_16bit_mono:
  4117                                  	; ax = [previous_val]
  4118                                  	; dx = [next_val]
  4119                                  	; original-interpltd-interpltd-interpltd-interpltd
  4120                                  
  4121 00001CF5 66AB                    	stosw		; original sample (L)
  4122 00001CF7 66AB                    	stosw		; original sample (R)
  4123 00001CF9 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4124 00001CFC 89C3                    	mov	ebx, eax ; [previous_val]
  4125 00001CFE 80C680                  	add	dh, 80h
  4126 00001D01 6601D0                  	add	ax, dx
  4127 00001D04 66D1D8                  	rcr	ax, 1
  4128 00001D07 50                      	push	eax ; *	; interpolated middle (temporary)
  4129 00001D08 6601D8                  	add	ax, bx	; interpolated middle + [previous_val]
  4130 00001D0B 66D1D8                  	rcr	ax, 1
  4131 00001D0E 50                      	push	eax ; **	; interpolated 1st quarter (temporary)
  4132 00001D0F 6601D8                  	add	ax, bx	; 1st quarter + [previous_val]
  4133 00001D12 66D1D8                  	rcr	ax, 1	
  4134 00001D15 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4135 00001D18 66AB                    	stosw 		; interpolated sample 1 (L)
  4136 00001D1A 66AB                    	stosw		; interpolated sample 1 (R)
  4137 00001D1C 58                      	pop	eax ; **
  4138 00001D1D 5B                      	pop	ebx ; *
  4139 00001D1E 6601D8                  	add	ax, bx	; 1st quarter + middle
  4140 00001D21 66D1D8                  	rcr	ax, 1	; / 2
  4141 00001D24 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4142 00001D27 66AB                    	stosw		; interpolated sample 2 (L)
  4143 00001D29 66AB                    	stosw		; interpolated sample 2 (R)
  4144 00001D2B 89D8                    	mov	eax, ebx
  4145 00001D2D 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  4146 00001D30 66D1D8                  	rcr	ax, 1
  4147 00001D33 50                      	push	eax ; *	; interpolated 3rd quarter (temporary)
  4148 00001D34 6601D8                  	add	ax, bx	; + interpolated middle
  4149 00001D37 66D1D8                  	rcr	ax, 1
  4150 00001D3A 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4151 00001D3D 66AB                    	stosw		; interpolated sample 3 (L)
  4152 00001D3F 66AB                    	stosw		; interpolated sample 3 (R)
  4153 00001D41 58                      	pop	eax ; *
  4154 00001D42 6601D0                  	add	ax, dx	; 3rd quarter + [next_val]
  4155 00001D45 66D1D8                  	rcr	ax, 1	; / 2
  4156 00001D48 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4157 00001D4B 66AB                    	stosw		; interpolated sample 4 (L)
  4158 00001D4D 66AB                    	stosw		; interpolated sample 4 (R)
  4159 00001D4F C3                      	retn
  4160                                  
  4161                                  ;-----------------------------------------------------------------------------
  4162                                  
  4163                                  interpolating_5_16bit_stereo:
  4164                                  	; bx = [previous_val_l]
  4165                                  	; ax = [previous_val_r]
  4166                                  	; [next_val_l]
  4167                                  	; [next_val_r]
  4168                                  	; original-interpltd-interpltd-interpltd-interpltd
  4169                                  
  4170 00001D50 51                      	push	ecx ; !
  4171 00001D51 93                      	xchg	eax, ebx
  4172 00001D52 66AB                    	stosw		; original sample (L)
  4173 00001D54 93                      	xchg	eax, ebx
  4174 00001D55 66AB                    	stosw		; original sample (R)
  4175 00001D57 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4176 00001D5A 50                      	push	eax ; *	; [previous_val_r]
  4177 00001D5B 80C780                  	add	bh, 80h
  4178 00001D5E 8005[DA1E0000]80        	add	byte [next_val_l+1], 80h
  4179 00001D65 66A1[D91E0000]          	mov	ax, [next_val_l]
  4180 00001D6B 6601D8                  	add	ax, bx	; [previous_val_l]
  4181 00001D6E 66D1D8                  	rcr	ax, 1
  4182 00001D71 89C1                    	mov	ecx, eax ; interpolated middle (L)
  4183 00001D73 6601D8                  	add	ax, bx
  4184 00001D76 66D1D8                  	rcr	ax, 1
  4185 00001D79 89C2                    	mov	edx, eax ; interpolated 1st quarter (L)
  4186 00001D7B 6601D8                  	add	ax, bx	; [previous_val_l]
  4187 00001D7E 66D1D8                  	rcr	ax, 1
  4188 00001D81 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4189 00001D84 66AB                    	stosw 		; interpolated sample 1 (L)
  4190 00001D86 89C8                    	mov	eax, ecx
  4191 00001D88 6601D0                  	add	ax, dx	; middle (L) + 1st quarter (L)
  4192 00001D8B 66D1D8                  	rcr	ax, 1	; / 2
  4193 00001D8E 89C3                    	mov	ebx, eax  ; interpolated sample 2 (L)
  4194 00001D90 5A                      	pop	edx ; *	; [previous_val_r]
  4195 00001D91 89D0                    	mov	eax, edx
  4196 00001D93 8005[DC1E0000]80        	add	byte [next_val_r+1], 80h
  4197 00001D9A 660305[DB1E0000]        	add	ax, [next_val_r]
  4198 00001DA1 66D1D8                  	rcr	ax, 1
  4199 00001DA4 50                      	push	eax ; *	; interpolated middle (R)
  4200 00001DA5 6601D0                  	add	ax, dx
  4201 00001DA8 66D1D8                  	rcr	ax, 1
  4202 00001DAB 50                      	push	eax ; ** ; interpolated 1st quarter (R)
  4203 00001DAC 6601D0                  	add	ax, dx	; [previous_val_r]
  4204 00001DAF 66D1D8                  	rcr	ax, 1
  4205 00001DB2 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4206 00001DB5 66AB                    	stosw 		; interpolated sample 1 (R)
  4207 00001DB7 89D8                    	mov	eax, ebx
  4208 00001DB9 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4209 00001DBC 66AB                    	stosw 		; interpolated sample 2 (L)
  4210 00001DBE 58                      	pop	eax ; **
  4211 00001DBF 5A                      	pop	edx ; *
  4212 00001DC0 6601D0                  	add	ax, dx	; 1st quarter (R) + middle (R)
  4213 00001DC3 66D1D8                  	rcr	ax, 1	; / 2
  4214 00001DC6 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4215 00001DC9 66AB                    	stosw 		; interpolated sample 2 (R)
  4216 00001DCB 89C8                    	mov	eax, ecx
  4217 00001DCD 660305[D91E0000]        	add	ax, [next_val_l]
  4218 00001DD4 66D1D8                  	rcr	ax, 1
  4219 00001DD7 50                      	push	eax ; * ; interpolated 3rd quarter (L)
  4220 00001DD8 6601C8                  	add	ax, cx	; interpolated middle (L)
  4221 00001DDB 66D1D8                  	rcr	ax, 1
  4222 00001DDE 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4223 00001DE1 66AB                    	stosw 		; interpolated sample 3 (L)
  4224 00001DE3 89D0                    	mov	eax, edx
  4225 00001DE5 660305[DB1E0000]        	add	ax, [next_val_r]
  4226 00001DEC 66D1D8                  	rcr	ax, 1
  4227 00001DEF 50                      	push	eax ; ** ; interpolated 3rd quarter (R)
  4228 00001DF0 6601D0                  	add	ax, dx	; interpolated middle (R)
  4229 00001DF3 66D1D8                  	rcr	ax, 1
  4230 00001DF6 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4231 00001DF9 66AB                    	stosw 		; interpolated sample 3 (R)
  4232 00001DFB 5B                      	pop	ebx ; **
  4233 00001DFC 58                      	pop	eax ; *
  4234 00001DFD 660305[D91E0000]        	add	ax, [next_val_l]
  4235 00001E04 66D1D8                  	rcr	ax, 1
  4236 00001E07 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4237 00001E0A 66AB                    	stosw 		; interpolated sample 4 (L)
  4238 00001E0C 89D8                    	mov	eax, ebx	
  4239 00001E0E 660305[DB1E0000]        	add	ax, [next_val_r]
  4240 00001E15 66D1D8                  	rcr	ax, 1
  4241 00001E18 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4242 00001E1B 66AB                    	stosw 		; interpolated sample 4 (R)
  4243 00001E1D 59                      	pop	ecx ; !
  4244 00001E1E C3                      	retn
  4245                                  
  4246                                  ;-----------------------------------------------------------------------------
  4247                                  
  4248                                  interpolating_4_16bit_mono:
  4249                                  	; ax = [previous_val]
  4250                                  	; dx = [next_val]
  4251                                  	; 02/02/2025
  4252                                  	; original-interpolated-interpolated-interpolated
  4253                                  
  4254 00001E1F 66AB                    	stosw		; original sample (L)
  4255 00001E21 66AB                    	stosw		; original sample (R)
  4256 00001E23 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4257 00001E26 89C3                    	mov	ebx, eax ; [previous_val]
  4258 00001E28 80C680                  	add	dh, 80h
  4259 00001E2B 6601D0                  	add	ax, dx	; [previous_val] + [next_val]
  4260 00001E2E 66D1D8                  	rcr	ax, 1
  4261 00001E31 93                      	xchg	eax, ebx
  4262 00001E32 6601D8                  	add	ax, bx	; [previous_val] + interpolated middle
  4263 00001E35 66D1D8                  	rcr	ax, 1
  4264 00001E38 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4265 00001E3B 66AB                    	stosw 		; interpolated sample 1 (L)
  4266 00001E3D 66AB                    	stosw		; interpolated sample 1 (R)
  4267 00001E3F 89D8                    	mov	eax, ebx ; interpolated middle
  4268 00001E41 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4269 00001E44 66AB                    	stosw 		; interpolated sample 2 (L)
  4270 00001E46 66AB                    	stosw		; interpolated sample 2 (R)
  4271 00001E48 89D8                    	mov	eax, ebx
  4272 00001E4A 6601D0                  	add	ax, dx	; interpolated middle + [next_val]
  4273 00001E4D 66D1D8                  	rcr	ax, 1
  4274 00001E50 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4275 00001E53 66AB                    	stosw		; interpolated sample 3 (L)
  4276 00001E55 66AB                    	stosw		; interpolated sample 3 (R)
  4277 00001E57 C3                      	retn
  4278                                  
  4279                                  ;-----------------------------------------------------------------------------
  4280                                  
  4281                                  interpolating_4_16bit_stereo:
  4282                                  	; bx = [previous_val_l]
  4283                                  	; ax = [previous_val_r]
  4284                                  	; [next_val_l]
  4285                                  	; [next_val_r]
  4286                                  	; original-interpolated-interpolated-interpolated
  4287                                  
  4288 00001E58 93                      	xchg	eax, ebx
  4289 00001E59 66AB                    	stosw		; original sample (L)
  4290 00001E5B 93                      	xchg	eax, ebx
  4291 00001E5C 66AB                    	stosw		; original sample (R)
  4292 00001E5E 80C480                  	add	ah, 80h ; convert sound level 0 to 65535 format
  4293 00001E61 89C2                    	mov	edx, eax ; [previous_val_r]
  4294 00001E63 80C780                  	add	bh, 80h
  4295 00001E66 8005[DA1E0000]80        	add	byte [next_val_l+1], 80h
  4296 00001E6D 66A1[D91E0000]          	mov	ax, [next_val_l]
  4297 00001E73 6601D8                  	add	ax, bx	; [previous_val_l]
  4298 00001E76 66D1D8                  	rcr	ax, 1
  4299 00001E79 93                      	xchg	eax, ebx
  4300 00001E7A 6601D8                  	add	ax, bx	; bx = interpolated middle (L)
  4301 00001E7D 66D1D8                  	rcr	ax, 1
  4302 00001E80 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4303 00001E83 66AB                    	stosw 		; interpolated sample 1 (L)
  4304 00001E85 8005[DC1E0000]80        	add	byte [next_val_r+1], 80h
  4305 00001E8C 89D0                    	mov	eax, edx ; [previous_val_r]
  4306 00001E8E 660305[DB1E0000]        	add	ax, [next_val_r]
  4307 00001E95 66D1D8                  	rcr	ax, 1
  4308 00001E98 92                      	xchg	eax, edx
  4309 00001E99 6601D0                  	add	ax, dx	; dx = interpolated middle (R)
  4310 00001E9C 66D1D8                  	rcr	ax, 1
  4311 00001E9F 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4312 00001EA2 66AB                    	stosw 		; interpolated sample 1 (R)
  4313 00001EA4 89D8                    	mov	eax, ebx
  4314 00001EA6 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4315 00001EA9 66AB                    	stosw 		; interpolated sample 2 (L)
  4316 00001EAB 89D0                    	mov	eax, edx
  4317 00001EAD 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4318 00001EB0 66AB                    	stosw 		; interpolated sample 2 (R)
  4319 00001EB2 89D8                    	mov	eax, ebx
  4320 00001EB4 660305[D91E0000]        	add	ax, [next_val_l]
  4321 00001EBB 66D1D8                  	rcr	ax, 1
  4322 00001EBE 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4323 00001EC1 66AB                    	stosw 		; interpolated sample 3 (L)
  4324 00001EC3 89D0                    	mov	eax, edx
  4325 00001EC5 660305[DB1E0000]        	add	ax, [next_val_r]
  4326 00001ECC 66D1D8                  	rcr	ax, 1
  4327 00001ECF 80EC80                  	sub	ah, 80h	; -32768 to +32767 format again
  4328 00001ED2 66AB                    	stosw 		; interpolated sample 3 (R)
  4329 00001ED4 C3                      	retn
  4330                                  
  4331                                  ;-----------------------------------------------------------------------------
  4332                                  
  4333                                  previous_val:
  4334 00001ED5 0000                    previous_val_l: dw 0
  4335 00001ED7 0000                    previous_val_r: dw 0
  4336                                  next_val:
  4337 00001ED9 0000                    next_val_l: dw 0
  4338 00001EDB 0000                    next_val_r: dw 0
  4339                                  
  4340 00001EDD 00                      faz:	db 0
  4341                                  
  4342                                  ;=============================================================================
  4343                                  ;	Write AC'97 Hadrware Information
  4344                                  ;=============================================================================
  4345                                  	
  4346                                  	; 09/02/2025
  4347                                  
  4348                                  write_audio_dev_info:
  4349 00001EDE 31DB                    	xor	ebx, ebx
  4350 00001EE0 803D[DE770000]01        	cmp	byte [audio_hardware], 1
  4351 00001EE7 7557                    	jne	short write_ac97_pci_dev_info
  4352                                  
  4353                                  ;-----------------------------------------------------------------------------
  4354                                  	
  4355                                  	; 09/02/2025
  4356                                  	; 05/02/2025 - sb16play.s
  4357                                  
  4358                                  write_sb16_dev_info:
  4359 00001EE9 A1[DA770000]            	mov	eax, [audio_io_base]
  4360                                  	;xor	ebx, ebx
  4361 00001EEE 88C3                    	mov	bl, al
  4362 00001EF0 88DA                    	mov	dl, bl
  4363 00001EF2 80E30F                  	and	bl, 0Fh
  4364 00001EF5 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4365 00001EFB A2[F7760000]            	mov	[msgBasePort+2], al
  4366 00001F00 88D3                    	mov	bl, dl
  4367 00001F02 C0EB04                  	shr	bl, 4
  4368 00001F05 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4369 00001F0B A2[F6760000]            	mov	[msgBasePort+1], al
  4370 00001F10 88E3                    	mov	bl, ah
  4371                                  	;and	bl, 0Fh
  4372 00001F12 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4373 00001F18 A2[F5760000]            	mov	[msgBasePort], al
  4374                                  
  4375                                  	;xor	eax, eax
  4376 00001F1D A0[CE770000]            	mov	al, [audio_intr]
  4377 00001F22 0430                    	add	al, 30h
  4378 00001F24 A2[0C770000]            	mov	[msgSB16IRQ], al
  4379                                  
  4380                                  	sys	_msg, msgSB16Info, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00001F29 BB[BF760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00001F2E B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00001F33 BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00001F38 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00001F3D CD40                <1>  int 40h
  4381                                  
  4382 00001F3F C3                      	retn
  4383                                  
  4384                                  ;-----------------------------------------------------------------------------
  4385                                  
  4386                                  	; 09/02/2025
  4387                                  	; 05/02/2025 - ac97play.s
  4388                                  	
  4389                                  write_ac97_pci_dev_info:
  4390                                  	; BUS/DEV/FN
  4391                                  	;	00000000BBBBBBBBDDDDDFFF00000000
  4392                                  	; DEV/VENDOR
  4393                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
  4394                                  
  4395 00001F40 A1[D2770000]            	mov	eax, [dev_vendor]
  4396                                  	; 07/12/2024
  4397 00001F45 31DB                    	xor	ebx, ebx
  4398 00001F47 88C3                    	mov	bl, al
  4399 00001F49 88DA                    	mov	dl, bl
  4400 00001F4B 80E30F                  	and	bl, 0Fh
  4401 00001F4E 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4402 00001F54 A2[C9750000]            	mov	[msgVendorId+3], al
  4403 00001F59 88D3                    	mov	bl, dl
  4404 00001F5B C0EB04                  	shr	bl, 4
  4405 00001F5E 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4406 00001F64 A2[C8750000]            	mov	[msgVendorId+2], al
  4407 00001F69 88E3                    	mov	bl, ah
  4408 00001F6B 88DA                    	mov	dl, bl
  4409 00001F6D 80E30F                  	and	bl, 0Fh
  4410 00001F70 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4411 00001F76 A2[C7750000]            	mov	[msgVendorId+1], al
  4412 00001F7B 88D3                    	mov	bl, dl
  4413 00001F7D C0EB04                  	shr	bl, 4
  4414 00001F80 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4415 00001F86 A2[C6750000]            	mov	[msgVendorId], al
  4416 00001F8B C1E810                  	shr	eax, 16
  4417 00001F8E 88C3                    	mov	bl, al
  4418 00001F90 88DA                    	mov	dl, bl
  4419 00001F92 80E30F                  	and	bl, 0Fh
  4420 00001F95 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4421 00001F9B A2[DA750000]            	mov	[msgDevId+3], al
  4422 00001FA0 88D3                    	mov	bl, dl
  4423 00001FA2 C0EB04                  	shr	bl, 4
  4424 00001FA5 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4425 00001FAB A2[D9750000]            	mov	[msgDevId+2], al
  4426 00001FB0 88E3                    	mov	bl, ah
  4427 00001FB2 88DA                    	mov	dl, bl
  4428 00001FB4 80E30F                  	and	bl, 0Fh
  4429 00001FB7 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4430 00001FBD A2[D8750000]            	mov	[msgDevId+1], al
  4431 00001FC2 88D3                    	mov	bl, dl
  4432 00001FC4 C0EB04                  	shr	bl, 4
  4433 00001FC7 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4434 00001FCD A2[D7750000]            	mov	[msgDevId], al
  4435                                  
  4436 00001FD2 A1[D6770000]            	mov	eax, [bus_dev_fn]
  4437 00001FD7 C1E808                  	shr	eax, 8
  4438 00001FDA 88C3                    	mov	bl, al
  4439 00001FDC 88DA                    	mov	dl, bl
  4440 00001FDE 80E307                  	and	bl, 7 ; bit 0,1,2
  4441 00001FE1 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4442 00001FE7 A2[FE750000]            	mov	[msgFncNo+1], al
  4443 00001FEC 88D3                    	mov	bl, dl
  4444 00001FEE C0EB03                  	shr	bl, 3
  4445 00001FF1 88DA                    	mov	dl, bl
  4446 00001FF3 80E30F                  	and	bl, 0Fh
  4447 00001FF6 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4448 00001FFC A2[F0750000]            	mov	[msgDevNo+1], al
  4449 00002001 88D3                    	mov	bl, dl
  4450 00002003 C0EB04                  	shr	bl, 4
  4451 00002006 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4452 0000200C A2[EF750000]            	mov	[msgDevNo], al
  4453 00002011 88E3                    	mov	bl, ah
  4454 00002013 88DA                    	mov	dl, bl
  4455 00002015 80E30F                  	and	bl, 0Fh
  4456 00002018 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4457 0000201E A2[E4750000]            	mov	[msgBusNo+1], al
  4458 00002023 88D3                    	mov	bl, dl
  4459 00002025 C0EB04                  	shr	bl, 4
  4460 00002028 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4461 0000202E A2[E3750000]            	mov	[msgBusNo], al
  4462                                  
  4463                                  	;mov	ax, [ac97_NamBar]
  4464 00002033 66A1[DA770000]          	mov	ax, [NAMBAR]
  4465 00002039 88C3                    	mov	bl, al
  4466 0000203B 88DA                    	mov	dl, bl
  4467 0000203D 80E30F                  	and	bl, 0Fh
  4468 00002040 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4469 00002046 A2[0D760000]            	mov	[msgNamBar+3], al
  4470 0000204B 88D3                    	mov	bl, dl
  4471 0000204D C0EB04                  	shr	bl, 4
  4472 00002050 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4473 00002056 A2[0C760000]            	mov	[msgNamBar+2], al
  4474 0000205B 88E3                    	mov	bl, ah
  4475 0000205D 88DA                    	mov	dl, bl
  4476 0000205F 80E30F                  	and	bl, 0Fh
  4477 00002062 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4478 00002068 A2[0B760000]            	mov	[msgNamBar+1], al
  4479 0000206D 88D3                    	mov	bl, dl
  4480 0000206F C0EB04                  	shr	bl, 4
  4481 00002072 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4482 00002078 A2[0A760000]            	mov	[msgNamBar], al
  4483                                  
  4484                                  	;mov	ax, [ac97_NabmBar]
  4485 0000207D 66A1[DC770000]          	mov	ax, [NABMBAR]
  4486 00002083 88C3                    	mov	bl, al
  4487 00002085 88DA                    	mov	dl, bl
  4488 00002087 80E30F                  	and	bl, 0Fh
  4489 0000208A 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4490 00002090 A2[1D760000]            	mov	[msgNabmBar+3], al
  4491 00002095 88D3                    	mov	bl, dl
  4492 00002097 C0EB04                  	shr	bl, 4
  4493 0000209A 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4494 000020A0 A2[1C760000]            	mov	[msgNabmBar+2], al
  4495 000020A5 88E3                    	mov	bl, ah
  4496 000020A7 88DA                    	mov	dl, bl
  4497 000020A9 80E30F                  	and	bl, 0Fh
  4498 000020AC 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4499 000020B2 A2[1B760000]            	mov	[msgNabmBar+1], al
  4500 000020B7 88D3                    	mov	bl, dl
  4501 000020B9 C0EB04                  	shr	bl, 4
  4502 000020BC 8A83[84750000]          	mov	al, [ebx+hex_chars]
  4503 000020C2 A2[1A760000]            	mov	[msgNabmBar], al
  4504                                  
  4505 000020C7 31C0                    	xor	eax, eax
  4506 000020C9 A0[CE770000]            	mov	al, [ac97_int_ln_reg]
  4507 000020CE B10A                    	mov	cl, 10
  4508 000020D0 F6F1                    	div	cl
  4509                                  	;add	[msgIRQ], ax
  4510 000020D2 66053030                	add	ax, 3030h
  4511 000020D6 66A3[26760000]          	mov	[msgIRQ], ax
  4512                                  	;and	al, al
  4513 000020DC 3C30                    	cmp	al, 30h
  4514 000020DE 750D                    	jne	short _w_ac97imsg_
  4515 000020E0 A0[27760000]            	mov	al, [msgIRQ+1]
  4516 000020E5 B420                    	mov	ah, ' '
  4517 000020E7 66A3[26760000]          	mov	[msgIRQ], ax
  4518                                  _w_ac97imsg_:
  4519                                  	sys	_msg, msgAC97Info, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000020ED BB[95750000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000020F2 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000020F7 BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000020FC B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00002101 CD40                <1>  int 40h
  4520                                  
  4521                                          ;retn
  4522                                  
  4523                                  ;-----------------------------------------------------------------------------
  4524                                  
  4525                                  write_VRA_info:
  4526                                  	sys	_msg, msgVRAheader, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002103 BB[7A760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002108 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000210D BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002112 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00002117 CD40                <1>  int 40h
  4527 00002119 803D[CF770000]00        	cmp	byte [VRA], 0
  4528 00002120 7617                    	jna	short _w_VRAi_no
  4529                                  _w_VRAi_yes:
  4530                                  	sys	_msg, msgVRAyes, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002122 BB[88760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002127 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000212C BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002131 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00002136 CD40                <1>  int 40h
  4531 00002138 C3                      	retn
  4532                                  _w_VRAi_no:
  4533                                  	sys	_msg, msgVRAno, 255, 07h
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002139 BB[8E760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000213E B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00002143 BA07000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002148 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 0000214D CD40                <1>  int 40h
  4534 0000214F C3                      	retn
  4535                                  
  4536                                  ;=============================================================================
  4537                                  ;	Write WAV File Information
  4538                                  ;=============================================================================
  4539                                  
  4540                                  	; 09/02/2025
  4541                                  	; 05/02/2025 - twavply2.s
  4542                                  
  4543                                  write_wav_file_info:
  4544                                  	sys	_msg, msgWavFileName, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002150 BB[2B760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002155 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000215A BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000215F B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00002164 CD40                <1>  int 40h
  4545                                  	sys	_msg, wav_file_name, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002166 BB[7C770000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 0000216B B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00002170 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002175 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 0000217A CD40                <1>  int 40h
  4546                                  
  4547                                  write_sample_rate:
  4548 0000217C 66A1[68770000]          	mov	ax, [WAVE_SampleRate]
  4549                                  	; ax = sample rate (hertz)
  4550 00002182 31D2                    	xor	edx, edx
  4551 00002184 66B90A00                	mov	cx, 10
  4552 00002188 66F7F1                  	div	cx
  4553 0000218B 0015[50760000]          	add	[msgHertz+4], dl
  4554 00002191 29D2                    	sub	edx, edx
  4555 00002193 66F7F1                  	div	cx
  4556 00002196 0015[4F760000]          	add	[msgHertz+3], dl
  4557 0000219C 29D2                    	sub	edx, edx
  4558 0000219E 66F7F1                  	div	cx
  4559 000021A1 0015[4E760000]          	add	[msgHertz+2], dl
  4560 000021A7 29D2                    	sub	edx, edx
  4561 000021A9 66F7F1                  	div	cx
  4562 000021AC 0015[4D760000]          	add	[msgHertz+1], dl
  4563 000021B2 0005[4C760000]          	add	[msgHertz], al
  4564                                  	
  4565                                  	sys	_msg, msgSampleRate, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000021B8 BB[3D760000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000021BD B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000021C2 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000021C7 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000021CC CD40                <1>  int 40h
  4566                                  
  4567 000021CE BE[67760000]            	mov	esi, msg16Bits
  4568 000021D3 803D[72770000]10        	cmp	byte [WAVE_BitsPerSample], 16
  4569 000021DA 7405                    	je	short wsr_1
  4570 000021DC BE[57760000]            	mov	esi, msg8Bits
  4571                                  wsr_1:
  4572                                  	sys	_msg, esi, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 000021E1 89F3                <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000021E3 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000021E8 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000021ED B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000021F2 CD40                <1>  int 40h
  4573                                  
  4574 000021F4 BE[60760000]            	mov	esi, msgMono
  4575 000021F9 803D[72770000]01        	cmp	byte [WAVE_BitsPerSample], 1
  4576 00002200 7405                    	je	short wsr_2
  4577 00002202 BE[71760000]            	mov	esi, msgStereo
  4578                                  wsr_2:
  4579                                  	sys	_msg, esi, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002207 89F3                <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002209 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 0000220E BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002213 B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00002218 CD40                <1>  int 40h
  4580 0000221A C3                              retn
  4581                                  
  4582                                  ;=============================================================================
  4583                                  ;	Audio System Initialization
  4584                                  ;=============================================================================
  4585                                  	
  4586                                  	; 09/02/2025
  4587                                  
  4588                                  audio_system_init:
  4589 0000221B 803D[DE770000]01        	cmp	byte [audio_hardware], 1
  4590 00002222 7421                    	je	short sb16_init
  4591                                  
  4592 00002224 E893020000              	call	ac97_init
  4593 00002229 7319                    	jnc	short init_ok
  4594                                  
  4595 0000222B BE[00750000]            	mov	esi, ac97_init_err_msg
  4596                                  
  4597                                  init_error:
  4598                                  	sys	_msg, esi, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002230 89F3                <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002232 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 00002237 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 0000223C B823000000          <1>  mov eax, %1
    96                              <1> 
    97 00002241 CD40                <1>  int 40h
  4599 00002243 F9                      	stc
  4600                                  init_ok:
  4601 00002244 C3                      	retn
  4602                                  
  4603                                  ;=============================================================================
  4604                                  ;	Sound Blaster 16 Initialization
  4605                                  ;=============================================================================
  4606                                  
  4607                                  	; 09/02/2025
  4608                                  	; 20/10/2017 - playwav.s
  4609                                  
  4610                                  sb16_init:
  4611                                  	; 09/02/2025
  4612                                  	; Ref: TRDOS 386 Kernel v2.0.9, audio.s (06/06/2024)
  4613                                  	;      SbInit_play procedure (06/08/2022, v2.0.5)
  4614                                  
  4615 00002245 8B1D[10820000]          	mov	ebx, [DMA_phy_buff] ; physical address of DMA buffer
  4616                                  
  4617 0000224B 8B0D[F8810000]          	mov	ecx, [buffersize] ; = [loadsize] for SB16
  4618 00002251 D1E1                    	shl	ecx, 1	; 2*[buffersize] = dma buffer size
  4619                                  
  4620 00002253 803D[72770000]10        	cmp	byte [WAVE_BitsPerSample], 16
  4621 0000225A 7543                    	jne	short sbInit_0	; set 8 bit DMA buffer
  4622                                  
  4623                                  	; convert byte count to word count
  4624 0000225C D1E9                    	shr	ecx, 1
  4625 0000225E 49                      	dec	ecx	; word count - 1
  4626                                  
  4627                                  	; convert byte offset to word offset
  4628 0000225F D1EB                    	shr	ebx, 1
  4629                                  
  4630                                  	; 16 bit DMA buffer setting (DMA channel 5)
  4631 00002261 B005                    	mov	al, 05h  ; set mask bit for channel 5 (4+1)
  4632                                  	;out	0D4h, al
  4633 00002263 66BAD400                	mov	dx, 0D4h ; DMA mask register
  4634 00002267 B401                    	mov	ah, 1  ;outb
  4635 00002269 CD34                    	int	34h
  4636                                  	
  4637 0000226B 30C0                    	xor	al, al   ; stops all DMA processes on selected channel
  4638                                  	;out	0D8h, al
  4639 0000226D B2D8                    	mov	dl, 0D8h ; clear selected channel register
  4640                                  	;mov	ah, 1  ;outb
  4641 0000226F CD34                    	int	34h
  4642                                  
  4643 00002271 88D8                    	mov	al, bl	 ; byte 0 of DMA buffer offset in words (physical)
  4644                                  	;out	0C4, al
  4645 00002273 B2C4                    	mov	dl, 0C4h ; DMA channel 5 port number
  4646                                  	;mov	ah, 1  ;outb
  4647 00002275 CD34                    	int	34h
  4648                                  
  4649 00002277 88F8                    	mov	al, bh   ; byte 1 of DMA buffer offset in words (physical)
  4650                                  	;out	0C4h, al
  4651                                  	;mov	dl, 0C4h ; DMA channel 5 port number
  4652                                  	;mov	ah, 1  ;outb
  4653 00002279 CD34                    	int	34h
  4654                                  	
  4655 0000227B C1EB0F                  	shr	ebx, 15	 ; complete 16 bit shift
  4656 0000227E 80E3FE                  	and	bl, 0FEh ; clear bit 0 (not necessary, it will be ignored)
  4657                                  
  4658 00002281 88D8                    	mov	al, bl   ; byte 2 of DMA buffer address (physical)
  4659                                  	;out	8Bh, al
  4660 00002283 B28B                    	mov	dl, 8Bh	 ; page register port addr for channel 5
  4661                                  	;mov	ah, 1  ;outb
  4662 00002285 CD34                    	int	34h
  4663                                  
  4664 00002287 88C8                    	mov	al, cl   ; low byte of DMA count - 1
  4665                                  	;out	0C6h, al
  4666 00002289 B2C6                    	mov	dl, 0C6h ; count register port addr for channel 1
  4667                                  	;mov	ah, 1  ;outb
  4668 0000228B CD34                    	int	34h
  4669                                  
  4670 0000228D 88E8                    	mov	al, ch   ; high byte of DMA count - 1
  4671                                  	;out	0C6h, al
  4672                                  	;mov	dl, 0C6h ; count register port addr for channel 1
  4673                                  	;mov	ah, 1  ;outb
  4674 0000228F CD34                    	int	34h
  4675                                  
  4676                                  	; channel 5, read, autoinitialized, single mode
  4677 00002291 B059                    	mov	al, 59h
  4678                                  	;out	0D6h, al
  4679 00002293 B2D6                    	mov	dl, 0D6h ; DMA mode register port address
  4680                                  	;mov	ah, 1  ;outb
  4681 00002295 CD34                    	int	34h
  4682                                  
  4683 00002297 B001                    	mov	al, 01h  ; clear mask bit for channel 5
  4684                                  	;out	0D4h, al
  4685 00002299 B2D4                    	mov	dl, 0D4h ; DMA mask register port address
  4686                                  	;mov	ah, 1  ;outb
  4687 0000229B CD34                    	int	34h
  4688                                  
  4689 0000229D EB3A                    	jmp	short ResetDsp
  4690                                  
  4691                                  sbInit_0:
  4692 0000229F 49                      	dec	ecx	; byte count - 1
  4693                                  
  4694                                  	; 8 bit DMA buffer setting (DMA channel 1)
  4695 000022A0 B005                    	mov	al, 05h ; set mask bit for channel 1 (4+1)
  4696                                  	;out	0Ah, al
  4697 000022A2 66BA0A00                	mov	dx, 0Ah ; DMA mask register
  4698 000022A6 B401                    	mov	ah, 1  ;outb
  4699 000022A8 CD34                    	int	34h
  4700                                  
  4701 000022AA 30C0                    	xor	al, al  ; stops all DMA processes on selected channel
  4702                                  	;out	0Ch, al
  4703 000022AC B20C                    	mov	dl, 0Ch ; clear selected channel register
  4704                                  	;mov	ah, 1  ;outb
  4705 000022AE CD34                    	int	34h
  4706                                  
  4707 000022B0 88D8                    	mov	al, bl	; byte 0 of DMA buffer address (physical)
  4708                                  	;out	02h, al
  4709 000022B2 B202                    	mov	dl, 02h	; DMA channel 1 port number
  4710                                  	;mov	ah, 1  ;outb
  4711 000022B4 CD34                    	int	34h
  4712                                  
  4713 000022B6 88F8                    	mov	al, bh  ; byte 1 of DMA buffer address (physical)
  4714                                  	;out	02h, al
  4715                                  	;mov	dl, 02h ; DMA channel 1 port number
  4716                                  	;mov	ah, 1  ;outb
  4717 000022B8 CD34                    	int	34h
  4718                                  
  4719 000022BA C1EB10                  	shr	ebx, 16
  4720                                  
  4721 000022BD 88D8                    	mov	al, bl  ; byte 2 of DMA buffer address (physical)
  4722                                  	;out	83h, al
  4723 000022BF B283                    	mov	dl, 83h ; page register port addr for channel 1
  4724                                  	;mov	ah, 1  ;outb
  4725 000022C1 CD34                    	int	34h
  4726                                  
  4727 000022C3 88C8                    	mov	al, cl  ; low byte of DMA count - 1
  4728                                  	;out	03h, al
  4729 000022C5 B203                    	mov	dl, 03h ; count register port addr for channel 1
  4730                                  	;mov	ah, 1  ;outb
  4731 000022C7 CD34                    	int	34h
  4732                                  
  4733 000022C9 88E8                    	mov	al, ch  ; high byte of DMA count - 1
  4734                                  	;out	03h, al
  4735                                  	;mov	dl, 03h ; count register port addr for channel 1
  4736                                  	;mov	ah, 1  ;outb
  4737 000022CB CD34                    	int	34h
  4738                                  
  4739                                  	; channel 1, read, autoinitialized, single mode
  4740 000022CD B059                    	mov	al, 59h
  4741                                  	;out	0Bh, al
  4742 000022CF B20B                    	mov	dl, 0Bh ; DMA mode register port address
  4743                                  	;mov	ah, 1  ;outb
  4744 000022D1 CD34                    	int	34h
  4745                                  
  4746 000022D3 B001                    	mov	al, 01h ; clear mask bit for channel 1
  4747                                  	;out	0Ah, al
  4748 000022D5 B20A                    	mov	dl, 0Ah ; DMA mask register port address
  4749                                  	;mov	ah, 1  ;outb
  4750 000022D7 CD34                    	int	34h
  4751                                  
  4752                                  ResetDsp:
  4753 000022D9 668B15[DA770000]        	mov	dx, [audio_io_base]
  4754                                  	;add	dx, 06h
  4755 000022E0 80C206                  	add	dl, 06h
  4756 000022E3 B001                    	mov	al, 1
  4757                                  	;out	dx, al
  4758 000022E5 B401                    	mov	ah, 1  ;outb
  4759 000022E7 CD34                    	int	34h
  4760                                  
  4761                                  	;in	al, dx
  4762                                  	;in	al, dx
  4763                                  	;in	al, dx
  4764                                  	;in	al, dx
  4765                                  
  4766 000022E9 31C0                    	xor	eax, eax
  4767                                  	;mov	ah, 0  ;inb
  4768 000022EB CD34                    	int	34h
  4769                                  	;mov	ah, 0
  4770 000022ED CD34                    	int	34h
  4771                                  
  4772                                  	;out	dx, al
  4773 000022EF FEC4                    	inc	ah ; ah = 1 ;outb
  4774 000022F1 CD34                    	int	34h
  4775                                  
  4776                                  	;mov	ecx, 100
  4777 000022F3 66B96400                	mov	cx, 100
  4778 000022F7 28E4                    	sub	ah, ah ; 0
  4779                                  WaitId:
  4780 000022F9 668B15[DA770000]        	mov	dx, [audio_io_base]
  4781 00002300 80C20E                  	add	dl, 0Eh
  4782                                  	;in	al, dx
  4783                                  	;mov	ah, 0  ;inb
  4784 00002303 CD34                    	int	34h
  4785 00002305 08C0                    	or	al, al
  4786                                  	;js	short sb_GetId
  4787 00002307 7910                    	jns	short sb_next
  4788                                  	;loop	WaitId
  4789                                  	;jmp	sb_Exit
  4790                                  
  4791                                  sb_GetId:
  4792 00002309 668B15[DA770000]        	mov	dx, [audio_io_base]
  4793                                  	;add	dx, 0Ah
  4794 00002310 80C20A                  	add	dl, 0Ah
  4795                                  	;in	al, dx
  4796                                  	;mov	ah, 0  ;inb
  4797 00002313 CD34                    	int	34h
  4798 00002315 3CAA                    	cmp	al, 0AAh
  4799 00002317 740C                    	je	short SbOk
  4800                                  sb_next:
  4801 00002319 E2DE                    	loop	WaitId
  4802                                  	;stc
  4803                                  
  4804 0000231B BE[D4740000]            	mov	esi, sb16_init_err_msg
  4805 00002320 E90BFFFFFF              	jmp	init_error
  4806                                  
  4807                                  SbOk:
  4808 00002325 C3                      	retn
  4809                                  
  4810                                  ;-----------------------------------------------------------------------------
  4811                                  ;-----------------------------------------------------------------------------
  4812                                  
  4813                                  	; 10/02/2025
  4814                                  	; 09/02/2025
  4815                                  	; 20/10/2017 - playwav.s
  4816                                  
  4817                                  sb16_init_play:
  4818 00002326 668B15[DA770000]        	mov	dx, [audio_io_base]
  4819                                  	;add	dx, 0Ch
  4820 0000232D 80C20C                  	add	dl, 0Ch
  4821                                  	SbOut	0D1h	; Turn on speaker
   106                              <1> %%Wait:
   107                              <1> 
   108 00002330 B400                <1>  mov ah, 0
   109 00002332 CD34                <1>  int 34h
   110 00002334 08C0                <1>  or al, al
   111 00002336 78F8                <1>  js short %%Wait
   112 00002338 B0D1                <1>  mov al, %1
   113                              <1> 
   114 0000233A B401                <1>  mov ah, 1
   115 0000233C CD34                <1>  int 34h
  4822                                  	SbOut	41h	; 8 bit or 16 bit transfer
   106                              <1> %%Wait:
   107                              <1> 
   108 0000233E B400                <1>  mov ah, 0
   109 00002340 CD34                <1>  int 34h
   110 00002342 08C0                <1>  or al, al
   111 00002344 78F8                <1>  js short %%Wait
   112 00002346 B041                <1>  mov al, %1
   113                              <1> 
   114 00002348 B401                <1>  mov ah, 1
   115 0000234A CD34                <1>  int 34h
  4823 0000234C 668B1D[68770000]        	mov	bx, [WAVE_SampleRate] ; sampling rate (Hz)
  4824                                  	SbOut	bh	; sampling rate high byte
   106                              <1> %%Wait:
   107                              <1> 
   108 00002353 B400                <1>  mov ah, 0
   109 00002355 CD34                <1>  int 34h
   110 00002357 08C0                <1>  or al, al
   111 00002359 78F8                <1>  js short %%Wait
   112 0000235B 88F8                <1>  mov al, %1
   113                              <1> 
   114 0000235D B401                <1>  mov ah, 1
   115 0000235F CD34                <1>  int 34h
  4825                                  	SbOut	bl	; sampling rate low byte
   106                              <1> %%Wait:
   107                              <1> 
   108 00002361 B400                <1>  mov ah, 0
   109 00002363 CD34                <1>  int 34h
   110 00002365 08C0                <1>  or al, al
   111 00002367 78F8                <1>  js short %%Wait
   112 00002369 88D8                <1>  mov al, %1
   113                              <1> 
   114 0000236B B401                <1>  mov ah, 1
   115 0000236D CD34                <1>  int 34h
  4826                                  
  4827                                  StartDMA:
  4828                                  	; autoinitialized mode
  4829 0000236F 803D[72770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit samples
  4830 00002376 7411                    	je	short sb_play_1
  4831                                  	; 8 bit samples
  4832 00002378 66BBC600                	mov	bx, 0C6h ; 8 bit output (0C6h)
  4833 0000237C 803D[66770000]02        	cmp	byte [WAVE_NumChannels], 2 ; 1 = mono, 2 = stereo
  4834 00002383 7214                    	jb	short sb_play_2
  4835 00002385 B720                    	mov	bh, 20h	; 8 bit stereo (20h)
  4836 00002387 EB10                    	jmp	short sb_play_2
  4837                                  sb_play_1:
  4838                                  	; 16 bit samples
  4839 00002389 66BBB610                	mov	bx, 10B6h ; 16 bit output (0B6h)
  4840 0000238D 803D[66770000]02        	cmp	byte [WAVE_NumChannels], 2 ; 1 = mono, 2 = stereo
  4841 00002394 7203                    	jb	short sb_play_2
  4842 00002396 80C720                  	add	bh, 20h	; 16 bit stereo (30h)
  4843                                  sb_play_2:
  4844                                  	; PCM output (8/16 bit mono autoinitialized transfer)
  4845                                  	SbOut   bl	; bCommand
   106                              <1> %%Wait:
   107                              <1> 
   108 00002399 B400                <1>  mov ah, 0
   109 0000239B CD34                <1>  int 34h
   110 0000239D 08C0                <1>  or al, al
   111 0000239F 78F8                <1>  js short %%Wait
   112 000023A1 88D8                <1>  mov al, %1
   113                              <1> 
   114 000023A3 B401                <1>  mov ah, 1
   115 000023A5 CD34                <1>  int 34h
  4846                                  	SbOut	bh	; bMode
   106                              <1> %%Wait:
   107                              <1> 
   108 000023A7 B400                <1>  mov ah, 0
   109 000023A9 CD34                <1>  int 34h
   110 000023AB 08C0                <1>  or al, al
   111 000023AD 78F8                <1>  js short %%Wait
   112 000023AF 88F8                <1>  mov al, %1
   113                              <1> 
   114 000023B1 B401                <1>  mov ah, 1
   115 000023B3 CD34                <1>  int 34h
  4847                                  
  4848 000023B5 8B1D[F8810000]          	mov	ebx, [buffersize] ; = [loadsize] for SB16
  4849                                  			; half buffer size
  4850 000023BB 803D[72770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit DMA
  4851 000023C2 7502                    	jne	short sb_play_3
  4852 000023C4 D1EB                    	shr	ebx, 1	; byte count to word count (samples)
  4853                                  sb_play_3:
  4854 000023C6 4B                      	dec	ebx ; wBlkSize is one less than the actual size
  4855                                  	SbOut   bl
   106                              <1> %%Wait:
   107                              <1> 
   108 000023C7 B400                <1>  mov ah, 0
   109 000023C9 CD34                <1>  int 34h
   110 000023CB 08C0                <1>  or al, al
   111 000023CD 78F8                <1>  js short %%Wait
   112 000023CF 88D8                <1>  mov al, %1
   113                              <1> 
   114 000023D1 B401                <1>  mov ah, 1
   115 000023D3 CD34                <1>  int 34h
  4856                                  	SbOut   bh
   106                              <1> %%Wait:
   107                              <1> 
   108 000023D5 B400                <1>  mov ah, 0
   109 000023D7 CD34                <1>  int 34h
   110 000023D9 08C0                <1>  or al, al
   111 000023DB 78F8                <1>  js short %%Wait
   112 000023DD 88F8                <1>  mov al, %1
   113                              <1> 
   114 000023DF B401                <1>  mov ah, 1
   115 000023E1 CD34                <1>  int 34h
  4857                                  
  4858 000023E3 C605[E0770000]0D        	mov	byte [volume], 13 ; max = 15, min = 0
  4859                                  
  4860 000023EA E8A1E1FFFF              	call	SetPCMOutVolume
  4861                                  
  4862 000023EF C3                      	retn
  4863                                  
  4864                                  ;-----------------------------------------------------------------------------
  4865                                  
  4866                                  	; 10/02/2025
  4867                                  	; 09/02/2025
  4868                                  	; 20/10/2017 - playwav.s
  4869                                  
  4870                                  sb16_stop:
  4871                                  	; 09/02/2025
  4872                                  	; Ref: TRDOS 386 Kernel v2.0.9 audio.s (06/06/2024)
  4873                                  	;      sb16_stop procedure (06/08/2022, v2.0.5)
  4874                                  
  4875                                  	;mov	byte [stopped], 2
  4876                                  	;
  4877 000023F0 668B15[DA770000]        	mov	dx, [audio_io_base]
  4878                                  	;add	dx, 0Ch
  4879 000023F7 80C20C                  	add	dl, 0Ch
  4880                                  
  4881 000023FA B3D9                    	mov	bl, 0D9h ; exit auto-initialize 16 bit transfer
  4882                                  	; stop  autoinitialized DMA transfer mode 
  4883 000023FC 803D[72770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit samples
  4884 00002403 7402                    	je	short sb16_stop_1
  4885                                  	;mov	bl, 0DAh ; exit auto-initialize 8 bit transfer
  4886 00002405 FEC3                    	inc	bl
  4887                                  sb16_stop_1:
  4888                                  	SbOut	bl ; exit auto-initialize transfer command
   106                              <1> %%Wait:
   107                              <1> 
   108 00002407 B400                <1>  mov ah, 0
   109 00002409 CD34                <1>  int 34h
   110 0000240B 08C0                <1>  or al, al
   111 0000240D 78F8                <1>  js short %%Wait
   112 0000240F 88D8                <1>  mov al, %1
   113                              <1> 
   114 00002411 B401                <1>  mov ah, 1
   115 00002413 CD34                <1>  int 34h
  4889                                  
  4890 00002415 30C0                    	xor	al, al ; stops all DMA processes on selected channel
  4891 00002417 B401                    	mov	ah, 1
  4892                                  
  4893 00002419 803D[72770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit samples
  4894 00002420 7408                    	je	short sb16_stop_2
  4895                                  
  4896                                  	;out	0Ch, al ; clear selected channel register
  4897 00002422 66BA0C00                	mov	dx, 0Ch
  4898                                  	;mov	ah, 1 ;outb
  4899 00002426 CD34                    	int	34h
  4900                                  
  4901 00002428 EB06                    	jmp	short sb16_stop_3
  4902                                  
  4903                                  sb16_stop_2:
  4904                                  	;out	0D8h, al ; clear selected channel register
  4905 0000242A 66BAD800                	mov	dx, 0D8h
  4906                                  	;mov	ah, 1 ;outb
  4907 0000242E CD34                    	int	34h
  4908                                  
  4909                                  sb16_stop_3:
  4910 00002430 C605[E1770000]02        	mov	byte [stopped], 2 ; stop !
  4911                                  SbDone:
  4912                                  	; 10/02/2025
  4913 00002437 668B15[DA770000]        	mov	dx, [audio_io_base]
  4914 0000243E 80C20C                  	add	dl, 0Ch
  4915                                  	SbOut   0D0h
   106                              <1> %%Wait:
   107                              <1> 
   108 00002441 B400                <1>  mov ah, 0
   109 00002443 CD34                <1>  int 34h
   110 00002445 08C0                <1>  or al, al
   111 00002447 78F8                <1>  js short %%Wait
   112 00002449 B0D0                <1>  mov al, %1
   113                              <1> 
   114 0000244B B401                <1>  mov ah, 1
   115 0000244D CD34                <1>  int 34h
  4916                                  	SbOut   0D3h
   106                              <1> %%Wait:
   107                              <1> 
   108 0000244F B400                <1>  mov ah, 0
   109 00002451 CD34                <1>  int 34h
   110 00002453 08C0                <1>  or al, al
   111 00002455 78F8                <1>  js short %%Wait
   112 00002457 B0D3                <1>  mov al, %1
   113                              <1> 
   114 00002459 B401                <1>  mov ah, 1
   115 0000245B CD34                <1>  int 34h
  4917                                  sb16_stop_4:
  4918 0000245D C3                      	retn
  4919                                  
  4920                                  ;-----------------------------------------------------------------------------
  4921                                  
  4922                                  	; 09/02/2025
  4923                                  	
  4924                                  sb16_pause:
  4925                                  	; Ref: TRDOS 386 Kernel v2.0.9 audio.s (06/06/2024)
  4926                                  	;      sb16_pause procedure (06/08/2022, v2.0.5)
  4927                                  
  4928 0000245E C605[E1770000]01        	mov	byte [stopped], 1 ; paused
  4929                                  	;
  4930 00002465 668B15[DA770000]        	mov	dx, [audio_io_base]
  4931                                  	;add	dx, 0Ch ; Command & Data Port
  4932 0000246C 80C20C                  	add	dl, 0Ch
  4933 0000246F 803D[72770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit samples
  4934 00002476 7404                    	je	short sb_pause_1
  4935                                  	; 8 bit samples
  4936 00002478 B3D0                    	mov	bl, 0D0h ; 8 bit DMA mode
  4937 0000247A EB02                    	jmp	short sb_pause_2
  4938                                  sb_pause_1:
  4939                                  	; 16 bit samples
  4940 0000247C B3D5                    	mov	bl, 0D5h ; 16 bit DMA mode
  4941                                  sb_pause_2:
  4942                                  	SbOut   bl ; bCommand
   106                              <1> %%Wait:
   107                              <1> 
   108 0000247E B400                <1>  mov ah, 0
   109 00002480 CD34                <1>  int 34h
   110 00002482 08C0                <1>  or al, al
   111 00002484 78F8                <1>  js short %%Wait
   112 00002486 88D8                <1>  mov al, %1
   113                              <1> 
   114 00002488 B401                <1>  mov ah, 1
   115 0000248A CD34                <1>  int 34h
  4943                                  sb_pause_3:
  4944 0000248C C3                      	retn
  4945                                  
  4946                                  ;-----------------------------------------------------------------------------
  4947                                  
  4948                                  	; 09/02/2025
  4949                                  
  4950                                  sb16_play:
  4951                                  sb16_continue:
  4952                                  	; Ref: TRDOS 386 Kernel v2.0.9 audio.s (06/06/2024)
  4953                                  	;      sb16_pause procedure (06/08/2022, v2.0.5)
  4954                                  
  4955                                  	; continue to play (after pause)
  4956 0000248D C605[E1770000]00        	mov	byte [stopped], 0
  4957                                  	;
  4958 00002494 668B15[DA770000]        	mov	dx, [audio_io_base]
  4959                                  	;add	dx, 0Ch ; Command & Data Port
  4960 0000249B 80C20C                  	add	dl, 0Ch
  4961 0000249E 803D[72770000]10        	cmp	byte [WAVE_BitsPerSample], 16 ; 16 bit samples
  4962 000024A5 7404                    	je	short sb_cont_1
  4963                                  	; 8 bit samples
  4964 000024A7 B3D4                    	mov	bl, 0D4h ; 8 bit DMA mode
  4965 000024A9 EB02                    	jmp	short sb_cont_2
  4966                                  sb_cont_1:
  4967                                  	; 16 bit samples
  4968 000024AB B3D6                    	mov	bl, 0D6h ; 16 bit DMA mode
  4969                                  sb_cont_2:     
  4970                                  	SbOut   bl ; bCommand
   106                              <1> %%Wait:
   107                              <1> 
   108 000024AD B400                <1>  mov ah, 0
   109 000024AF CD34                <1>  int 34h
   110 000024B1 08C0                <1>  or al, al
   111 000024B3 78F8                <1>  js short %%Wait
   112 000024B5 88D8                <1>  mov al, %1
   113                              <1> 
   114 000024B7 B401                <1>  mov ah, 1
   115 000024B9 CD34                <1>  int 34h
  4971                                  sb_cont_3:
  4972 000024BB C3                      	retn
  4973                                  
  4974                                  ;=============================================================================
  4975                                  ;	AC'97 Audio System Initialization
  4976                                  ;============================================================================
  4977                                  
  4978                                  	; 09/02/2025
  4979                                  ac97_init:
  4980                                  	; 05/02/2025 - ac97play.s
  4981                                  codecConfig:
  4982                                  	;AC97_EA_VRA equ 1
  4983                                  	AC97_EA_VRA equ BIT0
  4984                                  
  4985                                  init_ac97_controller:
  4986 000024BC A1[D6770000]            	mov	eax, [bus_dev_fn]
  4987 000024C1 B004                    	mov	al, PCI_CMD_REG
  4988 000024C3 E804080000              	call	pciRegRead16		; read PCI command register
  4989 000024C8 80CA05                  	or      dl, IO_ENA+BM_ENA	; enable IO and bus master
  4990 000024CB E87E080000              	call	pciRegWrite16
  4991                                  
  4992                                  	;call	delay_100ms
  4993                                  
  4994                                  init_ac97_codec:
  4995 000024D0 BD28000000              	mov	ebp, 40
  4996                                  	;mov	ebp, 1000
  4997                                  _initc_1:
  4998 000024D5 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  4999 000024D9 660315[DC770000]        	add	dx, [NABMBAR]
  5000                                  	;in	eax, dx
  5001 000024E0 B404                    	mov	ah, 4	; read port, dword
  5002 000024E2 CD34                    	int	34h
  5003                                  
  5004 000024E4 E85B060000              	call	delay1_4ms
  5005                                  
  5006 000024E9 83F8FF                  	cmp	eax, 0FFFFFFFFh ; -1
  5007 000024EC 750A                    	jne	short _initc_3
  5008                                  _initc_2:
  5009 000024EE 4D                      	dec	ebp
  5010 000024EF 7425                    	jz	short _ac97_codec_ready
  5011                                  
  5012 000024F1 E83F060000              	call	delay_100ms
  5013 000024F6 EBDD                    	jmp	short _initc_1
  5014                                  _initc_3:
  5015 000024F8 A900030010              	test	eax, CTRL_ST_CREADY
  5016 000024FD 7517                    	jnz	short _ac97_codec_ready
  5017                                  
  5018 000024FF 803D[43740000]01        	cmp	byte [reset], 1
  5019 00002506 73E6                    	jnb	short _initc_2
  5020                                  
  5021 00002508 E899010000              	call	reset_ac97_codec
  5022                                  
  5023 0000250D C605[43740000]01        	mov	byte [reset], 1
  5024                                  
  5025 00002514 EBD8                    	jmp	short _initc_2
  5026                                  
  5027                                  _ac97_codec_ready:
  5028 00002516 668B15[DA770000]        	mov	dx, [NAMBAR]
  5029                                  	;add	dx, 0 ; ac_reg_0 ; reset register
  5030                                  	;out	dx, ax
  5031 0000251D 89C3                    	mov	ebx, eax ; bx = data, word
  5032 0000251F B403                    	mov	ah, 3	; write port, word
  5033 00002521 CD34                    	int	34h
  5034                                  	
  5035 00002523 E80D060000              	call	delay_100ms
  5036                                  
  5037 00002528 09ED                    	or	ebp, ebp
  5038 0000252A 7535                    	jnz	short _ac97_codec_init_ok
  5039                                  
  5040                                  	;xor	eax, eax ; 0
  5041 0000252C 668B15[DA770000]        	mov	dx, [NAMBAR]
  5042 00002533 6683C226                	add	dx, CODEC_REG_POWERDOWN
  5043                                  	;out	dx, ax
  5044                                  	;mov	ebx, eax
  5045 00002537 31DB                    	xor	ebx, ebx
  5046 00002539 B403                    	mov	ah, 3	; write port, word
  5047 0000253B CD34                    	int	34h
  5048                                  
  5049                                  	;call	delay1_4ms
  5050                                  
  5051                                  	; wait for 1 second
  5052 0000253D B9E8030000              	mov	ecx, 1000 ; 1000*4*0.25ms = 1s
  5053                                  	;mov	ecx, 40
  5054                                  _ac97_codec_rloop:
  5055                                  	;call	delay_100ms
  5056 00002542 E8FD050000              	call	delay1_4ms
  5057                                  
  5058 00002547 668B15[DA770000]        	mov	dx, [NAMBAR]
  5059 0000254E 6683C226                	add	dx, CODEC_REG_POWERDOWN
  5060                                  	;in	ax, dx
  5061 00002552 B402                    	mov	ah, 2	; read port, word
  5062 00002554 CD34                    	int	34h
  5063                                  
  5064                                  	;call	delay1_4ms
  5065                                  	
  5066 00002556 6683E00F                	and	ax, 0Fh
  5067 0000255A 3C0F                    	cmp	al, 0Fh
  5068 0000255C 7403                    	je	short _ac97_codec_init_ok
  5069 0000255E E2E2                    	loop	_ac97_codec_rloop 
  5070                                  
  5071                                  init_ac97_codec_err1:
  5072                                  	;stc	; cf = 1
  5073                                  init_ac97_codec_err2:
  5074 00002560 C3                      	retn
  5075                                  
  5076                                  _ac97_codec_init_ok:
  5077 00002561 E8E1000000              	call 	reset_ac97_controller
  5078                                  
  5079                                  	;call	delay_100ms
  5080                                  
  5081                                  	;call	delay1_4ms
  5082                                  	;call	delay1_4ms
  5083                                  	;call	delay1_4ms
  5084 00002566 E8D9050000              	call	delay1_4ms
  5085                                  
  5086                                  setup_ac97_codec:
  5087 0000256B 66813D[68770000]80-     	cmp	word [WAVE_SampleRate], 48000
  5087 00002573 BB                 
  5088 00002574 0F849A000000            	je	skip_rate
  5089                                  	
  5090                                  	;cmp	byte [VRA], 0
  5091                                  	;jna	short skip_rate
  5092                                  
  5093 0000257A 668B15[DA770000]        	mov	dx, [NAMBAR]
  5094 00002581 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG ; 2Ah
  5095                                  	;in	ax, dx
  5096 00002585 B402                    	mov	ah, 2 ; read port, word
  5097 00002587 CD34                    	int	34h
  5098                                  
  5099 00002589 E8B6050000              	call	delay1_4ms
  5100                                  	
  5101                                  	;and	al, NOT BIT1 ; Clear DRA
  5102                                  	;;;
  5103                                  	; (FASM)
  5104                                  	;and	al, NOT (BIT1+BIT0) ; Clear DRA+VRA
  5105                                  	; (NASM)
  5106 0000258E 24FC                    	and	al, ~(BIT1+BIT0) ; 0FCh
  5107                                  	;out	dx, ax
  5108 00002590 89C3                    	mov	ebx, eax
  5109 00002592 668B15[DA770000]        	mov	dx, [NAMBAR]
  5110 00002599 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG ; 2Ah
  5111 0000259D B403                    	mov	ah, 3 ; write port, word
  5112 0000259F CD34                    	int	34h
  5113                                  
  5114 000025A1 E8AC010000              	call	check_vra
  5115                                  
  5116 000025A6 803D[CF770000]00        	cmp	byte [VRA], 0
  5117 000025AD 7665                    	jna	short skip_rate
  5118                                  
  5119 000025AF 668B15[DA770000]        	mov	dx, [NAMBAR]
  5120 000025B6 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG ; 2Ah
  5121                                  	;in	ax, dx
  5122 000025BA B402                    	mov	ah, 2 ; read port, word
  5123 000025BC CD34                    	int	34h
  5124                                  
  5125                                  	;and	al, ~BIT1 ; Clear DRA
  5126                                  	;;;
  5127                                  
  5128 000025BE 0C01                    	or	al, AC97_EA_VRA ; 1
  5129                                  
  5130 000025C0 668B15[DA770000]        	mov	dx, [NAMBAR]
  5131 000025C7 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG ; 2Ah
  5132                                  	;out	dx, ax		; Enable variable rate audio
  5133 000025CB 89C3                    	mov	ebx, eax
  5134 000025CD B403                    	mov	ah, 3 ; write port, word
  5135 000025CF CD34                    	int	34h
  5136                                  
  5137 000025D1 B90A000000              	mov	ecx, 10
  5138                                  check_vra_loop:
  5139                                  	;call	delay_100ms
  5140 000025D6 E869050000              	call	delay1_4ms
  5141                                  
  5142 000025DB 668B15[DA770000]        	mov	dx, [NAMBAR]
  5143 000025E2 6683C22A                	add	dx, CODEC_EXT_AUDIO_CTRL_REG ; 2Ah
  5144                                  	;in	ax, dx
  5145 000025E6 B402                    	mov	ah, 2 ; read port, word
  5146 000025E8 CD34                    	int	34h
  5147                                  	
  5148 000025EA A801                    	test	al, AC97_EA_VRA ; 1
  5149 000025EC 750B                    	jnz	short set_rate
  5150                                  
  5151 000025EE E2E6                    	loop	check_vra_loop
  5152                                  
  5153                                  ;vra_not_supported:
  5154 000025F0 C605[CF770000]00        	mov	byte [VRA], 0
  5155 000025F7 EB1B                    	jmp	short skip_rate
  5156                                  
  5157                                  set_rate:
  5158                                  	;mov	ax, [WAVE_SampleRate]
  5159                                  
  5160 000025F9 668B15[DA770000]        	mov    	dx, [NAMBAR]               	
  5161 00002600 6683C22C                	add    	dx, CODEC_PCM_FRONT_DACRATE_REG	; 2Ch
  5162                                  	;out	dx, ax 		; PCM Front/Center Output Sample Rate
  5163                                  	;mov	ebx, eax  ; bx = data, word
  5164 00002604 668B1D[68770000]        	mov	bx, [WAVE_SampleRate]
  5165 0000260B B403                    	mov	ah, 3 ; write port, word
  5166 0000260D CD34                    	int	34h
  5167                                  
  5168                                  	;call	delay_100ms
  5169 0000260F E830050000              	call	delay1_4ms
  5170                                  
  5171                                  skip_rate:
  5172                                  	;mov	ax, 0202h
  5173 00002614 668B15[DA770000]          	mov	dx, [NAMBAR]
  5174 0000261B 6683C202                  	add	dx, CODEC_MASTER_VOL_REG ; 02h
  5175                                  	;out	dx, ax
  5176                                  	;mov	ebx, eax  ; bx = data, word
  5177 0000261F 66BB0202                	mov	bx, 0202h 
  5178 00002623 B403                    	mov	ah, 3 ; write port, word
  5179 00002625 CD34                    	int	34h
  5180                                  
  5181                                  	;call	delay1_4ms
  5182                                  	;call	delay1_4ms
  5183                                  	;call	delay1_4ms
  5184 00002627 E818050000              	call	delay1_4ms
  5185                                  
  5186                                  	;mov	ax, 0202h
  5187 0000262C 668B15[DA770000]          	mov	dx, [NAMBAR]
  5188 00002633 6683C218                  	add	dx, CODEC_PCM_OUT_REG ; 18h
  5189                                    	;out	dx, ax
  5190                                  	;mov	ebx, eax  ; bx = data, word
  5191 00002637 66BB0202                	mov	bx, 0202h
  5192 0000263B B403                    	mov	ah, 3 ; write port, word
  5193 0000263D CD34                    	int	34h
  5194                                  	
  5195                                  	;call	delay1_4ms
  5196                                  	;call	delay1_4ms
  5197                                  	;call	delay1_4ms
  5198                                  	;call	delay1_4ms
  5199                                  
  5200                                  	;clc
  5201                                  
  5202 0000263F C605[E0770000]1D        	mov	byte [volume], 29 ; max = 31, min = 0
  5203                                  
  5204 00002646 C3                              retn
  5205                                  
  5206                                  ;-----------------------------------------------------------------------------
  5207                                  
  5208                                  	; 09/02/2025
  5209                                  	; 05/02/2025 - ac97play.s
  5210                                  
  5211                                  reset_ac97_controller:
  5212                                  	; reset AC97 audio controller registers
  5213 00002647 31C0                    	xor	eax, eax
  5214 00002649 66BA0B00                        mov	dx, PI_CR_REG
  5215 0000264D 660315[DC770000]        	add	dx, [NABMBAR]
  5216                                  	;out	dx, al
  5217                                  	; al = data, byte
  5218 00002654 B401                    	mov	ah, 1 ; write port, byte
  5219 00002656 CD34                    	int	34h
  5220                                  
  5221                                  	;call	delay1_4ms
  5222                                  
  5223 00002658 66BA1B00                        mov     dx, PO_CR_REG
  5224 0000265C 660315[DC770000]        	add	dx, [NABMBAR]
  5225                                  	;out	dx, al
  5226                                  	; al = data, byte
  5227 00002663 B401                    	mov	ah, 1 ; write port, byte
  5228 00002665 CD34                    	int	34h
  5229                                  
  5230                                  	;call	delay1_4ms
  5231                                  
  5232 00002667 66BA2B00                        mov     dx, MC_CR_REG
  5233 0000266B 660315[DC770000]        	add	dx, [NABMBAR]
  5234                                  	;out	dx, al
  5235 00002672 B401                    	mov	ah, 1 ; write port, byte
  5236 00002674 CD34                    	int	34h
  5237                                  
  5238                                  	;call	delay1_4ms
  5239                                  
  5240 00002676 B002                            mov	al, RR
  5241 00002678 66BA0B00                        mov	dx, PI_CR_REG
  5242 0000267C 660315[DC770000]        	add	dx, [NABMBAR]
  5243                                  	;out	dx, al
  5244 00002683 B401                    	mov	ah, 1 ; write port, byte
  5245 00002685 CD34                    	int	34h
  5246                                  
  5247                                  	;call	delay1_4ms
  5248                                  
  5249 00002687 66BA1B00                        mov	dx, PO_CR_REG
  5250 0000268B 660315[DC770000]        	add	dx, [NABMBAR]
  5251                                  	;out	dx, al
  5252 00002692 B401                    	mov	ah, 1 ; write port, byte
  5253 00002694 CD34                    	int	34h
  5254                                  
  5255                                  	;call	delay1_4ms
  5256                                  
  5257 00002696 66BA2B00                        mov	dx, MC_CR_REG
  5258 0000269A 660315[DC770000]        	add	dx, [NABMBAR]
  5259                                  	;out	dx, al
  5260 000026A1 B401                    	mov	ah, 1 ; write port, byte
  5261 000026A3 CD34                    	int	34h
  5262                                  
  5263                                  	;call	delay1_4ms
  5264                                  
  5265 000026A5 C3                      	retn
  5266                                  
  5267                                  ;-----------------------------------------------------------------------------
  5268                                  
  5269                                  	; 09/02/2025
  5270                                  	; 05/02/2025 - ac97play.s
  5271                                  
  5272                                  reset_ac97_codec:
  5273 000026A6 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5274 000026AA 660315[DC770000]        	add	dx, [NABMBAR]
  5275                                  	;in	eax, dx
  5276 000026B1 B404                    	mov	ah, 4 ; read port, dword
  5277 000026B3 CD34                    	int	34h
  5278                                  
  5279 000026B5 A802                    	test	al, 2
  5280 000026B7 7407                    	jz	short _r_ac97codec_cold
  5281                                  
  5282 000026B9 E80E000000              	call	warm_ac97codec_reset
  5283 000026BE 7308                    	jnc	short _r_ac97codec_ok
  5284                                  _r_ac97codec_cold:
  5285 000026C0 E840000000                      call	cold_ac97codec_reset
  5286 000026C5 7301                            jnc	short _r_ac97codec_ok
  5287                                  	
  5288                                          ;xor	eax, eax ; timeout error
  5289                                         	;stc
  5290 000026C7 C3                      	retn
  5291                                  
  5292                                  _r_ac97codec_ok:
  5293 000026C8 31C0                            xor     eax, eax
  5294 000026CA 40                              inc	eax
  5295 000026CB C3                      	retn
  5296                                  
  5297                                  ;-----------------------------------------------------------------------------
  5298                                  
  5299                                  	; 09/02/2025
  5300                                  	; 05/02/2025 - ac97play.s
  5301                                  
  5302                                  warm_ac97codec_reset:
  5303                                  	;mov	eax, 6
  5304 000026CC 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5305 000026D0 660315[DC770000]        	add	dx, [NABMBAR]
  5306                                  	;out	dx, eax
  5307                                  	;mov	ebx, eax  ; ebx = data, dword
  5308 000026D7 BB06000000              	mov	ebx, 6
  5309 000026DC B405                    	mov	ah, 5 ; write port, dword
  5310 000026DE CD34                    	int	34h
  5311                                  
  5312 000026E0 B90A000000              	mov	ecx, 10	; total 1s
  5313                                  _warm_ac97c_rst_wait:
  5314 000026E5 E84B040000              	call	delay_100ms
  5315                                  
  5316 000026EA 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  5317 000026EE 660315[DC770000]        	add	dx, [NABMBAR]
  5318                                  	;in	eax, dx
  5319 000026F5 B404                    	mov	ah, 4 ; read port, dword
  5320 000026F7 CD34                    	int	34h
  5321                                  
  5322 000026F9 A900030010              	test	eax, CTRL_ST_CREADY
  5323 000026FE 7504                    	jnz	short _warm_ac97c_rst_ok
  5324                                  
  5325 00002700 49                      	dec	ecx
  5326 00002701 75E2                    	jnz	short _warm_ac97c_rst_wait
  5327                                  
  5328                                  _warm_ac97c_rst_fail:
  5329 00002703 F9                              stc
  5330                                  _warm_ac97c_rst_ok:
  5331 00002704 C3                      	retn
  5332                                  
  5333                                  ;-----------------------------------------------------------------------------
  5334                                  
  5335                                  	; 09/02/2025
  5336                                  	; 05/02/2025 - ac97play.s
  5337                                  
  5338                                  cold_ac97codec_reset:
  5339                                          ;mov	eax, 2
  5340 00002705 66BA2C00                	mov	dx, GLOB_CNT_REG ; 2Ch
  5341 00002709 660315[DC770000]        	add	dx, [NABMBAR]
  5342                                  	;out	dx, eax
  5343                                  	;mov	ebx, eax  ; ebx = data, dword
  5344 00002710 BB02000000              	mov	ebx, 2
  5345 00002715 B405                    	mov	ah, 5 ; write port, dword
  5346 00002717 CD34                    	int	34h
  5347                                  
  5348 00002719 E817040000              	call	delay_100ms 	; wait 100 ms
  5349 0000271E E812040000              	call	delay_100ms 	; wait 100 ms
  5350 00002723 E80D040000              	call	delay_100ms 	; wait 100 ms
  5351 00002728 E808040000              	call	delay_100ms 	; wait 100 ms
  5352                                  
  5353 0000272D B910000000              	mov	ecx, 16	; total 20*100 ms = 2s
  5354                                  _cold_ac97c_rst_wait:
  5355 00002732 66BA3000                	mov	dx, GLOB_STS_REG ; 30h
  5356 00002736 660315[DC770000]        	add	dx, [NABMBAR]
  5357                                  	;in	eax, dx
  5358 0000273D B404                    	mov	ah, 4 ; read port, dword
  5359 0000273F CD34                    	int	34h
  5360                                  
  5361 00002741 A900030010              	test	eax, CTRL_ST_CREADY
  5362 00002746 7509                    	jnz	short _cold_ac97c_rst_ok
  5363                                  
  5364 00002748 E8E8030000              	call	delay_100ms
  5365                                  
  5366 0000274D 49                      	dec	ecx
  5367 0000274E 75E2                    	jnz	short _cold_ac97c_rst_wait
  5368                                  
  5369                                  _cold_ac97c_rst_fail:
  5370 00002750 F9                              stc
  5371                                  _cold_ac97c_rst_ok:
  5372 00002751 C3                      	retn
  5373                                  
  5374                                  ;-----------------------------------------------------------------------------
  5375                                  
  5376                                  	; 09/02/2025
  5377                                  	; 05/02/2025 - ac97play.s
  5378                                  
  5379                                  check_vra:
  5380 00002752 C605[CF770000]01        	mov	byte [VRA], 1
  5381                                  
  5382 00002759 668B15[DA770000]        	mov	dx, [NAMBAR]
  5383 00002760 6683C228                	add	dx, CODEC_EXT_AUDIO_REG	; 28h
  5384                                  	;in	ax, dx
  5385 00002764 B402                    	mov	ah, 2 ; read port, word
  5386 00002766 CD34                    	int	34h
  5387                                  
  5388                                  	;call	delay1_4ms
  5389                                  
  5390 00002768 A801                    	test	al, BIT0 ; 1 ; Variable Rate Audio bit
  5391 0000276A 7507                    	jnz	short check_vra_ok
  5392                                  
  5393                                  vra_not_supported:
  5394 0000276C C605[CF770000]00        	mov	byte [VRA], 0
  5395                                  check_vra_ok:
  5396 00002773 C3                      	retn
  5397                                  
  5398                                  ;-----------------------------------------------------------------------------
  5399                                  ;-----------------------------------------------------------------------------
  5400                                  
  5401                                  	; 10/02/2025
  5402                                  	; 08/02/2025 - twavplay.asm
  5403                                  	; !!!! 18.2 block/second buffer sizing for proper wave scopes !!!!
  5404                                  	; (wave graphics synchronization) 
  5405                                  
  5406                                  ac97_play_setup:
  5407 00002774 803D[CF770000]01        	cmp	byte [VRA], 1
  5408 0000277B 720B                    	jb	short chk_sample_rate
  5409                                  
  5410                                  playwav_48_khz:
  5411 0000277D C705[F0810000]-         	mov	dword [loadfromwavfile], loadFromFile
  5411 00002783 [96060000]         
  5412 00002787 C3                      	retn
  5413                                  
  5414                                  chk_sample_rate:
  5415                                  	; set conversion parameters
  5416                                  	; (for 8, 11.025, 16, 22.050, 24, 32 kHZ)
  5417 00002788 66A1[68770000]          	mov	ax, [WAVE_SampleRate]
  5418 0000278E 663D80BB                	cmp	ax, 48000
  5419 00002792 74E9                    	je	short playwav_48_khz
  5420                                  chk_22khz:
  5421 00002794 663D2256                	cmp	ax, 22050
  5422 00002798 7545                    	jne	short chk_11khz
  5423 0000279A 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5424 000027A1 7615                    	jna	short chk_22khz_1
  5425 000027A3 BB[A3130000]            	mov	ebx, load_22khz_stereo_16_bit
  5426 000027A8 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5427 000027AF 751A                    	jne	short chk_22khz_2
  5428 000027B1 BB[16130000]            	mov	ebx, load_22khz_mono_16_bit
  5429 000027B6 EB13                    	jmp	short chk_22khz_2
  5430                                  chk_22khz_1:
  5431 000027B8 BB[8F120000]            	mov	ebx, load_22khz_stereo_8_bit
  5432 000027BD 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5433 000027C4 7505                    	jne	short chk_22khz_2
  5434 000027C6 BB[06120000]            	mov	ebx, load_22khz_mono_8_bit
  5435                                  chk_22khz_2:
  5436 000027CB B8B7040000              	mov	eax, 1207  ; (71*17)		
  5437 000027D0 BA25000000              	mov	edx, 37
  5438 000027D5 B911000000              	mov	ecx, 17
  5439 000027DA E921020000              	jmp	set_sizes
  5440                                  chk_11khz:
  5441 000027DF 663D112B                	cmp	ax, 11025
  5442 000027E3 7545                    	jne	short chk_44khz
  5443 000027E5 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5444 000027EC 7615                    	jna	short chk_11khz_1
  5445 000027EE BB[BF150000]            	mov	ebx, load_11khz_stereo_16_bit
  5446 000027F3 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5447 000027FA 751A                    	jne	short chk_11khz_2
  5448 000027FC BB[46150000]            	mov	ebx, load_11khz_mono_16_bit
  5449 00002801 EB13                    	jmp	short chk_11khz_2
  5450                                  chk_11khz_1:
  5451 00002803 BB[CC140000]            	mov	ebx, load_11khz_stereo_8_bit
  5452 00002808 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5453 0000280F 7505                    	jne	short chk_11khz_2
  5454 00002811 BB[54140000]            	mov	ebx, load_11khz_mono_8_bit
  5455                                  chk_11khz_2:
  5456 00002816 B864020000              	mov	eax, 612  ; (36*17)	
  5457 0000281B BA4A000000              	mov	edx, 74
  5458 00002820 B911000000              	mov	ecx, 17
  5459 00002825 E9D6010000              	jmp	set_sizes
  5460                                  chk_44khz:
  5461 0000282A 663D44AC                	cmp	ax, 44100
  5462 0000282E 7545                    	jne	short chk_16khz
  5463 00002830 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5464 00002837 7615                    	jna	short chk_44khz_1
  5465 00002839 BB[C6170000]            	mov	ebx, load_44khz_stereo_16_bit
  5466 0000283E 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5467 00002845 751A                    	jne	short chk_44khz_2
  5468 00002847 BB[4D170000]            	mov	ebx, load_44khz_mono_16_bit
  5469 0000284C EB13                    	jmp	short chk_44khz_2
  5470                                  chk_44khz_1:
  5471 0000284E BB[D0160000]            	mov	ebx, load_44khz_stereo_8_bit
  5472 00002853 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5473 0000285A 7505                    	jne	short chk_44khz_2
  5474 0000285C BB[54160000]            	mov	ebx, load_44khz_mono_8_bit
  5475                                  chk_44khz_2:
  5476 00002861 B886090000              	mov	eax, 2438  ; (106*23)
  5477 00002866 BA19000000              	mov	edx, 25
  5478 0000286B B917000000              	mov	ecx, 23
  5479 00002870 E98B010000              	jmp	set_sizes
  5480                                  chk_16khz:
  5481 00002875 663D803E                	cmp	ax, 16000
  5482 00002879 7545                    	jne	short chk_8khz
  5483 0000287B 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5484 00002882 7615                    	jna	short chk_16khz_1
  5485 00002884 BB[450D0000]            	mov	ebx, load_16khz_stereo_16_bit
  5486 00002889 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5487 00002890 751A                    	jne	short chk_16khz_2
  5488 00002892 BB[C40C0000]            	mov	ebx, load_16khz_mono_16_bit
  5489 00002897 EB13                    	jmp	short chk_16khz_2
  5490                                  chk_16khz_1:
  5491 00002899 BB[0A0C0000]            	mov	ebx, load_16khz_stereo_8_bit
  5492 0000289E 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5493 000028A5 7505                    	jne	short chk_16khz_2
  5494 000028A7 BB[8B0B0000]            	mov	ebx, load_16khz_mono_8_bit
  5495                                  chk_16khz_2:
  5496 000028AC B86F030000              	mov	eax, 879
  5497 000028B1 BA03000000              	mov	edx, 3
  5498 000028B6 B901000000              	mov	ecx, 1
  5499 000028BB E940010000              	jmp	set_sizes
  5500                                  chk_8khz:
  5501 000028C0 663D401F                	cmp	ax, 8000
  5502 000028C4 7545                    	jne	short chk_24khz
  5503 000028C6 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5504 000028CD 7615                    	jna	short chk_8khz_1
  5505 000028CF BB[400A0000]            	mov	ebx, load_8khz_stereo_16_bit
  5506 000028D4 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5507 000028DB 751A                    	jne	short chk_8khz_2
  5508 000028DD BB[70090000]            	mov	ebx, load_8khz_mono_16_bit
  5509 000028E2 EB13                    	jmp	short chk_8khz_2
  5510                                  chk_8khz_1:
  5511 000028E4 BB[40080000]            	mov	ebx, load_8khz_stereo_8_bit
  5512 000028E9 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5513 000028F0 7505                    	jne	short chk_8khz_2
  5514 000028F2 BB[63070000]            	mov	ebx, load_8khz_mono_8_bit
  5515                                  chk_8khz_2:
  5516 000028F7 B8B8010000              	mov	eax, 440
  5517 000028FC BA06000000              	mov	edx, 6
  5518 00002901 B901000000              	mov	ecx, 1
  5519 00002906 E9F5000000              	jmp	set_sizes
  5520                                  chk_24khz:
  5521 0000290B 663DC05D                	cmp	ax, 24000
  5522 0000290F 7545                    	jne	short chk_32khz
  5523 00002911 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5524 00002918 7615                    	jna	short chk_24khz_1
  5525 0000291A BB[720F0000]            	mov	ebx, load_24khz_stereo_16_bit
  5526 0000291F 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5527 00002926 751A                    	jne	short chk_24khz_2
  5528 00002928 BB[0C0F0000]            	mov	ebx, load_24khz_mono_16_bit
  5529 0000292D EB13                    	jmp	short chk_24khz_2
  5530                                  chk_24khz_1:
  5531 0000292F BB[820E0000]            	mov	ebx, load_24khz_stereo_8_bit
  5532 00002934 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5533 0000293B 7505                    	jne	short chk_24khz_2
  5534 0000293D BB[1B0E0000]            	mov	ebx, load_24khz_mono_8_bit
  5535                                  chk_24khz_2:
  5536 00002942 B826050000              	mov	eax, 1318
  5537 00002947 BA02000000              	mov	edx, 2
  5538 0000294C B901000000              	mov	ecx, 1
  5539 00002951 E9AA000000              	jmp	set_sizes
  5540                                  
  5541                                  chk_32khz:
  5542 00002956 663D007D                	cmp	ax, 32000
  5543 0000295A 755E                    	jne	short chk_12khz
  5544 0000295C 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5545 00002963 7615                    	jna	short chk_32khz_1
  5546 00002965 BB[76110000]            	mov	ebx, load_32khz_stereo_16_bit
  5547 0000296A 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5548 00002971 751A                    	jne	short chk_32khz_2
  5549 00002973 BB[09110000]            	mov	ebx, load_32khz_mono_16_bit
  5550 00002978 EB13                    	jmp	short chk_32khz_2
  5551                                  chk_32khz_1:
  5552 0000297A BB[6C100000]            	mov	ebx, load_32khz_stereo_8_bit
  5553 0000297F 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5554 00002986 7505                    	jne	short chk_32khz_2
  5555 00002988 BB[F90F0000]            	mov	ebx, load_32khz_mono_8_bit
  5556                                  chk_32khz_2:
  5557 0000298D B8DE060000              	mov	eax, 1758
  5558 00002992 BA03000000              	mov	edx, 3
  5559 00002997 B902000000              	mov	ecx, 2
  5560 0000299C EB62                    	jmp	short set_sizes
  5561                                  
  5562                                  vra_needed:
  5563 0000299E 58                      	pop	eax ; discard return address to the caller
  5564                                  vra_err:
  5565                                  	sys	_msg, msg_no_vra, 255, 0Fh
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 0000299F BB[29750000]        <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 000029A4 B9FF000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91 000029A9 BA0F000000          <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 000029AE B823000000          <1>  mov eax, %1
    96                              <1> 
    97 000029B3 CD40                <1>  int 40h
  5566 000029B5 E9F8D6FFFF              	jmp	Exit
  5567                                  
  5568                                  	;;;;
  5569                                  chk_12khz:
  5570 000029BA 663DE02E                	cmp	ax, 12000
  5571 000029BE 75DE                    	jne	short vra_needed
  5572 000029C0 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5573 000029C7 7615                    	jna	short chk_12khz_1
  5574 000029C9 BB[32190000]            	mov	ebx, load_12khz_stereo_16_bit
  5575 000029CE 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5576 000029D5 751A                    	jne	short chk_12khz_2
  5577 000029D7 BB[E3180000]            	mov	ebx, load_12khz_mono_16_bit
  5578 000029DC EB13                    	jmp	short chk_12khz_2
  5579                                  chk_12khz_1:
  5580 000029DE BB[8D180000]            	mov	ebx, load_12khz_stereo_8_bit
  5581 000029E3 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5582 000029EA 7505                    	jne	short chk_12khz_2
  5583 000029EC BB[45180000]            	mov	ebx, load_12khz_mono_8_bit
  5584                                  chk_12khz_2:
  5585 000029F1 B893020000              	mov	eax, 659
  5586 000029F6 BA04000000              	mov	edx, 4
  5587 000029FB B901000000              	mov	ecx, 1
  5588                                  	;jmp	short set_sizes
  5589                                  	;;;;
  5590                                  
  5591                                  ;-----------------------------------------------------------------------------
  5592                                  
  5593                                  set_sizes:
  5594 00002A00 803D[66770000]01        	cmp	byte [WAVE_NumChannels], 1
  5595 00002A07 7402                    	je	short ss_1
  5596 00002A09 D1E0                    	shl	eax, 1
  5597                                  ss_1:
  5598 00002A0B 803D[72770000]08        	cmp	byte [WAVE_BitsPerSample], 8
  5599 00002A12 7602                    	jna	short ss_2
  5600                                  	; 16 bit samples
  5601 00002A14 D1E0                    	shl	eax, 1
  5602                                  ss_2:
  5603 00002A16 A3[F4810000]            	mov	[loadsize], eax
  5604 00002A1B F7E2                    	mul	edx
  5605                                  
  5606 00002A1D 83F901                  	cmp	ecx, 1
  5607 00002A20 7402                    	je	short ss_3
  5608                                  
  5609 00002A22 F7F1                    	div	ecx
  5610                                  ss_3:	
  5611                                  	;;;
  5612                                  	; eax = byte count of (to be) converted samples 
  5613                                  	;;;
  5614 00002A24 8A0D[D0770000]          	mov	cl, [fbs_shift]
  5615                                  
  5616 00002A2A D3E0                    	shl	eax, cl
  5617                                  		; *1 for 16 bit stereo
  5618                                  		; *2 for 16 bit mono or 8 bit stereo
  5619                                  		; *4 for for 8 bit mono
  5620                                  	;;;
  5621                                  
  5622                                  	; eax = 16 bit stereo byte count (target buffer size)
  5623                                  	
  5624 00002A2C D1E8                    	shr	eax, 1	; buffer size is 16 bit sample count
  5625 00002A2E A3[F8810000]            	mov	[buffersize], eax  ; **
  5626 00002A33 891D[F0810000]          	mov	[loadfromwavfile], ebx
  5627                                  
  5628 00002A39 C3                      	retn
  5629                                  
  5630                                  ;-----------------------------------------------------------------------------
  5631                                  ;-----------------------------------------------------------------------------
  5632                                  
  5633                                  	; 10/02/2025
  5634                                  	; 05/02/2025 - ac97play.s
  5635                                  
  5636                                  ac97_init_play:
  5637                                  
  5638                                  _PlayNow:
  5639                                  	; create Buffer Descriptor List
  5640                                  
  5641                                  	;  Generic Form of Buffer Descriptor
  5642                                  	;  ---------------------------------
  5643                                  	;  63   62    61-48    47-32   31-0
  5644                                  	;  ---  ---  --------  ------- -----
  5645                                  	;  IOC  BUP -reserved- Buffer  Buffer
  5646                                  	;		      Length   Pointer
  5647                                  	;		      [15:0]   [31:0]
  5648                                  
  5649 00002A3A 8B1D[0C820000]          	mov	ebx, [_bdl_buffer] ; BDL_BUFFER physical address
  5650                                  
  5651 00002A40 81C300100000            	add	ebx, 4096	; WAVBUFFER_1 physical address
  5652                                  
  5653 00002A46 BF[00900000]            	mov	edi, BDL_BUFFER
  5654 00002A4B B910000000              	mov	ecx, 16
  5655                                  _0:
  5656                                  	;mov	eax, WAV_BUFFER_1
  5657 00002A50 89D8                    	mov	eax, ebx	; WAVBUFFER_1 physical address
  5658 00002A52 AB                      	stosd
  5659                                  
  5660 00002A53 A1[F8810000]            	mov	eax, [buffersize]
  5661                                  	;shr	eax, 1 ; buffer size in word
  5662 00002A58 0D00000040              	or	eax, BUP	; tuneloop (without interrupt)
  5663 00002A5D AB                      	stosd
  5664                                  
  5665                                  	;mov	eax, WAV_BUFFER_2
  5666 00002A5E 89D8                    	mov	eax, ebx
  5667 00002A60 0500300000              	add	eax, 12288	; WAVBUFFER_2 physical address
  5668 00002A65 AB                      	stosd
  5669                                  
  5670 00002A66 A1[F8810000]            	mov	eax, [buffersize]
  5671                                  	; 02/12/2024
  5672                                  	;shr	eax, 1 ; buffer size in word
  5673 00002A6B 0D00000040              	or	eax, BUP	; tuneloop (without interrupt)
  5674 00002A70 AB                      	stosd
  5675                                  
  5676 00002A71 E2DD                    	loop	_0
  5677                                  	
  5678                                  ac97_RePlayWav:
  5679 00002A73 BF[00A00000]                    mov     edi, WAV_BUFFER_1
  5680 00002A78 893D[08820000]          	mov	[audio_buffer], edi
  5681 00002A7E FF15[F0810000]          	call	dword [loadfromwavfile]
  5682                                  
  5683 00002A84 A1[FC810000]            	mov	eax, [count]
  5684 00002A89 0105[00820000]          	add	[LoadedDataBytes], eax
  5685                                  
  5686 00002A8F BF[00D00000]            	mov     edi, WAV_BUFFER_2
  5687 00002A94 893D[08820000]          	mov	[audio_buffer], edi
  5688 00002A9A FF15[F0810000]          	call	dword [loadfromwavfile]
  5689                                  
  5690 00002AA0 A1[FC810000]            	mov	eax, [count]
  5691 00002AA5 0105[00820000]          	add	[LoadedDataBytes], eax
  5692                                  
  5693                                  	; write NABMBAR+10h with offset of buffer descriptor list
  5694                                  
  5695                                  	;mov	eax, [_bdl_buffer]
  5696 00002AAB 8B1D[0C820000]          	mov	ebx, [_bdl_buffer]	; BDL_BUFFER physical address
  5697                                  	
  5698 00002AB1 668B15[DC770000]        	mov	dx, [NABMBAR]
  5699 00002AB8 6683C210                	add	dx, PO_BDBAR_REG	; set pointer to BDL
  5700                                  	;out	dx, eax			; write to AC97 controller
  5701                                  	;mov	ebx, eax ; data, dword
  5702                                  	; ebx = [_bdl_buffer] ; data, dword
  5703 00002ABC B405                    	mov	ah, 5	; write port dword
  5704 00002ABE CD34                    	int	34h
  5705                                  
  5706                                  	;call	delay1_4ms
  5707                                  
  5708 00002AC0 B01F                    	mov	al, 31
  5709 00002AC2 E8FC000000              	call	setLastValidIndex
  5710                                  
  5711                                  	;call	delay1_4ms
  5712                                  
  5713                                  	;mov	al, [volume]
  5714 00002AC7 E8C4DAFFFF              	call	SetPCMOutVolume
  5715                                  
  5716 00002ACC 668B15[DC770000]        	mov	dx, [NABMBAR]
  5717 00002AD3 6683C21B                        add	dx, PO_CR_REG		; PCM out Control Register
  5718                                  	;mov	al, IOCE + RPBM		; Enable 'Interrupt On Completion' + run
  5719                                  	;				; (LVBI interrupt will not be enabled)
  5720                                  	; (TUNELOOP version, without interrupt)
  5721 00002AD7 B001                    	mov	al, RPBM
  5722                                  	;out	dx, al			; Start bus master operation.
  5723                                  	; al = data, byte
  5724 00002AD9 B401                    	mov	ah, 1 ; write port, byte
  5725 00002ADB CD34                    	int	34h
  5726                                  
  5727                                  	;call	delay1_4ms
  5728                                  
  5729 00002ADD C3                      	retn
  5730                                  
  5731                                  ;-----------------------------------------------------------------------------
  5732                                  ;-----------------------------------------------------------------------------
  5733                                  
  5734                                  	; 10/02/2025
  5735                                  	; 06/02/2025 - twavplay.asm
  5736                                  	; Ref: TRDOS 386 v2.0.9, audio.s, Erdogan Tan, 06/06/2024
  5737                                  
  5738                                  audio_stop:
  5739 00002ADE 803D[DE770000]01        	cmp	byte [audio_hardware], 1
  5740 00002AE5 7705                    	ja	short ac97_stop
  5741 00002AE7 E904F9FFFF              	jmp	sb16_stop
  5742                                  
  5743                                  ;-----------------------------------------------------------------------------
  5744                                  
  5745                                  ac97_stop:
  5746 00002AEC C605[E1770000]02        	mov	byte [stopped], 2
  5747                                  
  5748                                  ac97_po_cmd@:
  5749 00002AF3 30C0                    	xor	al, al ; 0
  5750                                  ac97_po_cmd:
  5751 00002AF5 668B15[DC770000]        	mov     dx, [NABMBAR]
  5752 00002AFC 6683C21B                        add     dx, PO_CR_REG	; PCM out control register
  5753                                  	;out	dx, al
  5754 00002B00 B401                    	mov	ah, 1 ; write port, byte
  5755 00002B02 CD34                    	int	34h
  5756 00002B04 C3                      	retn
  5757                                  
  5758                                  ;-----------------------------------------------------------------------------
  5759                                  ;-----------------------------------------------------------------------------
  5760                                  
  5761                                  	; 10/02/2025
  5762                                  audio_pause:
  5763 00002B05 803D[DE770000]01        	cmp	byte [audio_hardware], 1
  5764 00002B0C 7705                    	ja	short ac97_pause
  5765 00002B0E E94BF9FFFF              	jmp	sb16_pause
  5766                                  
  5767                                  ;-----------------------------------------------------------------------------
  5768                                  
  5769                                  ac97_pause:
  5770 00002B13 C605[E1770000]01        	mov	byte [stopped], 1 ; paused
  5771                                  	;mov	al, 0
  5772                                  	;jmp	short ac97_po_cmd
  5773 00002B1A EBD7                    	jmp	short ac97_po_cmd@
  5774                                  
  5775                                  ;-----------------------------------------------------------------------------
  5776                                  ;-----------------------------------------------------------------------------
  5777                                  
  5778                                  	; 10/02/2025
  5779                                  audio_play:
  5780 00002B1C 803D[DE770000]01        	cmp	byte [audio_hardware], 1
  5781 00002B23 7705                    	ja	short ac97_play
  5782 00002B25 E963F9FFFF              	jmp	sb16_play
  5783                                  
  5784                                  ;-----------------------------------------------------------------------------
  5785                                  
  5786                                  ac97_play: ; continue to play (after pause)
  5787 00002B2A C605[E1770000]00        	mov	byte [stopped], 0
  5788 00002B31 B001                    	mov	al, RPBM
  5789 00002B33 EBC0                    	jmp	short ac97_po_cmd
  5790                                  
  5791                                  ;-----------------------------------------------------------------------------
  5792                                  ;-----------------------------------------------------------------------------
  5793                                  
  5794                                  PORTB		EQU 061h
  5795                                  REFRESH_STATUS	EQU 010h	; Refresh signal status
  5796                                  
  5797                                  	; 10/02/2025
  5798                                  	; 05/02/2025 - ac97play.s
  5799                                  delay_100ms:
  5800 00002B35 51                      	push	ecx
  5801 00002B36 B990010000              	mov	ecx, 400  ; 400*0.25ms
  5802                                  _delay_x_ms:
  5803 00002B3B E804000000              	call	delay1_4ms
  5804 00002B40 E2F9                            loop	_delay_x_ms
  5805 00002B42 59                      	pop	ecx
  5806 00002B43 C3                      	retn
  5807                                  
  5808                                  ;-----------------------------------------------------------------------------
  5809                                  
  5810                                  	; 10/02/2025
  5811                                  delay1_4ms:
  5812 00002B44 50                              push    eax
  5813 00002B45 51                              push    ecx
  5814 00002B46 53                      	push	ebx
  5815 00002B47 52                      	push	edx
  5816 00002B48 B910000000                      mov     ecx, 16		; close enough.
  5817                                  	;in	al, PORTB
  5818 00002B4D 66BA6100                	mov	dx, PORTB
  5819 00002B51 B400                    	mov	ah, 0  ; read port, byte
  5820 00002B53 CD34                    	int	34h
  5821                                  
  5822 00002B55 2410                    	and	al, REFRESH_STATUS
  5823                                  	;mov	ah, al		; Start toggle state
  5824 00002B57 88C3                    	mov	bl, al
  5825 00002B59 09C9                    	or	ecx, ecx
  5826 00002B5B 7401                    	jz	short _d4ms1
  5827 00002B5D 41                      	inc	ecx		; Throwaway first toggle
  5828                                  _d4ms1:	
  5829                                  	;in	al, PORTB	; Read system control port
  5830 00002B5E 66BA6100                	mov	dx, PORTB
  5831 00002B62 B400                    	mov	ah, 0  ; read port, byte
  5832 00002B64 CD34                    	int	34h
  5833                                  
  5834 00002B66 2410                    	and	al, REFRESH_STATUS ; Refresh toggles 15.085 microseconds
  5835                                  	;cmp	ah, al
  5836 00002B68 38C3                    	cmp	bl, al
  5837 00002B6A 74F2                    	je	short _d4ms1	; Wait for state change
  5838                                  
  5839                                  	;mov	ah, al		; Update with new state
  5840 00002B6C 88C3                    	mov	bl, al
  5841 00002B6E 49                      	dec	ecx
  5842 00002B6F 75ED                    	jnz	short _d4ms1
  5843                                  
  5844 00002B71 5A                      	pop	edx
  5845 00002B72 5B                              pop	ebx
  5846 00002B73 59                      	pop	ecx
  5847 00002B74 58                              pop	eax
  5848                                  
  5849 00002B75 C3                              retn
  5850                                  
  5851                                  ;-----------------------------------------------------------------------------
  5852                                  
  5853                                  	; 10/02/2025
  5854                                  	; 05/02/2025 - ac97play.s
  5855                                  
  5856                                  ; returns AL = current index value
  5857                                  getCurrentIndex:
  5858 00002B76 668B15[DC770000]        	mov	dx, [NABMBAR]
  5859 00002B7D 6683C214                	add	dx, PO_CIV_REG
  5860                                  	;in	al, dx
  5861 00002B81 B400                    	mov	ah, 0 ; read port, byte
  5862 00002B83 CD34                    	int	34h
  5863                                  uLVI2:
  5864 00002B85 C3                      	retn
  5865                                  
  5866                                  ;-----------------------------------------------------------------------------
  5867                                  
  5868                                  	; 10/02/2025
  5869                                  	; 05/02/2025 - ac97play.s
  5870                                  
  5871                                  updateLVI:
  5872 00002B86 668B15[DC770000]        	mov	dx, [NABMBAR]
  5873 00002B8D 6683C214                	add	dx, PO_CIV_REG
  5874                                  	; (Current Index Value and Last Valid Index value)
  5875                                  	;in	ax, dx
  5876 00002B91 B402                    	mov	ah, 2 ; read port, word
  5877 00002B93 CD34                    	int	34h
  5878                                  
  5879 00002B95 38E0                    	cmp	al, ah ; is current index = last index ?
  5880 00002B97 75EC                    	jne	short uLVI2
  5881                                  
  5882 00002B99 E8D8FFFFFF              	call	getCurrentIndex
  5883                                   
  5884 00002B9E F605[D1770000]01        	test	byte [flags], ENDOFFILE
  5885                                  	;jnz	short uLVI1
  5886 00002BA5 7418                    	jz	short uLVI0  ; 08/11/2023
  5887                                  
  5888 00002BA7 50                      	push	eax
  5889 00002BA8 668B15[DC770000]        	mov	dx, [NABMBAR]
  5890 00002BAF 6683C216                	add	dx, PO_SR_REG  ; PCM out status register
  5891                                  	;in	ax, dx
  5892 00002BB3 B402                    	mov	ah, 2 ; read port, word
  5893 00002BB5 CD34                    	int	34h
  5894                                  
  5895 00002BB7 A803                    	test	al, 3 ; bit 1 = Current Equals Last Valid (CELV)
  5896                                  		      ; (has been processed)
  5897                                  		      ; bit 0 = 1 -> DMA Controller Halted (DCH)
  5898 00002BB9 58                      	pop	eax
  5899 00002BBA 7407                    	jz	short uLVI1
  5900                                  uLVI3:
  5901 00002BBC 31C0                    	xor	eax, eax
  5902                                  	; zf = 1
  5903 00002BBE C3                      	retn
  5904                                  uLVI0:
  5905                                          ; not at the end of the file yet.
  5906 00002BBF FEC8                    	dec	al
  5907 00002BC1 241F                    	and	al, 1Fh
  5908                                  uLVI1:
  5909                                  	;call	setLastValidIndex
  5910                                  ;uLVI2:
  5911                                  	;retn
  5912                                  
  5913                                  ;-----------------------------------------------------------------------------
  5914                                  
  5915                                  	; 10/02/2025
  5916                                  	; 05/02/2025 - ac97play.s
  5917                                  
  5918                                  ;input AL = index # to stop on
  5919                                  setLastValidIndex:
  5920 00002BC3 668B15[DC770000]        	mov	dx, [NABMBAR]
  5921 00002BCA 6683C215                	add	dx, PO_LVI_REG
  5922                                          ;out	dx, al
  5923                                  	; al = data, byte
  5924 00002BCE B401                    	mov	ah, 1 ; write port, byte
  5925 00002BD0 CD34                    	int	34h
  5926 00002BD2 C3                      	retn
  5927                                  
  5928                                  ;=============================================================================
  5929                                  ;	Detect (& Enable) Audio Device
  5930                                  ;=============================================================================
  5931                                  
  5932                                  	; 10/02/2025
  5933                                  
  5934                                  detect_audio_device:
  5935                                  
  5936                                  	; check for SB16 at first
  5937 00002BD3 E8EC010000              	call	DetectSB16
  5938 00002BD8 730D                    	jnc	short detected
  5939                                  	
  5940 00002BDA E80F000000              	call	DetectAC97
  5941 00002BDF 720C                    	jc	short not_detected
  5942                                  
  5943 00002BE1 FE05[DE770000]          	inc	byte [audio_hardware] ; 2 = AC'97
  5944                                  detected:
  5945 00002BE7 FE05[DE770000]          	inc	byte [audio_hardware] ; 1 = SB16
  5946                                  	
  5947                                  not_detected:			      ; 0 = none
  5948 00002BED C3                      	retn
  5949                                  
  5950                                  ;=============================================================================
  5951                                  ;	Detect AC'97 Hardware
  5952                                  ;=============================================================================
  5953                                  
  5954                                  	; 10/02/2025
  5955                                  	; 05/02/2025 - ac97play.s
  5956                                  
  5957                                  DetectAC97:
  5958                                  DetectICH:
  5959 00002BEE BE[6C2D0000]            	mov	esi, valid_ids	; address of Valid ICH (AC97) Device IDs
  5960 00002BF3 B915000000              	mov	ecx, valid_id_count
  5961                                  pfd_1:
  5962 00002BF8 AD                      	lodsd
  5963 00002BF9 E840000000              	call	pciFindDevice
  5964 00002BFE 7303                    	jnc	short d_ac97_1
  5965 00002C00 E2F6                    	loop	pfd_1
  5966                                  
  5967                                  	;stc
  5968 00002C02 C3                      	retn
  5969                                  
  5970                                  d_ac97_1:
  5971                                  	; eax = BUS/DEV/FN
  5972                                  	;	00000000BBBBBBBBDDDDDFFF00000000
  5973                                  	; edx = DEV/VENDOR
  5974                                  	;	DDDDDDDDDDDDDDDDVVVVVVVVVVVVVVVV
  5975                                  
  5976 00002C03 A3[D6770000]            	mov	[bus_dev_fn], eax
  5977 00002C08 8915[D2770000]          	mov	[dev_vendor], edx
  5978                                  
  5979                                  	; get ICH base address regs for mixer and bus master
  5980                                  
  5981 00002C0E B010                            mov     al, NAMBAR_REG
  5982 00002C10 E8B7000000                      call    pciRegRead16		; read PCI registers 10-11
  5983                                          ;and    dx, IO_ADDR_MASK 	; mask off BIT0
  5984 00002C15 80E2FE                  	and	dl, 0FEh
  5985                                  
  5986 00002C18 668915[DA770000]                mov     [NAMBAR], dx		; save audio mixer base addr
  5987                                  
  5988 00002C1F B014                    	mov     al, NABMBAR_REG
  5989 00002C21 E8A6000000                      call    pciRegRead16
  5990                                          ;and    dx, IO_ADDR_MASK
  5991 00002C26 80E2C0                  	and	dl, 0C0h
  5992                                  
  5993 00002C29 668915[DC770000]                mov     [NABMBAR], dx		; save bus master base addr
  5994                                  
  5995 00002C30 B03C                    	mov	al, AC97_INT_LINE ; Interrupt line register (3Ch)
  5996 00002C32 E88E000000              	call	pciRegRead8
  5997                                  	
  5998 00002C37 8815[CE770000]          	mov	[ac97_int_ln_reg], dl
  5999                                  
  6000                                  	;clc
  6001                                  
  6002 00002C3D C3                      	retn
  6003                                  
  6004                                  ;-----------------------------------------------------------------------------
  6005                                  ;
  6006                                  ;-----------------------------------------------------------------------------
  6007                                  
  6008                                  	; 10/02/2025
  6009                                  	; 05/02/2025 - ac97play.s
  6010                                  
  6011                                  ; --------------------------------------------------------
  6012                                  ; Ref: 27/05/2024 - (TRDOS 386 Kernel) audio.s
  6013                                  ; --------------------------------------------------------
  6014                                  
  6015                                  NOT_PCI32_PCI16	EQU 03FFFFFFFh ; NOT BIT31+BIT30
  6016                                  NOT_BIT31 EQU 7FFFFFFFh
  6017                                  
  6018                                  pciFindDevice:
  6019                                  	; scan through PCI space looking for a device+vendor ID
  6020                                  	;
  6021                                  	; Entry: EAX=Device+Vendor ID
  6022                                  	;
  6023                                  	; Exit: EAX=PCI address if device found
  6024                                  	;	EDX=Device+Vendor ID
  6025                                  	;       CY clear if found, set if not found. EAX invalid if CY set.
  6026                                  	;
  6027                                  	; Destroys: ebx, edi
  6028                                  
  6029                                  
  6030 00002C3E 89C3                    	mov	ebx, eax
  6031 00002C40 BF00000080              	mov	edi, 80000000h
  6032                                  nextPCIdevice:
  6033 00002C45 89F8                    	mov 	eax, edi	; read PCI registers
  6034 00002C47 E88C000000              	call	pciRegRead32
  6035                                  
  6036 00002C4C 39DA                    	cmp	edx, ebx
  6037 00002C4E 7412                    	je	short PCIScanExit ; found
  6038                                  
  6039 00002C50 81FF00F8FF80            	cmp	edi, 80FFF800h
  6040 00002C56 7308                    	jnb	short pfd_nf	; not found
  6041 00002C58 81C700010000            	add	edi, 100h
  6042 00002C5E EBE5                    	jmp	short nextPCIdevice
  6043                                  pfd_nf:
  6044 00002C60 F9                      	stc
  6045 00002C61 C3                      	retn
  6046                                  PCIScanExit:
  6047                                  	;pushf
  6048 00002C62 B8FFFFFF7F              	mov	eax, NOT_BIT31
  6049 00002C67 21F8                    	and	eax, edi	; return only bus/dev/fn #
  6050 00002C69 C3                      	retn
  6051                                  
  6052                                  ;-----------------------------------------------------------------------------
  6053                                  
  6054                                  	; 10/02/2025
  6055                                  pciRegRead:
  6056                                  	; 8/16/32bit PCI reader
  6057                                  	;
  6058                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  6059                                  	;           BIT30 set if 32 bit access requested
  6060                                  	;           BIT29 set if 16 bit access requested
  6061                                  	;           otherwise defaults to 8 bit read
  6062                                  	;
  6063                                  	; Exit:  DL,DX,EDX register data depending on requested read size
  6064                                  	;
  6065                                  	; Note1: this routine is meant to be called via pciRegRead8,
  6066                                  	;	 pciRegread16 or pciRegRead32, listed below.
  6067                                  	;
  6068                                  	; Note2: don't attempt to read 32 bits of data from a non dword
  6069                                  	;	 aligned reg number. Likewise, don't do 16 bit reads from
  6070                                  	;	 non word aligned reg #
  6071                                  	
  6072 00002C6A 53                      	push	ebx
  6073 00002C6B 51                      	push	ecx
  6074 00002C6C 89C3                    	mov	ebx, eax		; save eax, dh
  6075 00002C6E 88F1                    	mov     cl, dh
  6076                                  
  6077 00002C70 25FFFFFF3F              	and     eax, NOT_PCI32_PCI16	; clear out data size request
  6078 00002C75 0D00000080              	or      eax, BIT31		; make a PCI access request
  6079                                  	; (FASM)
  6080                                  	;and	al, NOT 3 ; 0FCh
  6081                                  	; (NASM)
  6082 00002C7A 24FC                    	and	al, ~3 ; 0FCh		; force index to be dword
  6083                                  
  6084 00002C7C 66BAF80C                        mov     dx, PCI_INDEX_PORT
  6085                                          ;out	dx, eax			; write PCI selector
  6086 00002C80 53                      	push	ebx
  6087 00002C81 89C3                    	mov	ebx, eax ; data, dword
  6088 00002C83 B405                    	mov	ah, 5 ; write port, dword
  6089                                  	; dx = port number
  6090 00002C85 CD34                    	int	34h
  6091 00002C87 5B                      	pop	ebx
  6092                                  	
  6093 00002C88 66BAFC0C                        mov     dx, PCI_DATA_PORT
  6094 00002C8C 88D8                            mov     al, bl
  6095 00002C8E 2403                            and     al, 3			; figure out which port to
  6096 00002C90 00C2                            add     dl, al			; read to
  6097                                  
  6098 00002C92 F7C3000000C0            	test    ebx, PCI32+PCI16
  6099 00002C98 750A                            jnz     short _pregr0
  6100                                  
  6101                                  	;in	al, dx			; return 8 bits of data
  6102 00002C9A B400                    	mov	ah, 0 ; read port, byte
  6103                                  	; dx = port number
  6104 00002C9C CD34                    	int	34h
  6105                                          
  6106 00002C9E 88C2                    	mov	dl, al
  6107 00002CA0 88CE                    	mov     dh, cl			; restore dh for 8 bit read
  6108 00002CA2 EB17                    	jmp	short _pregr2
  6109                                  _pregr0:	
  6110 00002CA4 F7C300000080            	test    ebx, PCI32
  6111 00002CAA 7509                            jnz	short _pregr1
  6112                                  
  6113                                  	;in	ax, dx
  6114 00002CAC B402                    	mov	ah, 2 ; read port, word
  6115                                  	; dx = port number
  6116 00002CAE CD34                    	int	34h
  6117                                  
  6118 00002CB0 6689C2                  	mov     dx, ax			; return 16 bits of data
  6119 00002CB3 EB06                    	jmp	short _pregr2
  6120                                  _pregr1:
  6121                                  	;in	eax, dx			; return 32 bits of data
  6122 00002CB5 B404                    	mov	ah, 4 ; read port, dword
  6123                                  	; dx = port number
  6124 00002CB7 CD34                    	int	34h
  6125                                  
  6126 00002CB9 89C2                    	mov	edx, eax
  6127                                  _pregr2:
  6128 00002CBB 89D8                    	mov     eax, ebx		; restore eax
  6129 00002CBD 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  6130 00002CC2 59                      	pop	ecx
  6131 00002CC3 5B                      	pop	ebx
  6132 00002CC4 C3                      	retn
  6133                                  
  6134                                  pciRegRead8:
  6135 00002CC5 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 8 bit read size
  6136 00002CCA EB9E                            jmp     short pciRegRead	; call generic PCI access
  6137                                  
  6138                                  pciRegRead16:
  6139 00002CCC 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 16 bit read size
  6140 00002CD1 0D00000040                      or      eax, PCI16		; call generic PCI access
  6141 00002CD6 EB92                            jmp     short pciRegRead
  6142                                  
  6143                                  pciRegRead32:
  6144 00002CD8 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 32 bit read size
  6145 00002CDD 0D00000080                      or      eax, PCI32		; call generic PCI access
  6146 00002CE2 EB86                            jmp     pciRegRead
  6147                                  
  6148                                  ;-----------------------------------------------------------------------------
  6149                                  
  6150                                  	; 10/02/2025
  6151                                  pciRegWrite:
  6152                                  	; 8/16/32bit PCI writer
  6153                                  	;
  6154                                  	; Entry: EAX=PCI Bus/Device/fn/register number
  6155                                  	;           BIT31 set if 32 bit access requested
  6156                                  	;           BIT30 set if 16 bit access requested
  6157                                  	;           otherwise defaults to 8bit read
  6158                                  	;        DL/DX/EDX data to write depending on size
  6159                                  	;
  6160                                  	; Note1: this routine is meant to be called via pciRegWrite8,
  6161                                  	;	 pciRegWrite16 or pciRegWrite32 as detailed below.
  6162                                  	;
  6163                                  	; Note2: don't attempt to write 32bits of data from a non dword
  6164                                  	;	 aligned reg number. Likewise, don't do 16 bit writes from
  6165                                  	;	 non word aligned reg #
  6166                                  
  6167 00002CE4 53                      	push	ebx
  6168 00002CE5 51                      	push	ecx
  6169 00002CE6 89C3                            mov     ebx, eax		; save eax, edx
  6170 00002CE8 89D1                            mov     ecx, edx
  6171 00002CEA 25FFFFFF3F              	and     eax, NOT_PCI32_PCI16	; clear out data size request
  6172 00002CEF 0D00000080                      or      eax, BIT31		; make a PCI access request
  6173                                  	; (FASM)
  6174                                  	;and	al, NOT 3 ; 0FCh
  6175                                  	; (NASM)
  6176 00002CF4 24FC                    	and	al, ~3 ; 0FCh		; force index to be dword
  6177                                  
  6178 00002CF6 66BAF80C                        mov     dx, PCI_INDEX_PORT
  6179                                  	;out	dx, eax			; write PCI selector
  6180 00002CFA 53                      	push	ebx
  6181 00002CFB 89C3                    	mov	ebx, eax ; data, dword
  6182 00002CFD B405                    	mov	ah, 5 ; write port, dword
  6183                                  	; dx = port number
  6184 00002CFF CD34                    	int	34h
  6185 00002D01 5B                      	pop	ebx
  6186                                  	
  6187 00002D02 66BAFC0C                        mov     dx, PCI_DATA_PORT
  6188 00002D06 88D8                            mov     al, bl
  6189 00002D08 2403                            and     al, 3			; figure out which port to
  6190 00002D0A 00C2                            add     dl, al			; write to
  6191                                  
  6192 00002D0C F7C3000000C0            	test    ebx, PCI32+PCI16
  6193 00002D12 7508                            jnz     short _pregw0
  6194 00002D14 88C8                    	mov	al, cl 			; put data into al
  6195                                  	;out	dx, al
  6196                                  	; al = data, byte
  6197 00002D16 B401                    	mov	ah, 1 ; write port, byte
  6198                                  	; dx = port number
  6199 00002D18 CD34                    	int	34h
  6200                                  
  6201 00002D1A EB1F                    	jmp	short _pregw2
  6202                                  _pregw0:
  6203 00002D1C F7C300000080            	test    ebx, PCI32
  6204 00002D22 750D                            jnz     short _pregw1
  6205 00002D24 6689C8                  	mov	ax, cx			; put data into ax
  6206                                  	;out	dx, ax
  6207 00002D27 53                      	push	ebx
  6208 00002D28 89C3                    	mov	ebx, eax ; data, word
  6209 00002D2A B403                    	mov	ah, 3 ; write port, word
  6210                                  	; dx = port number
  6211 00002D2C CD34                    	int	34h
  6212 00002D2E 5B                      	pop	ebx
  6213                                  
  6214 00002D2F EB0A                    	jmp	short _pregw2
  6215                                  _pregw1:
  6216 00002D31 89C8                    	mov	eax, ecx		; put data into eax
  6217                                  	;out	dx, eax
  6218 00002D33 53                      	push	ebx
  6219 00002D34 89C3                    	mov	ebx, eax ; data, dword
  6220 00002D36 B405                    	mov	ah, 5 ; write port, dword
  6221                                  	; dx = port number
  6222 00002D38 CD34                    	int	34h
  6223 00002D3A 5B                      	pop	ebx
  6224                                  _pregw2:
  6225 00002D3B 89D8                            mov     eax, ebx		; restore eax
  6226 00002D3D 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; clear out data size request
  6227 00002D42 89CA                            mov     edx, ecx		; restore dx
  6228 00002D44 59                      	pop	ecx
  6229 00002D45 5B                      	pop	ebx
  6230 00002D46 C3                      	retn
  6231                                  
  6232                                  pciRegWrite8:
  6233 00002D47 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 8 bit write size
  6234 00002D4C EB96                            jmp	short pciRegWrite	; call generic PCI access
  6235                                  
  6236                                  pciRegWrite16:
  6237 00002D4E 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 16 bit write size
  6238 00002D53 0D00000040                      or      eax, PCI16		; call generic PCI access
  6239 00002D58 EB8A                            jmp	short pciRegWrite
  6240                                  
  6241                                  pciRegWrite32:
  6242 00002D5A 25FFFFFF3F                      and     eax, NOT_PCI32_PCI16	; set up 32 bit write size
  6243 00002D5F 0D00000080                      or      eax, PCI32		; call generic PCI access
  6244 00002D64 E97BFFFFFF                      jmp	pciRegWrite
  6245                                  
  6246                                  ;-----------------------------------------------------------------------------
  6247                                  ; ac97.inc (11/11/2023)
  6248                                  ;-----------------------------------------------------------------------------
  6249                                  
  6250                                  ; 10/02/2025
  6251                                  ; 07/02/2025 - twavplay.asm
  6252                                  ; 05/02/2025 - cgaplay.s
  6253                                  
  6254                                  ; special characters
  6255                                  LF      EQU 10
  6256                                  CR      EQU 13
  6257                                  
  6258                                  ; PCI stuff
  6259                                  
  6260                                  BIT0  EQU 1
  6261                                  BIT1  EQU 2
  6262                                  BIT2  EQU 4
  6263                                  BIT8  EQU 100h
  6264                                  BIT9  EQU 200h
  6265                                  BIT28 EQU 10000000h
  6266                                  BIT30 EQU 40000000h
  6267                                  BIT31 EQU 80000000h
  6268                                  
  6269                                  BUP		equ	BIT30		; Buffer Underrun Policy.
  6270                                  					; if this buffer is the last buffer
  6271                                  					; in a playback, fill the remaining
  6272                                  					; samples with 0 (silence) or not.
  6273                                  					; It's a good idea to set this to 1
  6274                                  					; for the last buffer in playback,
  6275                                  					; otherwise you're likely to get a lot
  6276                                  					; of noise at the end of the sound.
  6277                                  
  6278                                  RR		equ	BIT1		; reset registers. Nukes all regs
  6279                                                                          ; except bits 4:2 of this register.
  6280                                                                          ; Only set this bit if BIT 0 is 0
  6281                                  RPBM		equ	BIT0		; Run/Pause
  6282                                  					; set this bit to start the codec!
  6283                                  IO_ENA		EQU	BIT0		; i/o decode enable
  6284                                  BM_ENA		EQU	BIT2		; bus master enable
  6285                                  
  6286                                  PCI_INDEX_PORT  EQU     0CF8h
  6287                                  PCI_DATA_PORT   EQU     0CFCh
  6288                                  PCI32           EQU     BIT31           ; bitflag to signal 32bit access
  6289                                  PCI16           EQU     BIT30           ; bitflag for 16bit access
  6290                                  
  6291                                  AC97_INT_LINE	equ	3Ch		; AC97 Interrupt Line register offset
  6292                                  
  6293                                  ; Intel ICH2 equates. It is assumed that ICH0 and plain ole ICH are compatible.
  6294                                  
  6295                                  INTEL_VID       equ     8086h           ; Intel's PCI vendor ID
  6296                                  ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
  6297                                  SIS_VID		equ	1039h
  6298                                  NVIDIA_VID	equ	10DEh	 ; Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source c.
  6299                                  AMD_VID		equ	1022h
  6300                                  
  6301                                  ICH_DID         equ     2415h           ; ICH device ID
  6302                                  ICH0_DID        equ     2425h           ; ICH0
  6303                                  ICH2_DID        equ     2445h           ; ICH2 I think there are more ICHes.
  6304                                                                          ; they all should be compatible.
  6305                                  
  6306                                  ; 17/02/2017 (Erdogan Tan, ref: ALSA Device IDs, ALSA project)
  6307                                  ICH3_DID	equ     2485h           ; ICH3
  6308                                  ICH4_DID        equ     24C5h           ; ICH4
  6309                                  ICH5_DID	equ     24D5h           ; ICH5
  6310                                  ICH6_DID	equ     266Eh           ; ICH6
  6311                                  ESB6300_DID	equ     25A6h           ; 6300ESB
  6312                                  ESB631X_DID	equ     2698h           ; 631XESB
  6313                                  ICH7_DID	equ	27DEh		; ICH7
  6314                                  ; 03/11/2023 - Erdogan Tan (Ref: MenuetOS AC97 WAV Player source code, 2004)
  6315                                  MX82440_DID	equ	7195h
  6316                                  SI7012_DID	equ	7012h
  6317                                  NFORCE_DID	equ	01B1h
  6318                                  NFORCE2_DID	equ	006Ah
  6319                                  AMD8111_DID	equ	746Dh
  6320                                  AMD768_DID	equ	7445h
  6321                                  ; 03/11/2023 - Erdogan Tan - Ref: MPXPLAY/SBEMU/KOLIBRIOS AC97 source code
  6322                                  CK804_DID	equ	0059h
  6323                                  MCP04_DID	equ	003Ah
  6324                                  CK8_DID		equ	008Ah
  6325                                  NFORCE3_DID	equ	00DAh
  6326                                  CK8S_DID	equ	00EAh
  6327                                  
  6328                                  NAMBAR_REG	equ	10h		; native audio mixer BAR
  6329                                  NABMBAR_REG	equ	14h		; native audio bus mastering BAR
  6330                                  
  6331                                  CODEC_MASTER_VOL_REG	equ	02h	; master volume
  6332                                  CODEC_MASTER_TONE_REG	equ	08h	; master tone (R+L)
  6333                                  CODEC_PCM_OUT_REG 	equ	18h     ; PCM output volume
  6334                                  CODEC_EXT_AUDIO_REG	equ	28h	; extended audio
  6335                                  CODEC_EXT_AUDIO_CTRL_REG equ	2Ah	; extended audio control
  6336                                  CODEC_PCM_FRONT_DACRATE_REG equ	2Ch	; PCM out sample rate
  6337                                  
  6338                                  ; ICH supports 3 different types of register sets for three types of things
  6339                                  ; it can do, thus:
  6340                                  ;
  6341                                  ; PCM in (for recording) aka PI
  6342                                  ; PCM out (for playback) aka PO
  6343                                  ; MIC in (for recording) aka MC
  6344                                  
  6345                                  PI_BDBAR_REG	equ	0		; PCM in buffer descriptor BAR
  6346                                  PO_BDBAR_REG	equ	10h		; PCM out buffer descriptor BAR
  6347                                  
  6348                                  GLOB_CNT_REG	equ	2Ch		; Global control register
  6349                                  GLOB_STS_REG 	equ	30h		; Global Status register (RO)
  6350                                  
  6351                                  PI_CR_REG 	equ	0Bh		; PCM in Control Register
  6352                                  PO_CR_REG	equ	1Bh		; PCM out Control Register
  6353                                  MC_CR_REG	equ	2Bh		; MIC in Control Register
  6354                                  
  6355                                  PCI_CMD_REG	EQU	04h		; reg 04h, command register
  6356                                  
  6357                                  CTRL_ST_CREADY		equ	BIT8+BIT9+BIT28 ; Primary Codec Ready
  6358                                  CODEC_REG_POWERDOWN	equ	26h
  6359                                  
  6360                                  PO_CIV_REG	equ	14h		; PCM out current Index value (RO)
  6361                                  PO_LVI_REG	equ	15h		; PCM out Last Valid Index
  6362                                  PO_SR_REG	equ	16h		; PCM out Status register
  6363                                  
  6364                                  BDL_SIZE	equ	32*8		; Buffer Descriptor List size
  6365                                  
  6366                                  ; 07/02/2025 - twavplay.asm
  6367                                  PO_PICB_REG	equ 18h	; PCM Out Position In Current Buffer Register
  6368                                  
  6369                                  ;-----------------------------------------------------------------------------
  6370                                  
  6371                                  ; 06/05/2025
  6372                                  
  6373                                  ; 22/12/2024
  6374 00002D69 90<rep 3h>              align 4
  6375                                  
  6376                                  ; 29/05/2024 (TRDOS 386)
  6377                                  ; 17/02/2017
  6378                                  ; Valid ICH device IDs
  6379                                  
  6380                                  valid_ids:
  6381                                  	;dd (ICH_DID shl 16) + INTEL_VID	; 8086h:2415h
  6382 00002D6C 86801524                	dd (ICH_DID << 16) + INTEL_VID		; 8086h:2415h
  6383 00002D70 86802524                	dd (ICH0_DID << 16) + INTEL_VID		; 8086h:2425h
  6384 00002D74 86804524                	dd (ICH2_DID << 16) + INTEL_VID		; 8086h:2445h
  6385 00002D78 86808524                	dd (ICH3_DID << 16) + INTEL_VID		; 8086h:2485h
  6386 00002D7C 8680C524                	dd (ICH4_DID << 16) + INTEL_VID		; 8086h:24C5h
  6387 00002D80 8680D524                	dd (ICH5_DID << 16) + INTEL_VID		; 8086h:24D5h
  6388 00002D84 86806E26                	dd (ICH6_DID << 16) + INTEL_VID		; 8086h:266Eh
  6389 00002D88 8680A625                	dd (ESB6300_DID << 16) + INTEL_VID	; 8086h:25A6h
  6390 00002D8C 86809826                	dd (ESB631X_DID << 16) + INTEL_VID	; 8086h:2698h
  6391 00002D90 8680DE27                	dd (ICH7_DID << 16) + INTEL_VID		; 8086h:27DEh
  6392                                  	; 03/11/2023 - Erdogan Tan
  6393 00002D94 86809571                	dd (MX82440_DID << 16) + INTEL_VID	; 8086h:7195h
  6394 00002D98 39101270                	dd (SI7012_DID << 16)  + SIS_VID	; 1039h:7012h
  6395 00002D9C DE10B101                	dd (NFORCE_DID << 16)  + NVIDIA_VID	; 10DEh:01B1h
  6396 00002DA0 DE106A00                	dd (NFORCE2_DID << 16) + NVIDIA_VID	; 10DEh:006Ah
  6397 00002DA4 22106D74                	dd (AMD8111_DID << 16) + AMD_VID	; 1022h:746Dh
  6398 00002DA8 22104574                	dd (AMD768_DID << 16)  + AMD_VID	; 1022h:7445h
  6399 00002DAC DE105900                	dd (CK804_DID << 16) + NVIDIA_VID	; 10DEh:0059h
  6400 00002DB0 DE103A00                	dd (MCP04_DID << 16) + NVIDIA_VID	; 10DEh:003Ah
  6401 00002DB4 DE108A00                	dd (CK8_DID << 16) + NVIDIA_VID		; 1022h:008Ah
  6402 00002DB8 DE10DA00                	dd (NFORCE3_DID << 16) + NVIDIA_VID	; 10DEh:00DAh
  6403 00002DBC DE10EA00                	dd (CK8S_DID << 16) + NVIDIA_VID	; 10DEh:00EAh
  6404                                  
  6405                                  valid_id_count equ (($ - valid_ids)>>2)	; 05/11/2023
  6406                                  
  6407 00002DC0 00000000                	dd 0
  6408                                  
  6409                                  ;=============================================================================
  6410                                  ;	Detect Sound Blaster 16 sound card (or compatible hardware)
  6411                                  ;=============================================================================
  6412                                  
  6413                                  	; 10/02/2025
  6414                                  	; 09/02/2025 - twavplay.asm
  6415                                  	; 20/10/2017 - playwav.s
  6416                                  
  6417                                  DetectSB16:
  6418                                  	; Ref: TRDOS 386 Kernel v2.0.9 audio.s (06/06/2024)
  6419                                  	;      DetectSB procedure (06/08/2022, v2.0.5)
  6420                                  ScanPort:
  6421 00002DC4 66BB1002                	mov	bx, 0210h	; start scanning ports
  6422                                  				; 210h, 220h, .. 260h
  6423                                  ResetDSP:
  6424 00002DC8 6689DA                  	mov	dx, bx		; try to reset the DSP.
  6425 00002DCB 80C206                  	add	dl, 06h
  6426                                  
  6427 00002DCE B001                    	mov	al, 1
  6428                                  	;out	dx, al
  6429 00002DD0 B401                    	mov	ah, 1 ; outb
  6430 00002DD2 CD34                    	int	34h
  6431                                  
  6432                                  	;in	al, dx
  6433                                  	;in	al, dx
  6434                                  	;in	al, dx
  6435                                  	;in	al, dx
  6436                                  
  6437 00002DD4 B400                    	mov	ah, 0 ; inb
  6438 00002DD6 CD34                    	int	34h
  6439                                  	;mov	ah, 0 ; inb
  6440 00002DD8 CD34                    	int	34h
  6441                                  
  6442 00002DDA 30C0                    	xor     al, al
  6443                                  	;out	dx, al
  6444 00002DDC B401                    	mov	ah, 1 ; outb
  6445 00002DDE CD34                    	int	34h
  6446                                  
  6447                                  	;add     dx, 08h
  6448                                  	; 10/02/2025
  6449 00002DE0 80C208                  	add	dl, 08h
  6450                                  	;mov	cx, 100
  6451 00002DE3 66B92000                	mov	cx, 32
  6452 00002DE7 28E4                    	sub	ah, ah ; 0
  6453                                  WaitID:
  6454                                  	;in	al, dx
  6455 00002DE9 CD34                    	int	34h  ;ah = 0 ; inb
  6456 00002DEB 08C0                    	or      al, al
  6457 00002DED 7804                    	js      short GetID
  6458 00002DEF E2F8                    	loop    WaitID
  6459 00002DF1 EB0E                    	jmp     short NextPort
  6460                                  GetID:
  6461                                  	;sub	dx, 04h
  6462                                  	; 10/02/2025
  6463 00002DF3 80EA04                  	sub	dl, 04h
  6464                                  	;in	al, dx
  6465 00002DF6 CD34                    	int	34h  ;ah = 0 ; inb
  6466 00002DF8 3CAA                    	cmp     al, 0AAh
  6467 00002DFA 740F                    	je      short Found
  6468                                  	;add	dx, 04h
  6469                                  	; 10/02/2025
  6470 00002DFC 80C204                  	add	dl, 04h	
  6471 00002DFF E2E8                    	loop    WaitID
  6472                                  NextPort:
  6473                                  	;add	bx, 10h		; if not response,
  6474 00002E01 80C310                  	add	bl, 10h
  6475                                  	;cmp	bx, 260h	; try the next port.
  6476 00002E04 80FB60                  	cmp	bl, 60h
  6477 00002E07 76BF                    	jbe     short ResetDSP
  6478 00002E09 F9                      	stc
  6479 00002E0A C3                      	retn
  6480                                  Found:
  6481 00002E0B 66891D[DA770000]        	mov     [audio_io_base], bx ; SB Port Address Found!
  6482                                  ScanIRQ:
  6483                                  SetIrqs:
  6484 00002E12 28C0                    	sub 	al, al ; 0
  6485 00002E14 A2[DF770000]            	mov 	[IRQnum], al ; reset
  6486                                  	;mov	[audio_intr], al
  6487                                  
  6488                                  	; ah > 0 -> set IRQ vector
  6489                                  	; al = IRQ number
  6490 00002E19 66B80501                	mov	ax, 105h ; IRQ 5
  6491 00002E1D BA[E32E0000]            	mov	edx, IRQ5_srb
  6492 00002E22 E872000000              	call	set_hardware_int_vector
  6493                                  
  6494 00002E27 66B80701                	mov	ax, 107h ; IRQ 7
  6495 00002E2B BA[E42E0000]            	mov	edx, IRQ7_srb
  6496 00002E30 E864000000              	call	set_hardware_int_vector
  6497                                  
  6498 00002E35 668B15[DA770000]        	mov     dx, [audio_io_base] ; tells to the SB to
  6499                                  	;add	dx, 0Ch		    ; generate a IRQ!
  6500 00002E3C 80C20C                  	add	dl, 0Ch
  6501                                  WaitSb:
  6502                                  	;in	al, dx
  6503 00002E3F B400                    	mov	ah, 0 ; inb
  6504 00002E41 CD34                    	int	34h
  6505 00002E43 08C0                    	or      al, al
  6506 00002E45 78F8                    	js      short WaitSb
  6507 00002E47 B0F2                    	mov     al, 0F2h
  6508                                  	;out	dx, al
  6509 00002E49 B401                    	mov	ah,1  ; outb
  6510 00002E4B CD34                    	int	34h	
  6511                                  
  6512 00002E4D 31C9                    	xor	ecx, ecx	; wait until IRQ level
  6513                                  	;mov	ecx, 65536
  6514                                  WaitIRQ: 
  6515                                  	; 10/02/2025
  6516                                  	;mov	al, [IRQnum]
  6517                                  	;cmp    al, 0 ; is changed or timeout.
  6518                                  	;ja	short IrqOk
  6519 00002E4F A0[E32E0000]            	mov	al, [IRQ5_srb]
  6520 00002E54 3C05                    	cmp	al, 5
  6521 00002E56 740F                    	je	short IrqOk
  6522 00002E58 A0[E42E0000]            	mov	al, [IRQ7_srb]
  6523 00002E5D 3C07                    	cmp	al, 7
  6524 00002E5F 7406                    	je	short IrqOk	
  6525 00002E61 6649                    	dec	cx
  6526                                  	;dec	ecx
  6527 00002E63 75EA                    	jnz	short WaitIRQ
  6528 00002E65 EB18                    	jmp	short RestoreIrqs
  6529                                  IrqOk:
  6530                                  	;;;
  6531                                  	; 10/02/2025
  6532 00002E67 A2[DF770000]            	mov	[IRQnum], al
  6533 00002E6C A2[CE770000]            	mov	[audio_intr], al
  6534 00002E71 668B15[DA770000]        	mov 	dx, [audio_io_base]
  6535                                  	;add	dx, 0Eh
  6536 00002E78 80C20E                  	add	dl, 0Eh ; 8bit DMA-mode int ack
  6537                                  	;in	al, dx
  6538 00002E7B B400                    	mov	ah, 0 ; inb
  6539 00002E7D CD34                    	int	34h
  6540                                  
  6541                                  	; 10/02/2025
  6542                                  	; 16bit DMA mode intr ack is
  6543                                  	; not necessary for initial IRQ scan
  6544                                  %if 0
  6545                                  	inc	edx ; 0Fh ; 16bit DMA-mode int ack
  6546                                  	;in	al, dx	; SB 16 acknowledge.
  6547                                  	;mov	ah, 0 ; inb
  6548                                  	int	34h
  6549                                  %endif
  6550                                  	;;;
  6551                                  	;mov	al, 20h
  6552                                  	;out	20h, al	; Hardware acknowledge.
  6553                                  RestoreIrqs:
  6554                                  	; ah = 0 -> reset IRQ vector
  6555                                  	; al = IRQ number
  6556 00002E7F 66B80500                	mov	ax, 5 ; IRQ 5
  6557 00002E83 E811000000              	call	set_hardware_int_vector
  6558 00002E88 66B80700                	mov	ax, 7 ; IRQ 7
  6559 00002E8C E808000000              	call	set_hardware_int_vector
  6560                                  
  6561 00002E91 803D[DF770000]01        	cmp     byte [IRQnum], 1 ; IRQ level was changed?
  6562                                  	
  6563 00002E98 C3                      	retn
  6564                                  
  6565                                  ;-----------------------------------------------------------------------------
  6566                                  ;
  6567                                  ;-----------------------------------------------------------------------------
  6568                                  
  6569                                  	; 10/02/2025
  6570                                  	; 20/10/2027 - playwav.s
  6571                                  
  6572                                  	; syscalbac:
  6573                                  	; ----------
  6574                                  	; Link or unlink IRQ callback service to/from user (ring 3)
  6575                                  
  6576                                  	; sycalbac Input: 
  6577                                  	; 	bl = IRQ number
  6578                                  	;	bh = 0 -> reset/unlink
  6579                                  	;	bh = 1 -> set/link
  6580                                  	;	cl = signal response/return byte value (to user)
  6581                                  	;	bh = 3 -> counter (start value is cl+1)
  6582                                  	; 	edx = signal response (return) byte address
  6583                                  	;	      or callback service address
  6584                                  
  6585                                  set_hardware_int_vector:
  6586 00002E99 08E4                    	or	ah, ah
  6587 00002E9B 751E                    	jnz	short shintv_1 ; set user's audio interrupt handler
  6588                                  
  6589                                  rhintv_1:		
  6590 00002E9D 3C05                    	cmp	al, 5
  6591 00002E9F 750D                    	jne	short rhintv_2
  6592                                  
  6593                                  	; Signal Response Byte 
  6594                                  	sys	_calbac, 5	; unlink IRQ 5
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002EA1 BB05000000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002EA6 B82C000000          <1>  mov eax, %1
    96                              <1> 
    97 00002EAB CD40                <1>  int 40h
  6595                                  
  6596 00002EAD C3                      	retn
  6597                                  
  6598                                  rhintv_2:
  6599                                  	; al = 7
  6600                                  
  6601                                  	; Signal Response Byte
  6602                                  	sys	_calbac, 7	; unlink IRQ 7
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002EAE BB07000000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89                              <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002EB3 B82C000000          <1>  mov eax, %1
    96                              <1> 
    97 00002EB8 CD40                <1>  int 40h
  6603                                  
  6604 00002EBA C3                      	retn
  6605                                  
  6606                                  shintv_1:
  6607 00002EBB 3C05                    	cmp	al, 5
  6608 00002EBD 7512                    	jne	short shintv_2
  6609                                  
  6610                                  	; LINK SIGNAL RESPONSE/RETURN BYTE TO REQUESTED IRQ
  6611                                  
  6612                                  	; edx = srb address (IRQnum or IRQ5_srb)
  6613                                  
  6614                                  	sys	_calbac, 105h, 5 ; IRQ 5
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002EBF BB05010000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002EC4 B905000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002EC9 B82C000000          <1>  mov eax, %1
    96                              <1> 
    97 00002ECE CD40                <1>  int 40h
  6615                                  
  6616 00002ED0 C3                      	retn
  6617                                  
  6618                                  shintv_2:	
  6619                                  	; al = 7
  6620                                  
  6621                                  	; LINK SIGNAL RESPONSE/RETURN BYTE TO REQUESTED IRQ
  6622                                  
  6623                                  	; edx = srb address (IRQnum or IRQ7_srb)
  6624                                  
  6625                                  	sys	_calbac, 107h, 7 ; IRQ 7
    82                              <1> 
    83                              <1> 
    84                              <1> 
    85                              <1> 
    86                              <1>  %if %0 >= 2
    87 00002ED1 BB07010000          <1>  mov ebx, %2
    88                              <1>  %if %0 >= 3
    89 00002ED6 B907000000          <1>  mov ecx, %3
    90                              <1>  %if %0 = 4
    91                              <1>  mov edx, %4
    92                              <1>  %endif
    93                              <1>  %endif
    94                              <1>  %endif
    95 00002EDB B82C000000          <1>  mov eax, %1
    96                              <1> 
    97 00002EE0 CD40                <1>  int 40h
  6626                                  
  6627 00002EE2 C3                      	retn
  6628                                  
  6629                                  ;-----------------------------------------------------------------------------
  6630                                  
  6631                                  	; 10/02/2025
  6632 00002EE3 00                      IRQ5_srb: db 0
  6633 00002EE4 00                      IRQ7_srb: db 0
  6634                                  
  6635                                  ;=============================================================================
  6636                                  ; settextmode - restore the VGA 80x25x16 text mode
  6637                                  ;=============================================================================
  6638                                  	
  6639                                  	; 10/02/2025
  6640                                  settextmode:
  6641 00002EE5 66B80300                	mov	ax, 0003h
  6642                                  	;int	10h
  6643 00002EE9 CD31                    	int	31h ; TRDOS 386 - Video interrupt
  6644 00002EEB C3                      	retn
  6645                                  	
  6646                                  ;=============================================================================
  6647                                  ; drawscopes - draw wave/voice sample scopes
  6648                                  ;=============================================================================
  6649                                  	
  6650                                  	; 10/02/2025 - twavply3.s
  6651                                  	; 09/02/2025 - twavplay.asm (16bit)
  6652                                  	; 05/02/2025 - twavplay2.s
  6653                                  drawscopes:
  6654 00002EEC E8C5000000              	call	get_current_sound_data
  6655 00002EF1 BE[20820000]            	mov	esi, g_buffer
  6656                                  
  6657 00002EF6 31C9                    	xor     ecx, ecx
  6658 00002EF8 31D2                    	xor     edx, edx
  6659 00002EFA 31FF                    	xor	edi, edi
  6660                                  drawscope0:
  6661 00002EFC 66AD                    	lodsw
  6662 00002EFE 80F480                  	xor	ah, 80h
  6663 00002F01 0FB6DC                  	movzx	ebx, ah	; Left Channel
  6664 00002F04 D1E3                    	shl	ebx, 1
  6665 00002F06 668B83[F0770000]        	mov	ax, [RowOfs+ebx]
  6666 00002F0D 668987[F0790000]        	mov	[NewScope_L+edi], ax
  6667 00002F14 30FF                    	xor	bh, bh
  6668 00002F16 66AD                    	lodsw
  6669 00002F18 80F480                  	xor	ah, 80h
  6670 00002F1B 88E3                    	mov	bl, ah	; Right Channel
  6671 00002F1D D1E3                    	shl	ebx, 1
  6672 00002F1F 668B83[F0770000]        	mov	ax, [RowOfs+ebx]
  6673 00002F26 668987[F07B0000]        	mov	[NewScope_R+edi], ax
  6674 00002F2D 6683C702                	add	di, 2
  6675 00002F31 FEC1                    	inc	cl
  6676 00002F33 75C7                    	jnz	short drawscope0
  6677                                  
  6678 00002F35 66BAC403                	mov	dx, 3C4h
  6679                                  	;mov	ax, 0802h
  6680                                          ;out	dx, ax
  6681 00002F39 66BB0208                        mov	bx, 0802h
  6682 00002F3D B403                    	mov	ah, 3 ; outw
  6683 00002F3F CD34                    	int	34h
  6684                                  
  6685                                  	;mov	dx, 3CEh
  6686 00002F41 B2CE                    	mov	dl, 0CEh
  6687 00002F43 B008                    	mov	al, 08h
  6688                                         ;out	dx, al
  6689 00002F45 B401                            mov	ah, 1 ; outb
  6690 00002F47 CD34                    	int	34h
  6691                                  
  6692 00002F49 42                      	inc	edx
  6693                                  
  6694 00002F4A 31F6                    	xor	esi, esi
  6695 00002F4C BB45060A00              	mov	ebx, 0A0645h
  6696                                  drawscopel4:
  6697 00002F51 B080                    	mov     al, 80h
  6698                                  drawscopel2:
  6699 00002F53 50                      	push	eax ; **
  6700 00002F54 52                      	push	edx ; *
  6701                                  	;out	dx, al
  6702 00002F55 B401                    	mov	ah, 1 ; outb
  6703 00002F57 CD34                    	int	34h
  6704                                  
  6705                                  	;mov	ecx, 32
  6706 00002F59 B120                    	mov	cl, 32
  6707 00002F5B 66B800FF                	mov	ax, 0FF00h
  6708                                  drawscopel3:
  6709 00002F5F 668BBE[F07D0000]                mov	di, [OldScope_L+esi]
  6710 00002F66 668B96[F0790000]        	mov	dx, [NewScope_L+esi]
  6711 00002F6D 39D7                            cmp	edi, edx
  6712 00002F6F 740D                            je	short drawscopef3
  6713 00002F71 88043B                  	mov	[ebx+edi], al ; L
  6714 00002F74 882413                  	mov	[ebx+edx], ah ; L
  6715 00002F77 668996[F07D0000]                mov     [OldScope_L+esi], dx
  6716                                  drawscopef3:
  6717 00002F7E 668BBE[F07F0000]        	mov	di, [OldScope_R+esi]
  6718 00002F85 668B96[F07B0000]        	mov	dx, [NewScope_R+esi]
  6719 00002F8C 39D7                    	cmp	edi, edx
  6720 00002F8E 740F                    	je	short drawscopef4
  6721 00002F90 88443B26                	mov	[ebx+edi+38], al ; R
  6722 00002F94 88641326                	mov	[ebx+edx+38], ah ; R
  6723 00002F98 668996[F07F0000]        	mov     [OldScope_R+esi], dx
  6724                                  drawscopef4:
  6725 00002F9F 83C610                  	add	esi, 2*8
  6726 00002FA2 43                      	inc	ebx
  6727 00002FA3 E2BA                    	loop    drawscopel3
  6728                                  
  6729 00002FA5 5A                              pop     edx ; *
  6730 00002FA6 58                              pop     eax ; **
  6731 00002FA7 81EEFE010000            	sub	esi, 2*256-2
  6732 00002FAD 83EB20                  	sub	ebx, 32
  6733 00002FB0 D0E8                            shr     al, 1
  6734 00002FB2 759F                            jnz	short drawscopel2
  6735 00002FB4 F8                      	clc
  6736 00002FB5 C3                              retn
  6737                                  
  6738                                  ;=============================================================================
  6739                                  ; Get Current Sound Data
  6740                                  ;=============================================================================
  6741                                  ; Reference: TRDOS 386 v2.0.9 Kernel - audio.s file (28/01/2025)
  6742                                  
  6743                                  	; 10/02/2025 - twavplay.s
  6744                                  	; 08/02/2025 - twavplay.asm (16bit)
  6745                                  
  6746                                  	; !!! 18.2 block/second buffer sizing for proper wave scopes !!!
  6747                                  	; (wave graphics synchronization) 
  6748                                  
  6749                                  get_current_sound_data:
  6750                                  	; get current sound (PCM out) data for graphics
  6751                                  
  6752 00002FB6 BF[20820000]            	mov	edi, g_buffer
  6753                                  
  6754 00002FBB 803D[DE770000]01        	cmp	byte [audio_hardware], 1
  6755 00002FC2 774A                    	ja	short ac97_current_sound_data
  6756                                  
  6757                                  ;-----------------------------------------------------------------------------
  6758                                  	
  6759                                  	; 10/02/2025
  6760                                  	; 08/02/2025 - twavplay.asm (16bit)
  6761                                  
  6762                                  sb16_current_sound_data:
  6763 00002FC4 8B0D[18820000]          	mov	ecx, [g_samples]
  6764                                  	
  6765 00002FCA 803D[72770000]10        	cmp	byte [WAVE_BitsPerSample], 16
  6766 00002FD1 7512                    	jne	short sb16_gcd_1 ; 8 bit DMA channel
  6767                                  	;in	al, 0C6h ; DMA channel 5 count register
  6768 00002FD3 66BAC600                	mov	dx, 0C6h
  6769 00002FD7 B400                    	mov	ah, 0 ; inb
  6770 00002FD9 CD34                    	int	34h
  6771                                  	; AL = Low Byte of the word count
  6772                                  	;;mov	ah, al
  6773 00002FDB C1E018                  	shl	eax, 24	; (*)
  6774                                  	;in	al, 0C6h
  6775                                  	;mov	dx, 0C6h
  6776                                  	;mov	ah, 0 ; inb
  6777 00002FDE CD34                    	int	34h
  6778                                  	; AL = High Byte of the word count
  6779                                  	;;xchg	ah, al
  6780                                  	;rol	eax, 8	; (*)
  6781                                  	;shl	ax, 1 ; word count -> byte count
  6782 00002FE0 C1C009                  	rol	eax, 9
  6783 00002FE3 EB10                    	jmp	short sb16_gcd_2
  6784                                  
  6785                                  sb16_gcd_1:
  6786                                  	;in	al, 03h ; DMA channel 1 count register
  6787 00002FE5 66BA0300                	mov	dx, 03h
  6788 00002FE9 B400                    	mov	ah, 0 ; inb
  6789 00002FEB CD34                    	int	34h
  6790                                  	; AL = Low Byte of the byte count
  6791                                  	;;mov	ah, al
  6792 00002FED C1E018                  	shl	eax, 24	; (**)
  6793                                  	;in	al, 03h
  6794                                  	;mov	dx, 03h
  6795                                  	;mov	ah, 0 ; inb
  6796 00002FF0 CD34                    	int	34h
  6797                                  	; AL = High Byte of the byte count
  6798                                  	;;xchg	ah, al
  6799 00002FF2 C1C008                  	rol	eax, 8	; (**)
  6800                                  
  6801                                  sb16_gcd_2:
  6802                                  	; eax = remain count
  6803 00002FF5 8B1D[F8810000]          	mov	ebx, [buffersize] ; half buffer size
  6804 00002FFB 39D8                    	cmp	eax, ebx
  6805 00002FFD 7602                    	jna	short sb16_gcd_3 ; 2nd half
  6806 00002FFF 31DB                    	xor	ebx, ebx ; 1st half
  6807                                  sb16_gcd_3:
  6808 00003001 8DB3[00000200]          	lea	esi, [dma_buffer+ebx] ; start of 1st half or 2nd half
  6809                                  
  6810                                  	; esi = dma buffer offset
  6811                                  	; ecx = load (source) count
  6812                                  	; edi = g_buffer
  6813                                  
  6814 00003007 66FF25[14820000]        	jmp	word [sound_data_copy]
  6815                                  
  6816                                  ;-----------------------------------------------------------------------------
  6817                                  
  6818                                  	; 10/02/2025
  6819                                  	; 09/02/2025 - twavplay.asm (16bit)
  6820                                  
  6821                                  ac97_current_sound_data:
  6822                                  	;;mov	ecx, 1024 ; always 16bit stereo
  6823                                  	;mov	ecx, 512
  6824 0000300E B900010000              	mov	ecx, 256
  6825                                  
  6826 00003013 66BA1400                	mov	dx, PO_CIV_REG ; Position In Current Buff Reg
  6827 00003017 660315[DC770000]        	add	dx, [NABMBAR]
  6828                                  	;in	al, dx	; current index value
  6829 0000301E B400                    	mov	ah, 0 ; inb ; read port, byte
  6830 00003020 CD34                    	int	34h
  6831                                  	;mov	ebx, WAV_BUFFER_1
  6832 00003022 BE[00A00000]            	mov	esi, WAV_BUFFER_1
  6833 00003027 A801                    	test	al, 1
  6834 00003029 7405                    	jz	short ac97_gcd_1
  6835                                  	;mov	ebx, WAV_BUFFER_2
  6836 0000302B BE[00D00000]            	mov	esi, WAV_BUFFER_2
  6837                                  ac97_gcd_1:
  6838                                  	;mov	dx, PO_PICB_REG ; Position In Current Buff Reg
  6839                                  	;add	dx, [NABMBAR]
  6840                                  	;;in	ax, dx	; remain words
  6841                                  	;mov	ah, 2 ; inw ; read port, word
  6842                                  	;int	34h
  6843                                  	;;shl	eax, 1	; remain bytes
  6844                                  ac97_gcd_2:
  6845                                  	;xor	esi, esi ; 1st half
  6846                                  ac97_gcd_3:
  6847                                  	;mov	esi, [buffersize] ; 16 bit sample count
  6848                                  	;sub	esi, eax
  6849                                  	;shl	esi, 1 ; byte offset
  6850                                  
  6851                                  	; esi = 0, start of the wave/pcm data (dma) buffer
  6852                                  	; (buffer size is adjusted for playing in 1/18.2 second) 
  6853                                  
  6854                                  	;add	esi, ebx
  6855                                  
  6856                                  	; ds:si = dma buffer offset
  6857                                  	; cx = load (source) count
  6858                                  	; es:di = g_buffer
  6859                                  
  6860                                  	; AC97 dma buffer contains 16bit stereo samples (only)
  6861                                  	; copy samples to g_buffer
  6862                                  
  6863                                  	;shr	ecx, 1
  6864                                  	;rep	movsw
  6865                                  
  6866                                  	;shr	ecx, 2
  6867 00003030 F3A5                    	rep	movsd
  6868                                  
  6869 00003032 C3                      	retn
  6870                                  
  6871                                  ;-----------------------------------------------------------------------------
  6872                                  
  6873                                  	; 10/02/2025
  6874                                  	; 09/02/2025 - twavplay.asm (16bit)
  6875                                  sdc_16bit_stereo:
  6876                                  	; esi = dma buffer offset
  6877                                  	; ecx = load (source) count = 1024
  6878                                  	; edi = g_buffer
  6879                                  	;shr	ecx, 1
  6880                                  	;rep	movsw
  6881 00003033 C1E902                  	shr	ecx, 2
  6882 00003036 F3A5                    	rep	movsd
  6883 00003038 C3                      	retn
  6884                                  
  6885                                  ;-----------------------------------------------------------------------------
  6886                                  
  6887                                  	; 10/02/2025
  6888                                  	; 09/02/2025 - twavplay.asm (16bit)
  6889                                  sdc_16bit_mono:
  6890                                  	; esi = dma buffer offset
  6891                                  	; ecx = load (source) count = 512
  6892                                  	; edi = g_buffer
  6893 00003039 D1E9                    	shr	ecx, 1
  6894                                  sdc_16bm_loop:
  6895 0000303B 66AD                    	lodsw
  6896 0000303D 66AB                    	stosw
  6897 0000303F 66AB                    	stosw
  6898 00003041 E2F8                    	loop	sdc_16bm_loop
  6899 00003043 C3                      	retn
  6900                                  
  6901                                  ;-----------------------------------------------------------------------------
  6902                                  
  6903                                  	; 10/02/2025
  6904                                  	; 09/02/2025 - twavplay.asm (16bit)
  6905                                  sdc_8bit_stereo:
  6906                                  	; esi = dma buffer offset
  6907                                  	; ecx = load (source) count = 512
  6908                                  	; edi = g_buffer
  6909                                  
  6910                                  	; convert to 16 bit sample
  6911                                  sdc_8bs_loop:
  6912 00003044 AC                      	lodsb
  6913 00003045 2C80                    	sub	al, 80h ; middle = 0, min = -128, max = 127
  6914 00003047 66C1E008                	shl	ax, 8
  6915 0000304B 66AB                    	stosw
  6916 0000304D E2F5                    	loop	sdc_8bs_loop
  6917 0000304F C3                      	retn
  6918                                  
  6919                                  ;-----------------------------------------------------------------------------
  6920                                  
  6921                                  	; 10/02/2025
  6922                                  	; 09/02/2025 - twavplay.asm (16bit
  6923                                  sdc_8bit_mono:
  6924                                  	; si = dma buffer offset
  6925                                  	; cx = load (source) count = 256
  6926                                  	; di = g_buffer
  6927                                  
  6928                                  	; convert to 16 bit sample
  6929                                  sdc_8bm_loop:
  6930 00003050 AC                      	lodsb
  6931 00003051 2C80                    	sub	al, 80h ; middle = 0, min = -128, max = 127
  6932 00003053 66C1E008                	shl	ax, 8
  6933 00003057 66AB                    	stosw	; L
  6934                                  	; convert to stereo
  6935 00003059 66AB                    	stosw	; R
  6936 0000305B E2F3                    	loop	sdc_8bm_loop
  6937 0000305D C3                      	retn
  6938                                  
  6939                                  ;-----------------------------------------------------------------------------
  6940                                  
  6941                                  ;=============================================================================
  6942                                  ;	Load IFF/ILBM files for VGA 640x480x16 graphics mode
  6943                                  ;=============================================================================
  6944                                  
  6945                                  ; EX1B.ASM (21/6/1994, Carlos Hasan; MSDOS, 'RUNME.EXE', 'TNYPL211')
  6946                                  
  6947                                  ; 21/10/2017 (TRDOS 386, 'tmodplay.s', Erdogan Tan, NASM syntax)
  6948                                  
  6949                                  ;-----------------------------------------------------------------------------
  6950                                  ; EQUATES AND STRUCTURES
  6951                                  ;-----------------------------------------------------------------------------
  6952                                  
  6953                                  ID_FORM equ 4D524F46h		; IFF/ILBM chunk IDs
  6954                                  ID_ILBM equ 4D424C49h
  6955                                  ID_BMHD equ 44484D42h
  6956                                  ID_CMAP equ 50414D43h
  6957                                  ID_BODY equ 59444F42h
  6958                                  
  6959                                  struc Form			; IFF/ILBM header file format
  6960 00000000 ????????                  .ID:		resd 1
  6961 00000004 ????????                  .Length:	resd 1
  6962 00000008 ????????                  .Type:	resd 1
  6963                                    .size:
  6964                                  endstruc
  6965                                  
  6966                                  struc Chunk			; IFF/ILBM header chunk format
  6967 00000000 ????????                  .ID:		resd 1
  6968 00000004 ????????                  .Length:	resd 1
  6969                                    .size:
  6970                                  endstruc
  6971                                  
  6972                                  struc BMHD			; IFF/ILBM BMHD chunk format
  6973 00000000 ????                      .Width: 	resw 1
  6974 00000002 ????                      .Height:	resw 1
  6975 00000004 ????                      .PosX:	resw 1
  6976 00000006 ????                      .PosY:	resw 1
  6977 00000008 ??                        .Planes:	resb 1
  6978 00000009 ??                        .Masking:	resb 1
  6979 0000000A ??                        .Compression:	resb 1
  6980 0000000B ??                        .Pad:		resb 1
  6981 0000000C ????                      .Transparent:	resw 1
  6982 0000000E ??                        .AspectX	resb 1
  6983 0000000F ??                        .AspectY:	resb 1
  6984 00000010 ????                      .PageWidth:	resw 1
  6985 00000012 ????                      .PageHeight:	resw 1
  6986                                    .size:
  6987                                  endstruc
  6988                                  
  6989                                  struc CMAP			; IFF/ILBM CMAP chunk format
  6990 00000000 <res 300h>                .Colors:	resb 768
  6991                                    .size:
  6992                                  endstruc
  6993                                  
  6994                                  ;------------------------------------------------------------------------------
  6995                                  ; bswap - macro to reverse the byte order of a 32-bit register, converting
  6996                                  ;         a value in little/big endian form to big/little endian form.
  6997                                  ;------------------------------------------------------------------------------
  6998                                  
  6999                                  %macro	bswap   1
  7000                                  	xchg    al, ah
  7001                                  	rol     eax, 16
  7002                                  	xchg    al, ah
  7003                                  %endmacro
  7004                                  
  7005                                  ;------------------------------------------------------------------------------
  7006                                  ; putlbm - draw the IFF/ILBM picture on VGA 640x480x16 graphics mode
  7007                                  ; In:
  7008                                  ;  ESI = IFF/ILBM image file address
  7009                                  ;------------------------------------------------------------------------------
  7010                                  
  7011                                  	; 10/02/2025
  7012                                  	; 05/02/2025 - twavply2.s
  7013                                  
  7014                                  putlbm:
  7015 0000305E BE[5A310000]            	mov	esi, LOGO_ADDRESS
  7016                                  	
  7017                                  	;pushad
  7018                                  
  7019                                  ; check if this is a valid IFF/ILBM Deluxe Paint file
  7020                                  
  7021                                  	;cmp	dword [esi+Form.ID], ID_FORM
  7022                                  	;jne	short putlbmd0
  7023                                  	;cmp	dword [esi+Form.Type], ID_ILBM
  7024                                  	;jne	short putlbmd0
  7025                                  
  7026                                  ; get the IFF/ILBM file length in bytes
  7027                                  
  7028 00003063 8B4604                  	mov	eax, [esi+Form.Length]
  7029                                  	bswap	eax
  7000 00003066 86E0                <1>  xchg al, ah
  7001 00003068 C1C010              <1>  rol eax, 16
  7002 0000306B 86E0                <1>  xchg al, ah
  7030 0000306D 89C1                    	mov	ecx, eax
  7031                                  
  7032                                  ; decrease the file length and updates the file pointer
  7033                                  
  7034 0000306F 83E904                  	sub	ecx, 4
  7035 00003072 83C60C                  	add	esi, Form.size
  7036                                  
  7037                                  ; IFF/ILBM main parser body loop
  7038                                  
  7039                                  putlbml0:
  7040 00003075 85C9                    	test	ecx, ecx
  7041 00003077 7E63                    	jle	short putlbmd1
  7042                                  
  7043                                  ; get the next chunk ID and length in bytes
  7044                                  
  7045 00003079 8B1E                    	mov	ebx, [esi+Chunk.ID]
  7046 0000307B 8B4604                  	mov	eax, [esi+Chunk.Length]
  7047                                  	bswap	eax
  7000 0000307E 86E0                <1>  xchg al, ah
  7001 00003080 C1C010              <1>  rol eax, 16
  7002 00003083 86E0                <1>  xchg al, ah
  7048 00003085 93                      	xchg	ebx, eax
  7049 00003086 83C608                  	add	esi, Chunk.size
  7050                                  
  7051                                  ; word align the chunk length and decrease the file length counter
  7052                                  
  7053 00003089 43                      	inc	ebx
  7054 0000308A 80E3FE                  	and	bl, 0FEh ; ~1
  7055 0000308D 83E908                  	sub	ecx, Chunk.size
  7056 00003090 29D9                    	sub	ecx, ebx
  7057                                  
  7058                                  ; check for the BMHD/CMAP/BODY chunk headers
  7059                                  
  7060 00003092 3D424D4844              	cmp	eax, ID_BMHD
  7061 00003097 7414                    	je	short putlbmf0
  7062 00003099 3D434D4150              	cmp	eax, ID_CMAP
  7063 0000309E 743E                    	je	short putlbmf1
  7064 000030A0 3D424F4459              	cmp	eax, ID_BODY
  7065 000030A5 7452                    	je	short putlbmf2
  7066                                  
  7067                                  ; advance to the next IFF/ILBM chunk structure
  7068                                  
  7069                                  putlbmc0:
  7070 000030A7 01DE                    	add	esi, ebx
  7071 000030A9 EBCA                    	jmp	short putlbml0
  7072                                  
  7073                                  putlbmd0:
  7074 000030AB F9                      	stc
  7075                                  	;popad
  7076 000030AC C3                      	retn
  7077                                  
  7078                                  ; process the BMHD bitmap header chunk
  7079                                  
  7080                                  putlbmf0:
  7081 000030AD 807E0804                	cmp	byte [esi+BMHD.Planes], 4
  7082 000030B1 75F8                    	jne	short putlbmd0
  7083 000030B3 807E0A01                	cmp	byte [esi+BMHD.Compression], 1
  7084 000030B7 75F2                    	jne	short putlbmd0
  7085 000030B9 807E0B00                	cmp	byte [esi+BMHD.Pad], 0
  7086 000030BD 75EC                    	jne	short putlbmd0
  7087 000030BF 0FB706                  	movzx	eax, word [esi+BMHD.Width]
  7088 000030C2 86E0                    	xchg	al, ah
  7089 000030C4 83C007                  	add	eax, 7
  7090 000030C7 C1E803                  	shr	eax, 3
  7091 000030CA A3[48770000]            	mov	[picture.width], eax
  7092 000030CF 0FB74602                	movzx	eax, word [esi+BMHD.Height]
  7093 000030D3 86E0                    	xchg	al, ah
  7094 000030D5 A3[4C770000]            	mov	[picture.height], eax
  7095 000030DA EBCB                    	jmp	short putlbmc0
  7096                                  
  7097                                  putlbmd1:
  7098 000030DC F8                      	clc
  7099                                  	;popad
  7100 000030DD C3                      	retn
  7101                                  
  7102                                  ; process the CMAP colormap chunk
  7103                                  
  7104                                  putlbmf1:
  7105 000030DE 66BAC803                	mov	dx, 3C8h
  7106 000030E2 30C0                    	xor	al, al
  7107                                  	;out	dx, al
  7108 000030E4 B401                    	mov	ah, 1 ; outb
  7109 000030E6 CD34                    	int	34h
  7110                                  	;inc	dx
  7111 000030E8 42                      	inc	edx
  7112                                  putlbml1:
  7113 000030E9 8A06                    	mov	al, [esi]
  7114 000030EB C0E802                  	shr	al, 2
  7115                                  	;out	dx, al
  7116                                  	;mov	ah, 1 ; outb
  7117 000030EE CD34                    	int	34h ; IOCTL interrupt (IN/OUT)
  7118 000030F0 46                      	inc	esi
  7119 000030F1 4B                      	dec	ebx
  7120 000030F2 7FF5                    	jg	short putlbml1
  7121 000030F4 E97CFFFFFF              	jmp	putlbml0
  7122                                  
  7123                                  ; process the BODY bitmap body chunk
  7124                                  
  7125                                  putlbmf2:
  7126 000030F9 60                      	pushad
  7127 000030FA BF00000A00              	mov	edi, 0A0000h
  7128                                  	;cld
  7129 000030FF 66BACE03                	mov	dx, 3CEh
  7130                                  	;mov	ax, 0FF08h
  7131                                  	;out	dx, ax
  7132 00003103 66BB08FF                	mov	bx, 0FF08h
  7133 00003107 B403                    	mov	ah, 3 ; outw
  7134 00003109 CD34                    	int	34h ; IOCTL interrupt (IN/OUT)
  7135                                  	;mov	dx, 3C4h
  7136 0000310B B2C4                    	mov	dl, 0C4h
  7137 0000310D B002                    	mov	al, 02h
  7138                                  	;out	dx, al
  7139 0000310F B401                    	mov	ah, 1 ; outb
  7140 00003111 CD34                    	int	34h ; IOCTL interrupt (IN/OUT)
  7141                                  	;inc	dx
  7142 00003113 42                      	inc	edx
  7143 00003114 8B0D[4C770000]          	mov	ecx, [picture.height]
  7144                                  putlbml2:
  7145 0000311A 51                      	push	ecx
  7146 0000311B B011                    	mov	al, 11h
  7147                                  putlbml3:
  7148 0000311D 50                      	push	eax
  7149 0000311E 57                      	push	edi
  7150                                  	;out	dx, al
  7151 0000311F B401                    	mov	ah, 1 ; outb
  7152 00003121 CD34                    	int	34h ; IOCTL interrupt (IN/OUT)
  7153 00003123 8B1D[48770000]          	mov	ebx, [picture.width]
  7154                                  putlbml4:
  7155 00003129 AC                      	lodsb
  7156 0000312A 31C9                    	xor	ecx, ecx
  7157 0000312C 84C0                    	test	al, al
  7158 0000312E 7C09                    	jl	short putlbmf3
  7159                                  	;movzx	ecx, al
  7160 00003130 88C1                    	mov	cl, al
  7161 00003132 41                      	inc	ecx
  7162 00003133 29CB                    	sub	ebx, ecx
  7163 00003135 F3A4                    	rep	movsb
  7164 00003137 EB0A                    	jmp	short putlbmc4
  7165                                  putlbmf3:
  7166 00003139 F6D8                    	neg	al
  7167                                  	;movzx	ecx, al
  7168 0000313B 88C1                    	mov	cl, al
  7169 0000313D 41                      	inc	ecx
  7170 0000313E 29CB                    	sub	ebx, ecx
  7171 00003140 AC                      	lodsb
  7172 00003141 F3AA                    	rep	stosb
  7173                                  putlbmc4:
  7174 00003143 85DB                    	test	ebx, ebx
  7175 00003145 7FE2                    	jg	short putlbml4
  7176 00003147 5F                      	pop	edi
  7177 00003148 58                      	pop	eax
  7178 00003149 00C0                    	add	al, al
  7179 0000314B 73D0                    	jnc	short putlbml3
  7180 0000314D 83C750                  	add	edi, 80
  7181 00003150 59                      	pop	ecx
  7182 00003151 E2C7                    	loop	putlbml2
  7183 00003153 61                      	popad
  7184 00003154 E94EFFFFFF              	jmp	putlbmc0
  7185                                  
  7186                                  ;------------------------------------------------------------------------------
  7187                                  ;------------------------------------------------------------------------------
  7188                                  
  7189 00003159 90                      align 2
  7190                                  
  7191                                  ; 22/10/2017
  7192                                  LOGO_ADDRESS:
  7193                                  ; 27/10/2017
  7194 0000315A <bin 4298h>             incbin "TINYPLAY.LBM"
  7195                                  
  7196                                  ;=============================================================================
  7197                                  ;		preinitialized data
  7198                                  ;=============================================================================
  7199                                  	
  7200 000073F2 00                      		db 0
  7201 000073F3 FFFFFFFF                FileHandle:	dd -1
  7202 000073F7 00                      		db 0
  7203                                  
  7204 000073F8 54696E792057415620-     Credits:	db 'Tiny WAV Player for TRDOS 386 by Erdogan Tan. '
  7204 00007401 506C6179657220666F-
  7204 0000740A 72205452444F532033-
  7204 00007413 383620627920457264-
  7204 0000741C 6F67616E2054616E2E-
  7204 00007425 20                 
  7205 00007426 466562727561727920-     		db 'February 2025.',10,13,0
  7205 0000742F 323032352E0A0D00   
  7206 00007437 30392F30322F323032-     		db '09/02/2025',10,13
  7206 00007440 350A0D             
  7207 00007443 00                      reset:		db 0
  7208                                  
  7209 00007444 0A0D                    msg_usage:	db 10,13
  7210 00007446 75736167653A207477-     		db 'usage: twavplay filename.wav',10,13,0
  7210 0000744F 6176706C6179206669-
  7210 00007458 6C656E616D652E7761-
  7210 00007461 760A0D00           
  7211                                  
  7212 00007465 0A0D                    noDevMsg:	db 10,13
  7213 00007467 4572726F723A20556E-     		db 'Error: Unable to find a proper audio device !'
  7213 00007470 61626C6520746F2066-
  7213 00007479 696E6420612070726F-
  7213 00007482 70657220617564696F-
  7213 0000748B 206465766963652021 
  7214 00007494 0A0D00                  		db 10,13,0
  7215                                  
  7216 00007497 0A0D                    noFileErrMsg:	db 10,13
  7217 00007499 4572726F723A206669-     		db 'Error: file not found.',10,13,0
  7217 000074A2 6C65206E6F7420666F-
  7217 000074AB 756E642E0A0D00     
  7218                                  
  7219 000074B2 0A0D                    not_valid_wavf:	db 10,13
  7220 000074B4 4E6F7420612070726F-     		db 'Not a proper/valid WAV file !',10,13,0
  7220 000074BD 7065722F76616C6964-
  7220 000074C6 205741562066696C65-
  7220 000074CF 20210A0D00         
  7221                                  
  7222                                  		; 08/02/2025
  7223                                  sb16_init_err_msg:
  7224 000074D4 0A0D                    		db 10,13
  7225 000074D6 536F756E6420426C61-     		db 'Sound Blaster 16 initialization error !',10,13,0
  7225 000074DF 737465722031362069-
  7225 000074E8 6E697469616C697A61-
  7225 000074F1 74696F6E206572726F-
  7225 000074FA 7220210A0D00       
  7226                                  ac97_init_err_msg:
  7227 00007500 0A0D                    		db 10,13
  7228 00007502 414339372068617264-     		db 'AC97 hardware initialization error !',10,13,0
  7228 0000750B 7761726520696E6974-
  7228 00007514 69616C697A6174696F-
  7228 0000751D 6E206572726F722021-
  7228 00007526 0A0D00             
  7229                                  		
  7230                                  ;init_err_msg:	;db 10,13
  7231                                  		;db 'Audio system initialization error !',10,13,0
  7232                                  
  7233 00007529 0A0D                    msg_no_vra:	db 10,13
  7234 0000752B 4E6F20565241207375-     		db "No VRA support ! Only 48 kHZ sample rate supported !"
  7234 00007534 70706F72742021204F-
  7234 0000753D 6E6C79203438206B48-
  7234 00007546 5A2073616D706C6520-
  7234 0000754F 726174652073757070-
  7234 00007558 6F727465642021     
  7235 0000755F 0A0D00                  		db 10,13,0
  7236                                  
  7237                                  trdos386_err_msg:
  7238 00007562 0A0D                    		db 10,13
  7239 00007564 5452444F5320333836-     		db 'TRDOS 386 System call error !',10,13,0
  7239 0000756D 2053797374656D2063-
  7239 00007576 616C6C206572726F72-
  7239 0000757F 20210A0D00         
  7240                                  
  7241 00007584 303132333435363738-     hex_chars:	db "0123456789ABCDEF", 0
  7241 0000758D 3941424344454600   
  7242                                  
  7243 00007595 0D0A                    msgAC97Info:	db 0Dh, 0Ah
  7244 00007597 414339372041756469-     		db "AC97 Audio Controller & Codec Info", 0Dh, 0Ah
  7244 000075A0 6F20436F6E74726F6C-
  7244 000075A9 6C6572202620436F64-
  7244 000075B2 656320496E666F0D0A 
  7245 000075BB 56656E646F72204944-     		db "Vendor ID: "
  7245 000075C4 3A20               
  7246 000075C6 303030306820446576-     msgVendorId:	db "0000h Device ID: "
  7246 000075CF 6963652049443A20   
  7247 000075D7 30303030680D0A          msgDevId:	db "0000h", 0Dh, 0Ah
  7248 000075DE 4275733A20              		db "Bus: "
  7249 000075E3 303068204465766963-     msgBusNo:	db "00h Device: "
  7249 000075EC 653A20             
  7250 000075EF 3030682046756E6374-     msgDevNo:	db "00h Function: "
  7250 000075F8 696F6E3A20         
  7251 000075FD 303068                  msgFncNo:	db "00h"
  7252 00007600 0D0A                    		db 0Dh, 0Ah
  7253                                  
  7254 00007602 4E414D4241523A20        		db "NAMBAR: "
  7255 0000760A 30303030682020          msgNamBar:	db "0000h  "
  7256 00007611 4E41424D4241523A20      		db "NABMBAR: "
  7257 0000761A 303030306820204952-     msgNabmBar:	db "0000h  IRQ: "
  7257 00007623 513A20             
  7258 00007626 3030                    msgIRQ:		dw 3030h
  7259 00007628 0D0A00                  		db 0Dh, 0Ah, 0
  7260                                  
  7261 0000762B 0D0A5741562046696C-     msgWavFileName:	db 0Dh, 0Ah, "WAV File Name: ",0
  7261 00007634 65204E616D653A2000 
  7262 0000763D 0D0A53616D706C6520-     msgSampleRate:	db 0Dh, 0Ah, "Sample Rate: "
  7262 00007646 526174653A20       
  7263 0000764C 303030303020487A2C-     msgHertz:	db "00000 Hz, ", 0 
  7263 00007655 2000               
  7264 00007657 3820626974732C2000      msg8Bits:	db "8 bits, ", 0 
  7265 00007660 4D6F6E6F0D0A00          msgMono:	db "Mono", 0Dh, 0Ah, 0
  7266 00007667 313620626974732C20-     msg16Bits:	db "16 bits, ", 0
  7266 00007670 00                 
  7267 00007671 53746572656F            msgStereo:	db "Stereo"
  7268 00007677 0D0A00                  nextline:	db 0Dh, 0Ah, 0
  7269                                  
  7270 0000767A 56524120737570706F-     msgVRAheader:	db "VRA support: "
  7270 00007683 72743A20           
  7271 00007687 00                      		db 0	
  7272 00007688 5945530D0A00            msgVRAyes:	db "YES", 0Dh, 0Ah, 0
  7273 0000768E 4E4F200D0A              msgVRAno:	db "NO ", 0Dh, 0Ah
  7274 00007693 28496E746572706F6C-     		db "(Interpolated sample rate playing method)"
  7274 0000769C 617465642073616D70-
  7274 000076A5 6C6520726174652070-
  7274 000076AE 6C6179696E67206D65-
  7274 000076B7 74686F6429         
  7275 000076BC 0D0A00                  		db 0Dh, 0Ah, 0
  7276                                  
  7277 000076BF 0D0A                    msgSB16Info:	db 0Dh, 0Ah
  7278 000076C1 20417564696F204861-     		db " Audio Hardware: Sound Blaster 16", 0Dh, 0Ah
  7278 000076CA 7264776172653A2053-
  7278 000076D3 6F756E6420426C6173-
  7278 000076DC 7465722031360D0A   
  7279 000076E4 202020202020426173-     		db "      Base Port: "
  7279 000076ED 6520506F72743A20   
  7280                                  msgBasePort:
  7281 000076F5 303030680D0A            		db "000h", 0Dh, 0Ah
  7282 000076FB 202020202020202020-     		db "            IRQ: "
  7282 00007704 2020204952513A20   
  7283                                  msgSB16IRQ:
  7284 0000770C 30                      		db 30h
  7285 0000770D 0D0A00                  		db 0Dh, 0Ah, 0
  7286                                  
  7287                                  ; 07/02/2025
  7288 00007710 0D0A                    msgPressAKey:	db 0Dh, 0Ah
  7289 00007712 202E2E2E2070726573-     		db ' ... press a key to continue ... '
  7289 0000771B 732061206B65792074-
  7289 00007724 6F20636F6E74696E75-
  7289 0000772D 65202E2E2E20       
  7290 00007733 0D0A00                  		db 0Dh, 0Ah, 0
  7291                                  
  7292                                  ; 07/02/2025
  7293 00007736 01                      half_buffer:	db 1
  7294                                  
  7295 00007737 2E2E20565241204F4B-     vra_ok:		db '.. VRA OK ..', 0Dh, 0Ah,0
  7295 00007740 202E2E0D0A00       
  7296                                  
  7297                                  ;=============================================================================
  7298                                  ;		uninitialized data
  7299                                  ;=============================================================================
  7300                                  
  7301                                  ; 10/02/2025
  7302                                  ; 09/02/2025
  7303                                  
  7304                                  ; BSS
  7305                                  
  7306                                  bss_start:
  7307                                  
  7308                                  ABSOLUTE bss_start
  7309                                  
  7310 00007746 ????                    alignb 4
  7311                                  
  7312                                  ;------------------------------------------------------------------------------
  7313                                  ; IFF/ILBM DATA
  7314                                  ;------------------------------------------------------------------------------
  7315                                  
  7316 00007748 ????????                picture.width:	resd 1 	; current picture width and height
  7317 0000774C ????????                picture.height:	resd 1
  7318                                  
  7319                                  ;------------------------------------------------------------------------------
  7320                                  
  7321                                  ;;;;;;;
  7322                                  WAVFILEHEADERbuff:
  7323 00007750 ????????                RIFF_ChunkID:	resd 1	; Must be equal to "RIFF" - big-endian
  7324                                  			; 0x52494646
  7325 00007754 ????????                RIFF_ChunkSize: resd 1	; Represents total file size, not
  7326                                          		; including the first 2 fields
  7327                                  			; (Total_File_Size - 8), little-endian
  7328 00007758 ????????                RIFF_Format:	resd 1	; Must be equal to "WAVE" - big-endian
  7329                                  			; 0x57415645
  7330                                  
  7331                                  ;; WAVE header parameters ("Sub-chunk")
  7332                                  WAVE_SubchunkID:
  7333 0000775C ????????                		resd 1	; Must be equal to "fmt " - big-endian
  7334                                  			; 0x666d7420
  7335                                  WAVE_SubchunkSize:
  7336 00007760 ????????                		resd 1	; Represents total chunk size
  7337                                  WAVE_AudioFormat:
  7338 00007764 ????                    		resw 1	; PCM (Raw) - is 1, other - is a form
  7339                                  			; of compression, not supported.
  7340                                  WAVE_NumChannels:
  7341 00007766 ????                    		resw 1	; Number of channels, Mono-1, Stereo-2
  7342                                  WAVE_SampleRate:
  7343 00007768 ????????                		resd 1	; Frequency rate, in Hz (8000, 44100 ...)
  7344 0000776C ????????                WAVE_ByteRate:	resd 1	; SampleRate * NumChannels * BytesPerSample
  7345                                  WAVE_BlockAlign:
  7346 00007770 ????                    		resw 1	; NumChannels * BytesPerSample
  7347                                  			; Number of bytes for one sample.
  7348                                  WAVE_BitsPerSample:
  7349 00007772 ????                    		resw 1	; 8 = 8 bits, 16 = 16 bits, etc.
  7350                                  
  7351                                  ;; DATA header parameters
  7352                                  DATA_SubchunkID:
  7353 00007774 ????????                		resd 1	; Must be equal to "data" - big-endian
  7354                                          		; 0x64617461
  7355                                  DATA_SubchunkSize:
  7356 00007778 ????????                		resd 1	; NumSamples * NumChannels * BytesPerSample
  7357                                          		; Number of bytes in the data.
  7358                                  ;;;;;;;
  7359                                  
  7360                                  ;------------------------------------------------------------------------------
  7361                                  
  7362 0000777C <res 50h>               wav_file_name:	resb 80 ; wave file, path name (<= 80 bytes)
  7363                                  
  7364 000077CC ????                    		resw 1
  7365                                  
  7366                                  ;------------------------------------------------------------------------------
  7367                                  
  7368                                  ac97_int_ln_reg:
  7369 000077CE ??                      audio_intr:	resb 1
  7370 000077CF ??                      VRA:		resb 1	; Variable Rate Audio Support Status
  7371 000077D0 ??                      fbs_shift:	resb 1
  7372 000077D1 ??                      flags:		resb 1
  7373                                  
  7374 000077D2 ????????                dev_vendor:	resd 1
  7375 000077D6 ????????                bus_dev_fn:	resd 1
  7376                                  audio_io_base:		; Sound Blaster 16 base port address (220h)
  7377 000077DA ????                    NAMBAR:		resw 1
  7378 000077DC ????                    NABMBAR:	resw 1
  7379                                  
  7380 000077DE ??                      audio_hardware:	resb 1
  7381 000077DF ??                      IRQnum:		resb 1
  7382 000077E0 ??                      volume:		resb 1
  7383 000077E1 ??                      stopped:	resb 1
  7384                                  
  7385                                  ;------------------------------------------------------------------------------
  7386                                  
  7387 000077E2 <res Eh>                alignb 16
  7388                                  
  7389 000077F0 <res 200h>              RowOfs:		resw 256
  7390                                  
  7391 000079F0 <res 200h>              NewScope_L:	resw 256
  7392 00007BF0 <res 200h>              NewScope_R:	resw 256
  7393 00007DF0 <res 200h>              OldScope_L:	resw 256
  7394 00007FF0 <res 200h>              OldScope_R:	resw 256
  7395                                  
  7396                                  ;------------------------------------------------------------------------------
  7397                                  
  7398                                  loadfromwavfile:
  7399 000081F0 ????????                		resd 1	; 'loadfromfile' or load+conversion proc address
  7400 000081F4 ????????                loadsize:	resd 1	; (.wav file) read count (bytes) per one time
  7401 000081F8 ????????                buffersize:	resd 1	; 16 bit samples (not bytes)
  7402                                  
  7403 000081FC ????????                count:		resd 1	; byte count of one (wav file) read
  7404                                  LoadedDataBytes:
  7405 00008200 ????????                		resd 1	; total read/load count
  7406                                  		
  7407 00008204 ????????                timerticks:	resd 1	; (to eliminate excessive lookup of events in tuneloop)
  7408                                  			; (in order to get the emulator/qemu to run correctly)
  7409                                  
  7410 00008208 ????????                audio_buffer:	resd 1	; temporary (saving) area for AC97 DMA buffer address
  7411                                  
  7412 0000820C ????????                _bdl_buffer:	resd 1	; physcal address of buffer descriptor list (AC97)	
  7413 00008210 ????????                DMA_phy_buff:	resd 1	; physical address of 'dma_buffer' (SB16)
  7414                                  
  7415                                  bss_end:
  7416                                  
  7417                                  ;------------------------------------------------------------------------------
  7418                                  
  7419                                  sound_data_copy:	; address pointer for g_buffer fast (conversion) copy
  7420 00008214 ????????                		resd 1
  7421 00008218 ????????                g_samples:	resd 1	; count of samples for g_buffer copy/transfer
  7422                                  
  7423 0000821C ????????                alignb 16
  7424                                  
  7425 00008220 <res 400h>              g_buffer:	resb 1024 ; 16 bit stereo samples for wave graphics display
  7426                                  
  7427                                  ;------------------------------------------------------------------------------
  7428                                  
  7429 00008620 <res 9E0h>              alignb 4096
  7430                                  
  7431                                  ; 256 byte buffer for descriptor list
  7432 00009000 <res 100h>              BDL_BUFFER:	resb 256
  7433 00009100 <res F00h>              		resb 4096-256
  7434                                  ; DMA buffers (AC97) - ((max. 10600 bytes will be used per buffer))
  7435 0000A000 <res 3000h>             WAV_BUFFER_1:	resb 12288 ; 3*4096 ; 1st wav/pcm data buffer
  7436 0000D000 <res C000h>             WAV_BUFFER_2:	resd 12288 ; 3*4096 ; segment of 2nd wav/pcm data buffer
  7437                                  
  7438                                  ;------------------------------------------------------------------------------
  7439                                  
  7440 00019000 <res 7000h>             alignb 65536
  7441                                  
  7442                                  temp_buffer:	
  7443                                  		; max. 10600 bytes (no-VRA AC97)
  7444                                  		; 10600: 44.1 kHZ stereo 2438 samples, 2650 (48kHZ) samples
  7445                                  		; 10656: 11.025 kHZ stereo 612 samples, 2664 (48kHZ) samples
  7446                                  		; 10508: 22.050 kHZ stereo 1207 samples, 2627 (48kHZ) samples
  7447                                  		; 10544: 24 kHZ stereo 1318 samples, 2636 (48kHZ) samples
  7448                                  		; 10548: 32 kHZ stereo 1758 samples, 2637 (48kHZ) samples
  7449                                  		; 10548: 16 kHZ stereo 879 samples, 2637 (48kHZ) samples
  7450                                  		; 10544: 12 kHZ stereo 659 samples, 2636 (48kHZ) samples
  7451                                  		; 10560: 8 kHZ stereo 440 samples, 2640 (48kHZ) samples
  7452                                  		
  7453                                  dma_buffer:	; max. 21120 bytes (SB16)
  7454 00020000 <res 2940h>             		resb 10560
  7455 00022940 <res 2940h>             		resb 10560
  7456 00025280 <res D80h>              		resb 3456 ; memory allocation = 6*4096 bytes
  7457                                  
  7458                                  ;------------------------------------------------------------------------------
